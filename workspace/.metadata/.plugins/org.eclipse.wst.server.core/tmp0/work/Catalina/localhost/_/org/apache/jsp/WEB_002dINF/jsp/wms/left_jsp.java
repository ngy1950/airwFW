/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.69
 * Generated at: 2020-11-20 02:41:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.wms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.common.bean.CommonConfig;
import com.common.bean.DataMap;
import java.util.*;
import com.common.util.XSSRequestWrapper;

public final class left_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

	XSSRequestWrapper sFilter = new XSSRequestWrapper(request);
	
	List list = (List)request.getAttribute("list");

	String theme =  sFilter.getXSSFilter((String)request.getSession().getAttribute(CommonConfig.SES_USER_THEME_KEY));
	String userid = sFilter.getXSSFilter(request.getSession().getAttribute(CommonConfig.SES_USER_ID_KEY).toString());

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>WMS Left</title>\n");
      out.write("<meta name=\"viewport\" content=\"width=1150\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/common");
      out.print(theme);
      out.write("/css/common.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/common/theme/gsfresh/css/left.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/common/theme/gsfresh/css/theme.css\">\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/jquery.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/json2.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/dataMap.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/configData.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/commonUtil.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/netUtil.js\"></script>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar $menuSearch;\n");
      out.write("\tvar menuMap = new DataMap();\n");
      out.write("\tvar $lastActiveObj;\n");
      out.write("\tvar lastActiveMenuId;\n");
      out.write("\n");
      out.write("\t$(document).ready(function(){\n");
      out.write("\t\t$menuSearch = jQuery(\"#menuSearch\");\n");
      out.write("\t\t\n");
      out.write("\t\t$(\"body\").on('mousedown', function(e) { \n");
      out.write("\t\t   if( e.which == 2 ) {\n");
      out.write("\t\t      e.preventDefault();\n");
      out.write("\t\t      e.stopPropagation();\n");
      out.write("\t\t      e.stopImmediatePropagation();\n");
      out.write("\t\t      alert(\"mouse wheel click is not possible!\");\n");
      out.write("\t\t      return false;\n");
      out.write("\t\t   }\n");
      out.write("\t\t});\n");
      out.write("\t\t$(\"body\").on('click', function(e) { \n");
      out.write("\t\t\tif( e.which == 2 ) {\n");
      out.write("\t\t\t\te.preventDefault();\n");
      out.write("\t\t\t\te.stopPropagation();\n");
      out.write("\t\t\t\te.stopImmediatePropagation();\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\tfunction goPage(obj, url){\n");
      out.write("\t\tvar $obj = $(obj).parent();\n");
      out.write("\t\tvar menuId = $obj.attr(configData.COMMON_MENU_ID_KEY);\n");
      out.write("\t\tvar title = $obj.find(\"span\").text();\n");
      out.write("\t\turl = '/wms'+url;\n");
      out.write("\t\tchangePage(obj, title, url, menuId);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction changePage(obj, title, url, menuId){\t\n");
      out.write("\t\tvar $obj = $(obj).parent();\n");
      out.write("\t\t\n");
      out.write("\t\ttitleTxt = \"\";\n");
      out.write("\t\t\n");
      out.write("\t\tgetTitle($obj);\n");
      out.write("\t\t\n");
      out.write("\t\tif(url.indexOf(\"?\") == -1){\n");
      out.write("\t\t\turl += \"?\"+configData.COMMON_MENU_ID_KEY+\"=\"+menuId;\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\turl += \"&\"+configData.COMMON_MENU_ID_KEY+\"=\"+menuId;\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar tmpType = window.top.changePage(titleTxt, title, url, menuId);\n");
      out.write("\t\tif(tmpType){\n");
      out.write("\t\t\tif($lastActiveObj){\n");
      out.write("\t\t\t\t$lastActiveObj.removeClass(\"active\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\t$obj.addClass(\"active\");\n");
      out.write("\t\t\t$lastActiveObj = $obj;\n");
      out.write("\t\t\t$menuSearch.val(\"\");\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tlastActiveMenuId = menuId;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar titleTxt = \"\";\n");
      out.write("\tfunction getTitle($obj){\n");
      out.write("\t\t\n");
      out.write("\t\tif(titleTxt){\n");
      out.write("\t\t\ttitleTxt = $obj.text() + \" > \" + titleTxt;\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\ttitleTxt = $obj.text();\n");
      out.write("\t\t}\t\t\n");
      out.write("\t\tvar $pObj = $obj.parent().parent().parent().siblings().find('span');\n");
      out.write("\t\tif($pObj.length != 0){\n");
      out.write("\t\t\tgetTitle($pObj);\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t function setLastActiveMenuId(menuId,tmpActiveMenuId){\n");
      out.write("\t\tvar $premenu = $menuList.find(\"li\").filter(\"[MENUID=\"+menuId+\"]\").filter(\"[AMNUID!=FAVORITE]\");\n");
      out.write("\t\ttmpActiveMenuId = $.trim(tmpActiveMenuId);\n");
      out.write("\t\t$premenu.removeClass(\"active\");\n");
      out.write("\t\tlastActiveMenuId = tmpActiveMenuId;\n");
      out.write("\t\t\n");
      out.write("\t\tif(tmpActiveMenuId){\n");
      out.write("\t\t\tvar $nowmenu = $menuList.find(\"li\").filter(\"[MENUID=\"+tmpActiveMenuId+\"]\").filter(\"[AMNUID!=FAVORITE]\");\n");
      out.write("\t\t\t\t$nowmenu.addClass(\"active\");\n");
      out.write("\t\t\t$lastActiveObj = $nowmenu;\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\t$lastActiveObj = \"\";\n");
      out.write("\t\t}\n");
      out.write("\t} \n");
      out.write("\t\n");
      out.write("\tfunction menuSearch(menuId){\n");
      out.write("\t\tif(!menuId){\n");
      out.write("\t\t\tmenuId = $menuSearch.val();\n");
      out.write("\t\t\tmenuId = menuId.toUpperCase();\n");
      out.write("\t\t\t$menuSearch.val(menuId);\n");
      out.write("\t\t}\n");
      out.write("\t\t\n");
      out.write("\t\tvar $menu = $menuList.find(\"li\").filter(\"[MENUID=\"+menuId+\"]\").filter(\"[AMNUID!=FAVORITE]\");\n");
      out.write("\t\tif( $menu.length > 0 ){\n");
      out.write("\t\t\tsetMenuClick(menuId);\n");
      out.write("\t\t}else{\n");
      out.write("\t\t\t$menuSearch.val(\"\");\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction setMenuClick(menuId){\n");
      out.write("\t\tvar $menu = $menuList.find(\"li\").filter(\"[MENUID=\"+menuId+\"]\").filter(\"[AMNUID!=FAVORITE]\");\n");
      out.write("\t\tvar pmenuId = $menu.attr(\"AMNUID\");\n");
      out.write("\t\tif(!$menu.hasClass('active')){\n");
      out.write("\t\t\t$menu.find(\"> a\").trigger(\"click\");\n");
      out.write("\t\t}\n");
      out.write("\t\tif(pmenuId != \"root\"){\n");
      out.write("\t\t\tsetMenuClick(pmenuId);\n");
      out.write("\t\t}\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction fmenuInsert(){\n");
      out.write("\t\tif(lastActiveMenuId){\n");
      out.write("\t\t\tvar fmenu = $menuList.find(\"[AMNUID=FAVORITE]\").find(\"[MENUID=\"+lastActiveMenuId+\"]\");\n");
      out.write("\t\t\tif(fmenu.length == 0){\n");
      out.write("\t\t\t\tvar param = new DataMap();\n");
      out.write("\t\t\t\tparam.put(\"MENUID\",lastActiveMenuId);\n");
      out.write("\t\t\t\tvar json = netUtil.sendData({\n");
      out.write("\t\t\t\t\tmodule : \"Common\",\n");
      out.write("\t\t\t\t\tcommand : \"FMENU\",\n");
      out.write("\t\t\t\t\tsendType : \"insert\",\n");
      out.write("\t\t\t\t\tparam : param\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tvar $menu = $menuList.find(\"li\").filter(\"[MENUID=\"+lastActiveMenuId+\"]\");\n");
      out.write("\t\t\t\tvar $fmenu = $menuList.find(\"[MENUID=FAVORITE]\");\n");
      out.write("\t\t\t\tvar $tmpMenu = $($menu.clone().wrapAll(\"<div/>\").parent().html());\n");
      out.write("\t\t\t\t$tmpMenu.filter(\"li\").attr(\"AMNUID\", \"FAVORITE\").removeClass(\"active\").addClass(\"favmnu\");\n");
      out.write("\t\t\t\t$tmpMenu.append(\"<button class='delFav' onClick=\\\"fmenuDelete('\"+lastActiveMenuId+\"', this)\\\"> - </button>\");\n");
      out.write("\t\t\t\t$fmenu.find(\"#START\").append($tmpMenu);\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tfunction fmenuDelete(menuId, obj){\n");
      out.write("\t\tvar param = new DataMap();\n");
      out.write("\t\tparam.put(\"MENUID\",menuId);\n");
      out.write("\t\tvar json = netUtil.sendData({\n");
      out.write("\t\t\tmodule : \"Common\",\n");
      out.write("\t\t\tcommand : \"FMENU\",\n");
      out.write("\t\t\tsendType : \"delete\",\n");
      out.write("\t\t\tparam : param\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\tjQuery(obj).parent().remove();\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t// 로딩 열기\n");
      out.write("\tfunction loadingOpen() {\n");
      out.write("\n");
      out.write("\t\tvar loader = $('<div class=\"contentLoading\"></div>').appendTo('body');\n");
      out.write("\n");
      out.write("\t\tloader.stop().animate({\n");
      out.write("\t\t\ttop : '0px'\n");
      out.write("\t\t}, 30, function() {\n");
      out.write("\t\t});\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t// 로딩 닫기\n");
      out.write("\tfunction loadingClose() {\n");
      out.write("\n");
      out.write("\t\tvar loader = $('.contentLoading');\n");
      out.write("\n");
      out.write("\t\tloader.stop().animate({\n");
      out.write("\t\t\ttop : '100%'\n");
      out.write("\t\t}, 30, function() {\n");
      out.write("\t\t\tloader.remove();\n");
      out.write("\t\t});\n");
      out.write("\t}\t\n");
      out.write("\t\n");
      out.write("\t/*\n");
      out.write("\t2017.05.17 탭 클릭시 좌측메뉴 class add\n");
      out.write("\t*/\n");
      out.write("\tfunction changeClass(menuId){\n");
      out.write("\t\tvar $menu = $menuList.find(\"li\").filter(\"[MENUID=\"+menuId+\"]\").filter(\"[AMNUID!=FAVORITE]\");\n");
      out.write("\t\tif($lastActiveObj){\n");
      out.write("\t\t\t$lastActiveObj.removeClass(\"active\");\n");
      out.write("\t\t}\n");
      out.write("\t\t$menu.addClass(\"active\");\n");
      out.write("\t\t$lastActiveObj = $menu;\n");
      out.write("        lastActiveMenuId = menuId;\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<!-- 검색어 입력, 즐겨찾기, 새로고침 -->\n");
      out.write("<div class=\"icons\">\n");
      out.write("\t<span class=\"ellipse_center\">\n");
      out.write("\t\t<input type=\"text\" id=\"menuSearch\" size=\"14\" onkeypress=\"commonUtil.enterKeyCheck(event,'menuSearch()')\" placeholder=\"검색어를 입력하세요.\"/>\n");
      out.write("\t</span>\n");
      out.write("\t<div class=\"rightArea\">\n");
      out.write("\t\t<button class=\"button type1 second\" type=\"button\" onclick=\"fmenuInsert()\">\n");
      out.write("\t\t\t<img src=\"/common/theme/gsfresh/images/login_img/ico_left2.png\" alt=\"favorite\">\n");
      out.write("\t\t\t즐겨찾기\n");
      out.write("\t\t</button>\n");
      out.write("\t\t<button class=\"button type1\" type=\"button\" onclick=\"window.top.refreshPage()\">\n");
      out.write("\t\t\t<img src=\"/common/theme/gsfresh/images/login_img/ico_left3.png\" alt=\"refresh\">\n");
      out.write("\t\t\t새로고침\n");
      out.write("\t\t</button>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<!-- lnb 메뉴리스트 --->\n");
      out.write("<div class=\"lnb\">\n");
      out.write("\t<ul class=\"list\" id=\"menuList\" style=\"display:none;\">\n");

	DataMap map;
	String url;
	String amnuid;
	String menuid;
	String spanClass;
	String lbltxl;
	String imgpth;
	for(int i=0;i<list.size();i++){
		map = (DataMap)list.get(i);
		url    = sFilter.getXSSFilter(map.getString("PGPATH"));
		amnuid = sFilter.getXSSFilter(map.getString("AMNUID"));
		menuid = sFilter.getXSSFilter(map.getString("MENUID"));
		lbltxl = sFilter.getXSSFilter(map.getString("LBLTXL"));
		imgpth = sFilter.getXSSFilter(map.getString("IMGPTH"));
		if(url.indexOf("jsp") != -1){
			url = url.substring(1);
			url = url.substring(0, url.length()-3)+"page";
		}else{
			url = "";
		}

      out.write('\n');

		if("FAVORITE".equals(amnuid)){
			spanClass = "fmnuTxt";			

      out.write("\t\t\t\n");
      out.write("\t\t<li class=\"favmnu\" AMNUID=\"");
      out.print(amnuid);
      out.write("\" MENUID=\"");
      out.print(menuid);
      out.write('"');
      out.write('>');
      out.write('\n');
 		
		}else{
			spanClass = "mnuTxt";
			if("root".equals(amnuid) && !"FAVORITE".equals(menuid) && !"".equals(imgpth.trim())){

      out.write("\n");
      out.write("\t\t\t<li AMNUID=\"");
      out.print(amnuid);
      out.write("\" MENUID=\"");
      out.print(menuid);
      out.write("\" style=\"background-image: url(");
      out.print(imgpth);
      out.write(");\">\n");

			}else{ 

      out.write("\n");
      out.write("\t\t\t<li AMNUID=\"");
      out.print(amnuid);
      out.write("\" MENUID=\"");
      out.print(menuid);
      out.write('"');
      out.write('>');
      out.write('\n');

			}
		}	

      out.write('\n');
      out.write('\n');

		if(url.equals("")){

      out.write("\n");
      out.write("\t\t\t<a href=\"#\">\n");

		}else{

      out.write("\n");
      out.write("\t\t\t<a href=\"#\" menuId=\"");
      out.print(menuid);
      out.write("\" onclick=\"goPage(this, '");
      out.print(url);
      out.write("')\">\n");

		}

      out.write("\n");
      out.write("\t\t\t\t<span class=\"");
      out.print(spanClass);
      out.write('"');
      out.write('>');
      out.print(lbltxl);
      out.write("</span>\n");
      out.write("\t\t\t</a>\n");

		if(menuid.equals("FAVORITE")){

      out.write("\n");
      out.write("\t\t\t<ul id=\"START\" style=\"display:none;\"></ul>\n");

		}

      out.write('\n');

		if(amnuid.equals("FAVORITE")){

      out.write("\n");
      out.write("\t\t\t<button class=\"delFav\" onClick=\"fmenuDelete('");
      out.print(menuid);
      out.write("', this)\"> - </button>\n");

		}

      out.write("\n");
      out.write("\t\t</li>\n");

	}

      out.write("\n");
      out.write("\t</ul>\n");
      out.write("</div>\n");
      out.write("<!-- //lnb -->\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\tvar keyMap = new DataMap();\n");
      out.write("\tvar $menuList = $(\"#menuList\");\n");
      out.write("\t$menuList.hide();\n");
      out.write("\t$menuList.find('[AMNUID]').each(function(i,findElement){\n");
      out.write("\t\tvar $obj = jQuery(findElement);\n");
      out.write("\t\tvar AMNUID = $obj.attr(\"AMNUID\");\n");
      out.write("\t\tif(AMNUID != \"root\" && !keyMap.containsKey(AMNUID)){\n");
      out.write("\t\t\tkeyMap.put(AMNUID, AMNUID);\n");
      out.write("\t\t\tvar $groupList = $menuList.find(\"[AMNUID='\"+AMNUID+\"']\");\n");
      out.write("\t\t\t$menuList.find(\"[MENUID='\"+AMNUID+\"']\").append($groupList);\n");
      out.write("\t\t\t$groupList.wrapAll(\"<ul>\");\n");
      out.write("\t\t}\n");
      out.write("\t});\n");
      out.write("\t$menuList.show();\n");
      out.write("</script>\n");
      out.write("<script>\n");
      out.write("(function() {\n");
      out.write("\n");
      out.write("\t$(function() {\n");
      out.write("\n");
      out.write("\t\tvar lnbTrigger = $('.lnbCloser')\n");
      out.write("\t\t\t, lnb = $('.lnb')\n");
      out.write("\t\t\t, tab = $('.tab.type1')\n");
      out.write("\t\t\t, contHeader = $('.contentHeader')\n");
      out.write("\t\t\t, content = $('.content')\n");
      out.write("\t\t\t, depth1Trigger = lnb.find('.list').children('li')\n");
      out.write("\t\t\t, depth2List = depth1Trigger.children('ul')\n");
      out.write("\t\t\t, depth2Trigger = depth2List.children('li')\n");
      out.write("\t\t\t, depth3List = depth2Trigger.children('ul')\n");
      out.write("\t\t\t, motionTime = 0.35\n");
      out.write("\t\t\t, xDist = 190;\n");
      out.write("\n");
      out.write("\n");
      out.write("\t\tdepth1Trigger.each(function() {\n");
      out.write("\t\t\tvar _this = $(this)\n");
      out.write("\t\t\t\t, thisTrigger = _this.children('a')\n");
      out.write("\t\t\t\t, thisDepth2List = _this.children('ul');\n");
      out.write("\n");
      out.write("\t\t\tthisTrigger.on({\n");
      out.write("\t\t\t\tclick : function() {\n");
      out.write("\t\t\t\t\tif ( thisDepth2List.is(':hidden') ) {\n");
      out.write("\t\t\t\t\t\t_this.addClass('active');\n");
      out.write("\t\t\t\t\t\tthisDepth2List.stop().slideDown(200);\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t_this.removeClass('active');\n");
      out.write("\t\t\t\t\t\tthisDepth2List.stop(true, true).slideUp(200);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\n");
      out.write("\t\tdepth2Trigger.each(function() {\n");
      out.write("\t\t\tvar _this = $(this)\n");
      out.write("\t\t\t\t, thisTrigger = _this.children('a')\n");
      out.write("\t\t\t\t, thisDepth3List = _this.children('ul');\n");
      out.write("\n");
      out.write("\t\t\tif ( thisDepth3List.length ) {\n");
      out.write("\t\t\t\t_this.addClass('hasDepth')\n");
      out.write("\t\t\t}\n");
      out.write("\n");
      out.write("\t\t\tthisTrigger.on({\n");
      out.write("\t\t\t\tclick : function() {\n");
      out.write("\t\t\t\t\tif ( thisDepth3List.is(':hidden') ) {\n");
      out.write("\t\t\t\t\t\t_this.addClass('active');\n");
      out.write("\t\t\t\t\t\tthisDepth3List.stop().slideDown(200);\n");
      out.write("\t\t\t\t\t} else {\n");
      out.write("\t\t\t\t\t\t_this.removeClass('active');\n");
      out.write("\t\t\t\t\t\tthisDepth3List.stop(true, true).slideUp(200);\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("})();\n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
