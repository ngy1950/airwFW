/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.69
 * Generated at: 2020-11-20 05:24:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.wms;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.common.bean.DataMap;
import com.common.bean.CommonConfig;
import com.common.util.XSSRequestWrapper;

public final class topS_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');


	String wareky   = request.getSession().getAttribute(CommonConfig.SES_USER_WHAREHOUSE_KEY).toString();
	String userid   = request.getSession().getAttribute(CommonConfig.SES_USER_ID_KEY).toString();
	String username = request.getSession().getAttribute(CommonConfig.SES_USER_NAME_KEY).toString();
	String compky   = request.getSession().getAttribute(CommonConfig.SES_USER_COMPANY_KEY).toString();
	String langky   = request.getSession().getAttribute(CommonConfig.SES_USER_LANGUAGE_KEY).toString();
	String theme    = request.getSession().getAttribute(CommonConfig.SES_USER_THEME_KEY).toString();

      out.write("\n");
      out.write("<!doctype html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("<meta charset=\"utf-8\">\n");
      out.write("<title></title>\n");
      out.write("<meta name=\"viewport\" content=\"width=1150\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/common");
      out.print(theme);
      out.write("/css/common.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/common/theme/gsfresh/css/top.css\">\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"/common/theme/gsfresh/css/theme.css\">\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/jquery.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/jquery-ui.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/json2.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/dataMap.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/configData.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/label.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/lang/label-");
      out.print(langky);
      out.write(".js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/lang/message-");
      out.print(langky);
      out.write(".js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/commonUtil.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/dataBind.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/input.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/netUtil.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/validateUtil.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/ui.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"/common/js/page.js\"></script>\n");
      out.write("<script>\n");
      out.write("(function() {\n");
      out.write("\n");
      out.write("\t$(function() {\n");
      out.write("\t\tvar gnb = $('.gnb')\n");
      out.write("\t\t\t, trigger = gnb.find('.list').children('li')\n");
      out.write("\t\t\t, list = trigger.children('ul');\n");
      out.write("\t\t\n");
      out.write("\t\ttrigger.each(function() {\n");
      out.write("\t\t\tvar _this = $(this)\n");
      out.write("\t\t\t\t, thisTrigger = _this.children('a')\n");
      out.write("\t\t\t\t, thisList = _this.children('ul');\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tthisTrigger.on({\n");
      out.write("\t\t\t\tclick : function() {\n");
      out.write("\t\t\t\t\tlist.hide();\n");
      out.write("\t\t\t\t\tthisList.show();\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\ttrigger.removeClass('active');\n");
      out.write("\t\t\t\t\t_this.addClass('active');\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t});\n");
      out.write("\n");
      out.write("})();\n");
      out.write("\n");
      out.write("//로딩 열기\n");
      out.write("function loadingOpen() {\n");
      out.write("\tvar loader = $('<div class=\"contentLoading\"></div>').appendTo('body');\n");
      out.write("\t\n");
      out.write("\tloader.stop().animate({\n");
      out.write("\t\ttop : '0px'\n");
      out.write("\t}, 30, function() {\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("// 로딩 닫기\n");
      out.write("function loadingClose() {\n");
      out.write("\tvar loader = $('.contentLoading');\n");
      out.write("\t\n");
      out.write("\tloader.stop().animate({\n");
      out.write("\t\ttop : '100%'\n");
      out.write("\t}, 30, function() {\n");
      out.write("\t\tloader.remove();\n");
      out.write("\t});\n");
      out.write("}\n");
      out.write("\n");
      out.write("var topRoop = true;\n");
      out.write("$(document).ready(function(){\n");
      out.write("\tinputList.setCombo();\n");
      out.write("\t$(\"select[name=WAREKY]\").val(\"");
      out.print(wareky);
      out.write("\");\n");
      out.write("\t\n");
      out.write("\tuiList.UICheck();\n");
      out.write("\t\n");
      out.write("\t//logoEffect();\n");
      out.write("\t\n");
      out.write("\t//결재현황, 재고이동 조회\n");
      out.write("\t//countCall();\n");
      out.write("\t\n");
      out.write("\t//2분마다 결재현황, 재고이동 조회\n");
      out.write("\tsetInterval(function(){\n");
      out.write("\t\tif(topRoop){\n");
      out.write("\t\t\tcountCall();\n");
      out.write("\t\t};\n");
      out.write("\t}, 120000);\n");
      out.write("\t\n");
      out.write("});\n");
      out.write("\n");
      out.write("function topRoopChk(){\n");
      out.write("\ttopRoop = false;\n");
      out.write("}\n");
      out.write("\n");
      out.write("//결재현황, 재고이동 조회\n");
      out.write("function countCall(){\n");
      out.write("\tvar param = dataBind.paramData(\"searchArea\");\n");
      out.write("\tparam.put(\"USERID\", \"");
      out.print(userid);
      out.write("\");\n");
      out.write("\t\n");
      out.write("\tvar json = netUtil.sendData({\n");
      out.write("\t\tmodule : \"main\",\n");
      out.write("\t\tcommand : \"TOPBIZ\",\n");
      out.write("\t\tsendType : \"list\",\n");
      out.write("\t\tparam : param\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\tif(json && json.data){\n");
      out.write("\t\t$(\".leftArea p:eq(0) span\").text(json.data[0].CNT); //결재현황 건수\n");
      out.write("\t\t$(\".leftArea p:eq(1) span\").text(json.data[1].CNT); //재고이동 건수\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("//센터 조회\n");
      out.write("function changeWareky(){\n");
      out.write("\tvar param = dataBind.paramData(\"searchArea\");\n");
      out.write("\tvar json = netUtil.sendData({\n");
      out.write("\t\turl : \"/wms/common/json/changeWareky.data\",\n");
      out.write("\t\tparam : param\n");
      out.write("\t});\n");
      out.write("\t\n");
      out.write("\tif(json && json.data){\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t//window.top.closeAll();\n");
      out.write("\twindow.top.reloadPage()\n");
      out.write("}\n");
      out.write("\n");
      out.write("function logout(){\n");
      out.write("\tlocation.href = \"/common/json/logout.page\";\n");
      out.write("}\n");
      out.write("\n");
      out.write("function changePage(menuId){\t\n");
      out.write("\twindow.top.menuPage(menuId);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function logoEffectStart(){\n");
      out.write("\tstate = true;\n");
      out.write("\teffectType = true;\n");
      out.write("\tlogoEffect();\n");
      out.write("}\n");
      out.write("\n");
      out.write("function logoEffectStop(){\n");
      out.write("\tstate = false;\n");
      out.write("\teffectType = false;\n");
      out.write("\tlogoEffect();\n");
      out.write("\t$( \"#effect\" ).stop(true,true);\n");
      out.write("}\n");
      out.write("\n");
      out.write("var state = true;\n");
      out.write("var effectType = true;\n");
      out.write("function logoEffect(){\t\n");
      out.write("\tif ( state ) {\n");
      out.write("\t\t$( \"#effect\" ).animate({\n");
      out.write("\t\t  backgroundColor: \"#699bf8\",\n");
      out.write("\t\t  color: \"#699bf8\"\n");
      out.write("\t\t}, 1000 );\n");
      out.write("\t} else {\n");
      out.write("\t\t$( \"#effect\" ).animate({\n");
      out.write("\t\t  backgroundColor: \"#2f313a\",\n");
      out.write("\t\t  color: \"#2f313a\"\n");
      out.write("\t\t}, 1000 );\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tif(effectType){\n");
      out.write("\t\tstate = !state;\n");
      out.write("\t\tsetTimeout(logoEffect, 1000);\n");
      out.write("\t}\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("$(document).ready(function(){\n");
      out.write("\tuiList.UICheck();\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<!-- header -->\n");
      out.write("<div class=\"header\">\n");
      out.write("\t<div class=\"innerContainer\">\n");
      out.write("\t\t<span class=\"logo\" id=\"\" onClick=\"window.top.reloadPage();\">\n");
      out.write("\t\t\t<img src=\"/common");
      out.print(theme);
      out.write("/images/login/logo_3.png\" alt=\"logo\" />\n");
      out.write("\t\t\t");
      out.write("\n");
      out.write("\t\t\t<!-- <span class=\"e\">e</span>WMS -->\n");
      out.write("\t\t</span>\n");
      out.write("\t\t<div class=\"leftArea\">\n");
      out.write("\t\t\t<button class=\"menu\"></button>\n");
      out.write("\t\t\t<p>결재현황: 결재 진행 중 <a onclick=\"page.linkPageOpen('AP11', null)\"><span class=\"textstyle\"></span>건<img src=\"/common/theme/gsfresh/images/login_img/right_white.png\" /></a></p>\n");
      out.write("\t\t\t<p>재고이동: <a  onclick=\"page.linkPageOpen('SV02', null)\"><span class=\"textstyle\"></span>건<img src=\"/common/theme/gsfresh/images/login_img/right_white.png\" /></a></p>\n");
      out.write("\t\t</div>\n");
      out.write("\t\t\n");
      out.write("\t\t<div class=\"rightArea\" id=\"searchArea\">\n");
      out.write("\t\t\t<div class=\"logout\" onClick=\"logout()\"></div>\n");
      out.write("\t\t\t<div class=\"helloid\"><span>안녕하세요, ");
      out.print(username);
      out.write("님</span></div>\n");
      out.write("\t\t\t<div class=\"selection\">\n");
      out.write("\t\t\t\t<select Combo=\"Wms,WAHMACOMBO\" name=\"WAREKY\" onChange=\"changeWareky()\" ></select>\n");
      out.write("\t\t\t</div>\n");
      out.write("<!-- \t\t\t<div class=\"util\"> -->\n");
      out.write("\n");
      out.write("<!-- \t\t\t\tbutton class=\"setting\" type=\"button\"><a href=\"/common/demo/tool/sql.jsp\" target=\"_TOP\">설정</a></button -->\n");
      out.write("<!-- \t\t\t\t<button class=\"logOut\" type=\"button\" onClick=\"logout()\" CL=\"BTN_LOGOUT\"></button>\t -->\n");
      out.write("<!-- \t\t\t</div> -->\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("<!-- //header -->\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
