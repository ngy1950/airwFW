<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="WmsAdmin">
	<typeAlias alias="DataMap" type="com.common.bean.DataMap" />
	<typeAlias alias="StringMap" type="com.common.util.StringMap" />
	
	<sql id="ZONMA_WHERE">
		<isNotEmpty property="WAREKY">			
			AND WAREKY = #WAREKY# 
		</isNotEmpty> 
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</sql>	
	
		<!-- TS01 Grid -->
	<!-- select id="STSRH_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT WAREKY,
		SSORKY,
		ITEMNO,
		FIELDN,
		FLDCMT,
		TABLEN,
		ACTVAT,
		SORTSQ,
		INDASD,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR,
		INDBZL,
		INDARC,
		UPDCHK
		FROM STSRI
		WHERE WAREKY=#WAREKY#
		<isNotEmpty property="SSORKY">
			AND SSORKY = #SSORKY#
		</isNotEmpty>
	</select-->
	<!-- TS01 Grid Insert -->
	<insert id="STSRH_INSERT" parameterClass="Map">
		Insert
		INTO STSRI
		VALUES(
			#SSORKY#,
			#ITEMNO#,
			#FIELDN#,
			#FLDCMT#,
			#TABLEN#,
			#ACTVAT#,
			#SORTSQ#,
			#INDASD#,
			#CREDAT#,
			#CRETIM#,
			#CREUSR#,
			#LMODAT#,
			#LMOTIM#,
			#LMOUSR#,
			#INDBZL#,
			#INDARC#,
			#UPDCHK#
			)
	</insert>
	<!-- TS01 Grid Update -->
	<update id="STSRH_UPDATE" parameterClass="Map">
		UPDATE STSRI SET
		<isNotEmpty property="">
			SORTSQ=#SORTSQ#
		</isNotEmpty>
		WHERE 1 = 1
		AND WAREKY=#WAREKY#
	</update>

	<select id="ZONMA_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  WAREKY
			   ,' ' AS CHECKDATA
		       ,ZONEKY
		       ,ZONETY
		       ,(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'ZONETY' AND C.CMCDVL = Z.ZONETY) AS ZONETYT
		       ,SHORTX
		       ,AREAKY
		       ,(SELECT SHORTX FROM AREMA A WHERE A.WAREKY = Z.WAREKY AND A.AREAKY = Z.AREAKY) AS AREAKYT
		       ,CREDAT
		       ,CRETIM
		       ,CREUSR
		       ,LMODAT
		       ,LMOTIM
		       ,LMOUSR
		       ,INDBZL
		       ,INDARC
		       ,UPDCHK
		FROM ZONMA Z
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">			
			AND WAREKY = #WAREKY# 
		</isNotEmpty> 
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		ORDER BY ZONEKY
	</select>
	
	<insert id="ZONMA_INSERT" parameterClass="Map">
		INSERT INTO ZONMA (WAREKY,
                   ZONEKY,
                   ZONETY,
                   SHORTX,
                   AREAKY,
                   CREDAT,
                   CRETIM,
                   CREUSR,
                   LMODAT,
                   LMOTIM,
                   LMOUSR)
	     VALUES (#WAREKY#,
	             #ZONEKY#,
	             #ZONETY#,
	             #SHORTX#,
	             #AREAKY#,
	             CONVERT(VARCHAR,GETDATE(),112),
	             REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#,
	             CONVERT(VARCHAR,GETDATE(),112),
	             REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#)
	</insert>
	
	<delete id="ZONMA_DELETE" parameterClass="Map">
		DELETE FROM ZONMA 
		WHERE WAREKY = #WAREKY# 
			AND ZONEKY = #ZONEKY#
	</delete>
	
	<update id="ZONMA_UPDATE" parameterClass="Map">
		UPDATE ZONMA SET 
			<isNotEmpty property="ZONETY">
				 ZONETY = #ZONETY#,
			</isNotEmpty>
			<isNotEmpty property="SHORTX">			
				 SHORTX = #SHORTX#,
			</isNotEmpty> 
			<isNotEmpty property="AREAKY">			
				 AREAKY = #AREAKY#,
			</isNotEmpty>
			LMODAT = CONVERT(VARCHAR,GETDATE(),112),
			LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			LMOUSR = #SES_USER_ID#
		WHERE WAREKY = #WAREKY# 
			AND ZONEKY = #ZONEKY# 
	</update>
	<select id="ZONMA_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT
			CASE 
                WHEN W.WAREKY IS NULL
                     THEN 'MASTER_M0255' + ' ' + P.WAREKY
                WHEN A.AREAKY IS NULL
                     THEN 'MASTER_M0230' + ' ' + P.AREAKY
                ELSE 'OK'
            END AS MSG
		FROM(
		    $VALIDATION_SQL$
		) P 
		LEFT OUTER JOIN WAHMA W ON W.WAREKY = P.WAREKY 
		LEFT OUTER JOIN AREMA A ON A.WAREKY = W.WAREKY AND A.AREAKY = P.AREAKY 
		WHERE W.WAREKY IS NULL OR A.AREAKY IS NULL
	</select>
	
	<!-- 구성> 구역 삭제 전 Validation 체크-->
	<select id="ZONMAval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM LOCMA
		WHERE WAREKY  = 'WCD1'
		AND ZONEKY = #ZONEKY#
	</select>
	
	<select id="AREAKYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			WAREKY AS GROUP_COL,
		    AREAKY AS VALUE_COL,
		    SHORTX AS TEXT_COL
		FROM AREMA 
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">			
			AND WAREKY = #WAREKY# 
		</isNotEmpty> 
	</select>
	
	<select id="ZONEKY_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  WAREKY
		       ,ZONEKY
		FROM ZONMA
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">			
			AND WAREKY = #WAREKY# 
		</isNotEmpty> 
		<isNotEmpty property="ZONEKY">
			AND ZONEKY = #ZONEKY# 
		</isNotEmpty> 
	</select>	
	
	<!-- 구성> 거점 조회 -->
    <select id="WAHMA_LIST" parameterClass="Map" resultClass="DataMap">
	 SELECT WAREKY ,
			COMPKY ,
			TSPKEY ,
			DELMAK ,
			CHKSHA ,
			NAME01 ,
			NAME02 ,
			NAME03 ,
			ADDR01 ,
			ADDR02 ,
			ADDR03 ,
			ADDR04 ,
			ADDR05 ,
			CITY01 ,
			REGN01 ,
			POSTCD ,
			NATNKY ,
			(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'NATNKY' AND C.CMCDVL = A.NATNKY) AS NATNKYT,
			TELN01 ,
			TELN02 ,
			TELN03 ,
			FAXTL1 ,
			FAXTL2 ,
			TAXCD1 ,
			TAXCD2 ,
			VATREG ,
			POBOX1 ,
			POBPC1 ,
			WADN01 ,
			WADT01 ,
			WADT02 ,
			WADM01 ,
			EXCOMK ,
			INDOVA ,
			PLOCOV ,
			DRECLO ,
			INDUAC ,
			DSORKY ,
			DRECLO ,
			CONVERT(VARCHAR,GETDATE(),112) AS CREDAT,
			REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM,
			#SES_USER_ID# AS CREUSR,
			' ' AS CUSRNM,
			CONVERT(VARCHAR,GETDATE(),112) AS LMODAT,
			REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM,
			#SES_USER_ID# AS LMOUSR,
			' ' AS LUSRNM
		FROM WAHMA A
		WHERE 1 = 1
		<isNotEmpty property="COMPKY">
		   AND COMPKY = #COMPKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		<isEqual property="DELMAK" compareValue="V">
		   AND DELMAK = #DELMAK#
		</isEqual>
	</select> 
	
	<!-- 구성> 거점 validation -->
	<select id="WAHMA_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE
		     WHEN B.LOCAKY IS NULL THEN 'VALID_M0204' + ' ' + A.PLOCOV
		     ELSE 'OK' 
		 END AS MSG
		FROM ( $VALIDATION_SQL$ ) A,
		       LOCMA B
		WHERE 1=1
		AND A.WAREKY = B.WAREKY(+)
		AND A.PLOCOV = B.LOCAKY(+)
	</select>

	<!-- 구성> 거점 수정 -->
	<update id="WAHMA_UPDATE" parameterClass="Map">
		UPDATE WAHMA SET 
		 	    LMODAT = CONVERT(VARCHAR,GETDATE(),112)
			  , LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
			  , LMOUSR = #SES_USER_ID#
			<isNotEmpty property="TSPKEY">
			  , TSPKEY = #TSPKEY#
			</isNotEmpty> 
			<isNotEmpty property="DELMAK">
			  , DELMAK = #DELMAK#
			</isNotEmpty> 
			<isNotEmpty property="CHKSHA">
			  , CHKSHA = #CHKSHA#
			</isNotEmpty> 
			<isNotEmpty property="NAME01">
			  , NAME01 = #NAME01#
			</isNotEmpty> 
			<isNotEmpty property="NAME02">
			  , NAME02 = #NAME02#
			</isNotEmpty> 
			<isNotEmpty property="NAME03">
			  , NAME03 = #NAME03#
			</isNotEmpty> 
			<isNotEmpty property="ADDR01"> 
			  , ADDR01 = #ADDR01#
			</isNotEmpty>
				<isNotEmpty property="ADDR02"> 
			  , ADDR02 = #ADDR02#
			</isNotEmpty>
				<isNotEmpty property="ADDR03"> 
			  , ADDR03 = #ADDR03#
			</isNotEmpty>
				<isNotEmpty property="ADDR04"> 
			  , ADDR04 = #ADDR04#
			</isNotEmpty>
				<isNotEmpty property="ADDR05"> 
			  , ADDR05 = #ADDR05#
			</isNotEmpty>
			<isNotEmpty property="CITY01">
			  , CITY01 = #CITY01#
			</isNotEmpty>
			<isNotEmpty property="REGN01">
			  , REGN01 = #REGN01#
			</isNotEmpty>
			<isNotEmpty property="POSTCD">
			  , POSTCD = #POSTCD#
			</isNotEmpty>
			<isNotEmpty property="NATNKY">
			  , NATNKY = #NATNKY#
			</isNotEmpty>
			<isNotEmpty property="TELN01">
			  , TELN01 = #TELN01#
			</isNotEmpty>
			<isNotEmpty property="TELN02">
			  , TELN02 = #TELN02#
			</isNotEmpty>
			<isNotEmpty property="TELN03">
			  , TELN03 = #TELN03#
			</isNotEmpty>
			<isNotEmpty property="FAXTL1">
			  , FAXTL1 = #FAXTL1#
			</isNotEmpty>
			<isNotEmpty property="FAXTL2">
			  , FAXTL2 = #FAXTL2#
			</isNotEmpty>
			<isNotEmpty property="TAXCD1">
			  , TAXCD1 = #TAXCD1#
			</isNotEmpty>
			<isNotEmpty property="TAXCD2">
			  , TAXCD2 = #TAXCD2#
			</isNotEmpty>
			<isNotEmpty property="VATREG">
			  , VATREG = #VATREG#
			</isNotEmpty>
			<isNotEmpty property="POBOX1">
			  , POBOX1 = #POBOX1#
			</isNotEmpty>
			<isNotEmpty property="POBPC1">
			  , POBPC1 = #POBPC1#
			</isNotEmpty>
			<isNotEmpty property="WADN01">
			  , WADN01 = #WADN01#
			</isNotEmpty>
			<isNotEmpty property="WADT01">
			  , WADT01 = #WADT01#
			</isNotEmpty>
			<isNotEmpty property="WADT02">
			  , WADT02 = #WADT02#
			</isNotEmpty>
			<isNotEmpty property="WADM01">
			  , WADM01 = #WADM01#
			</isNotEmpty>
			<isNotEmpty property="EXCOMK">
			  , EXCOMK = #EXCOMK#
			</isNotEmpty>
			<isNotEmpty property="INDOVA">
			  , INDOVA = #INDOVA#
			</isNotEmpty>
			<isNotEmpty property="PLOCOV">
			  , PLOCOV = #PLOCOV#
			</isNotEmpty>
			<isNotEmpty property="DRECLO">
			  , DRECLO = #DRECLO#
			</isNotEmpty>
			<isNotEmpty property="INDUAC">
			  , INDUAC = #INDUAC#
			</isNotEmpty>
			<isNotEmpty property="DSORKY">
			  , DSORKY = #DSORKY#
			</isNotEmpty>
		  WHERE WAREKY = #WAREKY#
	</update> 
	
	<!-- 구성> 영역 조회 -->
    <select id="AREMA_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT WAREKY
		, AREAKY
		, AREATY
		,(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'AREATY' AND C.CMCDVL = A.AREATY)
		AS AREATYT
		, SHORTX
		, NEGSTK
		, INDCDO
		, INDAES
		, INDSHW
		, INDULT
		, RDDALL
		, CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
		, REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
		, #SES_USER_ID# AS CREUSR
		, ' ' AS CUSRNM
		, CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
		, REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
		, #SES_USER_ID# AS LMOUSR
		, ' ' AS LUSRNM
		, INDBZL
		, INDARC
		, UPDCHK
		FROM AREMA A
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
		 AND   WAREKY = #WAREKY# 
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		<isNotEmpty property="AREATY">
		 AND   AREATY = #AREATY# 
		</isNotEmpty>
	</select> 
	
	<!-- 구성> 영역 수정 -->
	<update id="AREMA_UPDATE" parameterClass="Map">
		 UPDATE AREMA SET 
		        LMODAT = CONVERT(VARCHAR,GETDATE(),112)
			  , LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
			  , LMOUSR = #SES_USER_ID#
		 	<isNotEmpty property="AREATY">
		      , AREATY = #AREATY#
		    </isNotEmpty>
		    <isNotEmpty property="SHORTX">
		      , SHORTX = #SHORTX#
		    </isNotEmpty>
		    <isNotEmpty property="NEGSTK">
		      , NEGSTK = #NEGSTK#
		    </isNotEmpty>
		    <isNotEmpty property="INDCDO">
		      , INDCDO = #INDCDO#
		    </isNotEmpty>
		    <isNotEmpty property="INDSHW">
		      , INDSHW = #INDSHW#
		    </isNotEmpty>
		    <isNotEmpty property="INDAES">
		      , INDAES = #INDAES#
		    </isNotEmpty>
		    <isNotEmpty property="INDULT">
		      , INDULT = #INDULT#
		    </isNotEmpty>
		 WHERE WAREKY = #WAREKY#
		   AND AREAKY = #AREAKY#
	</update>
	
	<!-- 구성> 영역 신규 -->
		<insert id="AREMA_INSERT" parameterClass="Map">
		INSERT INTO AREMA(
					WAREKY,
					AREAKY,
					AREATY,
					SHORTX,
					NEGSTK,
					INDCDO,
					INDAES,
					INDSHW,
					INDULT,
					CREDAT,
					CRETIM,
					CREUSR,
					LMODAT,
					LMOTIM,
					LMOUSR
					)
			VALUES (
					#WAREKY#,
					#AREAKY#,
					#AREATY#,
					#SHORTX#,
					#NEGSTK#,
					#INDCDO#,
					#INDAES#,
					#INDSHW#,
					#INDULT#,
					CONVERT(VARCHAR,GETDATE(),112),
					REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
					#SES_USER_ID#,
					CONVERT(VARCHAR,GETDATE(),112),
					REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
					#SES_USER_ID#
					)
	</insert>
	
	 	<!-- 구성> 영역 삭제 전 Validation 체크-->
	<select id="AREMAval_MAP" parameterClass="Map" resultClass="DataMap">
	  	SELECT COUNT(*) CNT 
		FROM ZONMA
		WHERE WAREKY  = 'WCD1'
		AND AREAKY = #AREAKY#
	</select>
	
	<!-- 구성> 영역 삭제 -->
	<delete id="AREMA_DELETE" parameterClass="Map">
		DELETE FROM AREMA
		WHERE WAREKY = #WAREKY#
		AND AREAKY = #AREAKY#
	</delete>

	<!-- 파트너관리> 파트너 조회 -->
	<select id="BZPTN_LIST" parameterClass="Map" resultClass="DataMap">
		 SELECT PTNRKY,
				PTNRTY,
				(SELECT CDESC1 FROM CMCDV C WHERE C.CMCDKY = 'PTNRTY' AND C.CMCDVL = A.PTNRTY) AS PTNRTYT,
				DELMAK,
				NAME01,
				NAME02,
				NAME03,
				ADDR01,
				ADDR02,
				ADDR03,
				ADDR04,
				ADDR05,
				CITY01,
				REGN01,
				POSTCD,
				NATNKY,
				(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'NATNKY' AND C.CMCDVL = A.NATNKY) AS NATNKYT,
				TELN01,
				TELN02,
				TELN03,
				FAXTL1,
				FAXTL2,
				TAXCD1,
				TAXCD2,
				VATREG,
				POBOX1,
				POBPC1,
				EMAIL1,
				EMAIL2,
				CTTN01,
				CTTT01,
				CTTT02,
				CTTM01,
				SALN01,
				SALT01,
				SALT02,
				SALM01,
				EXPTNK,
				OWNRKY,
				CUSTMR,
				PTNG01,
				PTNG02,
				PTNG03,
				PTNG04,
				PTNG05,
				PTNL01,
				PTNL02,
				PTNL03,
				PTNL04,
				PTNL05,
				WTOPPM,
				WTOPMU,
				WTOPDV,
				PROCHA,
				CONVERT(VARCHAR,GETDATE(),112) AS CREDAT,
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM,
				#SES_USER_ID# AS CREUSR,
				' ' AS CUSRNM,
				CONVERT(VARCHAR,GETDATE(),112) AS LMODAT,
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM,
				#SES_USER_ID# AS LMOUSR,
				' ' AS LUSRNM,
				INDBZL,
				INDARC,
				UPDCHK
		 FROM   BZPTN A
		WHERE  1 = 1
		<isNotEmpty property="PTNRKY">
			AND A.PTNRKY = #PTNRKY#
		</isNotEmpty>
		<isNotEmpty property="PTNRTY">
			AND A.PTNRTY = #PTNRTY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>  
	
	<!-- 파트너관리> 파트너  중복 확인 -->
	<select id="BZPTNval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM BZPTN 
		 WHERE 1 = 1 
           AND PTNRKY = #PTNRKY#
           AND PTNRTY = #PTNRTY#
           AND PTNL05 = #PTNL05#
	</select>
	
		<!-- 파트너관리> 파트너 validation -->
	<select id="BZPTN_VALIDATION" parameterClass="Map" resultClass="DataMap">
	SELECT
         CASE
           WHEN B.PTNRKY IS NOT NULL THEN 'COMMON_M0446' + ' ' + STD.PTNRKY
           WHEN B.PTNRTY IS NOT NULL THEN 'COMMON_M0446' + ' ' + STD.PTNRTY
           WHEN B.PTNL05 IS NOT NULL THEN 'COMMON_M0446' + ' ' + STD.PTNL05
           WHEN C.CMCDVL IS NULL THEN 'IN_M0036' + ' ' + STD.PTNRTY
           WHEN P.PTNL05 IS NULL THEN 'MASTER_M0463' + ' ' + STD.PTNL05
           ELSE 'OK'
         END AS MSG
       FROM (
               $VALIDATION_SQL$ 
             ) STD 
           LEFT OUTER JOIN BZPTN B ON B.PTNRKY = STD.PTNRKY AND B.PTNRTY = STD.PTNRTY AND B.PTNL05 = STD.PTNL05
           LEFT OUTER JOIN CMCDV C ON C.CMCDVL = STD.PTNRTY AND C.CMCDKY = 'PTNRTY'
           LEFT OUTER JOIN BZPTN P ON P.PTNL05 = STD.PTNL05 
       WHERE 1 = 1
         AND B.PTNRKY IS NOT NULL
          OR B.PTNRTY IS NOT NULL
          OR B.PTNL05 IS NOT NULL
          OR C.CMCDVL IS NULL
          OR P.PTNL05 IS NULL
	</select>
	
	<!-- 파트너관리> 파트너 신규 -->
	<insert id="BZPTN_INSERT" parameterClass="Map">
		INSERT INTO BZPTN (PTNRKY,
                   PTNRTY,
                   DELMAK,
                   NAME01,
                   NAME02,
                   NAME03,
                   ADDR01,
                   ADDR02,
                   ADDR03,
                   ADDR04,
                   ADDR05,
                   CITY01,
                   REGN01,
                   POSTCD,
                   NATNKY,
                   TELN01,
                   TELN02,
                   TELN03,
                   FAXTL1,
                   FAXTL2,
                   TAXCD1,
                   TAXCD2,
                   VATREG,
                   POBOX1,
                   POBPC1,
                   EMAIL1,
                   EMAIL2,
                   CTTN01,
                   CTTT01,
                   CTTT02,
                   CTTM01,
                   SALN01,
                   SALT01,
                   SALT02,
                   SALM01,
                   EXPTNK,
                   OWNRKY,
                   CUSTMR,
                   PTNG01,
                   PTNG02,
                   PTNG03,
                   PTNG04,
                   PTNG05,
                   PTNL01,
                   PTNL02,
                   PTNL03,
                   PTNL04,
                   PTNL05,
                   PROCHA,
                   CREDAT,
                   CRETIM,
                   CREUSR,
                   LMODAT,
                   LMOTIM,
                   LMOUSR)
     	VALUES (#PTNRKY#,
	             #PTNRTY#,
	             #DELMAK#,
	             #NAME01#,
	             #NAME02#,
	             #NAME03#,
	             #ADDR01#,
	             #ADDR02#,
	             #ADDR03#,
	             #ADDR04#,
	             #ADDR05#,
	             #CITY01#,
	             #REGN01#,
	             #POSTCD#,
	             #NATNKY#,
	             #TELN01#,
	             #TELN02#,
	             #TELN03#,
	             #FAXTL1#,
	             #FAXTL2#,
	             #TAXCD1#,
	             #TAXCD2#,
	             #VATREG#,
	             #POBOX1#,
	             #POBPC1#,
	             #EMAIL1#,
	             #EMAIL2#,
	             #CTTN01#,
	             #CTTT01#,
	             #CTTT02#,
	             #CTTM01#,
	             #SALN01#,
	             #SALT01#,
	             #SALT02#,
	             #SALM01#,
	             #EXPTNK#,
	             #OWNRKY#,
	             #CUSTMR#,
	             #PTNG01#,
	             #PTNG02#,
	             #PTNG03#,
	             #PTNG04#,
	             #PTNG05#,
	             #PTNL01#,
	             #PTNL02#,
	             #PTNL03#,
	             #PTNL04#,
	             #PTNL05#,
	             #PROCHA#,
	             CONVERT (VARCHAR, GETDATE (), 112),
	             REPLACE (CONVERT (VARCHAR, GETDATE (), 108), ':', ''),
	             #SES_USER_ID#,
	             CONVERT (VARCHAR, GETDATE (), 112),
	             REPLACE (CONVERT (VARCHAR, GETDATE (), 108), ':', ''),
	             #SES_USER_ID#)
	</insert>
	
		<!-- 마스터관리> 마스터수정 -->
	<update id="BZPTN_UPDATE" parameterClass="Map">
		UPDATE BZPTN SET
		 	   LMODAT = CONVERT(VARCHAR,GETDATE(),112)
			 , LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
			 , LMOUSR = #SES_USER_ID#
		      <isNotEmpty property="PTNRKY">
		      ,PTNRKY = #PTNRKY#
		      </isNotEmpty>
			  <isNotEmpty property="PTNRTY">
		      ,PTNRTY = #PTNRTY#
		      </isNotEmpty>
		      <isNotEmpty property="DELMAK">
		      ,DELMAK = #DELMAK#
		      </isNotEmpty>
		      <isNotEmpty property="NAME01">
		      ,NAME01 = #NAME01#
		      </isNotEmpty>
		      <isNotEmpty property="NAME02">
		      ,NAME02 = #NAME02#
		       </isNotEmpty>
		      <isNotEmpty property="ADDR01">
		      ,ADDR01 = #ADDR01#
		      </isNotEmpty>
		      <isNotEmpty property="POSTCD">
		      ,POSTCD = #POSTCD#
		      </isNotEmpty>
		      <isNotEmpty property="TELN01">
		      ,TELN01 = #TELN01#
		      </isNotEmpty>
		      <isNotEmpty property="VATREG">
		      ,VATREG = #VATREG#
		      </isNotEmpty>
		      <isNotEmpty property="PTNL3">
		      ,PTNL3 = #PTNL3#
		      </isNotEmpty>
		      <isNotEmpty property="PTNL4">
		      ,PTNL4 = #PTNL4#
		      </isNotEmpty>
		      <isNotEmpty property="PROCHA1">
		      ,PROCHA1 = #PROCHA1#
		      </isNotEmpty>
		      <isNotEmpty property="EXPTNK">
		      ,EXPTNK = #EXPTNK#
		      </isNotEmpty>
		      <isNotEmpty property="PTNG01">
		      ,PTNG01 = #PTNG01#
		      </isNotEmpty>
		      <isNotEmpty property="PTNL05">
		      ,PTNL05 = #PTNL05#
		      </isNotEmpty>
		 WHERE 1 = 1
		   AND PTNRKY = #PTNRKY#
		   AND PTNRTY = #PTNRTY#
		   AND PTNL05 = #PTNL05#
	</update>
	
		<!-- 파트너관리> 파트너 삭제 -->
	<delete id="BZPTN_DELETE" parameterClass="Map">
		DELETE FROM BZPTN
		WHERE PTNRKY = #PTNRKY#
		  AND PTNRTY = #PTNRTY#
		  AND PTNL05 = #PTNL05#
	</delete>

	<!-- 구성> 지번★ 조회 -->
	<select id="LOCMA_LIST" parameterClass="Map" resultClass="DataMap">
	  SELECT WAREKY
			,LOCAKY
			,LOCATY
			,SHORTX
			,TASKTY
			,ZONEKY
			,AREAKY
			,(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'LOCATY' AND C.CMCDVL = A.LOCATY)
			AS LOCATYT
			,TKZONE
			,FACLTY
			,ARLVLL
			,INDCPC
			,INDTUT
			,IBROUT
			,OBROUT
			,RPROUT
			,STATUS
			,(SELECT CDESC1 FROM CMCDV C WHERE C.CMCDKY = 'STATUS' AND C.CMCDVL = A.STATUS) AS STATUST
			,ABCANV
			,LENGTH
			,WIDTHW
			,HEIGHT
			,CUBICM
			,MAXCPC
			,MAXQTY
			,MAXWGT
			,MAXLDR
			,MAXSEC
			,MIXSKU
			,MIXLOT
			,RPNCAT
			,INDQTC
			,QTYCHK
			,NEDSID
			,INDUPA
			,INDUPK
			,AUTLOC
			,CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
			,REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
			,#SES_USER_ID# AS CREUSR
			,' ' AS CUSRNM
			,CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
			,REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
			,#SES_USER_ID# AS LMOUSR
			,' ' AS LUSRNM
			,INDBZL AS INDBZL
			,INDARC AS INDARC
			,UPDCHK AS UPDCHK
		FROM LOCMA A
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="LOCATY">
			AND LOCATY = #LOCATY#
		</isNotEmpty>
		<isNotEmpty property="STATUS">
			AND STATUS = #STATUS#
		</isNotEmpty>
		<isEqual property="INDUPK" compareValue="V">
			AND INDUPK = #INDUPK#
		</isEqual>
		<isEqual property="INDUPA" compareValue="V">
			AND INDUPA = #INDUPA#
		</isEqual>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
		<!-- 구성> 지번★  신규 -->
	<insert id="LOCMA_INSERT" parameterClass="Map">
		INSERT INTO LOCMA (WAREKY,
                   LOCAKY,
                   LOCATY,
                   SHORTX,
                   TASKTY,
                   ZONEKY,
                   AREAKY,
                   TKZONE,
                   FACLTY,
                   ARLVLL,
                   INDCPC,
                   INDTUT,
                   IBROUT,
                   OBROUT,
                   RPROUT,
                   STATUS,
                   ABCANV,
                   LENGTH,
                   WIDTHW,
                   HEIGHT,
                   CUBICM,
                   MAXCPC,
                   MAXQTY,
                   MAXWGT,
                   MAXLDR,
                   MAXSEC,
                   MIXSKU,
                   MIXLOT,
                   RPNCAT,
                   INDQTC,
                   QTYCHK,
                   NEDSID,
                   INDUPA,
                   INDUPK,
                   AUTLOC,
                   CREDAT,
                   CRETIM,
                   CREUSR,
                   LMODAT,
                   LMOTIM,
                   LMOUSR,
                   INDBZL,
                   INDARC)
	     VALUES (#WAREKY#,
	             #LOCAKY#,
	             #LOCATY#,
	             #SHORTX#,
	             #TASKTY#,
	             #ZONEKY#,
	             #AREAKY#,
	             #TKZONE#,
	             #FACLTY#,
	             #ARLVLL#,
	             #INDCPC#,
	             #INDTUT#,
	             #IBROUT#,
	             #OBROUT#,
	             #RPROUT#,
	             #STATUS#,
	             #ABCANV#,
	             ISNULL(#LENGTH#, 0),
	             ISNULL(#WIDTHW#, 0),
	             ISNULL(#HEIGHT#, 0),
	             ISNULL(#CUBICM#, 0),
	             ISNULL(#MAXCPC#, 0),
	             ISNULL(#MAXQTY#, 0),
	             ISNULL(#MAXWGT#, 0),
	             ISNULL(#MAXLDR#, 0),
	             ISNULL(#MAXSEC#, 0),
	             #MIXSKU#,
	             #MIXLOT#,
	             #RPNCAT#,
	             #INDQTC#,
	             ISNULL(#QTYCHK#, 0),
	             #NEDSID#,
	             #INDUPA#,
	             #INDUPK#,
	             #AUTLOC#,
	             CONVERT (VARCHAR, GETDATE (), 112),
	             REPLACE (CONVERT (VARCHAR, GETDATE (), 108), ':', ''),
	             #SES_USER_ID#,
	             CONVERT (VARCHAR, GETDATE (), 112),
	             REPLACE (CONVERT (VARCHAR, GETDATE (), 108), ':', ''),
	             #SES_USER_ID#,
	             #INDBZL#,
	             #INDARC#)
	</insert>
	<select id="LOCMA_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT 
		    CASE WHEN B.ZONEKY IS NULL THEN 'VALID_M0002' + ' ' + A.ZONEKY
		         WHEN B.ZONEKY IS NULL THEN 'VALID_M0002' + ' ' + A.TKZONE
		         ELSE 'OK' END AS MSG
		FROM ( $VALIDATION_SQL$) A LEFT OUTER JOIN ZONMA B ON A.ZONEKY= B.ZONEKY AND A.TKZONE = B.ZONEKY AND B.ZONEKY IS NULL
	</select>
	

	<!-- 구성> 지번★  창고키 -->
	<select id="AREAKY_MAP" parameterClass="Map" resultClass="DataMap">
	  	SELECT AREAKY 
	  	  FROM ZONMA 
	  	  WHERE 1 = 1 
	  	    AND WAREKY = 'WCD1' 
	  	    AND ZONEKY = #ZONEKY#
	</select>
	
	<!-- 구성> 지번★  창고키 유무 확인 -->
	<select id="ZONEKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM ZONMA 
		 WHERE 1 = 1 
		   AND WAREKY = 'WCD1'
           AND ZONEKY = #ZONEKY#
	</select>
	
	<!-- 구성> 지번★ 작업구역 유무 확인 -->
	<select id="TKZONEval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM ZONMA 
		 WHERE 1 = 1 
		   AND WAREKY = 'WCD1'
           AND ZONEKY = #TKZONE#
	</select>
	
	 	<!-- 구성> 지번★  삭제 전 Validation 체크-->
	<select id="LOCMAval_MAP" parameterClass="Map" resultClass="DataMap">
	  	SELECT COUNT(*) CNT 
	  	FROM STKKY 
		WHERE 1 = 1
		AND WAREKY = #WAREKY#
		AND LOCAKY = #LOCAKY#
		AND QTSIWH > 0
	</select>

	<!-- 구성> 지번★ 수정 -->
	<update id="LOCMA_UPDATE" parameterClass="Map">
		 UPDATE LOCMA SET
		 		LMODAT = CONVERT(VARCHAR,GETDATE(),112),
			    LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			    LMOUSR = #SES_USER_ID#,
		 	<isNotEmpty property="LOCATY">
		        LOCATY = #LOCATY#,
		    </isNotEmpty>
		    <isNotEmpty property="SHORTX">
				SHORTX = #SHORTX#,
			</isNotEmpty>
			<isNotEmpty property="TASKTY">
				TASKTY = #TASKTY#,
			</isNotEmpty>
			<isNotEmpty property="ZONEKY">
				ZONEKY = #ZONEKY#,
			</isNotEmpty>
			<isNotEmpty property="TKZONE">
				TKZONE = #TKZONE#,
			</isNotEmpty>
			<isNotEmpty property="FACLTY">
				FACLTY = #FACLTY#,
			</isNotEmpty>
			<isNotEmpty property="ARLVLL">
				ARLVLL = #ARLVLL#,
			</isNotEmpty>
			<isNotEmpty property="INDCPC">
				INDCPC = #INDCPC#,
			</isNotEmpty>
			<isNotEmpty property="INDTUT">
				INDTUT = #INDTUT#,
			</isNotEmpty>
			<isNotEmpty property="IBROUT">
				IBROUT = #IBROUT#,
			</isNotEmpty>
			<isNotEmpty property="OBROUT">
				OBROUT = #OBROUT#,
			</isNotEmpty>
			<isNotEmpty property="RPROUT">
				RPROUT = #RPROUT#,
			</isNotEmpty>
			<isNotEmpty property="STATUS">
				STATUS = #STATUS#,
			</isNotEmpty>
			<isNotEmpty property="ABCANV">
				ABCANV = #ABCANV#,
			</isNotEmpty>
			<isNotEmpty property="LENGTH">
				LENGTH = #LENGTH#,
			</isNotEmpty>
			<isNotEmpty property="WIDTHW">
				WIDTHW = #WIDTHW#,
			</isNotEmpty>
			<isNotEmpty property="HEIGHT">
				HEIGHT = #HEIGHT#,
			</isNotEmpty>
			<isNotEmpty property="CUBICM">
				CUBICM = #CUBICM#,
			</isNotEmpty>
			<isNotEmpty property="MAXCPC">
				MAXCPC = #MAXCPC#,
			</isNotEmpty>
			<isNotEmpty property="MAXQTY">
				MAXQTY = #MAXQTY#,
			</isNotEmpty>
			<isNotEmpty property="MAXWGT">
				MAXWGT = #MAXWGT#,
			</isNotEmpty>
			<isNotEmpty property="MAXLDR">
				MAXLDR = #MAXLDR#,
			</isNotEmpty>
			<isNotEmpty property="MAXSEC">
				MAXSEC = #MAXSEC#,
			</isNotEmpty>
			<isNotEmpty property="MIXSKU">
				MIXSKU = #MIXSKU#,
			</isNotEmpty>
			<isNotEmpty property="MIXLOT">
				MIXLOT = #MIXLOT#,
			</isNotEmpty>
			<isNotEmpty property="RPNCAT">
				RPNCAT = #RPNCAT#,
			</isNotEmpty>
			<isNotEmpty property="INDQTC">
				INDQTC = #INDQTC#,
			</isNotEmpty>
			<isNotEmpty property="QTYCHK">
				QTYCHK = #QTYCHK#,
			</isNotEmpty>
			<isNotEmpty property="NEDSID">
				NEDSID = #NEDSID#,
			</isNotEmpty>
			<isNotEmpty property="INDUPA">
				INDUPA = #INDUPA#,
			</isNotEmpty>
			<isNotEmpty property="INDUPK">
				INDUPK = #INDUPK#,
			</isNotEmpty>
			<isNotEmpty property="AUTLOC">
				AUTLOC = #AUTLOC#,
			</isNotEmpty>
			<isNotEmpty property="INDBZL">
				INDBZL = #INDBZL#,
			</isNotEmpty>
			<isNotEmpty property="INDARC">
				INDARC = #INDARC#
			</isNotEmpty>
	      WHERE 1 = 1
	        AND WAREKY = #WAREKY#
	        AND LOCAKY = #LOCAKY#
	</update>

	<!-- 구성> 지번★ 삭제 -->
	<delete id="LOCMA_DELETE" parameterClass="Map">
		DELETE FROM LOCMA
		WHERE WAREKY = #WAREKY#
		AND LOCAKY = #LOCAKY#
	</delete>

	<!-- SKU> SKU★ 조회 -->
	<select id="SKUMA_LIST" parameterClass="Map" resultClass="DataMap">
	   SELECT A.OWNRKY AS OWNRKY
			, A.SKUKEY AS SKUKEY
			, A.DELMAK AS DELMAK
			, A.DESC01 AS DESC01
			, A.DESC02 AS DESC02
			, A.VENDKY AS VENDKY
			, A.ASKU01 AS ASKU01
			, A.ASKU02 AS ASKU02
			, A.ASKU03 AS ASKU03
			, A.ASKU04 AS ASKU04
			, A.ASKU05 AS ASKU05
			, A.ASKL01 AS ASKL01
			, (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'OERE' AND CMCDVL = A.ASKL01) AS ASKL01M
			, A.ASKL02 AS ASKL02
			, A.ASKL03 AS ASKL03
			, A.ASKL04 AS ASKL04
			, A.ASKL05 AS ASKL05
			, A.EANCOD AS EANCOD
			, A.GTINCD AS GTINCD
			, A.SKUG01 AS SKUG01
			, (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SKUG01' AND CMCDVL = A.SKUG01) AS SKUG01T
			, A.SKUG02 AS SKUG02
			, A.SKUG03 AS SKUG03
			, A.SKUG04 AS SKUG04
			, A.SKUG05 AS SKUG05
			, A.SKUL01 AS SKUL01
			, A.SKUL02 AS SKUL02
			, A.SKUL03 AS SKUL03
			, A.SKUL04 AS SKUL04
			, A.SKUL05 AS SKUL05
			, A.GRSWGT AS GRSWGT
			, A.NETWGT AS NETWGT
			, A.WGTUNT AS WGTUNT
			, A.LENGTH AS LENGTH
			, A.WIDTHW AS WIDTHW
			, A.HEIGHT AS HEIGHT
			, A.CUBICM AS CUBICM
			, A.CAPACT AS CAPACT
			, A.DUOMKY AS DUOMKY
			, A.QTDUOM AS QTDUOM
			, A.ABCANV AS ABCANV
			, A.LOTL01 AS LOTL01
			, A.LOTL02 AS LOTL02
			, A.LOTL03 AS LOTL03
			, A.LOTL04 AS LOTL04
			, A.LOTL05 AS LOTL05
			, A.LOTL06 AS LOTL06
			, A.LOTL07 AS LOTL07
			, A.LOTL08 AS LOTL08
			, A.LOTL09 AS LOTL09
			, A.LOTL10 AS LOTL10
			, A.LOTL11 AS LOTL11
			, A.LOTL12 AS LOTL12
			, A.LOTL13 AS LOTL13
			, A.LOTL14 AS LOTL14
			, A.LOTL15 AS LOTL15
			, A.LOTL16 AS LOTL16
			, A.LOTL17 AS LOTL17
			, A.LOTL18 AS LOTL18
			, A.LOTL19 AS LOTL19
			, A.LOTL20 AS LOTL20
			, A.OUTDMT AS OUTDMT
			, A.RIMDMT AS RIMDMT
			, A.INNDPT AS INNDPT
			, A.SECTWD AS SECTWD
			, A.WEIGHT AS WEIGHT
			, A.LGPRO AS LGPRO
			, A.DLGORT AS DLGORT
			, A.BATMNG AS BATMNG
			, A.CSTDAT AS CSTDAT
			, A.CPSKUG AS CPSKUG
			, A.DESC03 AS DESC03
			, A.QTYMON AS QTYMON
			, A.QTYSTD AS QTYSTD
			, A.QTYCNT AS QTYCNT
			, A.DESC04 AS DESC04
			, A.BUFMNG AS BUFMNG
			, A.QTYSTD AS QTYSTD
			, A.QTYCNT AS QTYCNT
			, B.WAREKY AS WAREKY
			, B.CAPACT AS CAPACT
			, B.MEASKY AS MEASKY
			, B.LOCARV AS LOCARV
			, B.LOCAQC AS LOCAQC
			, B.RCSTKY AS RCSTKY
			, B.PASTKY AS PASTKY
			, B.CAPACR AS CAPACR
			, B.SASTKY AS SASTKY
			, B.ALSTKY AS ALSTKY
			, B.TKFLKY AS TKFLKY
			, B.SPRIKY AS SPRIKY
			, B.IBPROT AS IBPROT
			, B.OBPROT AS OBPROT
			, B.UOMDIN AS UOMDIN
			, B.UOMDOU AS UOMDOU
			, B.UOMDTA AS UOMDTA
			, B.ABCANV AS ABCANV
			, B.INDSLC AS INDSLC
			, B.SLCLAT AS SLCLAT
			, B.SLCTYP AS SLCTYP
			, B.SLCPDI AS SLCPDI
			, B.SLCPDO AS SLCPDO
			, B.DPUTZO AS DPUTZO
			, B.DPUTLO AS DPUTLO
			, B.CPVNDR AS CPVNDR
			, B.CPMEAS AS CPMEAS
			, B.LOCOVR AS LOCOVR
			, B.PLOCOV AS PLOCOV
			, B.TARIKY AS TARIKY
			, B.LOTRKY AS LOTRKY
			, B.EXPDCK AS EXPDCK
			, B.PRODCK AS PRODCK
			, B.OUTDMT AS OUTDMT
			, B.RIMDMT AS RIMDMT
			, B.INNDPT AS INNDPT
			, B.SECTWD AS SECTWD
			, B.WEIGHT AS WEIGHT
			, B.SHPPRT AS SHPPRT
			, B.IFFLAG AS IFFLAG
			, B.CREDAT AS CREDAT
			, B.CRETIM AS CRETIM
			, B.CREUSR AS CREUSR
			, (SELECT TOP 1 NMLAST FROM USRMA D WHERE D.USERID = B.CREUSR GROUP BY NMLAST) AS CUSRNM
			, B.LMODAT AS LMODAT
			, B.LMOTIM AS LMOTIM
			, B.LMOUSR AS LMOUSR
			, (SELECT TOP 1 NMLAST FROM USRMA D WHERE D.USERID = B.LMOUSR GROUP BY NMLAST) AS LUSRNM
			, B.UPDCHK AS UPDCHK
			, A.ABCANV AS ABCANV
			, '' AS ROWSTATUS
		FROM SKUMA A, SKUWC B
		WHERE 1 = 1
		AND A.OWNRKY = (SELECT )
		<isNotEmpty property="WAREKY">
		AND B.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		AND A.OWNRKY = B.OWNRKY
		AND A.SKUKEY = B.SKUKEY
	</select>
	
	<select id="SKUKEYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM SKUMA 
		 WHERE 1 = 1 
           AND SKUKEY = #SKUKEY#
	</select>
	
		<!-- SKU> SKU★ 체크 -->
	<select id="SKUMA_VALIDATION" parameterClass="Map" resultClass="DataMap">
	 	SELECT
		  CASE
		    WHEN MH.MEASKY IS NULL THEN 'IN_M0074' + ' ' + STD.MEASKY
		    WHEN RLA.LOCAKY IS NULL THEN 'IN_M0006' + ' ' + STD.LOCARV 
		    WHEN PH.PASTKY IS NULL THEN 'VALID_M0208' + ' ' + STD.PASTKY 
		    WHEN PLA.LOCAKY IS NULL THEN 'MASTER_M0244' + ' ' + STD.DPUTLO 
		    WHEN AH.ALSTKY IS NULL THEN 'MASTER_M0585' + ' ' + STD.ALSTKY
		    WHEN ZE.ZONEKY IS NULL THEN 'MASTER_M0457' + ' ' + STD.DPUTZO 
		    ELSE 'OK'
		  END AS MSG
		FROM (
		    	$VALIDATION_SQL$ 
		      ) STD 
		    LEFT OUTER JOIN MEASH MH ON MH.MEASKY = STD.MEASKY AND MH.WAREKY = STD.WAREKY
		    LEFT OUTER JOIN LOCMA RLA ON RLA.LOCAKY = STD.LOCARV AND RLA.WAREKY = STD.WAREKY
		    LEFT OUTER JOIN PASTH PH ON PH.PASTKY = STD.PASTKY AND PH.WAREKY = STD.WAREKY
		    LEFT OUTER JOIN LOCMA PLA ON PLA.LOCAKY = STD.DPUTLO AND PLA.WAREKY = STD.WAREKY
		    LEFT OUTER JOIN ALSTH AH ON AH.ALSTKY = STD.ALSTKY AND AH.WAREKY = STD.WAREKY
		    LEFT OUTER JOIN ZONMA ZE ON ZE.ZONEKY = STD.DPUTZO AND ZE.WAREKY = STD.WAREKY
		WHERE 1 = 1
		  AND MH.MEASKY IS NULL
		  OR PH.PASTKY IS NULL
		  OR AH.ALSTKY IS NULL
		  OR (STD.LOCARV != ' ' AND RLA.LOCAKY IS NULL)
		  OR (STD.DPUTLO != ' ' AND PLA.LOCAKY IS NULL)
		  OR (STD.DPUTZO != ' ' AND ZE.ZONEKY IS NULL)
	</select>
	
	<!-- SKU> SKU★  신규 -->
	<insert id="SKUMA_INSERT" parameterClass="Map">
		INSERT INTO SKUMA ( 
		 	  OWNRKY,
			  SKUKEY,
			  DELMAK,
			  DESC01,
			  DESC02,
			  VENDKY,
			  ASKU01,
			  ASKU02,
			  ASKU03,
			  ASKU04,
			  ASKU05,
			  ASKL01,
			  ASKL02,
			  ASKL03,
			  ASKL04,
			  ASKL05,
			  EANCOD,
			  GTINCD,
			  SKUG01,
			  SKUG02,
			  SKUG03,
			  SKUG04,
			  SKUG05,
			  SKUL01,
			  SKUL02,
			  SKUL03,
			  SKUL04,
			  SKUL05,
			  GRSWGT,
			  NETWGT,
			  WGTUNT,
			  LENGTH,
			  WIDTHW,
			  HEIGHT,
			  CUBICM,
			  CAPACT,
			  DUOMKY,
			  QTDUOM,
			  ABCANV,
			  LOTL01,
			  LOTL02,
			  LOTL03,
			  LOTL04,
			  LOTL05,
			  LOTL06,
			  LOTL07,
			  LOTL08,
			  LOTL09,
			  LOTL10,
			  LOTL11,
			  LOTL12,
			  LOTL13,
			  LOTL14,
			  LOTL15,
			  LOTL16,
			  LOTL17,
			  LOTL18,
			  LOTL19,
			  LOTL20,
			  OUTDMT,
			  RIMDMT,
			  INNDPT,
			  SECTWD,
			  WEIGHT,
			  DLGORT,
			  BATMNG,
			  LGPRO,
			  CSTDAT,
			  CPSKUG,
			  DESC03,
			  DESC04,
			  QTYMON,
			  QTYSTD,
			  QTYCNT,
			  BUFMNG,
			  CREDAT,
			  CRETIM,
			  CREUSR,
			  LMODAT,
			  LMOTIM,
			  LMOUSR,
			  INDBZL
		 )VALUES ( 
		 	  ISNULL(#OWNRKY#, ' '),
		      ISNULL(#SKUKEY#, ' '),
		      ISNULL(#DELMAK#, ' '),
		      ISNULL(#DESC01#, ' '),
		      ISNULL(#DESC02#, ' '),
		      ISNULL(#VENDKY#, ' '),
		      ISNULL(#ASKU01#, ' '),
		      ISNULL(#ASKU02#, ' '),
		      ISNULL(#ASKU03#, ' '),
		      ISNULL(#ASKU04#, ' '),
		      ISNULL(#ASKU05#, ' '),
		      ISNULL(#ASKL01#, ' '),
		      ISNULL(#ASKL02#, ' '),
		      ISNULL(#ASKL03#, ' '),
		      ISNULL(#ASKL04#, ' '),
		      ISNULL(#ASKL05#, ' '),
		      ISNULL(#EANCOD#, ' '),
		      ISNULL(#GTINCD#, ' '),
		      ISNULL(#SKUG01#, ' '),
		      ISNULL(#SKUG02#, ' '),
		      ISNULL(#SKUG03#, ' '),
		      ISNULL(#SKUG04#, ' '),
		      ISNULL(#SKUG05#, ' '),
		      ISNULL(#SKUL01#, ' '),
		      ISNULL(#SKUL02#, ' '),
		      ISNULL(#SKUL03#, ' '),
		      ISNULL(#SKUL04#, ' '),
		      ISNULL(#SKUL05#, ' '),
		      
		      CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #GRSWGT# = ' ' THEN '0'
							   WHEN #GRSWGT# = '' THEN '0'
							   WHEN #GRSWGT# IS NULL THEN '0'
							   ELSE #GRSWGT# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #NETWGT# = ' ' THEN '0'
							   WHEN #NETWGT# = '' THEN '0'
							   WHEN #NETWGT# IS NULL THEN '0'
							   ELSE #NETWGT# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #WGTUNT# = ' ' THEN '0'
							   WHEN #WGTUNT# = '' THEN '0'
							   WHEN #WGTUNT# IS NULL THEN '0'
							   ELSE #WGTUNT# END)),				   
		      CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LENGTH# = ' ' THEN '0'
							   WHEN #LENGTH# = '' THEN '0'
							   WHEN #LENGTH# IS NULL THEN '0'
							   ELSE #LENGTH# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #WIDTHW# = ' ' THEN '0'
							   WHEN #WIDTHW# = '' THEN '0'
							   WHEN #WIDTHW# IS NULL THEN '0'
							   ELSE #WIDTHW# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #HEIGHT# = ' ' THEN '0'
							   WHEN #HEIGHT# = '' THEN '0'
							   WHEN #HEIGHT# IS NULL THEN '0'
							   ELSE #HEIGHT# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #CUBICM# = ' ' THEN '0'
							   WHEN #CUBICM# = '' THEN '0'
							   WHEN #CUBICM# IS NULL THEN '0'
							   ELSE #CUBICM# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #CAPACT# = ' ' THEN '0'
							   WHEN #CAPACT# = '' THEN '0'
							   WHEN #CAPACT# IS NULL THEN '0'
							   ELSE #CAPACT# END)),
		      ISNULL(#DUOMKY#, ' '),
		      CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTDUOM# = ' ' THEN '0'
							   WHEN #QTDUOM# = '' THEN '0'
							   WHEN #QTDUOM# IS NULL THEN '0'
							   ELSE #QTDUOM# END)),
		      ISNULL(#ABCANV#, ' '),
		      ISNULL(#LOTL01#, ' '),
		      ISNULL(#LOTL02#, ' '),
		      ISNULL(#LOTL03#, ' '),
		      ISNULL(#LOTL04#, ' '),
		      ISNULL(#LOTL05#, ' '),
		      ISNULL(#LOTL06#, ' '),
		      ISNULL(#LOTL07#, ' '),
		      ISNULL(#LOTL08#, ' '),
		      ISNULL(#LOTL09#, ' '),
		      ISNULL(#LOTL10#, ' '),
		      ISNULL(#LOTL11#, ' '),
		      ISNULL(#LOTL12#, ' '),
		      ISNULL(#LOTL13#, ' '),
		      ISNULL(#LOTL14#, ' '),
		      ISNULL(#LOTL15#, ' '),
		      ISNULL(#LOTL16#, ' '),
		      ISNULL(#LOTL17#, ' '),
		      ISNULL(#LOTL18#, ' '),
		      ISNULL(#LOTL19#, ' '),
		      ISNULL(#LOTL20#, ' '),
		      CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #OUTDMT# = ' ' THEN '0'
							   WHEN #OUTDMT# = '' THEN '0'
							   WHEN #OUTDMT# IS NULL THEN '0'
							   ELSE #OUTDMT# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #RIMDMT# = ' ' THEN '0'
							   WHEN #RIMDMT# = '' THEN '0'
							   WHEN #RIMDMT# IS NULL THEN '0'
							   ELSE #RIMDMT# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #INNDPT# = ' ' THEN '0'
							   WHEN #INNDPT# = '' THEN '0'
							   WHEN #INNDPT# IS NULL THEN '0'
							   ELSE #INNDPT# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #SECTWD# = ' ' THEN '0'
							   WHEN #SECTWD# = '' THEN '0'
							   WHEN #SECTWD# IS NULL THEN '0'
							   ELSE #SECTWD# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #WEIGHT# = ' ' THEN '0'
							   WHEN #WEIGHT# = '' THEN '0'
							   WHEN #WEIGHT# IS NULL THEN '0'
							   ELSE #WEIGHT# END)),
		      ISNULL(#DLGORT#, ' '),
		      ISNULL(#BATMNG#, ' '),
		      ISNULL(#LGPRO#, ' '),
		      ISNULL(#CSTDAT#, ' '),
		      ISNULL(#CPSKUG#, ' '),
		      ISNULL(#DESC03#, ' '),
		      ISNULL(#DESC04#, ' '),
		      
		      CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTYMON# = ' ' THEN '0'
							   WHEN #QTYMON# = '' THEN '0'
							   WHEN #QTYMON# IS NULL THEN '0'
							   ELSE #QTYMON# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTYSTD# = ' ' THEN '0'
							   WHEN #QTYSTD# = '' THEN '0'
							   WHEN #QTYSTD# IS NULL THEN '0'
							   ELSE #QTYSTD# END)),
			  CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTYCNT# = ' ' THEN '0'
							   WHEN #QTYCNT# = '' THEN '0'
							   WHEN #QTYCNT# IS NULL THEN '0'
							   ELSE #QTYCNT# END)),
		      ISNULL(#BUFMNG#, ' '),
		      CONVERT(VARCHAR,GETDATE(),112),
			  REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		      #SES_USER_ID#,
		      CONVERT(VARCHAR,GETDATE(),112),
			  REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		      #SES_USER_ID#,
		      ISNULL(#INDBZL#, ' ') )
	</insert>
	
		<!-- SKU> SKU★  신규 -->
	<insert id="SKUWC_INSERT" parameterClass="Map">
		INSERT INTO SKUWC ( 
			  WAREKY,
			  OWNRKY,
			  SKUKEY,
			  CAPACT,
			  MEASKY,
			  LOCARV,
			  LOCAQC,
			  RCSTKY,
			  PASTKY,
			  CAPACR,
			  SASTKY,
			  ALSTKY,
			  TKFLKY,
			  SPRIKY,
			  IBPROT,
			  OBPROT,
			  UOMDIN,
			  UOMDOU,
			  UOMDTA,
			  ABCANV,
			  INDSLC,
			  SLCLAT,
			  SLCTYP,
			  SLCPDI,
			  SLCPDO,
			  DPUTZO,
			  DPUTLO,
			  CPVNDR,
			  CPMEAS,
			  LOCOVR,
			  PLOCOV,
			  TARIKY,
			  LOTRKY,
			  EXPDCK,
			  PRODCK,
			  OUTDMT,
			  RIMDMT,
			  INNDPT,
			  SECTWD,
			  WEIGHT,
			  SHPPRT,
			  IFFLAG,
			  CREDAT,
			  CRETIM,
			  CREUSR,
			  LMODAT,
			  LMOTIM,
			  LMOUSR,
			  INDBZL,
			  INDARC,
			  UPDCHK
		)VALUES ( 
		 	  ISNULL(#WAREKY#, ' '),
		      ISNULL(#OWNRKY#, ' '),
		      ISNULL(#SKUKEY#, ' '),
		      CONVERT(NUMERIC(20,3), 
						(CASE WHEN #CAPACT# = ' ' THEN '0'
						  	  WHEN #CAPACT# = '' THEN '0'
						  	  WHEN #CAPACT# IS NULL THEN '0'
						  	  ELSE #CAPACT# END)),
		      ISNULL(#MEASKY#, ' '),
		      ISNULL(#LOCARV#, ' '),
		      ISNULL(#LOCAQC#, ' '),
		      ISNULL(#RCSTKY#, ' '),
		      ISNULL(#PASTKY#, ' '),
		      ISNULL(#CAPACR#, ' '),
		      ISNULL(#SASTKY#, ' '),
		      ISNULL(#ALSTKY#, ' '),
		      ISNULL(#TKFLKY#, ' '),
		      ISNULL(#SPRIKY#, ' '),
		      ISNULL(#IBPROT#, ' '),
		      ISNULL(#OBPROT#, ' '),
		      ISNULL(#UOMDIN#, ' '),
		      ISNULL(#UOMDOU#, ' '),
		      ISNULL(#UOMDTA#, ' '),
		      ISNULL(#ABCANV#, ' '),
		      ISNULL(#INDSLC#, ' '),
		      ISNULL(#SLCLAT#, ' '),
		      ISNULL(#SLCTYP#, ' '),
		      CONVERT(NUMERIC(20,3), 
						(CASE WHEN #SLCPDI# = ' ' THEN '0'
						  	  WHEN #SLCPDI# = '' THEN '0'
						  	  WHEN #SLCPDI# IS NULL THEN '0'
						  	  ELSE #SLCPDI# END)),
			  CONVERT(NUMERIC(20,3), 
						(CASE WHEN #SLCPDO# = ' ' THEN '0'
						  	  WHEN #SLCPDO# = '' THEN '0'
						  	  WHEN #SLCPDO# IS NULL THEN '0'
						  	  ELSE #SLCPDO# END)),
		      ISNULL(#DPUTZO#, ' '),
		      ISNULL(#DPUTLO#, ' '),
		      ISNULL(#CPVNDR#, ' '),
		      ISNULL(#CPMEAS#, ' '),
		      ISNULL(#LOCOVR#, ' '),
		      ISNULL(#PLOCOV#, ' '),
		      ISNULL(#TARIKY#, ' '),
		      ISNULL(#LOTRKY#, ' '),
		      ISNULL(#EXPDCK#, ' '),
		      ISNULL(#PRODCK#, ' '),
		      
		      CONVERT(NUMERIC(20,3), 
						(CASE WHEN #OUTDMT# = ' ' THEN '0'
						  	  WHEN #OUTDMT# = '' THEN '0'
						  	  WHEN #OUTDMT# IS NULL THEN '0'
						  	  ELSE #OUTDMT# END)),
			  CONVERT(NUMERIC(20,3), 
						(CASE WHEN #RIMDMT# = ' ' THEN '0'
						  	  WHEN #RIMDMT# = '' THEN '0'
						  	  WHEN #RIMDMT# IS NULL THEN '0'
						  	  ELSE #RIMDMT# END)),
			  CONVERT(NUMERIC(20,3), 
						(CASE WHEN #INNDPT# = ' ' THEN '0'
						  	  WHEN #INNDPT# = '' THEN '0'
						  	  WHEN #INNDPT# IS NULL THEN '0'
						  	  ELSE #INNDPT# END)),
			  CONVERT(NUMERIC(20,3), 
						(CASE WHEN #SECTWD# = ' ' THEN '0'
						  	  WHEN #SECTWD# = '' THEN '0'
						  	  WHEN #SECTWD# IS NULL THEN '0'
						  	  ELSE #SECTWD# END)),
			  CONVERT(NUMERIC(20,3), 
						(CASE WHEN #WEIGHT# = ' ' THEN '0'
						  	  WHEN #WEIGHT# = '' THEN '0'
						  	  WHEN #WEIGHT# IS NULL THEN '0'
						  	  ELSE #WEIGHT# END)),
		      ISNULL(#SHPPRT#, ' '),
		      ISNULL(#IFFLAG#, ' '),
		      CONVERT(CHAR(10),GETDATE(),112),
		      REPLACE(CONVERT(CHAR(10),GETDATE(),24),':',''),
		      #SES_USER_ID#,
		      CONVERT(CHAR(10),GETDATE(),112),
		      REPLACE(CONVERT(CHAR(10),GETDATE(),24),':',''),
		      #SES_USER_ID#,
		      ISNULL(#INDBZL#, ' '),
		      ISNULL(#INDARC#, ' '),
		      CONVERT(NUMERIC(20,3), 
						(CASE WHEN #UPDCHK# = ' ' THEN '0'
						  	  WHEN #UPDCHK# = '' THEN '0'
						  	  WHEN #UPDCHK# IS NULL THEN '0'
						  	  ELSE #UPDCHK# END))
	</insert>
	
<!-- SKU> SKU★ 수정 -->
<update id="SKUMA_UPDATE" parameterClass="Map">
	 UPDATE SKUMA SET 
		    LMODAT = CONVERT(VARCHAR,GETDATE(),112),
	        LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	        LMOUSR = #SES_USER_ID# ,
	    <isNotEmpty property="OWNRKY">
			OWNRKY = #OWNRKY#,
		</isNotEmpty>
		<isNotEmpty property="SKUKEY">
			SKUKEY = #SKUKEY#,
		</isNotEmpty>
		<isNotEmpty property="DELMAK">
			DELMAK = #DELMAK#,
		</isNotEmpty>
		<isNotEmpty property="DESC01">
			DESC01 = #DESC01#,
		</isNotEmpty>
		<isNotEmpty property="SKUG01">
			SKUG01 = #SKUG01#,
		</isNotEmpty>
		<isNotEmpty property="LENGTH">
			LENGTH = #LENGTH#,
		</isNotEmpty>
		<isNotEmpty property="WIDTHW">
			WIDTHW = #WIDTHW#,
		</isNotEmpty>
		<isNotEmpty property="HEIGHT">
			HEIGHT = #HEIGHT#,
		</isNotEmpty>
		<isNotEmpty property="CUBICM">
			CUBICM = #CUBICM#,
		</isNotEmpty>
		<isNotEmpty property="CAPACT">
			CAPACT = #CAPACT#,
		</isNotEmpty>
		<isNotEmpty property="DUOMKY">
			DUOMKY = #DUOMKY#,
		</isNotEmpty>
		<isNotEmpty property="QTDUOM">
			QTDUOM = #QTDUOM#,
		</isNotEmpty>
		<isNotEmpty property="ABCANV">
			ABCANV = #ABCANV#,
		</isNotEmpty>
		<isNotEmpty property="LOTL08">
			LOTL08 = #LOTL08#,
		</isNotEmpty>
		<isNotEmpty property="ECTWD">
			SECTWD = #ECTWD#,
		</isNotEmpty>
		<isNotEmpty property="WEIGHT">
			WEIGHT = #WEIGHT#
		</isNotEmpty>
	WHERE 1 = 1
	AND OWNRKY = #OWNRKY# 
	AND SKUKEY = #SKUKEY# 
	</update>
	
	<!-- SKU> SKU★22 수정 -->
<update id="SKUWC_UPDATE" parameterClass="Map">
	 UPDATE SKUWC SET 
	<isNotEmpty property="WAREKY"> 
		 WAREKY = #WAREKY# ,
	</isNotEmpty> 
	<isNotEmpty property="OWNRKY"> 
		 OWNRKY = #OWNRKY# ,
	</isNotEmpty> 
	<isNotEmpty property="SKUKEY"> 
		 SKUKEY = #SKUKEY# ,
	</isNotEmpty> 
	<isNotEmpty property="CAPACT"> 
		 CAPACT = #CAPACT# ,
	</isNotEmpty> 
	<isNotEmpty property="MEASKY"> 
		 MEASKY = #MEASKY# ,
	</isNotEmpty> 
	<isNotEmpty property="LOCARV"> 
		 LOCARV = #LOCARV# ,
	</isNotEmpty> 
	<isNotEmpty property="LOCAQC"> 
		 LOCAQC = #LOCAQC# ,
	</isNotEmpty> 
	<isNotEmpty property="RCSTKY"> 
		 RCSTKY = #RCSTKY# ,
	</isNotEmpty> 
	<isNotEmpty property="PASTKY"> 
		 PASTKY = #PASTKY# ,
	</isNotEmpty> 
	<isNotEmpty property="CAPACR"> 
		 CAPACR = #CAPACR# ,
	</isNotEmpty> 
	<isNotEmpty property="SASTKY"> 
		 SASTKY = #SASTKY# ,
	</isNotEmpty> 
	<isNotEmpty property="ALSTKY"> 
		 ALSTKY = #ALSTKY# ,
	</isNotEmpty> 
	<isNotEmpty property="TKFLKY"> 
		 TKFLKY = #TKFLKY# ,
	</isNotEmpty> 
	<isNotEmpty property="SPRIKY"> 
		 SPRIKY = #SPRIKY# ,
	</isNotEmpty> 
	<isNotEmpty property="IBPROT"> 
		 IBPROT = #IBPROT# ,
	</isNotEmpty> 
	<isNotEmpty property="OBPROT"> 
		 OBPROT = #OBPROT# ,
	</isNotEmpty> 
	<isNotEmpty property="UOMDIN"> 
		 UOMDIN = #UOMDIN# ,
	</isNotEmpty> 
	<isNotEmpty property="UOMDOU"> 
		 UOMDOU = #UOMDOU# ,
	</isNotEmpty> 
	<isNotEmpty property="UOMDTA"> 
		 UOMDTA = #UOMDTA# ,
	</isNotEmpty> 
	<isNotEmpty property="ABCANV"> 
		 ABCANV = #ABCANV# ,
	</isNotEmpty> 
	<isNotEmpty property="INDSLC"> 
		 INDSLC = #INDSLC# ,
	</isNotEmpty> 
	<isNotEmpty property="SLCLAT"> 
		 SLCLAT = #SLCLAT# ,
	</isNotEmpty> 
	<isNotEmpty property="SLCTYP"> 
		 SLCTYP = #SLCTYP# ,
	</isNotEmpty> 
	<isNotEmpty property="SLCPDI"> 
		 SLCPDI = #SLCPDI# ,
	</isNotEmpty> 
	<isNotEmpty property="SLCPDO"> 
		 SLCPDO = #SLCPDO# ,
	</isNotEmpty> 
	<isNotEmpty property="DPUTZO"> 
		 DPUTZO = #DPUTZO# ,
	</isNotEmpty> 
	<isNotEmpty property="DPUTLO"> 
		 DPUTLO = #DPUTLO# ,
	</isNotEmpty> 
	<isNotEmpty property="CPVNDR"> 
		 CPVNDR = #CPVNDR# ,
	</isNotEmpty> 
	<isNotEmpty property="CPMEAS"> 
		 CPMEAS = #CPMEAS# ,
	</isNotEmpty> 
	<isNotEmpty property="LOCOVR"> 
		 LOCOVR = #LOCOVR# ,
	</isNotEmpty> 
	<isNotEmpty property="PLOCOV"> 
		 PLOCOV = #PLOCOV# ,
	</isNotEmpty> 
	<isNotEmpty property="TARIKY"> 
		 TARIKY = #TARIKY# ,
	</isNotEmpty> 
	<isNotEmpty property="LOTRKY"> 
		 LOTRKY = #LOTRKY# ,
	</isNotEmpty> 
	<isNotEmpty property="EXPDCK"> 
		 EXPDCK = #EXPDCK# ,
	</isNotEmpty> 
	<isNotEmpty property="PRODCK"> 
		 PRODCK = #PRODCK# ,
	</isNotEmpty> 
	<isNotEmpty property="OUTDMT"> 
		 OUTDMT = #OUTDMT# ,
	</isNotEmpty> 
	<isNotEmpty property="RIMDMT"> 
		 RIMDMT = #RIMDMT# ,
	</isNotEmpty> 
	<isNotEmpty property="INNDPT"> 
		 INNDPT = #INNDPT# ,
	</isNotEmpty> 
	<isNotEmpty property="SECTWD"> 
		 SECTWD = #SECTWD# ,
	</isNotEmpty> 
	<isNotEmpty property="WEIGHT"> 
		 WEIGHT = #WEIGHT# ,
	</isNotEmpty> 
	<isNotEmpty property="SHPPRT"> 
		 SHPPRT = #SHPPRT# ,
	</isNotEmpty> 
	<isNotEmpty property="IFFLAG"> 
		 IFFLAG = #IFFLAG# ,
	</isNotEmpty> 
		LMODAT = CONVERT(VARCHAR,GETDATE(),112),
	    LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	    LMOUSR = #SES_USER_ID# 
	 WHERE WAREKY = #WAREKY# 
	 AND OWNRKY = #OWNRKY# 
	 AND SKUKEY = #SKUKEY# 
	</update>
	
	<!-- SKU> SKU★22  삭제 -->
	<delete id="SKUWC_DELETE" parameterClass="Map">
		 DELETE FROM SKUWC
 		 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND OWNRKY = #OWNRKY# 
		 AND SKUKEY = #SKUKEY# 

	</delete>
	
	<!-- SKU> SKU★  삭제 -->
	<delete id="SKUMA_DELETE" parameterClass="Map">
		 DELETE FROM SKUMA
 		 WHERE 1 = 1
		 AND OWNRKY = #OWNRKY# 
		 AND SKUKEY = #SKUKEY# 

	</delete>

	
	<!-- SKU> 단위구성 조회 상단 -->
	<select id="MEASH_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY
		,A.MEASKY
		,A.SHORTX
		,A.CREDAT
		,A.CRETIM
		,A.CREUSR
		,A.LMODAT
		,A.LMOTIM
		,A.LMOUSR
		,A.INDBZL
		,A.INDARC
		,A.UPDCHK
		,A.WAREKY + A.MEASKY AS KEY
		, ' ' AS STATUS
		FROM MEASH A
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND A.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		ORDER BY A.MEASKY
	</select>
	
	<!-- SKU> head 재조회 상단 -->
	<select id="MEASHHEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY
		,A.MEASKY
		,A.SHORTX
		,A.CREDAT
		,A.CRETIM
		,A.CREUSR
		,A.LMODAT
		,A.LMOTIM
		,A.LMOUSR
		,A.INDBZL
		,A.INDARC
		,A.UPDCHK
		,A.WAREKY + A.MEASKY AS KEY
		, ' ' AS STATUS
		FROM MEASH A
		WHERE 1 = 1
		AND WAREKY = #WAREKY# 
		ORDER BY A.MEASKY
	</select>

	<!-- SKU> 단위구성 조회 하단 -->
	<select id="MEASHSub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  B.WAREKY AS WAREKY
		       ,B.MEASKY AS MEASKY
		       ,B.ITEMNO AS ITEMNO
		       ,B.UOMKEY AS UOMKEY
		       ,B.QTPUOM AS QTPUOM
		       ,B.INDDFU AS INDDFU
		       ,B.DISREC AS DISREC
		       ,B.DISSHP AS DISSHP
		       ,B.DISTAS AS DISTAS
		       ,B.UPDCHK AS UPDCHK
		       ,B.WAREKY + B.MEASKY AS KEY
		       , ' ' AS STATUS
		FROM  MEASH A
		      INNER JOIN MEASI B
		              ON A.WAREKY = B.WAREKY
		             AND A.MEASKY = B.MEASKY
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND A.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="MEASKY">
			AND A.MEASKY = #MEASKY#
		</isNotEmpty>
		ORDER BY B.MEASKY
	</select>
	
	<!-- SKU> 단위구성  상단 신규 -->
	<insert id="MEASH_INSERT" parameterClass="Map">
		INSERT INTO MEASH (WAREKY,
                   MEASKY,
                   SHORTX,
                   CREDAT,
                   CRETIM,
                   CREUSR,
                   LMODAT,
                   LMOTIM,
                   LMOUSR)
	     VALUES (ISNULL(#WAREKY#, ' '),
	             ISNULL(#MEASKY#, ' '),
	             ISNULL(#SHORTX#, ' '),
	             CONVERT(VARCHAR,GETDATE(),112),
	             REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#,
	             CONVERT(VARCHAR,GETDATE(),112),
	             REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#)
	</insert>

	
	<!-- SKU> 단위구성  하단 신규 -->
	<insert id="MEASHSub_INSERT" parameterClass="Map">
		INSERT INTO MEASI (WAREKY,
                   MEASKY,
                   ITEMNO,
                   UOMKEY,
                   QTPUOM,
                   INDDFU,
                   DISREC,
                   DISSHP,
                   DISTAS,
                   LENGTH,
                   WIDTHW,
                   HEIGHT,
                   CUBICM,
                   CREDAT,
                   CRETIM,
                   CREUSR,
                   LMODAT,
                   LMOTIM,
                   LMOUSR)
	     VALUES (ISNULL(#WAREKY#, ' '),
	             ISNULL(#MEASKY#, ' '),
	             ISNULL(#ITEMNO#, ' '),
	             ISNULL(#UOMKEY#, ' '),
	             
	             CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTPUOM# = ' ' THEN '0'
							   WHEN #QTPUOM# = '' THEN '0'
							   WHEN #QTPUOM# IS NULL THEN '0'
							   ELSE #QTPUOM# END)),
	             ISNULL(#INDDFU#, ' '),
	             ISNULL(#DISREC#, ' '),
	             ISNULL(#DISSHP#, ' '),
	             ISNULL(#DISTAS#, ' '),
	             CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LENGTH# = ' ' THEN '0'
							   WHEN #LENGTH# = '' THEN '0'
							   WHEN #LENGTH# IS NULL THEN '0'
							   ELSE #LENGTH# END)),
				 CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #WIDTHW# = ' ' THEN '0'
							   WHEN #WIDTHW# = '' THEN '0'
							   WHEN #WIDTHW# IS NULL THEN '0'
							   ELSE #WIDTHW# END)),			   
	             CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #HEIGHT# = ' ' THEN '0'
							   WHEN #HEIGHT# = '' THEN '0'
							   WHEN #HEIGHT# IS NULL THEN '0'
							   ELSE #HEIGHT# END)),
				 CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #CUBICM# = ' ' THEN '0'
							   WHEN #CUBICM# = '' THEN '0'
							   WHEN #CUBICM# IS NULL THEN '0'
							   ELSE #CUBICM# END)),
	             CONVERT(VARCHAR,GETDATE(),112),
				 REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#,
	             CONVERT(VARCHAR,GETDATE(),112),
				 REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#)
	</insert>
		
	<!-- SKU> 단위구성  상단 삭제 -->
	<delete id="MEASH_DELETE" parameterClass="Map">
		 DELETE FROM MEASH
	 	 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND MEASKY = #MEASKY#
	</delete>
	
	<!-- SKU> 단위구성  하단 삭제 -->
	<delete id="MEASHSub_DELETE" parameterClass="Map">
		 DELETE FROM MEASI
 		 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND MEASKY = #MEASKY#
		 AND ITEMNO = #ITEMNO#
	</delete>
	
	<!-- SKU> 단위구성 헤드 삭제 -->
	<delete id="MEASHSubAll_DELETE" parameterClass="Map">
		 DELETE FROM MEASI
 		 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND MEASKY = #MEASKY#
	</delete>
	
	<!-- SKU> 단위구성 조회 상단 수정 -->
	<update id="MEASH_UPDATE" parameterClass="Map">
		 UPDATE MEASH SET 
	<isNotEmpty property="SHORTX"> 
		 SHORTX = #SHORTX# ,
	</isNotEmpty> 
	<isNotEmpty property="INDBZL"> 
		 INDBZL = #INDBZL# ,
	</isNotEmpty> 
	<isNotEmpty property="INDARC"> 
		 INDARC = #INDARC# ,
	</isNotEmpty> 
	<isNotEmpty property="UPDCHK"> 
		 UPDCHK = #UPDCHK# ,
	</isNotEmpty> 
	LMODAT = CONVERT(VARCHAR,GETDATE(),112),
	LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	LMOUSR = #SES_USER_ID#
 	 WHERE 1 = 1
	 AND WAREKY = #WAREKY# 
	 AND MEASKY = #MEASKY# 
		</update>
		
	<!-- SKU> 단위구성 조회 하단 수정 -->
	<update id="MEASHSub_UPDATE" parameterClass="Map">
		UPDATE MEASI SET 
		<isNotEmpty property="QTPUOM"> 
			 QTPUOM = #QTPUOM# ,
		</isNotEmpty> 
		<isNotEmpty property="INDDFU"> 
			 INDDFU = #INDDFU# ,
		</isNotEmpty> 
		<isNotEmpty property="DISREC"> 
			 DISREC = #DISREC# ,
		</isNotEmpty> 
		<isNotEmpty property="DISSHP"> 
			 DISSHP = #DISSHP# ,
		</isNotEmpty> 
		<isNotEmpty property="DISTAS"> 
			 DISTAS = #DISTAS# ,
		</isNotEmpty> 
		<isNotEmpty property="LENGTH"> 
			 LENGTH = #LENGTH# ,
		</isNotEmpty> 
		<isNotEmpty property="WIDTHW"> 
			 WIDTHW = #WIDTHW# ,
		</isNotEmpty> 
		<isNotEmpty property="HEIGHT"> 
			 HEIGHT = #HEIGHT# ,
		</isNotEmpty> 
		<isNotEmpty property="CUBICM"> 
			 CUBICM = #CUBICM# ,
		</isNotEmpty> 
		<isNotEmpty property="INDBZL"> 
			 INDBZL = #INDBZL# ,
		</isNotEmpty> 
		<isNotEmpty property="INDARC"> 
			 INDARC = #INDARC# ,
		</isNotEmpty> 
		<isNotEmpty property="UPDCHK"> 
			 UPDCHK = #UPDCHK#, 
		</isNotEmpty> 
		LMODAT = CONVERT(VARCHAR,GETDATE(),112),
		LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		LMOUSR = #SES_USER_ID#
 	 WHERE 1 = 1
	 AND WAREKY = #WAREKY# 
	 AND MEASKY = #MEASKY# 
	 AND ITEMNO = #ITEMNO#
		</update>
		
		

	<!-- SKU> SET/BOM 상단 조회 상단 -->
	<select id="PAKMA_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY + A.PACKID AS KEY,
		A.WAREKY ,
		A.PACKID ,
		A.SKUKEY ,
		ISNULL(A.DESC01,' ') AS SHORTX ,
		A.PAKQTY AS PAKQTY ,
		' ' AS STATUS
		FROM PAKMA A
		LEFT OUTER JOIN SKUMA B
		ON B.OWNRKY = (SELECT TOP 1 ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY# GROUP BY ADDR05)
		AND B.SKUKEY = A.PACKID
		WHERE 1 = 1
		AND A.WAREKY = #WAREKY#
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
		<!-- SKU> SET/BOM 하단 조회  -->
	<select id="PAKMAsub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY + A.PACKID AS KEY,
		       A.WAREKY AS WAREKY,
		       A.PACKID AS PACKID,
		       ISNULL(SM.DESC01,' ') AS SHORTX,
		       A.PAKQTY AS PAKQTY,
		       A.SKUKEY AS SKUKEY,
		       ISNULL(SM2.DESC01,' ') AS DESC01,
		       A.UOMQTY AS UOMQTY,
		       A.SORTSQ AS SORTSQ,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       CU.NMLAST AS CUSRNM,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       LU.NMLAST AS LUSRNM, 
		       ' ' AS STATUS
		  FROM PAKMA A
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = (SELECT TOP 1 ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY# GROUP BY ADDR05)
		              AND SM.SKUKEY = A.PACKID
		       LEFT OUTER JOIN SKUMA SM2
		               ON SM2.OWNRKY = (SELECT TOP 1 ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY# GROUP BY ADDR05)
		              AND SM2.SKUKEY = A.SKUKEY
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = A.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = A.CREUSR
		 WHERE  1 = 1
		 AND A.WAREKY = #WAREKY#
		<isNotEmpty property="PACKID">
			AND A.PACKID = #PACKID#
		</isNotEmpty>
		ORDER BY SORTSQ
	</select>
	
		<!-- SKU> SET/BOM 하단 수정 -->
	<update id="PAKMA_UPDATE" parameterClass="Map">
			UPDATE PAKMA SET
		<isNotEmpty property="UOMQTY"> 
	 		UOMQTY = #UOMQTY# ,
		</isNotEmpty> 
			LMODAT = CONVERT(VARCHAR,GETDATE(),112),
			LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			LMOUSR = #SES_USER_ID#
			WHERE 1 = 1
			 AND WAREKY = #WAREKY# 
			 AND PACKID = #PACKID# 
			 AND SKUKEY = #SKUKEY#
	</update>
	
	<!-- SKU> SET/BOM 상단 신규 -->
	<insert id="PAKMA_INSERT" parameterClass="Map">
		    INSERT INTO PAKMA (
		    	   WAREKY,
                   PACKID,
                   SKUKEY,
                   SORTSQ,
                   DESC01,
                   SHORTX,
                   UOMQTY,
                   PAKQTY,
                   CREDAT,
                   CRETIM,
                   CREUSR,
                   LMODAT,
                   LMOTIM,
                   LMOUSR)
	     VALUES (#WAREKY#,
	             ISNULL(#PACKID#, ' '),
	             ISNULL(#SKUKEY#, ' '),
	             (SELECT LPAD (MAX (SORTSQ) + 1, 1, '0')
	                FROM PAKMA
	               WHERE WAREKY = #WAREKY# AND PACKID = #PACKID#),
	             ISNULL(#DESC01#, ' '),
	             ISNULL(#SETSKUNM#, ' '),
	             
	             CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #UOMQTY# = ' ' THEN '0'
							   WHEN #UOMQTY# = '' THEN '0'
							   WHEN #UOMQTY# IS NULL THEN '0'
							   ELSE #UOMQTY# END)),
				 CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #PAKQTY# = ' ' THEN '0'
							   WHEN #PAKQTY# = '' THEN '0'
							   WHEN #PAKQTY# IS NULL THEN '0'
							   ELSE #PAKQTY# END)),
	             CONVERT(VARCHAR,GETDATE(),112),
	             REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#,
	             CONVERT(VARCHAR,GETDATE(),112),
	             REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	             #SES_USER_ID#)
	</insert>
	
		<!-- SKU> SET/BOM SKUKEY 유무 확인 -->
	<select id="PACKIDval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM V_SKU_INFO
		 WHERE WAREKY = 'WCD1'
		   AND OWNRKY = 'CSHA'
		   AND SKUKEY = #PACKID#
	</select>
	
		<!-- SKU> SET/BOM SKUKEY 유무 확인 -->
	<select id="SKUKEY2val_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM SKUMA
		   WHERE SKUKEY = #SKUKEY#
	</select>
	
	<select id="PAKMA_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT
		       CASE
		         WHEN A.SKUKEY IS NULL THEN 'MASTER_M0669' + ' ' + STD.PACKID
		         WHEN A.SKUKEY IS NULL THEN 'MASTER_M0669' + ' ' + STD.SKUKEY
		         ELSE 'OK'
		       END AS MSG
		FROM   ( $VALIDATION_SQL$ ) STD 
		        LEFT OUTER JOIN V_SKU_INFO A ON A.SKUKEY = STD.PACKID AND A.SKUKEY = STD.SKUKEY 
		WHERE  ( 
		        A.SKUKEY IS NULL
		        ) 
	</select>
	
	<!-- SKU> SET/BOM  상단 삭제 -->
	<delete id="PAKMA_DELETE" parameterClass="Map">
		 DELETE FROM PAKMA
	 	 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND PACKID = #PACKID#
	</delete>
	
	<!-- SKU> SET/BOM  하단 삭제 -->
	<delete id="PAKMAsub_DELETE" parameterClass="Map">
		 DELETE FROM PAKMA
 		 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND PACKID = #PACKID#
		 AND SKUKEY = #SKUKEY#
	</delete>
	
	<!-- SKU> SET/BOM  SET재품명 가져오기-->
	<select id="SET_MAP" parameterClass="Map" resultClass="DataMap">
		 SELECT TOP 1 DESC01 AS SHORTX
		  FROM V_SKU_INFO
		 WHERE 1 = 1
		 <isNotEmpty property="WAREKY">
		   AND WAREKY = 'WCD1'
		 </isNotEmpty>
		 <isNotEmpty property="OWNRKY">
		   AND OWNRKY = 'CSHA'
		 </isNotEmpty>
		 <isNotEmpty property="PACKID"> 
		   AND SKUKEY = #PACKID#
		   </isNotEmpty>
	</select>

	<!-- SKU> SET/BOM  BOM재품명 가져오기-->
	<select id="BOM_MAP" parameterClass="Map" resultClass="DataMap">
		 SELECT TOP 1 DESC01 
           FROM SKUMA 
           WHERE 1 = 1
           AND SKUKEY = #SKUKEY#
	</select>
	
	<!-- SKU> LOT/Information 조회 상단 -->
	<select id="LOTAT_LIST" parameterClass="Map" resultClass="DataMap">
		 SELECT LOTNUM
		       ,WAREKY
		       ,OWNRKY
		       ,SKUKEY
		       ,LOTA01
		       ,LOTA02
		       ,LOTA03
		       ,LOTA04
		       ,LOTA05
		       ,LOTA06
		       ,LOTA07
		       ,LOTA08
		       ,LOTA09
		       ,LOTA10
		       ,LOTA11
		       ,LOTA12
		       ,LOTA13
		       ,LOTA14
		       ,LOTA15
		       ,LOTA16
		       ,LOTA17
		       ,LOTA18
		       ,LOTA19
		       ,LOTA20
		       ,CREDAT
		       ,CRETIM
		       ,CREUSR
		       ,(SELECT NMLAST FROM USRMA WHERE USRMA.USERID = LOTAT.CREUSR AND ROWNUM = 1) AS CUSRNM
		       ,LMODAT LMODAT
		       ,LMOTIM LMOTIM
		       ,LMOUSR LMOUSR
		       ,(SELECT NMLAST FROM USRMA WHERE USRMA.USERID = LOTAT.LMOUSR AND ROWNUM = 1) AS LUSRNM
		       ,INDBZL INDBZL
		       ,INDARC INDARC
		       ,UPDCHK UPDCHK
		   FROM LOTAT
		  WHERE 1 = 1
		  AND OWNRKY = 'CSHA' 
		<isNotEmpty property="WAREKY"> 
          AND WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<!-- DT01 문서종류 시작 -->
	<select id="DT01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  A.DOCUTY AS DOCUTY
		       ,A.DOCCAT AS DOCCAT
		       ,A.SHORTX AS SHORTX
		       ,A.ITNINC AS ITNINC
		       ,A.INSINC AS INSINC
		       ,A.CDOCTY AS CDOCTY
		       ,A.TRNHTY AS TRNHTY
		       ,A.SKUVND AS SKUVND
		       ,A.SYSLOC AS SYSLOC
		       ,A.CREDAT AS CREDAT
		       ,A.CRETIM AS CRETIM
		       ,A.CREUSR AS CREUSR
		       ,A.LMODAT AS LMODAT
		       ,A.LMOTIM AS LMOTIM
		       ,A.LMOUSR AS LMOUSR
		       ,A.UPDCHK AS UPDCHK
		       ,B.NUMOBJ AS NUMOBJ
		       ,B.SHORTX AS NUMOBJNM
		       ,C.NMFIRS AS CUSRNM
		       ,D.NMFIRS AS LUSRNM
		       ,E.SHORTX AS TRNHTYNM
		FROM 
			DOCTM A LEFT OUTER JOIN NMOBJ B ON (A.NUMOBJ = B.NUMOBJ)
					LEFT OUTER JOIN USRMA C ON (A.CREUSR = C.USERID)
					LEFT OUTER JOIN USRMA D ON (A.LMOUSR = D.USERID)
					LEFT OUTER JOIN THTMA E ON (A.TRNHTY = E.TRNHTY)
		WHERE 1 = 1
            AND A.DOCCAT = #DOCCAT#
	    ORDER BY DOCUTY ASC
	</select>
	
	<select id="DT01TOP_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT #DOCCAT# AS DOCCAT 
	</select>
	
	<select id="DT01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE
		         	WHEN NM.NUMOBJ IS NULL THEN 'MASTER_M0074' + ' ' + STD.NUMOBJ 
		         	ELSE 'OK'
		       END AS MSG
		FROM (  
				 $VALIDATION_SQL$ 
			 ) STD 
		LEFT OUTER JOIN NMOBJ NM
		     ON NM.NUMOBJ = STD.NUMOBJ 
		WHERE NM.NUMOBJ IS NULL
	</select>
	
	<update id="DT01_UPDATE" parameterClass="Map">
		UPDATE DOCTM SET
			   LMODAT = CONVERT(VARCHAR,GETDATE(),112),
               LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
               LMOUSR = #SES_USER_ID#,
		<isNotEmpty property="SHORTX">
		       SHORTX = #SHORTX#,
		</isNotEmpty>
		<isNotEmpty property="NUMOBJ">
		       NUMOBJ = #NUMOBJ#,
		</isNotEmpty>
		<isNotEmpty property="TRNHTY">
		       TRNHTY = #TRNHTY#,
		</isNotEmpty>
		<isNotEmpty property="SKUVND">
		       SKUVND = #SKUVND#,
		</isNotEmpty>
		<isNotEmpty property="SYSLOC">
		       SYSLOC = #SYSLOC#
		</isNotEmpty>
		WHERE  1 = 1
		  AND  DOCUTY = #DOCUTY#
	</update>
	
	<insert id="DT01_INSERT" parameterClass="Map">
		INSERT
		INTO   DOCTM (	DOCCAT,	SHORTX,	NUMOBJ, ITNINC, INSINC,	CDOCTY,	TRNHTY,	SKUVND,	SYSLOC,	CREDAT, CRETIM, CREUSR,	LMODAT,	LMOTIM,	LMOUSR, UPDCHK, DOCUTY ) 
		VALUES (
					#DOCCAT#,
					#SHORTX#,
					#NUMOBJ#,
					#ITNINC#,
					#INSINC#,
					ISNULL(#CDOCTY#,' '),
					#TRNHTY#,
					#SKUVND#,
					#SYSLOC#,
					CONVERT(VARCHAR,GETDATE(),112),
					REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
					'DEV',
					CONVERT(VARCHAR,GETDATE(),112),
					REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
					'DEV',
					0,
					#DOCUTY#
				)
	</insert>
	
	<delete id="DT01_DELETE" parameterClass="Map">
		DELETE FROM DOCTM
		 WHERE DOCUTY = #DOCUTY#
	</delete>
	<!-- DT01 문서종류 끝 -->
	
	<!-- 메세지 추가 -->
	<insert id="CreateJMSGM_INSERT" parameterClass="Map">
		INSERT INTO JMSGM
			(
			   LANGKY, MESGGR, MESGKY, MESGTX, CREDAT, CRETIM, CREUSR
			)VALUES(
			   'KO', 'MASTER', 'M0991', '*작업구역을 입력해 주세요.' , '00000000', '000000', 'DEV'
			)
	</insert>

	<!-- 전략규칙> 전략연결 조회 상단 -->
	<select id="ALCUS_LIST" parameterClass="Map" resultClass="DataMap">
	 SELECT A.WAREKY,
			A.SEQCUS,
			A.CUSTMR,
			(SELECT B.NAME01 FROM BZPTN B
			WHERE A.CUSTMR = B.PTNRKY AND B.PTNRTY = 'C') AS CUSTMRNM,
			A.ALSTKY ,
			(SELECT SHORTX FROM ALSTH D
			WHERE A.ALSTKY = D.ALSTKY
			AND A.WAREKY = D.WAREKY) AS SHORTX,
			A.REGN01 ,
			A.NATNKY ,
			(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'NATNKY' AND C.CMCDVL = A.NATNKY) AS NATNKYT,
			(SELECT CDESC1 FROM CMCDV C
			WHERE C.CMCDKY = 'NATNKY'
			AND A.NATNKY = C.CMCDVL) AS NATNKYNM,
			A.DOCUTY,
			A.SLGORT,
			A.CREDAT,
			A.CRETIM ,
			A.CREUSR ,
			A.LMODAT ,
			A.LMOTIM ,
			A.LMOUSR ,
			A.INDBZL ,
			A.INDARC ,
			A.UPDCHK
		FROM ALCUS A
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND A.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<!-- 전략규칙> 전략연결 조회 체크 -->
	<select id="ALCUS_VALIDATION" parameterClass="Map" resultClass="DataMap">
	 	SELECT
		  CASE
		    WHEN B.WAREKY IS NULL THEN 'MASTER_M0582' + ' ' + STD.WAREKY
		    WHEN C.NATNKY IS NULL THEN 'MASTER_M0583' + ' ' + STD.NATNKY
		    WHEN D.PTNRKY IS NULL THEN 'MASTER_M0584' + ' ' + STD.CUSTMR
		    WHEN E.ALSTKY IS NULL THEN 'MASTER_M0287' + ' ' + STD.ALSTKY
		    ELSE 'OK'
		  END AS MSG
		FROM (
		    	$VALIDATION_SQL$ 
		      ) STD 
		    LEFT OUTER JOIN WAHMA B ON B.WAREKY = STD.WAREKY
		  LEFT OUTER JOIN VNATNKY C ON C.NATNKY = STD.NATNKY
		   LEFT OUTER JOIN BZPTN D ON D.PTNRKY = STD.CUSTMR
		   LEFT OUTER JOIN ALSTH E ON E.ALSTKY = STD.ALSTKY
		WHERE ( 
		        B.WAREKY IS NULL
		      OR C.NATNKY IS NULL
		      OR D.PTNRKY IS NULL
		      OR E.ALSTKY IS NULL
		      )  
	</select>
	
		<!-- 전략규칙> 전략연결  신규 -->
	<insert id="ALCUS_INSERT" parameterClass="Map">
		INSERT INTO ALCUS
		    (
		     WAREKY,SEQCUS,CUSTMR,ALSTKY,REGN01,
		     NATNKY,DOCUTY,SLGORT,CREDAT,CRETIM,
		     CREUSR,LMODAT,LMOTIM,LMOUSR,INDBZL,
		     INDARC,UPDCHK
		    ) 
		 VALUES
		    (
		     #WAREKY#,
		     (SELECT LPAD(MAX(SEQCUS)+1,10,'0') FROM ALCUS WHERE WAREKY = #WAREKY#),
		     ISNULL(#CUSTMR#,' '),
		     ISNULL(#ALSTKY#,' '),
		     ISNULL(#REGN01#,' '),
		     ISNULL(#NATNKY#,' '),
		     ISNULL(#DOCUTY#,' '),
		     ISNULL(#SLGORT#,' '),
		     CONVERT(VARCHAR,GETDATE(),112),
		     REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			 #SES_USER_ID#,
			 CONVERT(VARCHAR,GETDATE(),112),
		     REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			 #SES_USER_ID#,
			 ISNULL(#INDBZL#,' '),
		     ISNULL(#INDARC#,' '),
		     0
		    )
	</insert>
	
	<!-- 전략규칙> 전략연결  신규 -->
	<update id="ALCUS_UPDATE" parameterClass="Map">
			UPDATE ALCUS SET 
		<isNotEmpty property="WAREKY"> 
			 WAREKY = #WAREKY# ,
		</isNotEmpty> 
		<isNotEmpty property="SEQCUS"> 
			 SEQCUS = #SEQCUS# ,
		</isNotEmpty> 
		<isNotEmpty property="CUSTMR"> 
			 CUSTMR = #CUSTMR# ,
		</isNotEmpty> 
		<isNotEmpty property="ALSTKY"> 
			 ALSTKY = #ALSTKY# ,
		</isNotEmpty> 
		<isNotEmpty property="REGN01"> 
			 REGN01 = #REGN01# ,
		</isNotEmpty> 
		<isNotEmpty property="NATNKY"> 
			 NATNKY = #NATNKY# ,
		</isNotEmpty> 
		<isNotEmpty property="DOCUTY"> 
			 DOCUTY = #DOCUTY# ,
		</isNotEmpty> 
		<isNotEmpty property="SLGORT"> 
			 SLGORT = #SLGORT# ,
		</isNotEmpty> 
			 LMODAT = CONVERT(VARCHAR,GETDATE(),112),
	         LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	         LMOUSR = #SES_USER_ID#
		 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND SEQCUS = #SEQCUS# 
	</update>

	<!-- 전략규칙> 전략연결  삭제 -->
	<delete id="ALCUS_DELETE" parameterClass="Map">
		 DELETE FROM ALCUS
 		 WHERE 1 = 1
		 AND WAREKY = #WAREKY# 
		 AND SEQCUS = #SEQCUS# 
	</delete>

	<!-- 전략규칙> 전략연결  설명 -->
	<select id="SHORTX_MAP" parameterClass="Map" resultClass="DataMap">
	 	SELECT SHORTX 
		  FROM ALSTH 
		 WHERE 1 = 1
			AND WAREKY = #WAREKY#
		    AND ALSTKY = #ALSTKY#
	</select>
	
	<!-- 전략규칙> 전략연결  거래처명 -->
	<select id="NAME01_LIST" parameterClass="Map" resultClass="DataMap">
	 	   SELECT PTNRKY,
				  PTNRTY,
				  DELMAK,
				  NAME01,
				  NAME02,
				  NAME03,
				  ADDR01,
				  ADDR02,
				  CITY01,
				  REGN01,
				  POSTCD,
				  NATNKY,
				  TELN01,
				  EXPTNK,
				  OWNRKY,
				  PTNG01,
				  PTNL05
				FROM BZPTN
				WHERE OWNRKY = (SELECT TOP 1 ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY# GROUP BY ADDR05)
				  AND DELMAK=' '
		<isNotEmpty property="WAREKY">
			AND A.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="ALSTKY">
		   AND ALSTKY = #ALSTKY#
		</isNotEmpty>
	</select>
	
	<!-- 전략규칙> 전략연결  거래처명22 -->
	<select id="NAME012_MAP" parameterClass="Map" resultClass="DataMap">
	 	   SELECT TOP 1 B.NAME01 
	 	     FROM BZPTN B
			WHERE 1 = 1
			  AND B.PTNRKY = #CUSTMR#
	</select>
	
	<!-- 전략규칙> 전략연결  국가명 -->
	<select id="NATNKY_MAP" parameterClass="Map" resultClass="DataMap">
	 	SELECT DESC01 
		  FROM VNATNKY 
		 WHERE 1 = 1 
		   AND NATNKY = #NATNKY#
	</select>
		<!-- 전략규칙> 전략연결 유무 확인 -->
	<select id="ALSTKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM ALSTH 
		 WHERE 1 = 1 
		   AND WAREKY = #WAREKY#
           AND ALSTKY = #ALSTKY#
	</select>
	
		<!-- 전략규칙> 전략연결 유무 확인 -->
	<select id="PTNRKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM BZPTN 
		 WHERE 1 = 1 
           AND PTNRKY = #CUSTMR#
	</select>

		<!-- 전략규칙> 전략연결 유무 확인 -->
	<select id="NATNKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM VNATNKY 
		 WHERE 1 = 1 
           AND NATNKY = #NATNKY#
	</select>
	
	<!-- 전략규칙> Sorting Rule 조회 상단 -->
	
	<select id="STSRH_LIST" parameterClass="Map" resultClass="DataMap">
	  SELECT SSORKY ,
			 WAREKY ,
			 SHORTX ,
			 STLCAT ,
			 CREDAT ,
			 CRETIM ,
			 CREUSR ,
			 (SELECT TOP 1 NMLAST FROM USRMA C WHERE C.USERID = A.CREUSR GROUP BY NMLAST) AS CUSRNM,
			 LMODAT ,
			 LMOTIM ,
			 LMOUSR ,
			 (SELECT TOP 1 NMLAST FROM USRMA C WHERE C.USERID = A.LMOUSR GROUP BY NMLAST) AS LUSRNM,
			 INDBZL ,
			 INDARC ,
			 UPDCHK
		FROM STSRH A
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND A.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="SSORKY">
			AND A.SSORKY = #SSORKY#
		</isNotEmpty>
	</select>
	
	
	<!-- RC01 사유코드 시작 -->
 	<select id="RC01_LIST" parameterClass="Map" resultClass="DataMap">
       SELECT A.OWNRKY AS OWNRKY
            , A.DOCCAT AS DOCCAT
            , A.DOCUTY AS DOCUTY
            , A.RSNCOD AS RSNCOD
            , C.SHORTX AS DOCCATNM
            , B.SHORTX AS DOCTYPNM
            , A.SHORTX AS SHORTX
            , A.DIFLOC AS DIFLOC
         FROM RSNCD A, DOCTM B, DOCCM C
        WHERE A.DOCUTY = B.DOCUTY
          AND A.DOCCAT = C.DOCCAT 
          AND OWNRKY = 'CMAS'
		<isNotEmpty property="DOCCAT"> 
          AND A.DOCCAT = #DOCCAT#
		</isNotEmpty>
		<isNotEmpty property="DOCUTY">
          AND A.DOCUTY = #DOCUTY#
		</isNotEmpty>
        ORDER BY 
              A.DOCCAT, A.DOCUTY, A.RSNCOD
	</select>
	
	<select id="RC01DOCCATNM_MAP" parameterClass="Map" resultClass="DataMap">
	  	SELECT SHORTX AS DOCCATNM
	  	  FROM DOCCM 
	  	  WHERE 1 = 1 
	  	    AND DOCCAT = #DOCCAT# 
	</select>
	
	<select id="RC01DOCCATval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM RSNCD 
		 WHERE 1 = 1 
		   AND DOCCAT = #DOCCAT#
	</select>
	
	<select id="RC01DOCTYPNM_MAP" parameterClass="Map" resultClass="DataMap">
	  	SELECT SHORTX AS DOCTYPNM
	  	  FROM DOCTM 
	  	  WHERE 1 = 1 
	  	    AND DOCUTY = #DOCUTY#
	  	    AND DOCCAT = #DOCCAT#
	</select>
	
	<select id="RC01DOCUTYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT
	  	  FROM DOCTM 
	  	  WHERE 1 = 1 
	  	    AND DOCUTY = #DOCUTY#
	  	    AND DOCCAT = #DOCCAT#
	</select>
	
	<select id="RC01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT
	    CASE
	        WHEN B.DOCCAT IS NULL
	            THEN 'MASTER_M0677' + ' ' + A.DOCCAT
	        WHEN B.DOCUTY IS NULL
	            THEN 'MASTER_M0415' + ' ' + A.DOCUTY
	        WHEN B.RSNCOD IS NULL
	            THEN 'MASTER_M0021' + ' ' + A.RSNCOD
	        ELSE 'OK'
	    END AS MSG
	    FROM(
	        $VALIDATION_SQL$
	    ) A
	    LEFT OUTER JOIN RSNCD B ON B.DOCCAT = A.DOCCAT AND B.DOCUTY = A.DOCUTY
	    WHERE B.RSNCOD IS NULL
	</select>
	
	<update id="RC01_UPDATE" parameterClass="Map">
       UPDATE RSNCD SET 
		<isNotEmpty property="SHORTX">			
              SHORTX = #SHORTX#,
              DIFLOC = #DIFLOC#,
		</isNotEmpty> 
              LMODAT = CONVERT(VARCHAR,GETDATE(),112),
              LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
              LMOUSR = #SES_USER_ID#
        WHERE DOCCAT = #DOCCAT# 
          AND DOCUTY = #DOCUTY# 
          AND OWNRKY = #OWNRKY#
          AND RSNCOD = #RSNCOD#
	</update> 
	
	<insert id="RC01_INSERT" parameterClass="Map">
	INSERT INTO RSNCD ( 
		SHORTX, 
		INDBZL, 
		INDARC, 
		OWNRKY, 
		DOCCAT, 
		DOCUTY, 
		RSNCOD,
		DIFLOC,
		CREDAT, 
		CRETIM, 
		CREUSR, 
		LMODAT, 
		LMOTIM, 
		LMOUSR 
		) VALUES (
		#SHORTX#, 
		ISNULL(#INDBZL#,' '),
		ISNULL(#INDARC#,' '), 
		#OWNRKY#, 
		#DOCCAT#, 
		#DOCUTY#, 
		#RSNCOD#,
		ISNULL(#DIFLOC#,' '), 
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#
		)
	</insert>
	
	<delete id="RC01_DELETE" parameterClass="Map">
		DELETE FROM RSNCD
		WHERE DOCCAT = #DOCCAT#
          AND DOCUTY = #DOCUTY# 
          AND OWNRKY = #OWNRKY#
          AND RSNCOD = #RSNCOD#
	</delete>
	<!-- RC01 사유코드 끝 -->
	
	<!-- DC01 문서유형 시작 -->
	<select id="DC01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.DOCCAT AS DOCCAT,
		       A.SHORTX AS SHORTX,
		       A.DOCUFM AS DOCUFM,
		       A.DEFLIN AS DEFLIN,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       (SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = A.CREUSR GROUP BY NMLAST) AS CUSRNM,
		       A.CREUSR AS CREUSR,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       (SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = A.LMOUSR GROUP BY NMLAST) AS LUSRNM
		  FROM DOCCM A
		 ORDER BY DOCCAT ASC
	</select>
	
	<insert id="DC01_INSERT" parameterClass="Map">
		INSERT
		INTO   DOCCM (
		SHORTX, 
		DOCUFM, 
		DEFLIN, 
		CREDAT, 
		CRETIM, 
		CREUSR, 
		LMODAT, 
		LMOTIM, 
		LMOUSR, 
		DOCCAT 
		) VALUES (
		#SHORTX#,
		ISNULL(#DOCUFM#,'10'), 
		ISNULL(#DEFLIN#,'50'), 
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		#DOCCAT#)
	</insert>
	
	<delete id="DC01_DELETE" parameterClass="Map">
		DELETE FROM DOCCM WHERE DOCCAT=#DOCCAT#
	</delete>
	
	<update id="DC01_UPDATE" parameterClass="Map">
		UPDATE DOCCM SET 
		<isNotEmpty property="DOCCAT"> 
			 DOCCAT = #DOCCAT# ,
		</isNotEmpty> 
		<isNotEmpty property="SHORTX"> 
			 SHORTX = #SHORTX#
		</isNotEmpty> 
		 WHERE 
			 DOCCAT = #DOCCAT# 
	</update>
	
	<select id="DC01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT
		    CASE
		        WHEN B.DOCCAT IS NULL
		            THEN 'MASTER_M0414' + ' ' + A.DOCCAT
		        ELSE 'OK'
		    END AS MSG
	    FROM(
	        $VALIDATION_SQL$
	    ) A
	    LEFT OUTER JOIN DOCCM B ON A.DOCCAT = B.DOCCAT
	    WHERE B.DOCCAT IS NULL
	</select>
	<!-- DC01 문서유형 끝 -->
	
	<!-- CC01 공통코드 위에 그리드 시작-->
	<select id="CC01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  
		       CM.CMCDKY AS CMCDKY
		     , CM.SHORTX AS SHORTX
		     , CM.DBFILD AS DBFILD
		     , CM.USARL1 AS USARL1
		     , CM.USARL2 AS USARL2
		     , CM.USARL3 AS USARL3
		     , CM.USARL4 AS USARL4
		     , CM.USARL5 AS USARL5
		     , CM.SYONLY AS SYONLY
		     , CM.CREDAT AS CREDAT
		     , CM.CRETIM AS CRETIM
		     , CM.CREUSR AS CREUSR
		     , CM.LMODAT AS LMODAT
		     , CM.LMOTIM AS LMOTIM
		     , CM.LMOUSR AS LMOUSR
		     , CM.CMCDKY AS 'KEY'
		     , ' ' AS STATUS
		  FROM CMCDM CM
		       INNER JOIN CMCDV CV
		    ON CM.CMCDKY = CV.CMCDKY
		 WHERE 1 = 1		
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>		 
		 GROUP BY CM.CMCDKY, CM.SHORTX, CM.DBFILD, CM.USARL1, CM.USARL2, CM.USARL3, CM.USARL4, CM.USARL5, CM.SYONLY, CM.CREDAT, CM.CRETIM, CM.CREUSR, CM.LMODAT, CM.LMOTIM, CM.LMOUSR, CM.CMCDKY
		 ORDER BY CM.CMCDKY ASC
	</select>
	
	<select id="CC01CMCDKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM CMCDM
		WHERE CMCDKY = #CMCDKY#
	</select>
	
	<!-- CC01 공통코드 아래 그리드 시작-->
	<select id="CC01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  CV.CMCDKY AS CMCDKY
			  , CV.CMCDVL AS CMCDVL
			  , CV.CDESC1 AS CDESC1
			  , CV.CDESC2 AS CDESC2
			  , CV.USARG1 AS USARG1
			  , CV.USARG2 AS USARG2
			  , CV.USARG3 AS USARG3
			  , CV.USARG4 AS USARG4
			  , CV.USARG5 AS USARG5
			  , CV.CREDAT AS CREDAT
			  , CV.CRETIM AS CRETIM
			  , CV.CREUSR AS CREUSR
			  , CV.LMODAT AS LMODAT
			  , CV.LMOTIM AS LMOTIM
			  , CV.LMOUSR AS LMOUSR
			  , CV.CMCDKY AS 'KEY'
			  , ' ' AS STATUS
		 FROM   CMCDV CV
		WHERE   1 = 1	
		  AND   CV.CMCDKY = #CMCDKY#	
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<select id="CC01CMCDVLval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM CMCDV
		WHERE CMCDKY = #CMCDKY#
		AND CMCDVL = #CMCDVL#
	</select>

	<insert id="CC01_INSERT" parameterClass="Map">
		INSERT INTO CMCDM
		(
			CMCDKY,
			SHORTX,
			DBFILD,
			USARL1,
			USARL2,
			USARL3,
			USARL4,
			USARL5,
			SYONLY,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
		)VALUES(
			#CMCDKY#,
			ISNULL(#SHORTX#,' '),
			ISNULL(#DBFILD#,' '),
			ISNULL(#USARL1#,' '),
			ISNULL(#USARL2#,' '),
			ISNULL(#USARL3#,' '),
			ISNULL(#USARL4#,' '),
			ISNULL(#USARL5#,' '),
			ISNULL(#SYONLY#,' '),
			CONVERT(VARCHAR,GETDATE(),112),
			REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			#SES_USER_ID#,
			CONVERT(VARCHAR,GETDATE(),112),
			REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			#SES_USER_ID#
		)
	</insert>
	
	<insert id="CC01Sub_INSERT" parameterClass="Map">
		INSERT INTO CMCDV
			(
			   CMCDKY,
			   CMCDVL,
			   CDESC1,
			   CDESC2,
			   USARG1,
			   USARG2,
			   USARG3,
			   USARG4,
			   USARG5,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)VALUES(
			   #CMCDKY#,
			   #CMCDVL#,
			   ISNULL(#CDESC1#,' '),
			   ISNULL(#CDESC2#,' '),
			   ISNULL(#USARG1#,' '),
			   ISNULL(#USARG2#,' '),
			   ISNULL(#USARG3#,' '),
			   ISNULL(#USARG4#,' '),
			   ISNULL(#USARG5#,' '),
			   CONVERT(VARCHAR,GETDATE(),112),
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			   #SES_USER_ID#,
			   CONVERT(VARCHAR,GETDATE(),112),
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			   #SES_USER_ID#
			)
	</insert>
	
	<update id="CC01_UPDATE" parameterClass="Map">
		UPDATE	CMCDM
		SET		
		<isNotEmpty property="SHORTX">
				SHORTX = #SHORTX#,
		</isNotEmpty>
		<isNotEmpty property="DBFILD">
				DBFILD = #DBFILD#,
		</isNotEmpty>
		<isNotEmpty property="USARL1">
				USARL1 = #USARL1#,
		</isNotEmpty>
		<isNotEmpty property="USARL2">
				USARL2 = #USARL2#,
		</isNotEmpty>
		<isNotEmpty property="USARL3">
				USARL3 = #USARL3#,
		</isNotEmpty>
		<isNotEmpty property="USARL4">
				USARL4 = #USARL4#,
		</isNotEmpty>
		<isNotEmpty property="USARL5">
				USARL5 = #USARL5#,
		</isNotEmpty>
		<isNotEmpty property="SYONLY">
				SYONLY = #SYONLY#,
		</isNotEmpty>
				LMODAT = CONVERT(VARCHAR,GETDATE(),112),
				LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				LMOUSR = #SES_USER_ID#
		WHERE	CMCDKY = #CMCDKY#
	</update>
	
	<update id="CC01Sub_UPDATE" parameterClass="Map">
		UPDATE	CMCDV
		SET		
		<isNotEmpty property="CDESC1">
				CDESC1 = #CDESC1#,
		</isNotEmpty>
		<isNotEmpty property="CDESC2">
				CDESC2 = #CDESC2#,
		</isNotEmpty>
		<isNotEmpty property="USARG1">
				USARG1 = #USARG1#,
		</isNotEmpty>
		<isNotEmpty property="USARG2">
				USARG2 = #USARG2#,
		</isNotEmpty>
		<isNotEmpty property="USARG3">
				USARG3 = #USARG3#,
		</isNotEmpty>
		<isNotEmpty property="USARG4">
				USARG4 = #USARG4#,
		</isNotEmpty>
		<isNotEmpty property="USARG5">
				USARG5 = #USARG5#,
		</isNotEmpty>
				LMODAT = CONVERT(VARCHAR,GETDATE(),112),
				LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				LMOUSR = #SES_USER_ID#
		WHERE	CMCDKY = #CMCDKY#
		AND		CMCDVL = #CMCDVL#
	</update>
	
	
	<delete id="CC01_DELETE" parameterClass="Map">
		DELETE	
		FROM	CMCDM
		WHERE	CMCDKY = #CMCDKY#
	</delete>
	
	<delete id="CC01Sub_DELETE" parameterClass="Map">
		DELETE	
		FROM	CMCDV
		WHERE	CMCDKY = #CMCDKY#
		AND		CMCDVL = #CMCDVL#
	</delete>
	
	<select id="CC01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE
         	WHEN A.CMCDKY IS NULL THEN 'MASTER_M0097' + ' ' + STD.CMCDKY
         	ELSE 'OK'
		END AS MSG
		FROM (  
			 $VALIDATION_SQL$ 
		) STD 
		LEFT OUTER JOIN CMCDM A
		     ON A.CMCDKY = STD.CMCDKY
		WHERE A.CMCDKY IS NULL
	</select>
	
	<select id="CC01Sub_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE
         	WHEN A.CMCDVL IS NULL THEN 'MASTER_M0097' + ' ' + STD.CMCDVL
         	ELSE 'OK'
		END AS MSG
		FROM (  
			 $VALIDATION_SQL$ 
		) STD 
		LEFT OUTER JOIN CMCDV A
		     ON A.CMCDKY = STD.CMCDKY AND A.CMCDVL = STD.CMCDVL
		WHERE A.CMCDVL IS NULL
	</select>
	<!-- ADMIN CC01 끝-->

	<!-- TA01 -->
	<select id="TA01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			WAREKY,
			ALSTKY,
			SHORTX,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR,
			(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = ALSTH.CREUSR GROUP BY NMLAST) AS CUSRNM,
			WAREKY + ALSTKY AS KEY,
			' ' AS STATUS
		FROM ALSTH
		WHERE 1=1
		<isNotEmpty property="WAREKY">
			AND WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<update id="TA01_UPDATE" parameterClass="Map">
			UPDATE ALSTH SET 
	 		SHORTX = #SHORTX#,
			LMODAT = CONVERT(VARCHAR,GETDATE(),112),
			LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			LMOUSR = #SES_USER_ID#
			WHERE 1 = 1
			 AND WAREKY = #WAREKY# 
			 AND ALSTKY = #ALSTKY# 
	</update>
	
	<insert id="TA01_INSERT" parameterClass="Map">
		INSERT INTO ALSTH
			(
			   WAREKY,
			   ALSTKY,
			   SHORTX,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)VALUES(
			   #WAREKY#,
			   #ALSTKY#,
			   ISNULL(#SHORTX#,' '),
			   CONVERT(VARCHAR,GETDATE(),112),
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			   #SES_USER_ID#,
			   CONVERT(VARCHAR,GETDATE(),112),
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			   #SES_USER_ID#
			)
	</insert>
	
	<delete id="TA01_DELETE" parameterClass="Map">
		DELETE FROM ALSTH 
		WHERE WAREKY = #WAREKY#
			AND ALSTKY = #ALSTKY#
	</delete>
	
	<select id="TA01ALSTKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM ALSTH
		WHERE WAREKY  = #WAREKY#
		AND ALSTKY = #ALSTKY#
	</select>
	
	<select id="TA01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE
         	WHEN A.ALSTKY IS NULL THEN 'MASTER_M0097' + ' ' + STD.ALSTKY
         	ELSE 'OK'
		END AS MSG
		FROM (  
			 $VALIDATION_SQL$ 
		) STD 
		LEFT OUTER JOIN ALSTH A
		     ON A.ALSTKY = STD.ALSTKY AND A.WAREKY = STD.WAREKY
		WHERE A.ALSTKY IS NULL
	</select>
	
	<select id="TA01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			WAREKY,
			ALSTKY,
			STEPNO,
			SSORKY,
			ALFTKY,
			ALORTO,
			ALUNIT,
			SUALKY,
			CREDAT,
			CRETIM,
			CREUSR,
			(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = ALSTI.CREUSR GROUP BY NMLAST) AS CREUNM,
			LMODAT,
			LMOTIM,
			LMOUSR,
			(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = ALSTI.LMOUSR GROUP BY NMLAST) AS LUSRNM,
			WAREKY + ALSTKY AS KEY,
			' ' AS STATUS
		FROM ALSTI
		WHERE 1 = 1
			AND WAREKY = #WAREKY#
			AND ALSTKY = #ALSTKY#
	</select>
	
	<update id="TA01Sub_UPDATE" parameterClass="Map">
			UPDATE ALSTI SET 
	 		STEPNO = #STEPNO#,
	 		SSORKY = #SSORKY#,
	 		ALFTKY = #ALFTKY#,
	 		ALORTO = #ALORTO#,
	 		ALUNIT = #ALUNIT#,
	 		SUALKY = #SUALKY#,
			LMODAT = CONVERT(VARCHAR,GETDATE(),112),
			LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			LMOUSR = #SES_USER_ID#
			WHERE 1 = 1
			 AND WAREKY = #WAREKY# 
			 AND ALSTKY = #ALSTKY# 
			 AND STEPNO = #STEPNO#
	</update>
	
	<insert id="TA01Sub_INSERT" parameterClass="Map">
		INSERT INTO ALSTI
			(
			   WAREKY,
			   ALSTKY,
			   STEPNO,
			   SSORKY,
			   ALFTKY,
			   ALORTO,
			   ALUNIT,
			   SUALKY,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)VALUES(
			   #WAREKY#,
			   #ALSTKY#,
			   #STEPNO#,
			   #SSORKY#,
			   #ALFTKY#,
			   ISNULL(#ALORTO#,'100'),
			   ISNULL(#ALUNIT#,'1'),
			   ISNULL(#SUALKY#,' '),
			   CONVERT(VARCHAR,GETDATE(),112),
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			   #SES_USER_ID#,
			   CONVERT(VARCHAR,GETDATE(),112),
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
			   #SES_USER_ID#
			)
	</insert>
	
	<delete id="TA01Sub_DELETE" parameterClass="Map">
		DELETE FROM ALSTI 
		WHERE WAREKY = #WAREKY# 
			AND ALSTKY = #ALSTKY#
		<isNotEmpty property="STEPNO">
			AND STEPNO = #STEPNO#
		</isNotEmpty>
	</delete>
	
	<select id="TA01STEPNOval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM ALSTI
		WHERE WAREKY  = #WAREKY#
		AND ALSTKY = #ALSTKY#
		AND STEPNO = #STEPNO#
	</select>
	
	<select id="TA01Sub_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE
         	WHEN A.ALSTKY IS NULL THEN 'MASTER_M0097' + ' ' + STD.ALSTKY
         	WHEN A.STEPNO IS NULL THEN 'OUT_M0020' + ' ' + STD.STEPNO
         	ELSE 'OK'
		END AS MSG
		FROM (  
			 $VALIDATION_SQL$ 
		) STD 
		LEFT OUTER JOIN ALSTI A
		     ON A.ALSTKY = STD.ALSTKY AND A.STEPNO = STD.STEPNO
		WHERE A.ALSTKY IS NULL
	</select>
	
	<!-- TA01 끝 -->

 	<select id="TP01PASTHval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM PASTH
		WHERE WAREKY  = #WAREKY#
		AND PASTKY = #PASTKY#
	</select>
	<!-- TP01 Grid -->
	<select id="TP01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
		WAREKY,
		PASTKY,
		SHORTX,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR,
		' ' AS STATUS
		FROM PASTH
			WHERE 1=1
		<isNotEmpty property="WAREKY">
			AND WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	<insert id="TP01_INSERT" parameterClass="Map">
		INSERT
		INTO PASTH
		(
		WAREKY,
		PASTKY,
		SHORTX,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR
		)
		VALUES(
		#WAREKY#,
		#PASTKY#,
		ISNULL(#SHORTX#,' '),
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#
		)
	</insert>

	<delete id="TP01_DELETE" parameterClass="Map">
		DELETE 
		FROM PASTH 
		WHERE PASTKY=#PASTKY#
		AND WAREKY=#WAREKY#
	</delete>
	<!-- TP01 하단그리드 -->
	<select id="TP01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT WAREKY ,
		PASTKY,
		STEPNO,
		SRMEKY,
		USDOCT,
		LOCASR,
		RMTGLS,
		LOCATG,
		ZONETG,
		CAPACR,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR,
		' ' AS STATUS
		FROM PASTI
		WHERE WAREKY = #WAREKY#
		AND PASTKY=#PASTKY#
	</select>
	<insert id="TP01Sub_INSERT" parameterClass="Map">
		INSERT INTO PASTI
		(
		WAREKY,
		PASTKY,
		STEPNO,
		SRMEKY,
		USDOCT,
		LOCASR,
		RMTGLS,
		LOCATG,
		ZONETG,
		CAPACR,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR
		)
		VALUES(
		#WAREKY#,
		#PASTKY#,
		#STEPNO#,
		ISNULL(#SRMEKY#, ' '),
		ISNULL(#USDOCT#, ' '),
		ISNULL(#LOCASR#, ' '),
		ISNULL(#RMTGLS#, ' '),
		ISNULL(#LOCATG#, ' '),
		ISNULL(#ZONETG#, ' '),
		ISNULL(#CAPACR#, ' '),
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#
		)
	</insert>

	<delete id="TP01Sub_DELETE" parameterClass="Map">
		DELETE 
		FROM PASTI
		WHERE WAREKY = #WAREKY#
		AND PASTKY = #PASTKY#
		<isNotEmpty property="STEPNO">
			AND STEPNO = #STEPNO#
		</isNotEmpty>
	</delete>
		<select id="TP01STEPNOval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM PASTI
		WHERE WAREKY  = #WAREKY#
		AND PASTKY = #PASTKY#
		AND STEPNO = #STEPNO#
	</select>

	<!-- TF01 Util -->
	<select id="TF01_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT
		    LOTRKY ,
		    WAREKY ,
		    SHORTX 
		FROM RLRRH
			WHERE LOTRKY = #LOTRKY#
   			AND WAREKY = #WAREKY#
	</select>
	<!-- TF01 Grid -->
	<select id="TF01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT WAREKY 
	       ,LOTRKY 
	       ,DBFILD 
	       ,RNGVMI 
	       ,RNGVMX 
	       ,CREDAT 
	       ,CRETIM 
	       ,CREUSR 
	       ,LMODAT 
	       ,LMOTIM 
	       ,LMOUSR 
	FROM RLRRI 
	WHERE 1 = 1
		AND   LOTRKY = #LOTRKY#
		AND   WAREKY = #WAREKY#
	</select>
	<!-- NR01 -->
	<select id="NR01_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT
		NUMOBJ
		,SHORTX
		,NUMBFR
		,NUMBTO
		,NUMBST
		,CREDAT
		,CRETIM
		,CREUSR
		,(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID =NMOBJ.CREUSR GROUP BY NMLAST) AS NMLAST1
		,LMODAT
		,LMOTIM
		,LMOUSR
		,(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = NMOBJ.LMOUSR GROUP BY NMLAST) AS NMLAST2
		,INDBZL
		,INDARC
		,UPDCHK
		FROM NMOBJ
		WHERE NUMOBJ = #NUMOBJ#
	</select>

	<update id="NR01UP_UPDATE" parameterClass="Map">
		UPDATE NMOBJ
		SET
		SHORTX=#SHORTX#,
		NUMBST=#NUMBST#
		WHERE NUMOBJ=#NUMOBJ#
	</update>

	<delete id="NR01DEL_DELETE" parameterClass="Map">
		DELETE FROM NMOBJ
		WHERE NUMOBJ=#NUMOBJ#
	</delete>

	<select id="NUMOBJval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		FROM NMOBJ
		WHERE NUMOBJ = #NUMOBJ#
	</select>
	<insert id="NR01UP_INSERT" parameterClass="Map">
		INSERT INTO NMOBJ
		(NUMOBJ
		,SHORTX
		,NUMBFR
		,NUMBTO
		,NUMBST
		,CREDAT
		,CRETIM
		,CREUSR
		,(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID =NMOBJ.CREUSR GROUP BY NMLAST)
		,LMODAT
		,LMOTIM
		,LMOUSR
		,(SELECT TOP 1 NMLAST FROM USRMA WHERE USRMA.USERID = NMOBJ.LMOUSR GROUP BY NMLAST)
		,INDBZL
		,INDARC)
		VALUES(
		#NUMOBJ#,
		#SHORTXTO#,
		#NUMBFR#,
		#NUMBTO#,
		#NUMBST#,
		#NMLAST#,
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		CONVERT(VARCHAR,GETDATE(),112),
		REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		#SES_USER_ID#,
		#NMLAST#,
		ISNULL(#INDBZL#, ' '),
		ISNULL(#INDARC#, ' '))
	</insert>
	<!-- VALIDATION -->
	<select id="TS01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL , '[' + CMCDVL + '] ' + CDESC1 AS TEXT_COL
		FROM CMCDV WHERE CMCDKY = 'INDASD'
	</select>

	<select id="TP01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL , '[' + CMCDVL + '] ' + CDESC1 AS
		TEXT_COL FROM CMCDV WHERE CMCDKY = 'PATYPE'
	</select>
	
	<!-- TS01 util -->
	<select id="STSRH1_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT
		SSORKY,
		WAREKY,
		SHORTX,
		STLCAT,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR,
		INDBZL,
		INDARC,
		UPDCHK
		FROM STSRH
		WHERE SSORKY = #SSORKY#
		AND WAREKY= #WAREKY#
	</select>
	<select id="SSORKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
        FROM   
        	STSRI
		WHERE  
			SSORKY = #SSORKY#
	</select>
	
	
	<select id="STSRHTOP_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
		ITEMNO,
		FIELDN,
		FLDCMT,
		ACTVAT,
		(CASE WHEN #QTSHPC# = ' ' THEN SORTSQ
		  	  WHEN #QTSHPC# = '' THEN SORTSQ
		  	  ELSE CONVERT(VARCHAR, CONVERT(NUMERIC, SORTSQ)) END) AS SORTSQ,
		INDASD,
		WAREKY,
		SSORKY,
		CREDAT,
		CRETIM,
		CREUSR,
		LMODAT,
		LMOTIM,
		LMOUSR
		FROM STSRI
		WHERE WAREKY=#WAREKY#
		<isNotEmpty property="SSORKY">
			AND SSORKY = #SSORKY#
		</isNotEmpty>
	</select>
	
	<select id="STSRH22_LIST" parameterClass="Map" resultClass="DataMap">
				SELECT '010' AS ITEMNO
			      , 'WAREKY'  AS FIELDN
			      , 'Warehouse key' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '020' AS ITEMNO
			      , 'AREAKY'  AS FIELDN
			      , 'Area' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '030' AS ITEMNO
			      , 'ZONEKY'  AS FIELDN
			      , 'Zone' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '040' AS ITEMNO
			      , 'LOCAKY'  AS FIELDN
			      , 'Location' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '050' AS ITEMNO
			      , 'UOMKEY'  AS FIELDN
			      , 'Unit of measure' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '060' AS ITEMNO
			      , 'LOTNUM'  AS FIELDN
			      , 'Lot number' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '070' AS ITEMNO
			      , 'TRUNID'  AS FIELDN
			      , 'Pallet ID' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '080' AS ITEMNO
			      , 'OWNRKY'  AS FIELDN
			      , 'Owner key' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '090' AS ITEMNO
			      , 'QTSIWH'  AS FIELDN
			      , 'Stock quantity' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '100' AS ITEMNO
			      , 'SKUKEY'  AS FIELDN
			      , 'Stock keeping unit key' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '110' AS ITEMNO
			      , 'LOTA01'  AS FIELDN
			      , 'LOT AT 1' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '120' AS ITEMNO
			      , 'LOTA02'  AS FIELDN
			      , 'LOT AT 2' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL
			SELECT '130' AS ITEMNO
			      , 'LOTA03'  AS FIELDN
			      , 'LOT AT 3' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL       
			SELECT '140' AS ITEMNO
			      , 'LOTA11'  AS FIELDN
			      , 'Product date' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL   
			SELECT '150' AS ITEMNO
			      , 'LOTA12'  AS FIELDN
			      , 'Receipt date' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
			UNION ALL 
			SELECT '160' AS ITEMNO
			      , 'OBROUT'  AS FIELDN
			      , 'Outbound order' AS FLDCMT
			      , ' ' AS ACTVAT
			   	  ,	' ' AS SORTSQ
				  , ' ' AS INDASD
				  , #WAREKY# AS WAREKY
				  , #SSORKY# AS SSORKY
				  , CONVERT(VARCHAR,GETDATE(),112) AS CREDAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM
				  , #SES_USER_ID# AS CREUSR
				  , CONVERT(VARCHAR,GETDATE(),112) AS LMODAT
				  , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM
				  , #SES_USER_ID# AS LMOUSR
	</select>
	
	<delete id="STSRIDEL_DELETE" parameterClass="Map">
		DELETE FROM STSRI WHERE WAREKY=#WAREKY# AND SSORKY=#SSORKY#
	</delete>
	
	
	<update id="STSRH1_UPDATE" parameterClass="Map">
		update STSRH set 
		SHORTX=#SHORTX#, 
		STLCAT=#STLCAT#, 
		where 
		WAREKY=#WAREKY# 
		and SSORKY=#SSORKY#
		and ITEMNO=#ITEMNO#
	</update>
	

	<!-- TS01 grid update -->
	<update id="STSRHTOP_UPDATE" parameterClass="Map">
		UPDATE STSRI SET
		ACTVAT = #ACTVAT#,
		SORTSQ = #SORTSQ#,
		INDASD = #INDASD#,
		LMODAT = CONVERT(VARCHAR,GETDATE(),112),
		LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
		LMOUSR = #SES_USER_ID#
		WHERE 1=1
		AND WAREKY=#WAREKY#
		AND ITEMNO=#ITEMNO#
	</update>

	<!-- <select id="STSRHTOP_VALIDATION" parameterClass="Map" resultClass="DataMap"> 
		SELECT CASE WHEN W.WAREKY IS NULL THEN 'MASTER_M0255' || ' ' || P.WAREKY 
		WHEN A.AREAKY IS NULL THEN 'MASTER_M0230' || ' ' || P.AREAKY ELSE 'OK' END 
		AS MSG FROM( $VALIDATION_SQL$ ) P LEFT OUTER JOIN WAHMA W ON W.WAREKY = P.WAREKY 
		LEFT OUTER JOIN AREMA A ON A.WAREKY = W.WAREKY AND A.AREAKY = P.AREAKY WHERE 
		W.WAREKY IS NULL OR A.AREAKY IS NULL </select> -->
		
	<update id="STSRHU_UPDATE" parameterClass="Map">
		UPDATE STSRH SET     
       <isNotEmpty property="SHORTX">
			 SHORTX = #SHORTX#	 
		</isNotEmpty>
		WHERE 1=1
		AND WAREKY=#WAREKY#
		AND SSORKY=#SSORKY#
	</update>
	
	 <select id="STSRH2_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  #WAREKY# AS WAREKY,#SSORKY# AS SSORKY
	</select> 
	 
	<select id="STSRH12_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  #WAREKY# AS WAREKY,#SSORKY# AS SSORKY
	</select> 
	 
	<insert id="STSRHI_UPDATE" parameterClass="Map">
	INSERT INTO STSRI(WAREKY,SSORKY,ITEMNO,FIELDN,FLDCMT,TABLEN,ACTVAT,SORTSQ,INDASD,CREDAT,CRETIM,CREUSR,LMODAT,LMOTIM,LMOUSR,INDBZL,INDARC)
	VALUES (#WAREKY#,#SSORKY#,
	ISNULL(#ITEMNO#,' '),
	ISNULL(#FIELDN#,' '),
	ISNULL(#FLDCMT#,' '),
	ISNULL(#TABLEN#,' '),
	ISNULL(#ACTVAT#,' '),
	ISNULL(#SORTSQ#,' '),
	ISNULL(#INDASD#,' '),
	CONVERT(VARCHAR,GETDATE(),112),
	REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	'DEV',
	CONVERT(VARCHAR,GETDATE(),112),
	REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
	'DEV',
 	ISNULL(#INDBZL#, ' '), 
	ISNULL(#INDARC#, ' ')
	)
	</insert> 
	<select id="SSORKval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) CNT 
		FROM ALSTI
		WHERE WAREKY  = 'WAREKY'
		AND SSORKY = #SSORKY#
	</select>

	<delete id="STSRHTOP_DELETE" parameterClass="Map">
		DELETE FROM STSRI
		WHERE WAREKY = #WAREKY#
		AND SSORKY = #SSORKY#
		AND ITEMNO=#ITEMNO#
	</delete>
	
	 <select id="TS01SORTSQval_MAP" parameterClass="Map" resultClass="DataMap">
      SELECT COUNT(*) CNT 
      FROM STSRI
      WHERE WAREKY=#WAREKY# 
      AND SSORKY =#SSORKY# 
      AND SORTSQ = #SORTSQ#
   </select>
   
	<select id="BZ01COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
		    CMCDVL AS VALUE_COL,
		    CDESC1 AS TEXT_COL
		FROM CMCDV 
        WHERE CMCDKY = 'PTNRTY'
	</select>
	
	<select id="WEIGHTCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	CMCDVL AS VALUE_COL,
				CDESC1 AS TEXT_COL
		FROM CMCDV
		WHERE 1 = 1
		  AND CMCDKY = 'WEIGHT'
	</select>	
	<select id="PATYPECOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL , CDESC1 AS
		TEXT_COL FROM CMCDV WHERE CMCDKY = 'PATYPE'
	</select>
	<select id="TKZONECOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL ,CDESC1 AS 
		TEXT_COL FROM CMCDV WHERE CMCDKY = 'TKZONE' 
	</select>
	<select id="STKQTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL , CDESC1 AS 
		TEXT_COL FROM CMCDV WHERE CMCDKY = 'STKQTY' 
	</select>

	<sql id="ZONMA_SELECT">
		SELECT  WAREKY
		       ,' ' AS CHECKDATA
		       ,ROWNUM AS TMPNUM 
		       ,ZONEKY
		       ,ZONETY
		       ,(SELECT CDESC1 FROM CMCDV C WHERE CMCDKY = 'ZONETY' AND C.CMCDVL = Z.ZONETY) AS ZONETYT
		       ,SHORTX
		       ,AREAKY
		       ,(SELECT SHORTX FROM AREMA A WHERE A.WAREKY = Z.WAREKY AND A.AREAKY = Z.AREAKY) AS AREAKYT
		       ,CONVERT(CONVERT(CREDAT, 111),'$FORMAT_DATE$') AS CREDAT
		       ,CONVERT(CONVERT(CRETIM, 24),'$FORMAT_TIME$') AS CRETIM
		       ,CREUSR
		       ,CONVERT(CONVERT(LMODAT, 111),'$FORMAT_DATE$') AS LMODAT
		       ,CONVERT(CONVERT(LMOTIM, 24),'$FORMAT_TIME$') AS LMOTIM
		       ,LMOUSR
		       ,INDBZL
		       ,INDARC
		       ,UPDCHK
		FROM ZONMA Z
	</sql>

	<select id="ZONMAP_COUNT" parameterClass="Map" resultClass="Integer">
		SELECT  COUNT(*) 
		FROM ZONMA Z
		WHERE 1 = 1
		<include refid="ZONMA_WHERE" /> 
	</select>
	
	<select id="ZONMAP_LIST" parameterClass="Map" resultClass="DataMap">
		<include refid="ZONMA_SELECT" />
		WHERE 1 = 1
		<include refid="ZONMA_WHERE" />
		ORDER BY ZONEKY
	</select>
	
		   
</sqlMap>