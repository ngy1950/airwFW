<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="WmsInbound">
	<typeAlias alias="DataMap" type="com.common.bean.DataMap" />
	<typeAlias alias="StringMap" type="com.common.util.StringMap" />

	<select id="RTNTYPCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL,
		       CDESC1 AS TEXT_COL
		  FROM CMCDV
		 WHERE CMCDKY = 'RTNTYP'
		 AND (USARG1 = 'CSHA' OR USARG2 = 'CSHA' OR USARG3 = 'CSHA' OR USARG4 = 'CSHA' OR USARG5 = 'CSHA')
		 ORDER BY CMCDVL
	</select>
	
	<select id="RCPTTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL, 
			   SHORTX AS TEXT_COL
		  FROM DOCTM
		 WHERE 1 = 1
		   AND DOCCAT = '100'
		   AND DOCUTY IN ('109','110','111','115','116')  
		ORDER BY DOCUTY
	</select>
	
	<select id="RSNCODCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT RSNCOD AS VALUE_COL ,
		       SHORTX AS TEXT_COL
		  FROM RSNCD
		 WHERE OWNRKY = #SES_OWNER#
		   AND DOCCAT = '100'
		   AND DOCUTY = '108'
	</select>
	
	<select id="DOCUTY051COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : COMBO.DOCUTY -->
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '050' 
    	AND		DOCUTY = '051'
    	ORDER BY DOCUTY
	</select>
	
	<select id="DOCUTY102COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY IN ('102','108','109')
	</select>
	
	<select id="DOCUTY103COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '103'
	</select>

	<select id="DOCUTY106COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '106'
	</select>
	
	<select id="DOCUTY108COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '108'
	</select>
	
	<select id="DOCUTY110COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '110'
	</select>
	
	<select id="DOCUTY109COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '109'
	</select>
	
	<select id="DOCUTY116COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '116'
	</select>
	
	<select id="DOCUTY166COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '166'
	</select>
	
	<select id="DOCUTYGR05COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND		DOCCAT = '100'
		AND		DOCUTY IN (  '109','110','111','115','116'  ) 
		ORDER BY DOCUTY
	</select>
	
	<select id="DOCUTY112COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '112'
	</select>

	<select id="DOCUTY120COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '120'
	</select>
	
	<select id="DOCUTYETCCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCGRP LIKE '%ETC%'
		ORDER BY DOCCAT, DOCUTY
	</select>
	
	<select id="DOCUTYGR03_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY IN ('104')
	</select>
	
	<select id="DOCUTY107COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	DOCUTY AS VALUE_COL,
				SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 = 1
		AND		DOCCAT = '100'
		AND		DOCUTY = '107'
	</select>

	<select id="LOTA05COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	SUBSTR(CMCDVL,1,2) AS VALUE_COL,
				CDESC1 AS TEXT_COL
		FROM	CMCDV
		WHERE	CMCDKY = 'LOTA05'
		AND		'WSH1' LIKE USARG1
	</select>
	
	<select id="LOTA02COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	CMCDVL AS VALUE_COL,
				CDESC1 AS TEXT_COL
		FROM	CMCDV
		WHERE	CMCDKY = 'LOTA02'
	</select>
	
	<select id="LOTA06COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	SUBSTR(CMCDVL,1,2) AS VALUE_COL,
				CDESC1 AS TEXT_COL
		FROM	CMCDV
		WHERE	CMCDKY = 'LOTA06'
		<isNotEmpty property="CMCDKY">
		AND		CMCDKY = #CMCDKY#
		</isNotEmpty>
	</select>
	
	<select id="LOTA06COMBO2_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	SUBSTR(CMCDVL,1,2) AS VALUE_COL,
				CDESC1 AS TEXT_COL
		FROM	CMCDV
		WHERE	CMCDKY = 'LOTA06'
		<isNotEmpty property="CMCDKY">
		AND		CMCDKY = #CMCDKY#
		</isNotEmpty>
		AND     CMCDVL = '10'
	</select>
	
	<select id="GR09RSNCODCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT RSNCOD AS VALUE_COL ,
		       SHORTX AS TEXT_COL
		  FROM RSNCD
		 WHERE OWNRKY = 'CCHD'
		   AND DOCCAT = '100'
	</select>
	
	<select id="GR09RSNCODCOMBO2_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT RSNCOD AS VALUE_COL ,
		       SHORTX AS TEXT_COL
		  FROM RSNCD
		 WHERE OWNRKY = #SES_OWNER#
		   AND DOCCAT = '100'
		   AND DOCUTY = 'CRCV'
	</select>
	
	<select id="GR09INDRCNCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT INDRCN AS VALUE_COL,
			            ' ' AS TEXT_COL 
		  FROM RECDH
		 WHERE OWNRKY = #SES_OWNER#
      ORDER BY INDRCN
	</select>

	<select id="SKUKEYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  COUNT(*) CNT
		FROM	V_SKU_INFO
		WHERE	1 = 1
		AND		OWNRKY = #SES_OWNER#
		AND		WAREKY = #WAREKY#
		AND		SKUKEY = #SKUKEY#
	</select>
	
	<select id="GR20SKUKEYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  
			COUNT(*) CNT
		  FROM V_SKU_INFO SM
		 WHERE 1 = 1
		   <!-- AND SM.OWNRKY = BM.OWNRKY(+)
           AND SM.SKUKEY = BM.SKUKEY(+) -->
		   AND SM.OWNRKY = #OWNRKY#
		   AND SM.WAREKY = #WAREKY#
		   AND (SM.SKUKEY = #INPUTSKU#)
	</select>
	
	<select id="SKUval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	 SUM(CASE WHEN TRIM(IF.SKUKEY) IS NULL THEN 1 ELSE 0 END) AS SKU_CNT
		   		,SUM(CASE WHEN TRIM(SW.MEASKY) IS NULL THEN 1 ELSE 0 END) AS MEA_CNT
		    	,#EBELN# AS EBELN
		FROM 	IFWMS103 IF
			LEFT OUTER JOIN SKUWC SW ON  SW.WAREKY = #WAREKY#
								     AND SW.OWNRKY = #OWNRKY#
									 AND SW.SKUKEY = IF.MATNR
		WHERE 	EBELN = #EBELN# 
	</select>
	
	<select id="SKUKEY_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	SKUKEY,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				DUOMKY,
				QTDUOM,
				MEASKY,
				UOMKEY,
				QTPUOM,
				RIMDMT
		FROM	V_SKU_INFO
		WHERE	1 = 1
		AND		OWNRKY = #SES_OWNER#
		AND		WAREKY = #WAREKY#
		AND		SKUKEY = #SKUKEY#
	</select>
	
	<select id="GR20SKUKEY_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	SM.SKUKEY,
				SM.DESC01,
				SM.DESC02,
				SM.ASKU01,
				SM.ASKU02,
				SM.ASKU03,
				SM.ASKU04,
				SM.ASKU05,
				SM.EANCOD,
				SM.GTINCD,
				SM.SKUG01,
				SM.SKUG02,
				SM.SKUG03,
				SM.SKUG04,
				SM.SKUG05,
				SM.GRSWGT,
				SM.NETWGT,
				SM.WGTUNT,
				SM.LENGTH,
				SM.WIDTHW,
				SM.HEIGHT,
				SM.CUBICM,
				SM.CAPACT,
				SM.DUOMKY,
				SM.QTDUOM,
				SM.MEASKY,
				SM.UOMKEY,
				SM.QTPUOM,
				SM.RIMDMT
		FROM	V_SKU_INFO SM
	   WHERE 1 = 1
		 AND SM.OWNRKY = #OWNRKY#
		 AND SM.WAREKY = #WAREKY#
	     AND SM.SKUKEY = #INPUTSKU#
	</select>
	
	<select id="LOCAKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  COUNT(*) CNT
		FROM	LOCMA
		WHERE	1 = 1
		AND		WAREKY = #WAREKY#
		<!-- <isNotEmpty property="LOCAKY"> -->
		AND		LOCAKY = #LOCAKY#
		<!-- </isNotEmpty> -->
	</select>
	
	<select id="DPTNKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  COUNT(*) CNT
		FROM	BZPTN
		WHERE	1 = 1
		AND		PTNRKY = #DPTNKY#
	</select>
	
	<select id="LOCAKY_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	WAREKY,
				AREAKY,
				<!-- AREATY, -->
				ZONEKY,
				<!-- ZONETY, -->
				LOCAKY,
				SHORTX 
		<!-- FROM	V_LOCMA_RCVSTR -->
		FROM	LOCMA
		WHERE	1 = 1
		AND		WAREKY = #WAREKY#
		<!-- <isNotEmpty property="LOCAKY"> -->
		AND		LOCAKY = #LOCAKY#
		<!-- </isNotEmpty> -->
	</select>

	<select id="DOCDAT_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	SIGN( TO_CHAR(SYSDATE, 'YYYYMMDD') - #DOCDAT# ) AS DATECHK
		FROM	DUAL
	</select>

	<!-- 입하예정정보입력 -->
	<!-- AS01 SQL START-->

	<!-- AS01 HEAD GRID SELECT START -->
	<select id="AS01_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.ADVANCEDSHIPMENTNOTICE.FIND_INTERFACE_TO_CREATE_ASNDH -->
		SELECT IFWMS103.EBELN      AS SEBELN
		     , ' '                 AS ASNDKY
		     , IFWMS103.WAREKY     AS WAREKY
		     , NVL(WH.NAME01,' ')  AS WAREKYNM
		     , #ASNTTY#            AS ASNTTY	<!-- Parameter[0] -->
		     , NVL(DT.SHORTX,' ')  AS ASNTTYNM
		     , 'NEW'               AS STATDO
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT
		     , '050'               AS DOCCAT
		     , NVL(DC.SHORTX,' ')  AS DOCCATNM
		     , #OWNRKY# AS OWNRKY	<!-- Parameter[1] -->
		     , IFWMS103.LIFNR      AS DPTNKY
		     , NVL(VD.NAME01,' ')  AS DPTNKYNM
		     , ' '                 AS DRELIN
<![CDATA[   		     , CASE WHEN TRIM(IFWMS103.EINDT) IS NULL OR IFWMS103.EINDT < TO_CHAR(SYSDATE,'YYYYMMDD') 
		                 THEN TO_CHAR(SYSDATE,'YYYYMMDD')
		            ELSE IFWMS103.EINDT END AS PRCPTD ]]>
		     , ' '                 AS LRCPTD
		     , ' '                 AS INDDCL
		     , ' '                 AS RSNCOD
		     , ' '                 AS RSNRET
		     , 0                   AS QTYASN
		     , 0                   AS QTYRCV
		     , IFWMS103.LGORT      AS LGORT
		     , ' ' AS LGORTNM
		     , ' ' AS USRID1
		     , ' ' AS UNAME1
		     , ' ' AS DEPTID1
		     , ' ' AS DNAME1
		     , ' ' AS USRID2
		     , ' ' AS UNAME2
		     , ' ' AS DEPTID2
		     , ' ' AS DNAME2
		     , ' ' AS USRID3
		     , ' ' AS UNAME3
		     , ' ' AS DEPTID3
		     , ' ' AS DNAME3
		     , ' ' AS USRID4
		     , ' ' AS UNAME4
		     , ' ' AS DEPTID4
		     , ' ' AS DNAME4
		     , ' '                 AS DOCTXT
		     , IFWMS103.EBELN      AS EBELN
		FROM IFWMS103
		       LEFT OUTER JOIN SKUMA SM		ON SM.OWNRKY		= #OWNRKY#
		   									AND SM.SKUKEY		= IFWMS103.SKUKEY
		       LEFT OUTER JOIN SKUWC SW		ON SW.WAREKY		= #WAREKY#	<!-- Parameter[3] -->
											AND SW.OWNRKY		= #OWNRKY#
											AND SW.SKUKEY		= IFWMS103.SKUKEY
		       LEFT OUTER JOIN MEASI ITFMS	ON ITFMS.WAREKY		= #WAREKY#	<!-- Parameter[5] -->
											AND ITFMS.MEASKY	= SW.MEASKY
											AND ITFMS.UOMKEY	= IFWMS103.MEINS
		       LEFT OUTER JOIN WAHMA WH		ON WH.WAREKY		= IFWMS103.WAREKY
		       LEFT OUTER JOIN DOCCM DC		ON DC.DOCCAT		= '050'
		       LEFT OUTER JOIN DOCTM DT		ON DT.DOCUTY		= #ASNTTY#	<!-- Parameter[6] -->
		        LEFT OUTER JOIN BZPTN VD		
											ON  VD.OWNRKY		= IFWMS103.WERKS AND VD.PTNRKY = IFWMS103.LIFNR
											AND VD.PTNRTY 		= DECODE(SUBSTR(IFWMS103.BWART,0,2), '13', 'CT', 'VD')									
		
<!-- 		       LEFT OUTER JOIN BZPTN VD		ON VD.PTNRKY		= IFWMS103.LIFNR -->
<!-- 		   									AND VD.PTNRTY		= 'VD' -->
<!-- 											AND VD.PTNL05	IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)	 -->
<!-- 		       LEFT OUTER JOIN VUSER_WMSERP VU	ON VU.USERID	= 'DEV' -->
<!-- 		       LEFT OUTER JOIN VUSER_WAREDOCUSER VU2	ON VU2.WAREKY	= #WAREKY#	 -->
<!-- 														AND VU2.DOCUTY	= #ASNTTY#	 -->
		
		WHERE IFWMS103.WERKS   = #OWNRKY#
		AND IFWMS103.STATUS IN ('A','C')
		AND IFWMS103.IFFLG  = 'N'
<!-- 		AND IFWMS103.IFFLG  IN ('N','Y') -->
<!-- 		AND IFWMS103.BWART   = '102' -->
		AND (IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R) > 0
		<!-- AND #WAREKY# LIKE (CASE WHEN IFWMS103.WERKS = 'CSHA' AND IFWMS103.WAREKY = 'WSH_' THEN 'WSH%'	
		                           ELSE IFWMS103.WAREKY END)  -->
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		GROUP BY	IFWMS103.EBELN, IFWMS103.WAREKY, IFWMS103.LIFNR, IFWMS103.EINDT, IFWMS103.LGORT,
					WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01 <!--,  LG.NAME01,
					VU.ERPUSR, VU.ERPNAM, VU.DEPTID, VU.DPNAME,
					VU2.ERPUS2, VU2.USNAM2, VU2.DEPID2, VU2.DPNAM2,
					VU2.ERPUS3, VU2.USNAM3, VU2.DEPID3, VU2.DPNAM3,
					VU2.ERPUS4, VU2.USNAM4, VU2.DEPID4, VU2.DPNAM4 -->
		ORDER BY EBELN DESC
	</select>
	<!-- AS01 HEAD GRID SELECT END -->
	
	
	<!-- AS01 ITEM GRID SELECT START -->
	<select id="AS01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.ADVANCEDSHIPMENTNOTICE.FIND_INTERFACE_TO_CREATE_ASNDI -->
		
		SELECT 
		       ' '                    AS ASNDKY
		     , ' '                    AS ASNDIT
		     , 'NEW'                  AS STATIT
		     , IFWMS103.SKUKEY        AS SKUKEY
		     , IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS QTYASN <!-- 예정량 -->
		     , IFWMS103.MENGE_B 	  AS QTYASN1 <!-- 기예정량 -->
		     , IFWMS103.MENGE         AS QTYORD	<!-- 오더수량 -->
		     , IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS INQTYASN <!-- 입력예정수량 --> 
		     , IFWMS103.MENGE_R 	  AS QTYRCV <!-- 입고수량 -->
		     , NVL(SW.MEASKY,' ')     AS MEASKY
		     , IFWMS103.MEINS         AS UOMKEY
		     , NVL(ITFMS.QTPUOM,0)    AS QTPUOM
		     , NVL(SM.DUOMKY,' ')     AS DUOMKY
		     , NVL(SM.QTDUOM,9999999) AS QTDUOM
		     , TRUNC((IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R) / NVL(SM.QTDUOM,9999999)) AS BOXQTY
		     , MOD((IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R), NVL(SM.QTDUOM,9999999))    AS REMQTY
		     , ' '                AS RCSTKY
		     , SW.LOCARV          AS LOCARV
		     , ' '                AS LOTA01		/* IFWMS103.DEPTID1 AS LOTA01, */
		     , ' '                AS LOTA01NM		/* L01NM.NAME01 AS LOTA01NM, */
		     , ' '                AS LOTA02
		     , IFWMS103.LIFNR     AS LOTA03
		     , IFWMS103.EBELN||IFWMS103.EBELP AS LOTA04
		     , IFWMS103.C00104    AS LOTA05
		     , '00'               AS LOTA06
		     , ' '                AS LOTA07
		     , ' '                AS LOTA08
		     , ' '                AS LOTA09
		     , ' '                AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , ' '                AS LOTA12
		     , ' '                AS LOTA13
		     , ' '                AS LOTA14
		     , ' '                AS LOTA15
		     , 0                  AS LOTA16
		     , 0                  AS LOTA17
		     , 0                  AS LOTA18
		     , 0                  AS LOTA19
		     , 0                  AS LOTA20
		     , ' '                AS LRCPTD
		     , IFWMS103.EBELN     AS REFDKY
		     , IFWMS103.EBELP     AS REFDIT
		     , ' '                AS REFCAT
		     , IFWMS103.VGBEL     AS EASNKY
		     , ' '                AS EASNIT
		     , NVL(SM.DESC01,' ') AS DESC01
		     , NVL(SM.DESC02,' ') AS DESC02
		     , NVL(SM.ASKU01,' ') AS ASKU01	<!-- Parameter[0] -->
		     , NVL(SM.ASKU02,' ') AS ASKU02
		     , NVL(SM.ASKU03,' ') AS ASKU03
		     , NVL(SM.ASKU04,' ') AS ASKU04
		     , NVL(SM.ASKU05,' ') AS ASKU05
		     , NVL(SM.EANCOD,' ') AS EANCOD
		     , NVL(SM.GTINCD,' ') AS GTINCD
		     , NVL(SM.SKUG01,' ') AS SKUG01
		     , NVL(SM.SKUG02,' ') AS SKUG02
		     , NVL(SM.SKUG03,' ') AS SKUG03
		     , NVL(SM.SKUG04,' ') AS SKUG04
		     , NVL(SM.SKUG05,' ') AS SKUG05
		     , NVL(SM.GRSWGT,0)   AS GRSWGT
		     , NVL(SM.NETWGT,0)   AS NETWGT
		     , NVL(SM.WGTUNT,' ') AS WGTUNT
		     , NVL(SM.LENGTH,0)   AS LENGTH
		     , NVL(SM.WIDTHW,0)   AS WIDTHW
		     , NVL(SM.HEIGHT,0)   AS HEIGHT
		     , NVL(SM.CUBICM,0)   AS CUBICM
		     , NVL(SM.CAPACT,0)   AS CAPACT
		     , IFWMS103.MANDT     AS SMANDT
		     , IFWMS103.EBELN     AS SEBELN
		     , IFWMS103.EBELP     AS SEBELP
		     , ' '                AS SZMBLNO
		     , ' '                AS SZMIPNO
		     , IFWMS103.VGBEL     AS STRAID
		     , ' '                AS SVBELN
		     , ' '                AS SPOSNR
		     , ' '                AS STKNUM
		     , ' '                AS STPNUM
		     , ' '                AS SWERKS
		     , IFWMS103.LGORT     AS SLGORT
		     , ' '                AS SDATBG
		     , ' '                AS STDLNR
		     , ' '                AS SSORNU
		     , ' '                AS SSORIT
		     , ' '                AS SMBLNR
		     , ' '                AS SZEILE
		     , ' '                AS SMJAHR
		     , ' '                AS SXBLNR
		     , ' '                AS SBKTXT
		     , ' '                AS AWMSNO
		FROM	IFWMS103
				LEFT OUTER JOIN SKUMA SM	ON SM.OWNRKY		= #OWNRKY#	<!-- Parameter[1] -->
											AND SM.SKUKEY		= IFWMS103.MATNR
				LEFT OUTER JOIN SKUWC SW	ON SW.WAREKY		= #WAREKY#	<!-- Parameter[2] -->
											AND SW.OWNRKY		= #OWNRKY#	<!-- Parameter[3] -->
											AND SW.SKUKEY		= IFWMS103.MATNR
				LEFT OUTER JOIN MEASI ITFMS	ON ITFMS.WAREKY		= #WAREKY#	<!-- Parameter[4] -->
											AND ITFMS.MEASKY	= SW.MEASKY
											AND ITFMS.UOMKEY	= IFWMS103.MEINS
<!-- 				LEFT OUTER JOIN BZPTN L01NM	ON L01NM.PTNRKY		= IFWMS103.DEPTID1 -->
<!-- 											AND L01NM.PTNRTY	= 'TM' -->
<!-- 											AND L01NM.PTNL05	IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)-->
		WHERE	IFWMS103.WERKS   = #OWNRKY#	<!-- Parameter[6] -->
		AND		IFWMS103.STATUS IN ('A','C')
		AND 	IFWMS103.IFFLG  = 'N'
<!-- 		AND		IFWMS103.IFFLG  IN ('N','Y') -->
<!-- 		AND		IFWMS103.BWART   = '102' -->
<!-- 		AND		#WAREKY#      LIKE (CASE WHEN IFWMS103.WERKS = 'CSHA' AND IFWMS103.WAREKY = 'WSH_' THEN 'WSH%'	 -->
<!-- 			   						ELSE IFWMS103.WAREKY END) -->
		AND		(MENGE - MENGE_B - MENGE_R) > 0
		
		AND		IFWMS103.EBELN = #SEBELN#	<!-- Parameter[8] -->
		
		<isNotEmpty property="RANGE_SQL">
		       $RANGE_SQL$
		</isNotEmpty>
	</select>
	<!-- AS01 ITEM GRID SELECT END -->
	

	<!-- AS01 HEAD GRID INSERT START -->
 	<update id="AS01T_UPDATE" parameterClass="Map">
		INSERT INTO ASNDH
		(
			  WAREKY
			, ASNTTY
			, STATDO
			, DOCDAT
			, DOCCAT
			
			, OWNRKY
			, DPTNKY
			, DRELIN
			, PRCPTD
			, LRCPTD
			
			, INDDCL
			, RSNCOD
			, RSNRET
			, QTYASN
			, QTYRCV
			
			, USRID1
			, UNAME1
			, DEPTID1
			, DNAME1
			
			, USRID2
			, UNAME2
			, DEPTID2
			, DNAME2
			
			, USRID3
			, UNAME3
			, DEPTID3
			, DNAME3
			
			, USRID4
			, UNAME4
			, DEPTID4
			, DNAME4
			
			, DOCTXT
			
			, INDBZL
			, INDARC
			, UPDCHK
			, ASNDKY
			
			, CREDAT
			, CRETIM
			, CREUSR
			
			, LMODAT
			, LMOTIM
			, LMOUSR
		) VALUES (
			  #WAREKY#
			, #ASNTTY#
			, #STATDO#
			, #DOCDAT#
			, #DOCCAT#
			, #OWNRKY#
			, #DPTNKY#
			, #DRELIN#
			, #PRCPTD#
			, #LRCPTD#
			, #INDDCL#
			, #RSNCOD#
			, #RSNRET#
			, TO_NUMBER(NVL(TRIM(#QTYASN#), 0))
			, TO_NUMBER(NVL(TRIM(#QTYRCV#), 0))
			, #USRID1#
			, #UNAME1#
			, #DEPTID1#
			, #DNAME1#
			, #USRID2#
			, #UNAME2#
			, #DEPTID2#
			, #DNAME2#
			, #USRID3#
			, #UNAME3#
			, #DEPTID3#
			, #DNAME3#
			, #USRID4#
			, #UNAME4#
			, #DEPTID4#
			, #DNAME4#
			, #DOCTXT#
			, NVL(#INDBZL#, ' ')
			, NVL(#INDARC#, ' ')
			, TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			, #ASNDKY#
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, TO_CHAR(SYSDATE, 'HH24MISS')
			, 'DEV'
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, TO_CHAR(SYSDATE, 'HH24MISS')
			, 'DEV' )
	</update>
	<!-- AS01 HEAD GRID INSERT END -->

	<insert id="AS01Sub2_UPDATE" parameterClass="Map">
		INSERT INTO ASNDI
		(
			  ASNDKY
			, ASNDIT
			, STATIT
			, SKUKEY
			, QTYASN
			, QTYRCV
			, QTYUOM
			, MEASKY
			, UOMKEY
			, QTPUOM
			, DUOMKY
			, QTDUOM
			, RCSTKY
			, LOCARV
			, LOTA01
			, LOTA02
			, LOTA03
			, LOTA04
			, LOTA05
			, LOTA06
			, LOTA07
			, LOTA08
			, LOTA09
			, LOTA10
			, LOTA11
			, LOTA12
			, LOTA13
			, LOTA14
			, LOTA15
			, LOTA16
			, LOTA17
			, LOTA18
			, LOTA19
			, LOTA20
			, LRCPTD
			, REFDKY
			, REFDIT
			, REFCAT
			, EASNKY
			, EASNIT
			, DESC01
			, DESC02
			, ASKU01
			, ASKU02
			, ASKU03
			, ASKU04
			, ASKU05
			, EANCOD
			, GTINCD
			, SKUG01
			, SKUG02
			, SKUG03
			, SKUG04
			, SKUG05
			, GRSWGT
			, NETWGT
			, WGTUNT
			, LENGTH
			, WIDTHW
			, HEIGHT
			, CUBICM
			, CAPACT
			, SMANDT
			, SEBELN
			, SEBELP
			, SZMBLNO
			, SZMIPNO
			, STRAID
			, SVBELN
			, SPOSNR
			, STKNUM
			, STPNUM
			, SWERKS
			, SLGORT
			, SDATBG
			, STDLNR
			, SSORNU
			, SSORIT
			, SMBLNR
			, SZEILE
			, SMJAHR
			, SXBLNR
			, SBKTXT
			, AWMSNO
			, CREDAT
			, CRETIM
			, CREUSR
			, LMODAT
			, LMOTIM
			, LMOUSR
			
		)
		VALUES (
			  #ASNDKY#
			, #ASNDIT#
			, #STATIT#									
			, #SKUKEY#
			, TO_NUMBER(NVL(TRIM(#QTYASN#), 0))
			, TO_NUMBER(NVL(TRIM(#QTYRCV#), 0))
			, TO_NUMBER(NVL(TRIM(#QTYUOM#), 0))
			, NVL( #MEASKY#, ' ')
			, #UOMKEY#
			, TO_NUMBER(NVL(TRIM(#QTPUOM#), 0))
			, NVL( #DUOMKY#, ' ')
			, TO_NUMBER(NVL(TRIM(#QTDUOM#), 9999999))
			, NVL( #RCSTKY#, ' ')
			, NVL( #LOCARV#, ' ')
			, NVL( #LOTA01#, ' ')
			, NVL( #LOTA02#, ' ')
			, #LOTA03#
			, #SEBELN#
			, NVL( #LOTA05#, ' ')
			, #LOTA06#
			, NVL( #LOTA07#, ' ')
			, NVL( #LOTA08#, ' ')
			, NVL( #LOTA09#, ' ')
			, NVL( #LOTA10#, ' ')
			, TO_CHAR(SYSDATE,'YYYYMMDD')
			, NVL( #LOTA12#, ' ')
			, NVL( #LOTA13#, ' ')
			, NVL( #LOTA14#, ' ')
			, NVL( #LOTA15#, ' ')
			, TO_NUMBER(NVL(TRIM(#LOTA16#), 0))
			, TO_NUMBER(NVL(TRIM(#LOTA17#), 0))
			, TO_NUMBER(NVL(TRIM(#LOTA18#), 0))
			, TO_NUMBER(NVL(TRIM(#LOTA19#), 0))
			, TO_NUMBER(NVL(TRIM(#LOTA20#), 0))
			, #LRCPTD#
			, #REFDKY#
			, #REFDIT#
			, #REFCAT#
			, #EASNKY#
			, #EASNIT#
			, #DESC01#
			, #DESC02#
			, #ASKU01#
			, #ASKU02#
			, #ASKU03#
			, #ASKU04#
			, #ASKU05#
			, #EANCOD#
			, #GTINCD#
			, #SKUG01#
			, #SKUG02#
			, #SKUG03#
			, #SKUG04#
			, #SKUG05#
			, #GRSWGT#
			, #NETWGT#
			, #WGTUNT#
			, #LENGTH#
			, #WIDTHW#
			, #HEIGHT#
			, #CUBICM#
			, #CAPACT#
			, #SMANDT#
			, #SEBELN#
			, #SEBELP#
			, #SZMBLNO#
			, #SZMIPNO#
			, #STRAID#
			, #SVBELN#
			, #SPOSNR#
			, #STKNUM#
			, #STPNUM#
			, #SWERKS#
			, #SLGORT#
			, NVL( #SDATBG#, ' ')
			, NVL( #STDLNR#, ' ')
			, NVL( #SSORNU#, ' ')
			, NVL( #SSORIT#, ' ')
			, NVL( #SMBLNR#, ' ')
			, NVL( #SZEILE#, ' ')
			, NVL( #SMJAHR#, ' ')
			, NVL( #SXBLNR#, ' ')
			, NVL( #SBKTXT#, ' ')
			, NVL( #AWMSNO#, ' ')
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, TO_CHAR(SYSDATE, 'HH24MISS')
			, 'DEV'
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, TO_CHAR(SYSDATE, 'HH24MISS')
			, 'DEV'
		) 
	</insert>
	<!-- AS01 ITEM GRID INSERT END -->
	
	
	<!-- AS01 HEAD GRID RESELECT START -->
	<select id="AS01H_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT AH.ASNDKY                                                                                                       
	           , AI.SEBELN                                                                                                                      
			   , AH.WAREKY                                                                                                              
			   , NVL(WH.NAME01,' ') AS WAREKYNM                                                                                         
	           , ASNTTY                                                                                                                         
	           , NVL(DT.SHORTX,' ')  AS ASNTTYNM                                                                                                                                                                                                         
			   , NVL(DC.SHORTX,' ') AS DOCCATNM                                                                                                         
			   , NVL(VD.NAME01,' ') AS DPTNKYNM                                                                                                         
			   ,' ' AS LGORT                                                                                                            
			   ,' ' AS LGORTNM                                                                                                          
			   ,' ' AS EBELN                                                                                                            
			   , AH.STATDO                                                                                                              
			   , AH.DOCDAT                                                                                                              
			   , AH.DOCCAT                                                                                                              
			   , AH.OWNRKY                                                                                                              
			   , AH.DPTNKY                                                                                                              
			   , AH.DRELIN                                                                                                              
			   , AH.PRCPTD                                                                                                              
			   , AH.LRCPTD                                                                                                           
			   , AH.INDDCL                                                                                                              
			   , AH.RSNCOD                                                                                                              
			   , AH.RSNRET                                                                                                              
			   , AH.QTYASN                                                                                                           
			   , AH.QTYRCV                                                                                                           
			   , AH.USRID1                                                                                                              
			   , AH.UNAME1                                                                                                              
			   , AH.DEPTID1                                                                                                             
			   , AH.DNAME1                                                                                                              
			   , AH.USRID2                                                                                                              
			   , AH.UNAME2                                                                                                              
			   , AH.DEPTID2                                                                                                             
			   , AH.DNAME2                                                                                                              
			   , AH.USRID3                                                                                                              
			   , AH.UNAME3                                                                                                              
			   , AH.DEPTID3                                                                                                             
			   , AH.DNAME3                                                                                                              
			   , AH.USRID4                                                                                                              
			   , AH.UNAME4                                                                                                              
			   , AH.DEPTID4                                                                                                             
			   , AH.DNAME4                                                                                                              
			   , AH.DOCTXT                                                                                                              
			   , AH.CREDAT                                                                                                              
			   , AH.CRETIM                                                                                                              
			   , AH.CREUSR                                                                                                              
			   , AH.LMODAT                                                                                                              
			   , AH.LMOTIM                                                                                                              
			   , AH.LMOUSR                                                                                                              
		FROM	ASNDH AH                                                                                                             
            LEFT OUTER JOIN WAHMA WH	ON      WH.WAREKY = AH.WAREKY                                               
		    LEFT OUTER JOIN ASNDI AI    ON      AH.ASNDKY = AI.ASNDKY                                                  
            LEFT OUTER JOIN DOCCM DC	ON      DC.DOCCAT = #DOCCAT#                                                   
		    LEFT OUTER JOIN DOCTM DT	ON      DT.DOCUTY = #ASNTTY#
            LEFT OUTER JOIN BZPTN VD		
										ON      VD.OWNRKY = AH.OWNRKY AND VD.PTNRKY = AH.DPTNKY
										AND     VD.PTNRTY = DECODE(SUBSTR(AH.ASNTTY,0,2), '13', 'CT', 'VD')
		WHERE AH.ASNDKY IN ( $ASNDKY$ )
		 	<!-- <iterate property="ASNDKY" open="ASNDKY IN (" close=")" conjunction=",">
 				#ASNDKY[]#
			</iterate> -->
	</select>
	<!-- AS01 HEAD GRID RESELECT END -->
	
	<!-- AS01 ITEM GRID RESELECT START -->
	<select id="AS01I_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT   ASNDKY
		       , AI.ASNDIT
		       , AI.STATIT
		       , AI.SKUKEY
		       , AI.QTYASN
               , IFWMS103.MENGE_B   AS QTYASN1
		       , IFWMS103.MENGE     AS QTYORD
		       , AI.QTYRCV
		       , AI.QTYUOM
		       , AI.MEASKY
		       , AI.UOMKEY
		       , AI.QTPUOM
		       , AI.DUOMKY
		       , AI.QTDUOM
		       , AI.RCSTKY
		       , TRUNC(QTYRCV/QTDUOM) AS BOXQTY
			   , MOD(QTYRCV,QTDUOM) AS REMQTY
		       , AI.LOCARV
		       , AI.LOTA01
		       , AI.LOTA02
		       , AI.LOTA03
		       , AI.LOTA04
		       , AI.LOTA05
		       , AI.LOTA06
		       , AI.LOTA07
		       , AI.LOTA08
		       , AI.LOTA09
		       , AI.LOTA10
		       , AI.LOTA11
		       , AI.LOTA12
		       , AI.LOTA13
		       , AI.LOTA14
		       , AI.LOTA15
		       , AI.LOTA16
		       , AI.LOTA17
		       , AI.LOTA18
		       , AI.LOTA19
		       , AI.LOTA20
		       , AI.LRCPTD
		       , AI.REFDKY
		       , AI.REFDIT
		       , AI.REFCAT
		       , AI.EASNKY
		       , AI.EASNIT
		       , AI.DESC01
		       , AI.DESC02
		       , AI.ASKU01
		       , AI.ASKU02
		       , AI.ASKU03
		       , AI.ASKU04
		       , AI.ASKU05
		       , AI.EANCOD
		       , AI.GTINCD
		       , AI.SKUG01
		       , AI.SKUG02
		       , AI.SKUG03
		       , AI.SKUG04
		       , AI.SKUG05
		       , AI.GRSWGT
		       , AI.NETWGT
		       , AI.WGTUNT
		       , AI.LENGTH
		       , AI.WIDTHW
		       , AI.HEIGHT
		       , AI.CUBICM
		       , AI.CAPACT
		       , AI.SMANDT
		       , AI.SEBELN
		       , AI.SEBELP
		       , AI.SZMBLNO
		       , AI.SZMIPNO
		       , AI.STRAID
		       , AI.SVBELN
		       , AI.SPOSNR
		       , AI.STKNUM
		       , AI.STPNUM
		       , AI.SWERKS
		       , AI.SLGORT
		       , AI.SDATBG
		       , AI.STDLNR
		       , AI.SSORNU
		       , AI.SSORIT
		       , AI.SMBLNR
		       , AI.SZEILE
		       , AI.SMJAHR
		       , AI.SXBLNR
		       , AI.SBKTXT
		       , AI.AWMSNO
		       , AI.CREDAT
		       , AI.CRETIM
		       , AI.CREUSR
		       , AI.LMODAT
		       , AI.LMOTIM
		       , AI.LMOUSR
		       ,' ' AS LOTA01NM
		FROM    ASNDI AI
            INNER JOIN IFWMS103	ON 	IFWMS103.EBELN = AI.LOTA04
            					AND IFWMS103.EBELP = AI.ASNDIT
		WHERE	ASNDKY = #ASNDKY#
	</select>
	<!-- AS01 ITEM GRID RESELECT END -->
	
	
	<!-- AS01 VALIDATION START -->
	<select id="AS01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.ADVANCEDSHIPMENTNOTICE.VALIDATE -->
		
		SELECT CASE WHEN DC.DOCCAT IS NULL THEN 'DOCCAT' || '/' || STD.DOCCAT
					WHEN DT.DOCUTY IS NULL THEN 'DOCUTY' || '/' || STD.DOCUTY
		            WHEN WH.WAREKY IS NULL THEN 'WAREKY' || '/' || STD.WAREKY
		            WHEN OW.OWNRKY IS NULL THEN 'OWNRKY' || '/' || STD.OWNRKY
		            WHEN BZ.PTNRKY IS NULL THEN 'DPTNKY' || '/' || STD.DPTNKY
		            WHEN SM.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY
		            WHEN SW.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY
		            WHEN MH.MEASKY IS NULL THEN 'MEASKY' || '/' || STD.MEASKY
		            WHEN MI.UOMKEY IS NULL THEN 'UOMKEY' || '/' || STD.UOMKEY
		            WHEN STD.DOCUTY IN ('101','102','103','104','109','110','111','115')
             					AND (IF.C00102 IS NULL OR IF.C00102 = ' ') THEN 'RORDCF' || '/' || STD.EBELN
            		ELSE 'OK'
        			END AS "resultMsg"
		FROM	( $VALIDATION_SQL$ ) STD
       			LEFT OUTER JOIN IFWMS103 IF	ON IF.WERKS = STD.OWNRKY
											AND IF.EBELN = STD.EBELN
											AND IF.EBELP = STD.EBELP
											AND IF.STATUS IN ('A','C')
											AND IF.IFFLG IN ('N','Y')
				LEFT OUTER JOIN DOCCM DC	ON DC.DOCCAT = STD.DOCCAT
				LEFT OUTER JOIN DOCTM DT	ON DT.DOCUTY = STD.DOCUTY
				LEFT OUTER JOIN WAHMA WH	ON WH.WAREKY = STD.WAREKY
				LEFT OUTER JOIN OWNER OW	ON OW.OWNRKY = STD.OWNRKY
				LEFT OUTER JOIN BZPTN BZ	ON BZ.PTNRKY = STD.DPTNKY
											AND BZ.PTNRTY IN ('VD','TM','CT')
											AND BZ.PTNL05 = STD.OWNRKY
				LEFT OUTER JOIN SKUMA SM	ON SM.OWNRKY = STD.OWNRKY
											AND SM.SKUKEY = STD.SKUKEY
				LEFT OUTER JOIN SKUWC SW	ON SW.WAREKY = STD.WAREKY
											AND SW.OWNRKY = STD.OWNRKY
											AND SW.SKUKEY = STD.SKUKEY
				LEFT OUTER JOIN MEASH MH	ON MH.WAREKY = STD.WAREKY
											AND MH.MEASKY = STD.MEASKY
				LEFT OUTER JOIN MEASI MI	ON MI.WAREKY = STD.WAREKY
											AND MI.MEASKY = STD.MEASKY
											AND MI.UOMKEY = STD.UOMKEY
	</select>
	<!-- AS01 VALIDATION END -->
	
<!-- AS01 SQL END-->
<!-- //입하예정정보입력 -->




<!-- 입하예정정보삭제 -->
<!-- AS02 SQL START-->

	<!-- AS02 HEAD GRID SELECT START -->
	<select id="AS02_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.ADVANCEDSHIPMENTNOTICE.FIND_ASNDH -->	
		SELECT	 
			    AH.ASNDKY  AS ASNDKY
			  , AH.WAREKY  AS WAREKY
			  , NVL(WH.NAME01,' ') AS WAREKYNM
			  , AH.ASNTTY  AS ASNTTY
			  , NVL(DT.SHORTX,' ') AS ASNTTYNM
			  , AH.STATDO  AS STATDO
			  , AH.DOCDAT  AS DOCDAT
			  , AH.DOCCAT  AS DOCCAT
			  , NVL(DC.SHORTX,' ') AS DOCCATNM
			  , AH.OWNRKY  AS OWNRKY
			  , AH.DPTNKY  AS DPTNKY
			  , NVL(VD.NAME01,' ') AS DPTNKYNM
			  , AH.DRELIN  AS DRELIN
			  , AH.PRCPTD  AS PRCPTD
			  , AH.LRCPTD  AS LRCPTD
		      , AH.INDDCL  AS INDDCL
		      , AH.RSNCOD  AS RSNCOD
		      , AH.RSNRET  AS RSNRET
		      , AI.SLGORT  AS LGORT
		      , NVL(LG.NAME01,' ') AS LGORTNM
		      , AH.QTYASN  AS QTYASN
		      , AH.QTYRCV  AS QTYRCV
		      , AH.USRID1  AS USRID1
		      , AH.UNAME1  AS UNAME1
		      , AH.DEPTID1 AS DEPTID1
		      , AH.DNAME1  AS DNAME1
		      , AH.USRID2  AS USRID2
		      , AH.UNAME2  AS UNAME2
		      , AH.DEPTID2 AS DEPTID2
		      , AH.DNAME2  AS DNAME2
		      , AH.USRID3  AS USRID3
		      , AH.UNAME3  AS UNAME3
		      , AH.DEPTID3 AS DEPTID3
		      , AH.DNAME3  AS DNAME3
		      , AH.USRID4  AS USRID4
		      , AH.UNAME4  AS UNAME4
		      , AH.DEPTID4 AS DEPTID4
		      , AH.DNAME4  AS DNAME4
		      , AH.DOCTXT  AS DOCTXT
		      , AI.SEBELN  AS EBELN
		      , AH.CREDAT  AS CREDAT
		      , AH.CRETIM  AS CRETIM
		      , AH.CREUSR  AS CREUSR
		      , CU.NMLAST  AS CUSRNM
		      , AH.LMODAT  AS LMODAT
		      , AH.LMOTIM  AS LMOTIM
		      , AH.LMOUSR  AS LMOUSR
		      , LU.NMLAST  AS LUSRNM
		FROM	ASNDH AH
				INNER JOIN ASNDI AI			ON AI.ASNDKY = AH.ASNDKY
				LEFT OUTER JOIN USRMA CU	ON CU.USERID = AH.CREUSR
				LEFT OUTER JOIN USRMA LU	ON LU.USERID = AH.LMOUSR
				LEFT OUTER JOIN WAHMA WH	ON WH.WAREKY = AH.WAREKY
				LEFT OUTER JOIN DOCCM DC	ON DC.DOCCAT = '050'
				LEFT OUTER JOIN DOCTM DT	ON DT.DOCUTY = AH.ASNTTY
				LEFT OUTER JOIN BZPTN VD	ON VD.PTNRKY = AH.DPTNKY
											AND VD.PTNRTY = 'VD'
											AND VD.PTNL05 IN ( SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)	<!-- Parameter[0] -->
				LEFT OUTER JOIN BZPTN LG	ON LG.PTNRKY = AI.SLGORT
											AND LG.PTNRTY = 'WH'
											AND LG.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)		<!-- Parameter[1] -->
				WHERE AH.WAREKY = #WAREKY#	<!-- Parameter[2] -->
			<isNotEmpty property="ASNTTY">
				AND AH.ASNTTY = #ASNTTY#	<!-- Parameter[3] -->
			</isNotEmpty>
				AND AH.STATDO = 'NEW'
				AND AI.QTYASN != '0'
			<isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
			</isNotEmpty>
		GROUP BY AH.ASNDKY, AH.WAREKY, AH.ASNTTY, AH.STATDO, AH.DOCDAT, AH.DOCCAT, AH.OWNRKY, AH.DPTNKY,
				 AH.DRELIN, AH.PRCPTD, AH.LRCPTD, AH.INDDCL, AH.RSNCOD, AH.RSNRET, AH.QTYASN, AH.QTYRCV, AI.SEBELN, AI.SLGORT,
				 AH.CREDAT, AH.CRETIM, AH.CREUSR, CU.NMLAST, AH.LMODAT, AH.LMOTIM, AH.LMOUSR, LU.NMLAST,
				 WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01, LG.NAME01,
				 AH.USRID1, AH.UNAME1, AH.DEPTID1, AH.DNAME1, AH.USRID2, AH.UNAME2, AH.DEPTID2, AH.DNAME2,
				 AH.USRID3, AH.UNAME3, AH.DEPTID3, AH.DNAME3, AH.USRID4, AH.UNAME4, AH.DEPTID4, AH.DNAME4,
				 AH.DOCTXT
				 ORDER BY AH.ASNDKY DESC
	</select>
	<!-- AS02 HEAD GRID SELECT END -->
	

	<!-- AS02 ITEM GRID SELECT START -->
	<select id="AS02Sub_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.ADVANCEDSHIPMENTNOTICE.FIND_ASNDI -->
	
		SELECT	 
				 AI.ASNDKY AS ASNDKY
				, AI.ASNDIT AS ASNDIT
				, AI.STATIT AS STATIT
				, AI.SKUKEY AS SKUKEY
				, AI.QTYASN AS QTYASN
				, AI.QTYRCV AS QTYRCV
				, AI.QTYUOM AS QTYUOM
				, AI.MEASKY AS MEASKY
				, AI.UOMKEY AS UOMKEY
				, IF.MENGE_B AS QTYASN1
		        , IF.MENGE AS QTYORD
		        
				, AI.QTPUOM AS QTPUOM
				, AI.DUOMKY AS DUOMKY
				, AI.QTDUOM AS QTDUOM
				, TRUNC(AI.QTYRCV/AI.QTDUOM) AS BOXQTY
				, MOD(AI.QTYRCV,AI.QTDUOM) AS REMQTY
				, AI.RCSTKY AS RCSTKY
				, AI.LOCARV AS LOCARV
				, AI.LOTA01 AS LOTA01
				, L01NM.NAME01 AS LOTA01NM
				, AI.LOTA02 AS LOTA02
				
				, AI.LOTA03 AS LOTA03
				, AI.LOTA04 AS LOTA04
				, AI.LOTA05 AS LOTA05
				, AI.LOTA06 AS LOTA06
				, AI.LOTA07 AS LOTA07
				, AI.LOTA08 AS LOTA08
				, AI.LOTA09 AS LOTA09
				, AI.LOTA10 AS LOTA10
				, AI.LOTA11 AS LOTA11
				, AI.LOTA12 AS LOTA12
				
				, AI.LOTA13 AS LOTA13
				, AI.LOTA14 AS LOTA14
				, AI.LOTA15 AS LOTA15
				, AI.LOTA16 AS LOTA16
				, AI.LOTA17 AS LOTA17
				, AI.LOTA18 AS LOTA18
				, AI.LOTA19 AS LOTA19
				, AI.LOTA20 AS LOTA20
				, AI.LRCPTD AS LRCPTD
				, AI.REFDKY AS REFDKY
				
				, AI.REFDIT AS REFDIT
				, AI.REFCAT AS REFCAT
				, AI.EASNKY AS EASNKY
				, AI.EASNIT AS EASNIT
				, AI.DESC01 AS DESC01
				, AI.DESC02 AS DESC02
				, AI.ASKU01 AS ASKU01
				, AI.ASKU02 AS ASKU02
				, AI.ASKU03 AS ASKU03
				, AI.ASKU04 AS ASKU04
				
				, AI.ASKU05 AS ASKU05
				, AI.EANCOD AS EANCOD
				, AI.GTINCD AS GTINCD
				, AI.SKUG01 AS SKUG01
				, AI.SKUG02 AS SKUG02
				, AI.SKUG03 AS SKUG03
				, AI.SKUG04 AS SKUG04
				, AI.SKUG05 AS SKUG05
				, AI.GRSWGT AS GRSWGT
				, AI.NETWGT AS NETWGT
				
				, AI.WGTUNT AS WGTUNT
				, AI.LENGTH AS LENGTH
				, AI.WIDTHW AS WIDTHW
				, AI.HEIGHT AS HEIGHT
				, AI.CUBICM AS CUBICM
				, AI.CAPACT AS CAPACT
				, AI.SMANDT AS SMANDT
				, AI.SEBELN AS SEBELN
				, AI.SEBELP AS SEBELP
				, AI.SZMBLNO AS SZMBLNO
				
				, AI.SZMIPNO AS SZMIPNO
				, AI.STRAID AS STRAID
				, AI.SVBELN AS SVBELN
				, AI.SPOSNR AS SPOSNR
				, AI.STKNUM AS STKNUM
				, AI.STPNUM AS STPNUM
				, AI.SWERKS AS SWERKS
				, AI.SLGORT AS SLGORT
				, AI.SDATBG AS SDATBG
				, AI.STDLNR AS STDLNR
				
				, AI.SSORNU AS SSORNU
				, AI.SSORIT AS SSORIT
				, AI.SMBLNR AS SMBLNR
				, AI.SZEILE AS SZEILE
				, AI.SMJAHR AS SMJAHR
				, AI.SXBLNR AS SXBLNR
				, AI.SBKTXT AS SBKTXT
				, AI.AWMSNO AS AWMSNO
				, AI.CREDAT AS CREDAT
				, AI.CRETIM AS CRETIM
				, AI.CREUSR AS CREUSR
				, CU.NMLAST AS CUSRNM
				, AI.LMODAT AS LMODAT
				, AI.LMOTIM AS LMOTIM
				, AI.LMOUSR AS LMOUSR
				, LU.NMLAST AS LUSRNM
		FROM	ASNDH AH
			INNER JOIN ASNDI AI			ON	AI.ASNDKY	 =	AH.ASNDKY
            INNER JOIN IFWMS103 IF 		ON	IF.EBELN 	 =	AI.LOTA04
										AND	IF.EBELP   	 =	AI.ASNDIT            						  
			LEFT OUTER JOIN USRMA CU	ON	CU.USERID    =	AI.CREUSR
			LEFT OUTER JOIN USRMA LU	ON  LU.USERID    =	AI.LMOUSR
			LEFT OUTER JOIN BZPTN L01NM	ON  L01NM.PTNRKY =	AI.LOTA01
										AND L01NM.PTNRTY = 'TM'
										AND L01NM.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)	<!-- Parameter[0] -->
		WHERE AH.WAREKY     = #WAREKY#
		<isNotEmpty property="ASNTTY">
		AND AH.ASNTTY     = #ASNTTY#
		</isNotEmpty>
		<!-- AND ((AH.STATDO = 'NEW')) -->
		AND AH.STATDO     = 'NEW'
		AND AI.ASNDKY     = #ASNDKY#
		AND AI.QTYASN    != '0'
        <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	<!-- AS02 ITEM GRID SELECT END -->
	
	
	<!-- AS02 HEAD GRID DELETE START -->
	<delete id="AS02_DELETE" parameterClass="Map">
		DELETE 
		FROM	ASNDH 
		WHERE	ASNDKY = #ASNDKY# 
	</delete>
	<!-- AS02 HEAD GRID DELETE END -->
	
	
	<!-- AS02 ITEM GRID DELETE START -->
	<delete id="AS02Sub_DELETE" parameterClass="Map">
		DELETE 
		FROM	ASNDI
		WHERE	ASNDKY = #ASNDKY#
		<!-- AND		ASNDIT = #ASNDIT# -->
	</delete>
	<!-- AS02 ITEM GRID DELETE END -->


<!-- AS02 SQL END-->
<!-- //입하예정정보삭제 -->




<!-- 생산입하 -->
<!-- GR00 SQL START-->

	<!-- GR00 HEAD GRID SELECT START -->
<!-- 	<select id="GR00_LIST" parameterClass="Map" resultClass="DataMap"> -->
<!-- 		SQL Key : COMMON.GETDESC.ETCRECEIPT_INFO -->
<!-- 		SQL Key : COMMON.GETDESC.ERPUSER_INFO --> 
<!-- 		SQL Key : COMMON.GETDESC.ERPUSER234_INFO -->
		
<!-- 		SELECT	'' AS RECVKY	입하문서번호 -->
<!-- 				, #RCPTTY# AS RCPTTY	입하유형 -->
<!-- 				, (SELECT SHORTX FROM DOCTM WHERE DOCUTY = #RCPTTY#) AS RCPTTYNM	입하유형명 -->
				
<!-- 				, #WAREKY# AS WAREKY -->
<!-- 				, (SELECT NAME01 FROM WAHMA WHERE WAREKY = #WAREKY#) AS WAREKYNM -->
				
<!-- 				, (SELECT DOCCAT FROM DOCTM WHERE DOCUTY = #RCPTTY#) AS DOCCAT		문서유형 -->
<!-- 				, (SELECT SHORTX FROM DOCCM WHERE DOCCAT = (SELECT DOCCAT FROM DOCTM WHERE DOCUTY = #RCPTTY# )) AS DOCCATNM	문서유형명 -->
        		
<!-- 				, CONVERT(VARCHAR(8), GETDATE(), 112) AS DOCDAT	문서일자 -->
<!--         		, '' AS ARCPTD	입하일자 -->
<!--         		, '' AS DOCTXT	비고 -->
        
<!--         		, 'NEW' AS STATDO	문서상태 -->
		    
<!--         		, (	SELECT  USERID FROM    USRMA U	WHERE   U.USERID = 'DEV' ) AS USRID1 -->
<!--         		, '' AS UNAME1 -->
<!-- 				, '' AS DEPTID1 -->
<!-- 				, '' AS DNAME1 -->
								
<!-- 				, '' AS USRID2 -->
<!-- 				, '' AS UNAME2 -->
<!-- 				, '' AS DEPTID2 -->
<!-- 				, '' AS DNAME2 -->
<!-- 				, '' AS USRID3 -->
<!-- 				, '' AS UNAME3 -->
<!-- 				, '' AS DEPTID3 -->
<!-- 				, '' AS DNAME3 -->
<!-- 				, '' AS USRID4 -->
<!-- 				, '' AS UNAME4 -->
<!-- 				, '' AS DEPTID4 -->
<!-- 				, '' AS DNAME4 -->
						
<!-- 				, '' AS CREDAT -->
<!-- 				, '' AS CRETIM -->
<!-- 				, '' AS CREUSR -->
<!-- 				, '' AS CUSRNM -->
<!-- 				, '' AS LMODAT -->
<!-- 				, '' AS LMOTIM -->
<!-- 				, '' AS LMOUSR -->
<!-- 				, '' AS LUSRNM -->
<!-- 		FROM	DUAL -->
<!-- 	</select> -->
	<!-- GR00 HEAD GRID SELECT END -->


	<!-- GR00 ITEM GRID SELECT START -->
<!-- 	<select id="GR00Sub_LIST" parameterClass="Map" resultClass="DataMap"> -->

<!-- 		SELECT    '' AS RECVIT -->
<!-- 				, '' AS SKUKEY -->
<!-- 				, '' AS DESC01	품명 -->
<!-- 				, '' AS DESC02	규격 -->
												
<!-- 				, '' AS LOCAKY	지번 -->
<!-- 				, '' AS QTYRCV	입고수량 -->
											
<!-- 				, '' AS LOTA05	재고분류 -->
<!-- 				, '' AS LOTA02	재고유형 -->
<!-- 				, '' AS LOTA11	제조일자 -->
<!-- 				, '' AS RSNCOD	사유코드 -->
<!-- 				, '' AS TRNUID -->
												
<!-- 				, '' AS AREAKY	창고 -->
<!-- 				, '' AS MEASKY	단위구성 -->
<!-- 				, '' AS UOMKEY	단위 -->
<!-- 				, '' AS DUOMKY	단위 -->
<!-- 				, '' AS QTDUOM	입수 -->
<!-- 				, '' AS BOXQTY	박스수 -->
<!-- 				, '' AS REMQTY	잔량 -->
												
<!-- 				, '' AS LOTA01	S/N번호 -->
<!-- 				, '' AS LOTA01NM	영업부문명 -->
<!-- 				, '' AS LOTA03	벤더 -->
<!-- 				, '' AS LOTA04	문서번호 -->
<!-- 				, '' AS LOTA06	재고상태 -->
<!-- 				, '' AS LOTA12	입고일자 -->
<!-- 				, '' AS LOTA13	유효기간 -->
												
<!-- 				, '' AS ASKU01	WMS 통합코드 -->
<!-- 				, '' AS ASKU02	수출(E)/내수(D) -->
<!-- 				, '' AS ASKU03	ERP 오더유형 -->
<!-- 				, '' AS ASKU04	거래처 입고빈 -->
<!-- 				, '' AS ASKU05	재질 -->
												
<!-- 				, '' AS EANCOD	EAN -->
<!-- 				, '' AS GTINCD	UPC -->
												
<!-- 				, '' AS SKUG01	품목유형1 -->
<!-- 				, '' AS SKUG02	품목유형2 -->
<!-- 				, '' AS SKUG03	품목유형3 -->
												
<!-- 				, '' AS SKUG04	품종 -->
<!-- 				, '' AS SKUG05	모업체품번 -->
<!-- 				, '' AS GRSWGT	총중량  -->
<!-- 				, '' AS NETWGT	KIT순중량 -->
<!-- 				, '' AS WGTUNT	중량단위 -->
<!-- 				, '' AS LENGTH	길이 -->
<!-- 				, '' AS WIDTHW	가로 -->
<!-- 				, '' AS HEIGHT	높이 -->
<!-- 				, '' AS CUBICM	CBM -->
<!-- 				, '' AS CAPACT	CAPA -->
												
<!-- 				, '' AS CREDAT	생성일자 -->
<!-- 				, '' AS CRETIM	생성시간 -->
<!-- 				, '' AS CREUSR	생성자 -->
<!-- 				, '' AS CUSRNM	생성자명 -->
<!-- 				, '' AS LMODAT	수정일자 -->
<!-- 				, '' AS LMOTIM	수정시간 -->
<!-- 				, '' AS LMOUSR	수정자 -->
<!-- 				, '' AS LUSRNM	수정자명 -->
<!-- 		FROM	DUAL -->
<!-- 	</select> -->
	<!-- GR00 ITEM GRID SELECT END -->

<!-- GR00 SQL END-->
<!-- //생산입하 -->

<!-- ASN입하 -->
<!-- GR00 SQL START -->
	<select id="GR00_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	AH.ASNDKY 	AS "ASNDKY",
				' ' 			AS "RECVKY",
				AH.WAREKY 	AS "WAREKY",
				WH.NAME01 	AS "WARENM",
				AH.OWNRKY 	AS "OWNRKY",
		        (SELECT NAME01 FROM OWNER OW WHERE OW.OWNRKY = AH.OWNRKY) AS "OWNRNM",
		        '112' 		AS "RCPTTY",
				DT.SHORTX 	AS "RCPTTYNM",
				'NEW' 		AS "STATDO",
				' '			AS "SAPSTS",
		        AH.DOCDAT   AS "ASNDAT",
				TO_CHAR(SYSDATE,'YYYYMMDD') AS "DOCDAT",
				'100' 		AS "DOCCAT",
				DC.SHORTX 	AS "DOCCATNM",
				AH.DPTNKY 	AS "DPTNKY",
				VD.NAME01 	AS "DPTNKYNM",
				' '			AS "DRELIN",
				'00000000' 	AS "ARCPTD",
				' ' 			AS "INDRCN",
				' ' 			AS "CRECVD",
				' ' 			AS "RSNCOD",
				' ' 			AS "PUTSTS",
				AI.SLGORT 	AS "SLGORT",
				NVL(LG.NAME01,' ') AS "LGORTNM",
				AH.DOCTXT 	AS "DOCTXT",
				AI.SEBELN 	AS "SEBELN"
		 FROM 	ASNDH AH
		    INNER JOIN ASNDI AI
		               	  ON AI.ASNDKY = AH.ASNDKY
		    LEFT OUTER JOIN SKUMA SM
		                 ON SM.OWNRKY = AH.OWNRKY
		                AND SM.SKUKEY = AI.SKUKEY
		    LEFT OUTER JOIN SKUWC SW
		                 ON SW.WAREKY = AH.WAREKY
		                AND SW.OWNRKY = AH.OWNRKY
		                AND SW.SKUKEY = AI.SKUKEY
		    LEFT OUTER JOIN WAHMA WH
		                 ON WH.WAREKY = AH.WAREKY
		    LEFT OUTER JOIN DOCCM DC
		                 ON DC.DOCCAT = '100'
		    LEFT OUTER JOIN DOCTM DT
		                 ON DT.DOCUTY = AH.ASNTTY
		    LEFT OUTER JOIN BZPTN VD
		                 ON VD.PTNRKY = AH.DPTNKY
		                AND VD.PTNRTY = 'VD'
		                AND VD.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = 'WCD1')
		    LEFT OUTER JOIN BZPTN LG
		                 ON LG.PTNRKY = AI.SLGORT
		                AND LG.PTNRTY = 'WH'
		                AND LG.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = 'WCD1')
		WHERE	AH.WAREKY = #WAREKY#
		AND		AH.STATDO = 'NEW'
		AND 	(AI.QTYASN-AI.QTYRCV) > 0
		<isNotEmpty property="RANGE_SQL">
		    $RANGE_SQL$
		</isNotEmpty> 	
		GROUP BY AH.ASNDKY, AH.WAREKY, AH.DPTNKY, AH.OWNRKY, AI.SEBELN, AI.SLGORT,
		         WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01, LG.NAME01, AH.DOCDAT,
		         AH.DOCTXT
		ORDER BY AH.ASNDKY DESC 
	</select>
	
	<select id="GR00Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  
			  AI.ASNDKY AS ASNDKY,
			  AI.ASNDIT AS ASNDIT,
			  ' '  AS RECVKY ,
			  ' '  AS RECVIT ,
			  AI.STATIT  AS STATIT ,
			  ' '  AS SAPSTS ,
			  AI.SKUKEY  AS SKUKEY ,
			  ' '  AS LOTNUM ,
			  ' '  AS AREAKY ,
			  NVL(DECODE(AI.LOCARV,' ',SW.LOCARV),' ') AS LOCAKY ,
			  ' '  AS SECTID ,
			  ' '  AS TRNUID ,
			  ' '  AS PACKID ,
              (AI.QTYASN-AI.QTYRCV) as "ASNQTY",
              (AI.QTYASN-AI.QTYRCV) as "QTYRCV",
			  --DECODE(AI.TMPQTY,0,(AI.QTYASN-AI.QTYRCV),AI.TMPQTY) AS QTYRCV ,
			  0  AS QTYDIF ,
			  AI.QTYUOM  AS QTYUOM ,
			  ' '  AS TRUNTY ,
			  AI.MEASKY  AS MEASKY ,
			  AI.UOMKEY  AS UOMKEY ,
			  NVL(MI.QTPUOM,0)       AS QTPUOM ,
			  NVL(SM.DUOMKY,' ')     AS DUOMKY ,
			  NVL(SM.QTDUOM,9999999) AS QTDUOM ,
			  ' '  AS INDRCN ,
			  ' '  AS CRECVD ,
			  ' '  AS WORKID ,
			  ' '  AS WORKNM ,
			  ' '  AS HHTTID ,
			  AI.LOTA01  AS LOTA01 ,
			  AI.LOTA02  AS LOTA02 ,
			  AI.LOTA03  AS LOTA03 ,
			  BZ.NAME01  AS LOTA03NM ,
			  AI.LOTA04  AS LOTA04 ,
			  AI.LOTA05  AS LOTA05 ,
			  AI.LOTA06  AS LOTA06 ,
			  (SELECT CDESC1 FROM CMCDV WHERE CMCDKY='LOTA06' AND CMCDVL = AI.LOTA06)  AS LOTA06NM ,
			  AI.LOTA07  AS LOTA07 ,
			  AI.LOTA08  AS LOTA08 ,
			  AI.LOTA09  AS LOTA09 ,
			  AI.LOTA10  AS LOTA10 ,
			  AI.LOTA11  AS LOTA11 ,
			  AI.LOTA12  AS LOTA12 ,
			  AI.LOTA13  AS LOTA13 ,
			  AI.LOTA14  AS LOTA14 ,
			  AI.LOTA15  AS LOTA15 ,
			  AI.LOTA16  AS LOTA16 ,
			  AI.LOTA17  AS LOTA17 ,
			  AI.LOTA18  AS LOTA18 ,
			  AI.LOTA19  AS LOTA19 ,
			  AI.LOTA20  AS LOTA20 ,
			  AI.AWMSNO  AS AWMSNO ,
			  AH.ASNDKY  AS REFDKY ,
			  AI.ASNDIT  AS REFDIT ,
			  AH.DOCCAT  AS REFCAT ,
			  TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT ,
			  NVL(SM.DESC01,' ')  AS DESC01 ,
			  NVL(SM.DESC02,' ')  AS DESC02 ,
			  AI.ASKU01  AS ASKU01 ,
			  AI.ASKU02  AS ASKU02 ,
			  AI.ASKU03  AS ASKU03 ,
			  AI.ASKU04  AS ASKU04 ,
			  AI.ASKU05  AS ASKU05 ,
			  AI.EANCOD  AS EANCOD ,
			  AI.GTINCD  AS GTINCD ,
			  AI.SKUG01  AS SKUG01 ,
			  AI.SKUG02  AS SKUG02 ,
			  AI.SKUG03  AS SKUG03 ,
			  AI.SKUG04  AS SKUG04 ,
			  AI.SKUG05  AS SKUG05 ,
			  AI.GRSWGT  AS GRSWGT ,
			  AI.NETWGT  AS NETWGT ,
			  AI.WGTUNT  AS WGTUNT ,
			  AI.LENGTH  AS LENGTH ,
			  AI.WIDTHW  AS WIDTHW ,
			  AI.HEIGHT  AS HEIGHT ,
			  AI.CUBICM  AS CUBICM ,
			  AI.CAPACT  AS CAPACT ,
			  0          AS QTYORG ,
			  AI.SMANDT  AS SMANDT ,
			  AI.SEBELN  AS SEBELN ,
			  AI.SEBELP  AS SEBELP ,
			  AI.SZMBLNO AS SZMBLNO,
			  AI.SZMIPNO AS SZMIPNO,
			  AI.STRAID  AS STRAID ,
			  AI.SVBELN  AS SVBELN ,
			  AI.SPOSNR  AS SPOSNR ,
			  AI.STKNUM  AS STKNUM ,
			  AI.STPNUM  AS STPNUM ,
			  AI.SWERKS  AS SWERKS ,
			  AI.SLGORT  AS SLGORT ,
			  AI.SDATBG  AS SDATBG ,
			  AI.STDLNR  AS STDLNR ,
			  AI.SSORNU  AS SSORNU ,
			  AI.SSORIT  AS SSORIT ,
			  AI.SMBLNR  AS SMBLNR ,
			  AI.SZEILE  AS SZEILE ,
			  AI.SMJAHR  AS SMJAHR ,
			  AI.SXBLNR  AS SXBLNR ,
			  ' '        AS SBKTXT ,
			  ' '        AS RCPRSN ,
			  TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT ,
			  TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM ,
			  AI.CREUSR  AS CREUSR ,
			  UC.NMLAST  AS CUSRNM ,
			  ' '        AS LMODAT ,
			  ' '        AS LMOTIM ,
			  ' '        AS LMOUSR ,
			  UL.NMLAST  AS LUSRNM ,
			  AI.INDBZL  AS INDBZL ,
			  AI.INDARC  AS INDARC ,
			  AI.UPDCHK  AS UPDCHK ,
			  (AI.QTYASN-AI.QTYRCV)   AS ASNQTY,
			  --TRUNC((AI.QTYASN - AI.QTYRCV)/AI.QTYUOM) AS BOXQTY ,
			  MOD((AI.QTYASN - AI.QTYRCV), AI.QTYUOM)  AS REMQTY 
			FROM ASNDI AI
			INNER JOIN ASNDH AH
			        ON AH.ASNDKY = AI.ASNDKY
			LEFT OUTER JOIN SKUMA SM
			        ON SM.OWNRKY = AH.OWNRKY
			       AND SM.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN SKUWC SW
			        ON SW.WAREKY = AH.WAREKY
			       AND SW.OWNRKY = AH.OWNRKY
			       AND SW.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN MEASI MI
			        ON MI.WAREKY = AH.WAREKY
			       AND MI.MEASKY = AI.MEASKY
			       AND MI.UOMKEY = AI.UOMKEY       
			LEFT OUTER JOIN BZPTN BZ
			        ON BZ.PTNRKY = AI.LOTA03
			       AND BZ.PTNRTY = 'VD'
			LEFT OUTER JOIN USRMA UC
			        ON UC.USERID = AH.CREUSR
			LEFT OUTER JOIN USRMA UL
			        ON UL.USERID = AH.LMOUSR              
			WHERE AI.ASNDKY = #ASNDKY#
	</select>
	
<!-- GR01 SQL START -->
	
	<!-- GR01 HEAD GRID SELECT START -->
	<!-- <select id="GR01_LIST" parameterClass="Map" resultClass="DataMap">
	SQL Key : INBOUND.GOODRECEIPT.FIND_ASN_TO_CREATE_RECDH
	SELECT 
		  AH.ASNDKY AS ASNDKY,
		       ' ' AS RECVKY ,
		  AI.SEBELN AS SEBELN,
		  AH.WAREKY AS WAREKY ,
		  WH.NAME01 AS WAREKYNM ,	
		  #RCPTTY#  AS RCPTTY ,
		  DT.SHORTX AS RCPTTYNM ,	
		  'NEW' AS STATDO ,
		  ' ' AS SAPSTS , 
		  TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT , 
		  TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD ,	
		  '100' AS DOCCAT ,
		  DC.SHORTX AS DOCCATNM,	
		  AH.DPTNKY AS DPTNKY ,
		  BZ.NAME01 AS DPTNKYNM ,	
		  AH.DRELIN AS DRELIN ,
		  AH.OWNRKY AS OWNRKY ,
		  ' ' AS INDRCN ,
		  ' ' AS CRECVD ,
		  AH.RSNCOD AS RSNCOD,
		  ' ' AS PUTSTS ,
		  NVL(AH.USRID1 ,' ') AS USRID1 ,
		  NVL(AH.UNAME1 ,' ') AS UNAME1 ,
		  NVL(AH.DEPTID1,' ') AS DEPTID1 ,
		  NVL(AH.DNAME1 ,' ') AS DNAME1 ,
		  NVL(AH.USRID2 ,' ') AS USRID2 ,
		  NVL(AH.UNAME2 ,' ') AS UNAME2 ,
		  NVL(AH.DEPTID2,' ') AS DEPTID2 ,
		  NVL(AH.DNAME2 ,' ') AS DNAME2 ,
		  NVL(AH.USRID3 ,' ') AS USRID3 ,
		  NVL(AH.UNAME3 ,' ') AS UNAME3 ,
		  NVL(AH.DEPTID3,' ') AS DEPTID3 ,
		  NVL(AH.DNAME3 ,' ') AS DNAME3 ,
		  NVL(AH.USRID4 ,' ') AS USRID4 ,
		  NVL(AH.UNAME4 ,' ') AS UNAME4 ,
		  NVL(AH.DEPTID4,' ') AS DEPTID4 ,
		  NVL(AH.DNAME4 ,' ') AS DNAME4 ,
		  NVL(AH.DOCTXT ,' ') AS DOCTXT ,
		  NVL(AH.CREDAT ,' ') AS CREDAT ,
		  NVL(AH.CRETIM ,' ') AS CRETIM ,
		  NVL(AH.CREUSR ,' ') AS CREUSR ,
		  UC.NMLAST AS CUSRNM,
		  NVL(AH.LMODAT ,' ') AS LMODAT ,
		  NVL(AH.LMOTIM ,' ') AS LMOTIM ,
		  NVL(AH.LMOUSR ,' ') AS LMOUSR ,
		  UL.NMLAST AS LUSRNM,		  
		  NVL(AH.INDBZL ,' ') AS INDBZL ,
		  NVL(AH.INDARC ,' ') AS INDARC ,
		  NVL(AH.UPDCHK ,0) AS UPDCHK ,
		  NVL(AH.KEEPTS ,' ') AS KEEPTS
     FROM ASNDH AH
    INNER JOIN ASNDI AI	
            ON AI.ASNDKY = AH.ASNDKY	
    LEFT OUTER JOIN WAHMA WH	
            ON WH.WAREKY = AH.WAREKY
    LEFT OUTER JOIN DOCCM DC	
            ON DC.DOCCAT = '100'	        	
    LEFT OUTER JOIN BZPTN BZ	
            ON BZ.PTNRKY = AH.DPTNKY	
           AND BZ.PTNRTY = 'VD'	
    LEFT OUTER JOIN USRMA UC
            ON UC.USERID = AH.CREUSR
    LEFT OUTER JOIN USRMA UL
            ON UL.USERID = AH.LMOUSR       
    LEFT OUTER JOIN DOCTM DT	
            ON DT.DOCUTY = AH.ASNTTY	
   WHERE AH.WAREKY = #WAREKY#
     AND AH.STATDO = 'NEW'	
     AND AH.ASNTTY = DECODE(#RCPTTY#, '111', '058', '112', '051', '114', '059', ' ')
     AND (AI.QTYASN-AI.QTYRCV) > 0	
   <isNotEmpty property="RANGE_SQL">
	    $RANGE_SQL$
   </isNotEmpty> 	
   GROUP BY AI.SEBELN, AH.WAREKY, WH.NAME01, DC.SHORTX, DT.SHORTX, AH.DPTNKY, AH.OWNRKY, BZ.NAME01, AH.DOCTXT, 
            AH.DOCCAT, AH.DRELIN, AH.RSNCOD, AH.ASNDKY,
            AH.USRID1, AH.UNAME1, AH.DEPTID1, AH.DNAME1, AH.USRID2, AH.UNAME2, AH.DEPTID2, AH.DNAME2,
            AH.USRID3, AH.UNAME3, AH.DEPTID3, AH.DNAME3, AH.USRID4, AH.UNAME4, AH.DEPTID4, AH.DNAME4,
            AH.INDBZL, AH.INDARC, AH.UPDCHK, AH.KEEPTS ,
            AH.CREDAT, AH.CRETIM, AH.CREUSR, UC.NMLAST, AH.LMODAT, AH.LMOTIM, AH.LMOUSR,UL.NMLAST	
   ORDER BY AH.ASNDKY DESC
	</select> -->
	<!-- GR01 HEAD GRID SELECT END -->

	<!-- GR01 ITEM GRID SELECT START -->
	<!-- <select id="GR01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SQL Key : INBOUND.GOODRECEIPT.FIND_ASN_TO_CREATE_RECDI
		SELECT  
			  AI.ASNDKY AS ASNDKY,
			  AI.ASNDIT AS ASNDIT,
			  ' '  AS RECVKY ,
			  ' '  AS RECVIT ,
			  AI.STATIT  AS STATIT ,
			  ' '  AS SAPSTS ,
			  AI.SKUKEY  AS SKUKEY ,
			  ' '  AS LOTNUM ,
			  ' '  AS AREAKY ,
			  NVL(DECODE(AI.LOCARV,' ',SW.LOCARV),' ') AS LOCAKY ,
			  ' '  AS SECTID ,
			  ' '  AS TRNUID ,
			  ' '  AS PACKID ,
			  DECODE(AI.TMPQTY,0,(AI.QTYASN-AI.QTYRCV),AI.TMPQTY) AS QTYRCV ,
			  0  AS QTYDIF ,
			  AI.QTYUOM  AS QTYUOM ,
			  ' '  AS TRUNTY ,
			  AI.MEASKY  AS MEASKY ,
			  AI.UOMKEY  AS UOMKEY ,
			  NVL(MI.QTPUOM,0)       AS QTPUOM ,
			  NVL(SM.DUOMKY,' ')     AS DUOMKY ,
			  NVL(SM.QTDUOM,9999999) AS QTDUOM ,
			  ' '  AS INDRCN ,
			  ' '  AS CRECVD ,
			  NVL(AI.RSNCOD,' ')  AS RSNCOD ,
			  ' '  AS WORKID ,
			  ' '  AS WORKNM ,
			  ' '  AS HHTTID ,
			  AI.LOTA01  AS LOTA01 ,
			  AI.LOTA02  AS LOTA02 ,
			  AI.LOTA03  AS LOTA03 ,
			  BZ.NAME01  AS LOTA03NM ,
			  AI.LOTA04  AS LOTA04 ,
			  AI.LOTA05  AS LOTA05 ,
			  AI.LOTA06  AS LOTA06 ,
			  (SELECT CDESC1 FROM CMCDV WHERE CMCDKY='LOTA06' AND CMCDVL = AI.LOTA06)  AS LOTA06NM ,
			  AI.LOTA07  AS LOTA07 ,
			  AI.LOTA08  AS LOTA08 ,
			  AI.LOTA09  AS LOTA09 ,
			  AI.LOTA10  AS LOTA10 ,
			  AI.LOTA11  AS LOTA11 ,
			  AI.LOTA12  AS LOTA12 ,
			  AI.LOTA13  AS LOTA13 ,
			  AI.LOTA14  AS LOTA14 ,
			  AI.LOTA15  AS LOTA15 ,
			  AI.LOTA16  AS LOTA16 ,
			  AI.LOTA17  AS LOTA17 ,
			  AI.LOTA18  AS LOTA18 ,
			  AI.LOTA19  AS LOTA19 ,
			  AI.LOTA20  AS LOTA20 ,
			  AI.AWMSNO  AS AWMSNO ,
			  AH.ASNDKY  AS REFDKY ,
			  AI.ASNDIT  AS REFDIT ,
			  AH.DOCCAT  AS REFCAT ,
			  TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT ,
			  NVL(SM.DESC01,' ')  AS DESC01 ,
			  NVL(SM.DESC02,' ')  AS DESC02 ,
			  AI.ASKU01  AS ASKU01 ,
			  AI.ASKU02  AS ASKU02 ,
			  AI.ASKU03  AS ASKU03 ,
			  AI.ASKU04  AS ASKU04 ,
			  AI.ASKU05  AS ASKU05 ,
			  AI.EANCOD  AS EANCOD ,
			  AI.GTINCD  AS GTINCD ,
			  AI.SKUG01  AS SKUG01 ,
			  AI.SKUG02  AS SKUG02 ,
			  AI.SKUG03  AS SKUG03 ,
			  AI.SKUG04  AS SKUG04 ,
			  AI.SKUG05  AS SKUG05 ,
			  AI.GRSWGT  AS GRSWGT ,
			  AI.NETWGT  AS NETWGT ,
			  AI.WGTUNT  AS WGTUNT ,
			  AI.LENGTH  AS LENGTH ,
			  AI.WIDTHW  AS WIDTHW ,
			  AI.HEIGHT  AS HEIGHT ,
			  AI.CUBICM  AS CUBICM ,
			  AI.CAPACT  AS CAPACT ,
			  0          AS QTYORG ,
			  AI.SMANDT  AS SMANDT ,
			  AI.SEBELN  AS SEBELN ,
			  AI.SEBELP  AS SEBELP ,
			  AI.SZMBLNO AS SZMBLNO,
			  AI.SZMIPNO AS SZMIPNO,
			  AI.STRAID  AS STRAID ,
			  AI.SVBELN  AS SVBELN ,
			  AI.SPOSNR  AS SPOSNR ,
			  AI.STKNUM  AS STKNUM ,
			  AI.STPNUM  AS STPNUM ,
			  AI.SWERKS  AS SWERKS ,
			  AI.SLGORT  AS SLGORT ,
			  AI.SDATBG  AS SDATBG ,
			  AI.STDLNR  AS STDLNR ,
			  AI.SSORNU  AS SSORNU ,
			  AI.SSORIT  AS SSORIT ,
			  AI.SMBLNR  AS SMBLNR ,
			  AI.SZEILE  AS SZEILE ,
			  AI.SMJAHR  AS SMJAHR ,
			  AI.SXBLNR  AS SXBLNR ,
			  ' '        AS SBKTXT ,
			  ' '        AS RCPRSN ,
			  TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT ,
			  TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM ,
			  AI.CREUSR  AS CREUSR ,
			  UC.NMLAST  AS CUSRNM ,
			  ' '        AS LMODAT ,
			  ' '        AS LMOTIM ,
			  ' '        AS LMOUSR ,
			  UL.NMLAST  AS LUSRNM ,
			  AI.INDBZL  AS INDBZL ,
			  AI.INDARC  AS INDARC ,
			  AI.UPDCHK  AS UPDCHK ,
			  (AI.QTYASN-AI.QTYRCV)   AS ASNQTY  ,
			  NVL(QC.TYPENAME,'무검사') AS TYPENAME, 
			  NVL(QC.QCTYPE,' ') AS QCTYPE,
			  CASE 
			    WHEN QC.QCTYPE = 'SAM' THEN ( 
			         SELECT QTSAMP 
			           FROM ERPSP 
			          WHERE SKUKEY = AI.SKUKEY 
			            AND FRSAMP &lt;= (AI.QTYASN - AI.QTYRCV) 
			            AND TOSAMP &gt;= (AI.QTYASN - AI.QTYRCV)  )
			     WHEN QC.QCTYPE = 'ALL' THEN 
			          (AI.QTYASN - AI.QTYRCV)
			     ELSE 0     
			    END AS QTSAMP ,
			  AI.QTFAIL AS QTFAIL  ,
			  TRUNC((AI.QTYASN - AI.QTYRCV)/AI.QTYUOM) AS BOXQTY ,
			  MOD((AI.QTYASN - AI.QTYRCV), AI.QTYUOM)  AS REMQTY 
			FROM ASNDI AI
			INNER JOIN ASNDH AH
			        ON AH.ASNDKY = AI.ASNDKY
			LEFT OUTER JOIN SKUMA SM
			        ON SM.OWNRKY = AH.OWNRKY
			       AND SM.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN SKUWC SW
			        ON SW.WAREKY = AH.WAREKY
			       AND SW.OWNRKY = AH.OWNRKY
			       AND SW.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN MEASI MI
			        ON MI.WAREKY = AH.WAREKY
			       AND MI.MEASKY = AI.MEASKY
			       AND MI.UOMKEY = AI.UOMKEY       
			LEFT OUTER JOIN BZPTN BZ
			        ON BZ.PTNRKY = AI.LOTA03
			       AND BZ.PTNRTY = 'VD'
			LEFT OUTER JOIN ERPQC QC
			        ON QC.SKUKEY = AI.SKUKEY
			       AND QC.KINDQC = 'REC'
			LEFT OUTER JOIN USRMA UC
			        ON UC.USERID = AH.CREUSR
			LEFT OUTER JOIN USRMA UL
			        ON UL.USERID = AH.LMOUSR              
			WHERE AI.ASNDKY = #ASNDKY#
	</select> -->
	<!-- GR01 ITEM GRID SELECT END -->
	
	
	<!-- GR01 ITEM GRID RSNCOD SELECT START  -->
	<select id="GR01RSNCOD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
		    RSNCOD AS VALUE_COL,
			SHORTX AS TEXT_COL
		  FROM RSNCD 
		 WHERE DOCCAT = '100'
		   AND DOCUTY = '112' 
	</select>
	<!-- GR01 ITEM GRID SNCOD SELECT END -->
	
	<!-- GR01 ITEM GRID QTSAMP SELECT START  -->
	<select id="Qtsampval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT QTSAMP 
		  FROM ERPSP 
		 WHERE SKUKEY = #SKUKEY#
		   AND FRSAMP &lt;= #QTYRCV#
           AND TOSAMP &gt;= #QTYRCV# 
	</select>
	<!-- GR01 ITEM GRID SNQTSAMPCOD SELECT END -->
	
	<!-- GR01POP1 GRID SELECT START  -->
	<select id="GR01POP1_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SKUKEY,
       		KINDNAME, TYPENAME, ITMENAME AS QCITEM,
       		LVLSIM,LVLMID,LVLSTR,
       		UPLIMIT,LOLIMIT 
  		 FROM ERPQC 
 		WHERE SKUKEY = #SKUKEY#
   		  AND KINDQC = 'REC'
   		<isEqual property="QCTYPE" compareValue="SAM">
   		  AND QCTYPE = #QCTYPE#	
   		</isEqual>
    </select>
	<!-- GR01POP1 GRID SELECT END -->
	
	<!-- GR01POP2EXIST SELECT START  -->
	<select id="GR01POP2EXIST_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) AS CNT FROM RCFAIL
		 WHERE SKUKEY= #SKUKEY#
		   AND ASNDKY= #ASNDKY#
		   AND ASNDIT= #ASNDIT#
   	</select>
	<!-- GR01POP2EXIST SELECT END -->
	
	<!-- GR01POP2 GRID SELECT START  -->
	<select id="GR01POP2_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		    RC.RECVKY AS RECVKY,
			RC.RECVIT AS RECVIT,
			RC.TMPNUM AS TMPNUM,
			RC.SKUKEY AS SKUKEY,
		    RC.QCITEM AS QCITEM,
			RC.FAILIT AS FAILIT,
			ER.ITNAME AS ITNAME,
			RC.QCUSER AS QCUSER,
			RC.REMARK AS REMARK,
			RC.CREDAT AS CREDAT,
			RC.CRETIM AS CRETIM,
			RC.CREUSR AS CREUSR,
		    UC.NMLAST AS CUSRNM,
			RC.LMODAT AS LMODAT,
			RC.LMOTIM AS LMOTIM,
			RC.LMOUSR AS LMOUSR,
		    UL.NMLAST AS LUSRNM
		 FROM RCFAIL RC
		 LEFT OUTER JOIN ERPFA ER
		         ON ER.QCITEM = RC.QCITEM
		        AND ER.FAILIT = RC.FAILIT 
		 LEFT OUTER JOIN USRMA UC
			     ON UC.USERID = RC.CREUSR
		 LEFT OUTER JOIN USRMA UL
		         ON UL.USERID = RC.LMOUSR            
		WHERE SKUKEY= #SKUKEY#
		  AND ASNDKY= #ASNDKY#
		  AND ASNDIT= #ASNDIT#
   	</select>
	<!-- GR01POP2 GRID SELECT END -->
	
	<!-- GR01POP2NEW GRID SELECT START  -->
	<select id="GR01POP2NEW_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		     ' ' AS RECVKY,
		     ' ' AS RECVIT,
		     SZF_SEQDOCNUMBER('NR99') AS TMPNUM,
		     #SKUKEY#  AS SKUKEY,
		     ' ' AS QCITEM,
		     ' ' AS FAILIT,
		     ' ' AS ITNAME,
		     ' ' AS QCUSER,
		     ' ' AS REMARK,
		     TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
		     TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM,
		     #SES_USER_ID# AS CREUSR,
		     TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
		     TO_CHAR(SYSDATE,'HH24MISS') AS LMOTIM,
		     #SES_USER_ID# AS LMOUSR
  		FROM DUAL
   	
    </select>
	<!-- GR01POP2NEW GRID SELECT END -->
	
	
	
	<!-- GR01POP2 신규생성, 추가-->
	<insert id="RCFAIL_INSERT" parameterClass="Map">
		INSERT INTO RCFAIL 
		(
			 RECVKY, RECVIT, ASNDKY, ASNDIT, TMPNUM, SKUKEY,
			 QCITEM, FAILIT, QCUSER, REMARK,
			 CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
		 ) 
		VALUES 
		(
			NVL(#RECVKY#,' '),NVL(#RECVIT#,' '),NVL(#ASNDKY#,' '),NVL(#ASNDIT#,' '),NVL(#TMPNUM#,' '),NVL(#SKUKEY#,' '),
			#QCITEM#,#FAILIT#,#QCUSER#,#REMARK#,
			TO_CHAR(SYSDATE,'YYYYMMDD'),TO_CHAR(SYSDATE,'HH24MISS'),#CREUSR# ,TO_CHAR(SYSDATE,'YYYYMMDD'),TO_CHAR(SYSDATE,'HH24MISS'),#LMOUSR# 
		)
	</insert>
	
	<!-- GR01POP2 수정-->
	<update id="RCFAIL_UPDATE" parameterClass="Map">
		UPDATE RCFAIL 
		SET
			LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
			LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'), 
			LMOUSR = #SES_USER_ID#
			<isNotEmpty property="QCITEM">
		    	,QCITEM = #QCITEM#
		    </isNotEmpty>
			<isNotEmpty property="FAILIT">
		    	,FAILIT = #FAILIT#
		    </isNotEmpty>
		    <isNotEmpty property="QCUSER">
		    	,QCUSER = #QCUSER#
		    </isNotEmpty>
		    <isNotEmpty property="REMARK">
		    	,REMARK = #REMARK#
		    </isNotEmpty>
		 WHERE 1 = 1
		   AND ASNDKY = #ASNDKY#
		   AND ASNDIT = #ASNDIT#
		   AND TMPNUM = #TMPNUM#
		   AND SKUKEY = #SKUKEY#
	</update>
	
	<!-- GR01POP2 - RCFAIL- 임시번호 삭제 -->
	<delete id="RCFAIL_DELETE" parameterClass="Map">
		DELETE FROM RCFAIL
		 WHERE TMPNUM = #TMPNUM#
	</delete>
	
		<!-- GR01ITEM 중간반영 -->
	<update id="ASNDI_UPDATE" parameterClass="Map">
		UPDATE ASNDI 
		SET
			LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
			LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'), 
			LMOUSR = #LMOUSR#
			<isNotEqual property="QTFAIL" compareValue="0"> 
				,QTFAIL = #QTFAIL# 
			</isNotEqual>
		   <isNotEmpty property="RCVQTY">
		    	,TMPQTY = #TMPQTY#
		    </isNotEmpty>
		    <isNotEmpty property="RSNCOD">
		    	,RSNCOD = #RSNCOD#
		    </isNotEmpty>
		    <isNotEmpty property="LOCAKY">
		    	,LOCARV = #LOCAKY#
		    </isNotEmpty>
		 WHERE 1 = 1
		   AND ASNDKY = #ASNDKY#
		   AND ASNDIT = #ASNDIT#
		   AND SKUKEY = #SKUKEY#
	</update>
	
	<!-- <select id="GR01PRO_MAP" parameterClass="Map" resultClass="DataMap">
	P_SEBELN, P_ASNDKY, P_RCPTTY, P_ARCPTD, P_DOCTXT, P_USERID, P_WAREKY 
		 { call P_SGP_ASN_RECD_INSERT(#SEBELN# , #ASNDKY#, #RCPTTY#, #ARCPTD#, #DOCTXT#, #CREUSR#, #WAREKY#)} 
	</select> -->
	
	<parameterMap class="java.util.Map" id="ProcMap">
		<parameter property="SEBELN" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ASNDKY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="RCPTTY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ARCPTD" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="DOCTXT" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="CREUSR" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="WAREKY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ERRNUM" javaType="java.lang.Long"   jdbcType="DECIMAL" mode="OUT"/>
		<parameter property="ERRMSG" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	
	
	<procedure id="GR01PRO_MAP" parameterMap="ProcMap">
	<![CDATA[
		 { call  P_SGP_ASN_RECD_INSERT(?,?,?,?,?,?,?,?,?) }
	]]>
	</procedure>
	
	<parameterMap class="java.util.Map" id="SMSMap">
		<parameter property="WAREKY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="RCPTTY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="SEBELN" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="SES_USER_ID" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	</parameterMap>
	<procedure id="GR02SMS_MAP" parameterMap="SMSMap">
		<![CDATA[
			 { call  LOTOS.P_IMF_SEND_SMS_INFO(?,?,?,?) }
		]]>
	</procedure>
	
	<select id="IFWMS203_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_AIRWMS_IFWMS203( #RECVKY#, #ERPWHF#, #ERPWHT# )}
	</select>
	
	<select id="IFWMS301_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_AIRWMS_IFWMS301( #RCPTTY#, #RECVKY#, #ERPWHF#, #ERPWHT# )}
	</select> 
	
	<!-- <parameterMap class="java.util.Map" id="GR20Map">
		<parameter property="DOCUTY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="WMSKEY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ERPWHF" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ERPWHT" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
	</parameterMap>
	<procedure id="IFWMS301_MAP" parameterMap="GR20Map">
		<![CDATA[
			 { call P_AIRWMS_IFWMS301(?,?,?,?) }
		]]>
	</procedure> -->
	
	<!-- GR01 HEAD GRID INSERT START -->
	<!-- <insert id="GR01_UPDATE" parameterClass="Map">
		INSERT INTO RECDH
		(
		   ARCPTD,
		   RECVKY,
		   WAREKY,
		   RCPTTY,
		   STATDO,
		   SAPSTS,
		   DOCDAT,
		   DOCCAT,
		   DPTNKY,
		   DRELIN,
		   OWNRKY,
		   INDRCN,
		   CRECVD,
		   RSNCOD,
		   PUTSTS,
		   USRID1,
		   UNAME1,
		   DEPTID1,
		   DNAME1,
		   USRID2,
		   UNAME2,
		   DEPTID2,
		   DNAME2,
		   USRID3,
		   UNAME3,
		   DEPTID3,
		   DNAME3,
		   USRID4,
		   UNAME4,
		   DEPTID4,
		   DNAME4,
		   DOCTXT,
		   CREDAT,
		   CRETIM,
		   CREUSR,
		   LMODAT,
		   LMOTIM,
		   LMOUSR
		)
		VALUES(
		   #ARCPTD#,
		   #RECVKY#,
		   #WAREKY#,
		   #RCPTTY#,
		   #STATDO#,
		   #SAPSTS#,
		   #DOCDAT#,
		   #DOCCAT#,
		   #DPTNKY#,
		   #DRELIN#,
		   #OWNRKY#,
		   #INDRCN#,
		   #CRECVD#,
		   #RSNCOD#,
		   #PUTSTS#,
		   #USRID1#,
		   #UNAME1#,
		   #DEPTID1#,
		   #DNAME1#,
		   #USRID2#,
		   #UNAME2#,
		   #DEPTID2#,
		   #DNAME2#,
		   #USRID3#,
		   #UNAME3#,
		   #DEPTID3#,
		   #DNAME3#,
		   #USRID4#,
		   #UNAME4#,
		   #DEPTID4#,
		   #DNAME4#,
		   #DOCTXT#,
		   TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   TO_CHAR(SYSDATE, 'HH24MISS'), 
		   'DEV',
		   TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   TO_CHAR(SYSDATE, 'HH24MISS'), 
		   'DEV'
		)
	</insert> -->
	<!-- GR01 HEAD GRID INSERT END -->
	
	
	<!-- GR01 ITEM GRID INSERT START -->
	<!-- <insert id="GR01Sub_UPDATE" parameterClass="Map">
		INSERT INTO RECDI
		(
		   MEASKY,
		   RECVKY,
		   RECVIT,
		   STATIT,
		   SAPSTS,
		   SKUKEY,
		   LOTNUM,
		   AREAKY,
		   LOCAKY,
		   SECTID,
		   TRNUID,
		   PACKID,
		   QTYRCV,
		   QTYDIF,
		   QTYUOM,
		   TRUNTY,
		   UOMKEY,
		   QTPUOM,
		   DUOMKY,
		   QTDUOM,
		   INDRCN,
		   CRECVD,
		   RSNCOD,
		   LOTA01,
		   LOTA02,
		   LOTA03,
		   LOTA04,
		   LOTA05,
		   LOTA06,
		   LOTA07,
		   LOTA08,
		   LOTA09,
		   LOTA10,
		   LOTA11,
		   LOTA12,
		   LOTA13,
		   LOTA14,
		   LOTA15,
		   LOTA16,
		   LOTA17,
		   LOTA18,
		   LOTA19,
		   LOTA20,
		   AWMSNO,
		   REFDKY,
		   REFDIT,
		   REFCAT,
		   REFDAT,
		   DESC01,
		   DESC02,
		   ASKU01,
		   ASKU02,
		   ASKU03,
		   ASKU04,
		   ASKU05,
		   EANCOD,
		   GTINCD,
		   SKUG01,
		   SKUG02,
		   SKUG03,
		   SKUG04,
		   SKUG05,
		   GRSWGT,
		   NETWGT,
		   WGTUNT,
		   LENGTH,
		   WIDTHW,
		   HEIGHT,
		   CUBICM,
		   CAPACT,
		   QTYORG,
		   SMANDT,
		   SEBELN,
		   SEBELP,
		   SZMBLNO,
		   SZMIPNO,
		   STRAID,
		   SVBELN,
		   SPOSNR,
		   STKNUM,
		   STPNUM,
		   SWERKS,
		   SLGORT,
		   SDATBG,
		   STDLNR,
		   SSORNU,
		   SSORIT,
		   SMBLNR,
		   SZEILE,
		   SMJAHR,
		   SXBLNR,
		   RCPRSN,
		   CREDAT,
		   CRETIM,
		   CREUSR,
		   LMODAT,
		   LMOTIM,
		   LMOUSR
		)
		VALUES(
		   #MEASKY#,
		   #RECVKY#,
		   #RECVIT#,
		   #STATIT#,
		   #SAPSTS#,
		   #SKUKEY#,
		   #LOTNUM#,
		   #AREAKY#,
		   #LOCAKY#,
		   #SECTID#,
		   #TRNUID#,
		   #PACKID#,
		   #QTYRCV#,
		   #QTYDIF#,
		   #QTYUOM#,
		   #TRUNTY#,
		   #UOMKEY#,
		   #QTPUOM#,
		   #DUOMKY#,
		   #QTDUOM#,
		   #INDRCN#,
		   #CRECVD#,
		   #RSNCOD#,
		   #LOTA01#,
		   #LOTA02#,
		   #LOTA03#,
		   #LOTA04#,
		   #LOTA05#,
		   #LOTA06#,
		   #LOTA07#,
		   #LOTA08#,
		   #LOTA09#,
		   #LOTA10#,
		   #LOTA11#,
		   #LOTA12#,
		   #LOTA13#,
		   #LOTA14#,
		   #LOTA15#,
		   #LOTA16#,
		   #LOTA17#,
		   #LOTA18#,
		   #LOTA19#,
		   #LOTA20#,
		   #AWMSNO#,
		   #REFDKY#,
		   #REFDIT#,
		   #REFCAT#,
		   #REFDAT#,
		   #DESC01#,
		   #DESC02#,
		   #ASKU01#,
		   #ASKU02#,
		   #ASKU03#,
		   #ASKU04#,
		   #ASKU05#,
		   #EANCOD#,
		   #GTINCD#,
		   #SKUG01#,
		   #SKUG02#,
		   #SKUG03#,
		   #SKUG04#,
		   #SKUG05#,
		   #GRSWGT#,
		   #NETWGT#,
		   #WGTUNT#,
		   #LENGTH#,
		   #WIDTHW#,
		   #HEIGHT#,
		   #CUBICM#,
		   #CAPACT#,
		   #QTYORG#,
		   #SMANDT#,
		   #SEBELN#,
		   #SEBELP#,
		   #SZMBLNO#,
		   #SZMIPNO#,
		   #STRAID#,
		   #SVBELN#,
		   #SPOSNR#,
		   #STKNUM#,
		   #STPNUM#,
		   #SWERKS#,
		   #SLGORT#,
		   #SDATBG#,
		   #STDLNR#,
		   #SSORNU#,
		   #SSORIT#,
		   #SMBLNR#,
		   #SZEILE#,
		   #SMJAHR#,
		   #SXBLNR#,
		   #RCPRSN#,
		   TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   TO_CHAR(SYSDATE, 'HH24MISS'), 
		   'DEV',
		   TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   TO_CHAR(SYSDATE, 'HH24MISS'), 
		   'DEV'
		)	
	</insert> -->
	<!-- GR01 ITEM GRID INSERT END -->
	
	<!-- GR01 ITEM GRID SELECT START -->
	<select id="GR01R_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.GOODRECEIPT.FIND_ASN_TO_CREATE_RECDI -->
		SELECT 
			   DISTINCT RH.RECVKY,
		       RI.SEBELN,
		       ' ' AS ASNDKY,
		       RI.SLGORT AS LGORT,
		       ' ' AS LGORTNM,
			   ARCPTD,
			   WAREKY,
			   RCPTTY,
			   STATDO,
			   RH.SAPSTS,
			   DOCDAT,
			   DOCCAT,
			   DPTNKY,
			   DRELIN,
			   OWNRKY,
			   RH.INDRCN,
			   RH.CRECVD,
			   RH.RSNCOD,
			   PUTSTS,
			   USRID1,
			   UNAME1,
			   DEPTID1,
			   DNAME1,
			   USRID2,
			   UNAME2,
			   DEPTID2,
			   DNAME2,
			   USRID3,
			   UNAME3,
			   DEPTID3,
			   DNAME3,
			   USRID4,
			   UNAME4,
			   DEPTID4,
			   DNAME4,
			   DOCTXT,
			   RH.CREDAT,
			   RH.CRETIM,
			   RH.CREUSR,
			   RH.LMODAT,
			   RH.LMOTIM,
			   RH.LMOUSR,
			   ' ' AS WAREKYNM,
			   ' ' AS RCPTTYNM,
			   ' ' AS DOCCATNM,
			   ' ' AS DPTNKYNM
		FROM RECDH RH
		LEFT OUTER JOIN RECDI RI
			ON RH.RECVKY =  RI.RECVKY 
		WHERE RH.RECVKY IN ( $RECVKY$ )
	</select>
	
	<select id="GR01IR_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.GOODRECEIPT.FIND_ASN_TO_CREATE_RECDI -->
		SELECT MEASKY,
			   RECVKY,
			   RECVIT,
			   ' ' AS ASNDKY,
			   STATIT,
			   SAPSTS,
			   SKUKEY,
			   LOTNUM,
			   AREAKY,
			   LOCAKY,
			   SECTID,
			   TRNUID,
			   PACKID,
			   QTYRCV,
			   QTYDIF,
			   TRUNC(QTYRCV/QTDUOM) AS BOXQTY,
			   MOD(QTYRCV,QTDUOM) AS REMQTY,
			   QTYUOM,
			   TRUNTY,
			   UOMKEY,
			   QTPUOM,
			   DUOMKY,
			   QTDUOM,
			   INDRCN,
			   CRECVD,
			   RSNCOD,
			   LOTA01,
			   ' ' AS LOTA01NM, 
			   LOTA02,
			   LOTA03,
			   LOTA04,
			   LOTA05,
			   LOTA06,
			   LOTA07,
			   LOTA08,
			   LOTA09,
			   LOTA10,
			   LOTA11,
			   LOTA12,
			   LOTA13,
			   LOTA14,
			   LOTA15,
			   LOTA16,
			   LOTA17,
			   LOTA18,
			   LOTA19,
			   LOTA20,
			   AWMSNO,
			   REFDKY,
			   REFDIT,
			   REFCAT,
			   REFDAT,
			   DESC01,
			   DESC02,
			   ASKU01,
			   ASKU02,
			   ASKU03,
			   ASKU04,
			   ASKU05,
			   EANCOD,
			   GTINCD,
			   SKUG01,
			   SKUG02,
			   SKUG03,
			   SKUG04,
			   SKUG05,
			   GRSWGT,
			   NETWGT,
			   WGTUNT,
			   LENGTH,
			   WIDTHW,
			   HEIGHT,
			   CUBICM,
			   CAPACT,
			   QTYORG,
			   SMANDT,
			   SEBELN,
			   SEBELP,
			   SZMBLNO,
			   SZMIPNO,
			   STRAID,
			   SVBELN,
			   SPOSNR,
			   STKNUM,
			   STPNUM,
			   SWERKS,
			   SLGORT,
			   SDATBG,
			   STDLNR,
			   SSORNU,
			   SSORIT,
			   SMBLNR,
			   SZEILE,
			   SMJAHR,
			   SXBLNR,
			   RCPRSN,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
		FROM RECDI
		WHERE RECVKY = #RECVKY#
	</select>
	
<!-- GR01 SQL END -->
<!-- //ASN입하 -->

	<!-- <select id="RECDTYPE_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM DOCTM
		WHERE 1 = 1
		AND DOCCAT = '100'
		<isEqual property="RCPTTY" compareValue="GR02">
			AND DOCUTY IN ('101','102','103','104','105','106','107')
		</isEqual>
		<isEqual property="RCPTTY" compareValue="GR12">
			AND DOCUTY IN ('113','114')
		</isEqual>
	</select>
	
	<select id="RECDTYPEGR15_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM DOCTM
		WHERE 1 = 1
		AND DOCCAT = '100'
		AND DOCUTY IN ('111','112')
	</select> -->
	
<!-- 구매입하 -->
<!-- GR02 SQL START-->


<!-- GR02 HEAD GRID SELECT START -->
   <select id="GR02BAK_LIST" parameterClass="Map" resultClass="DataMap">
      SELECT    
            ' ' AS RECVKY,
            IFWMS103.WAREKY AS WAREKY,
            WH.NAME01 AS WAREKYNM,
            IFWMS103.BWART AS RCPTTY,
            DT.SHORTX AS RCPTTYNM,
            'NEW' AS STATDO,
            ' ' AS SAPSTS,
            TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
            '100' AS DOCCAT,
            DC.SHORTX AS DOCCATNM,
            IFWMS103.LIFNR AS DPTNKY,
             CASE WHEN IFWMS103.BWART IN ( '104') THEN ( SELECT BZ.NAME01 FROM BZPTN BZ WHERE BZ.PTNRTY = 'PV' AND BZ.PTNRKY = IFWMS103.LIFNR)
             ELSE  ( SELECT BZ.NAME01 FROM BZPTN BZ WHERE BZ.PTNRTY = 'VD' AND BZ.PTNRKY = IFWMS103.LIFNR )
             END  AS DPTNKYNM,
            ' ' AS DRELIN,
            TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
            #SES_OWNER# AS OWNRKY,
            ' ' AS INDRCN,
            ' ' AS CRECVD,
            ' ' AS RSNCOD,
            ' ' AS PUTSTS,
            ' ' AS LGORT,
            ' ' AS LGORTNM,
            ' ' AS DOCTXT,
            IFWMS103.EBELN AS SEBELN,
            ' ' AS CONFIM,
            IFWMS103.USRID1 AS USRID1,
            ' ' AS DEPTID1,
            ' ' AS DEPTID1NM,
            IFWMS103.USRID2 AS USRID2,
            IFWMS103.DEPTID2 AS DEPTID2,
                IFWMS103.USRID3 AS USRID3,
            IFWMS103.DEPTID3 AS DEPTID3            
      FROM   IFWMS103
            LEFT OUTER JOIN SKUMA SM   ON SM.OWNRKY = #SES_OWNER#
                                 AND SM.SKUKEY = IFWMS103.MATNR
            LEFT OUTER JOIN SKUWC SW   ON SW.WAREKY = #WAREKY#
                                 AND SW.OWNRKY = #SES_OWNER#
                                 AND SW.SKUKEY = IFWMS103.MATNR
            LEFT OUTER JOIN WAHMA WH   ON WH.WAREKY = IFWMS103.WAREKY
            LEFT OUTER JOIN DOCCM DC   ON DC.DOCCAT = '100'
            LEFT OUTER JOIN DOCTM DT   ON DT.DOCUTY = IFWMS103.BWART
      WHERE   IFWMS103.WERKS = #SES_OWNER#  
      AND      IFWMS103.IFFLG = 'N'
      AND      IFWMS103.WAREKY = #WAREKY# 
     <!--  AND      IFWMS103.BWART = #RCPTTY# -->
      AND      (IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R) > 0
      AND      IFWMS103.MBLNO = #MBLNO#  <!-- USRMA.USERG1 -->
    <!--   IF  창고 코드가 PV이면 -->
      <!-- <isEqual compareProperty="MBLNO" compareValue="PV">
      	AND     IFWMS103.MIPNO = #MIPNO#  USRMA.USERG2
      </isEqual> -->
      <isEqual property="MENUID" compareValue="GR02">
	     <isEqual property="RCPTTY" compareValue="ALL">
			AND IFWMS103.BWART IN ('101','102','103','104','105','106','107')
		</isEqual>
		<isNotEqual property="RCPTTY" compareValue="ALL">
			AND IFWMS103.BWART = #RCPTTY#
		</isNotEqual>
	  </isEqual>
      <isEqual property="MENUID" compareValue="GR12">
	      <isEqual property="RCPTTY" compareValue="ALL">
				AND IFWMS103.BWART IN ('113','114')
			</isEqual>
			<isNotEqual property="RCPTTY" compareValue="ALL">
				AND IFWMS103.BWART = #RCPTTY#
			</isNotEqual>
	  </isEqual>
      <isNotEmpty property="ZONE">
			AND IFWMS103.MIPNO = #ZONE#
	  </isNotEmpty>
      <isNotEmpty property="DEPART">
			AND IFWMS103.DEPTID1 = #DEPART#
	  </isNotEmpty>
      <isNotEmpty property="RANGE_SQL">
             $RANGE_SQL$
      </isNotEmpty>
        GROUP BY IFWMS103.EBELN, IFWMS103.WAREKY, IFWMS103.LIFNR, IFWMS103.BWART,
				 WH.NAME01, DC.SHORTX, DT.SHORTX, IFWMS103.USRID1 ,
				 IFWMS103.USRID2 , IFWMS103.DEPTID2 , IFWMS103.USRID3 , IFWMS103.DEPTID3       
      ORDER BY IFWMS103.EBELN
   </select>
   <!-- GR02 HEAD GRID SELECT END -->
	
	<!-- GR02 ITEM GRID SELECT START -->
	<select id="GR02SubBAK_LIST" parameterClass="Map" resultClass="DataMap">
      SELECT 
             ' '                     AS RECVKY
           , ' '                     AS RECVIT
           , 'NEW'                   AS STATIT
           , ' '                     AS SAPSTS
           , IFWMS103.MATNR          AS SKUKEY
           , ' '                     AS LOTNUM
           , NVL(IFWMS103.MBLNO,' ') AS AREAKY
            , CASE WHEN IFWMS103.BWART IN ('101','102','103','105','106','107') THEN ( SELECT NVL(UM.USERG3,SW.LOCARV) FROM USRMA UM WHERE USERID = #SES_USER_ID# )
        		   WHEN IFWMS103.BWART IN ('104') THEN ( 'REP' || IFWMS103.MBLNO )
                   WHEN IFWMS103.BWART IN ('113','114') THEN  NVL(TRIM(IFWMS103.LGORT),( SELECT NVL(UM.USERG3,SW.LOCARV) FROM USRMA UM WHERE USERID = #SES_USER_ID# ))
                   ELSE NVL(SW.LOCARV,' ') 
                   END AS LOCAKY
           , ' '                 AS SECTID
           , ' '                 AS TRNUID
           , ' '                 AS PACKID
           , IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS ASNQTY
           , IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS QTYRCV
           , 0                   AS QTYDIF
           , IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS QTYUOM
           , ' '                 AS TRUNTY
           , NVL(SW.MEASKY,' ')  AS MEASKY
           , NVL(SM.DUOMKY,' ')  AS UOMKEY
           , 1                   AS QTPUOM
           , NVL(SM.DUOMKY,' ')  AS DUOMKY
           , NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM
           , TRUNC((IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R)/NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS BOXQTY
           , MOD(IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R,NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS REMQTY
           , ' '                 AS INDRCN
           , ' '                 AS CRECVD
           , ' '                 AS RSNCOD
           , IFWMS103.LIFNR      AS LOTA01
           , (SELECT BZ.NAME01 FROM BZPTN BZ WHERE PTNRTY =  CASE WHEN IFWMS103.BWART IN ('114') THEN 'ST'
                                                                  WHEN IFWMS103.BWART IN ('113') THEN 'VP'
                                                                  ELSE  'VD' 
                                                                  END AND BZ.PTNRKY = IFWMS103.LIFNR AND ROWNUM = 1)  AS LOTA01NM 
           , IFWMS103.DEPTID1    AS LOTA02
           , (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = IFWMS103.DEPTID1) AS LOTA02NM
           , IFWMS103.BWTAR      AS LOTA03
           , IFWMS103.EBELN      AS LOTA04
           , SM.SKUG04           AS LOTA05
           , CASE WHEN IFWMS103.BWART IN ('103') THEN '10' 
                  WHEN IFWMS103.BWART IN ('104') THEN '20'
                       ELSE '00' END  AS LOTA06
           , IFWMS103.USRID4     AS LOTA07
           , IFWMS103.DEPTID4    AS LOTA08
           , ' '                 AS LOTA09
           , ' '                 AS LOTA10
           , TO_CHAR(SYSDATE,'YYYYMMDD')    AS LOTA11
           , TO_CHAR(SYSDATE,'YYYYMMDD')    AS LOTA12
           , TO_CHAR(SYSDATE + SM.RIMDMT,'YYYYMMDD') AS LOTA13
           , ' '                 AS LOTA14
           , ' '                 AS LOTA15
           , NVL(IFWMS103.N00101,'0') AS LOTA16
           , 0                   AS LOTA17
           , 0                   AS LOTA18
           , 0                   AS LOTA19
           , 0                   AS LOTA20
           , ' '                 AS AWMSNO
           , IFWMS103.EBELN      AS REFDKY
           , IFWMS103.EBELP      AS REFDIT
           , ' '                 AS REFCAT
           , TO_CHAR(SYSDATE,'YYYYMMDD')    AS REFDAT
           , NVL(SM.DESC01,' ')  AS DESC01
           , NVL(SM.DESC02,' ')  AS DESC02
           , NVL(SM.ASKU01,' ') AS ASKU01
           , NVL(SM.ASKU02,' ')  AS ASKU02
           , NVL(SM.ASKU03,' ')  AS ASKU03
           , NVL(SM.ASKU04,' ')  AS ASKU04
           , NVL(SM.ASKU05,' ')  AS ASKU05
           , NVL(SM.EANCOD,' ')  AS EANCOD
           , NVL(SM.GTINCD,' ')  AS GTINCD
           , NVL(SM.SKUG01,' ')  AS SKUG01
           , NVL(SM.SKUG02,' ')  AS SKUG02
           , NVL(SM.SKUG03,' ')  AS SKUG03
           , NVL(SM.SKUG04,' ')  AS SKUG04
           , NVL(SM.SKUG05,' ')  AS SKUG05
           , NVL(SM.GRSWGT,0)    AS GRSWGT
           , NVL(SM.NETWGT,0)    AS NETWGT
           , NVL(SM.WGTUNT,' ')  AS WGTUNT
           , NVL(SM.LENGTH,0)    AS LENGTH
           , NVL(SM.WIDTHW,0)    AS WIDTHW
           , NVL(SM.HEIGHT,0)    AS HEIGHT
           , NVL(SM.CUBICM,0)    AS CUBICM
           , NVL(SM.CAPACT,0)    AS CAPACT
           , IFWMS103.MENGE      AS QTYORG
           , IFWMS103.MANDT      AS SMANDT
           , IFWMS103.EBELN      AS SEBELN
           , IFWMS103.EBELP      AS SEBELP
           , IFWMS103.MBLNO      AS SZMBLNO
           , IFWMS103.MIPNO      AS SZMIPNO
           , IFWMS103.VGBEL      AS STRAID
           , IFWMS103.C00102     AS SVBELN
           , IFWMS103.C00103     AS SPOSNR
           , ' '                 AS STKNUM
           , ' '                 AS STPNUM
           , ' '                 AS SWERKS
           , IFWMS103.LGORT      AS SLGORT
           , ' '                 AS SDATBG
           , ' '                 AS STDLNR
           , ' '                 AS SSORNU
           , ' '                 AS SSORIT
           , ' '                 AS SMBLNR
           , ' '                 AS SZEILE
           , ' '                 AS SMJAHR
           , ' '                 AS SXBLNR
           , ' '                 AS SBKTXT
           , ' '                 AS RCPRSN
        FROM IFWMS103
             LEFT OUTER JOIN SKUMA SM
          ON SM.OWNRKY        = #SES_OWNER#
         AND SM.SKUKEY        = IFWMS103.MATNR
             LEFT OUTER JOIN SKUWC SW
          ON SW.WAREKY        = #WAREKY#
         AND SW.OWNRKY        = #SES_OWNER#
         AND SW.SKUKEY        = IFWMS103.MATNR       
       WHERE IFWMS103.WERKS   = #SES_OWNER#
         AND IFWMS103.IFFLG  IN ('N', 'Y')
         AND IFWMS103.STATUS IN ('A', 'C')
         <!-- AND IFWMS103.BWART   = #RCPTTY# -->
         AND (IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R) > 0 
         AND IFWMS103.EBELN = #SEBELN#
      <isEqual property="MENUID" compareValue="GR02">
      <isEqual property="RCPTTY" compareValue="ALL">
			AND IFWMS103.BWART IN ('101','102','103','104','105','106','107')
	  </isEqual>
	  <isNotEqual property="RCPTTY" compareValue="ALL">
			AND IFWMS103.BWART = #RCPTTY#
	  </isNotEqual>
	  </isEqual>
	  <isEqual property="MENUID" compareValue="GR12">
	    <isEqual property="RCPTTY" compareValue="ALL">
			AND IFWMS103.BWART IN ('113','114')
		</isEqual>
		<isNotEqual property="RCPTTY" compareValue="ALL">
			AND IFWMS103.BWART = #RCPTTY#
		</isNotEqual>
	  </isEqual>
      <isNotEmpty property="RANGE_SQL">
             $RANGE_SQL$
      </isNotEmpty>
   </select>
	<!-- GR02 ITEM GRID SELECT END -->
	
	<!-- <select id="GR02Sub_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE 
		            WHEN LC.LOCAKY IS NULL THEN 'MASTER_M0477'  || ' ' || STD.LOCAKY 
		
		            ELSE 'OK'
		       END AS MSG
		FROM 
          		(         
				   $VALIDATION_SQL$
		 		) STD 
       LEFT OUTER JOIN LOCMA  LC
	   		ON LC.LOCAKY = STD.LOCAKY
	   WHERE LC.LOCAKY IS NULL) 
	</select> -->
	
	<!-- GR02 HEAD GRID INSERT START -->
	<insert id="GR02H_UPDATE" parameterClass="Map">
		INSERT INTO RECDH
		(
			RECVKY,
			WAREKY,
			RCPTTY,
			STATDO,
			SAPSTS,
			DOCDAT,
			DOCCAT,
			DPTNKY,
			DRELIN,
			ARCPTD,			
			OWNRKY,
			INDRCN,
			CRECVD,
			RSNCOD,
			PUTSTS,
			USRID1,
			UNAME1,
			DEPTID1,
			DNAME1,
			USRID2,			
			UNAME2,
			DEPTID2,
			DNAME2,
			USRID3,
			UNAME3,
			DEPTID3,
			DNAME3,
			USRID4,
			UNAME4,
			DEPTID4,			
			DNAME4,
			DOCTXT,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
		) VALUES (
			NVL( #RECVKY#, ' '),
			NVL( #WAREKY#, ' '),
			NVL( #RCPTTY#, ' '),
			NVL( #STATDO#, ' '),
			NVL( #SAPSTS#, ' '),
			NVL( #DOCDAT#, ' '),
			NVL( #DOCCAT#, ' '),
			NVL( #DPTNKY#, ' '),
			NVL( #DRELIN#, ' '),
			NVL( #ARCPTD#, ' '),
			NVL( #OWNRKY#, ' '),
			NVL( #INDRCN#, ' '),
			NVL( #CRECVD#, ' '),
			NVL( #RSNCOD#, ' '),
			NVL( #PUTSTS#, ' '),
			NVL( #USRID1#, ' '),
			NVL( #UNAME1#, ' '),
			NVL( #DEPTID1#, ' '),
			NVL( #DNAME1#, ' '),
			NVL( #USRID2#, ' '),			
			NVL( #UNAME2#, ' '),
			NVL( #DEPTID2#, ' '),
			NVL( #DNAME2#, ' '),
			NVL( #USRID3#, ' '),
			NVL( #UNAME3#, ' '),
			NVL( #DEPTID3#, ' '),
			NVL( #DNAME3#, ' '),
			NVL( #USRID4#, ' '),
			NVL( #UNAME4#, ' '),
			NVL( #DEPTID4#, ' '),			
			NVL( #DNAME4#, ' '),
			NVL( #DOCTXT#, ' '),
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'),
			#SES_USER_ID#,
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'),
			#SES_USER_ID#
		)
	</insert>
	<!-- GR02 HEAD GRID INSERT END -->
	
	

	
	<select id="GR02R_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT H.RECVKY,
		       CASE WHEN H.RCPTTY IN ('101','102','103','104','105') THEN I.SEBELN ELSE I.SVBELN END AS SEBELN,
		       DT.SHORTX AS RCPTTYNM,
		       WAREKY,
		       RCPTTY,
		       STATDO,
		       H.SAPSTS,
		       DOCDAT,
		       H.DOCCAT,
		       DPTNKY,
		       ( SELECT NAME01 FROM BZPTN BZ WHERE BZ.PTNRKY = H.DPTNKY AND  BZ.PTNRTY
		       = CASE WHEN  H.RCPTTY IN ('101','102','103','104','105') THEN 'VD' 
		              WHEN  H.RCPTTY IN ('108','109','110') THEN 'CT'
		              ELSE  'VD'
		              END ) AS DPTNKYNM,
		       ' ' AS WAREKYNM,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       DRELIN,
		       ARCPTD,
		       OWNRKY,
		       H.INDRCN,
		       H.CRECVD,
		       H.RSNCOD,
		       PUTSTS,
		       USRID1,
		       UNAME1,
		       DEPTID1,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = DEPTID1) AS DEPTID1NM,
		       DNAME1,
		       USRID2,
		       UNAME2,
		       DEPTID2,
		       DNAME2,
		       USRID3,
		       UNAME3,
		       DEPTID3,
		       DNAME3,
		       USRID4,
		       UNAME4,
		       DEPTID4,
		       DNAME4,
		       DOCTXT,
		       H.CREDAT,
		       H.CRETIM,
		       H.CREUSR,
		       H.LMODAT,
		       H.LMOTIM,
		       H.LMOUSR,
		       ' ' AS CUSRNM,
			   ' ' AS LUSRNM
		FROM   RECDH H
		    LEFT OUTER JOIN RECDI I
		ON H.RECVKY = I.RECVKY
		    LEFT OUTER JOIN DOCTM DT	
		ON DT.DOCUTY = H.RCPTTY
		    LEFT OUTER JOIN DOCCM DC	
		ON DC.DOCCAT = '100'
		WHERE H.RECVKY IN ( $RECVKY$ )
	</select>
	
	<select id="GR02IR_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			RECVKY,
			RECVIT,
			STATIT,
			SAPSTS,
			SKUKEY,
			LOTNUM,
			AREAKY,
			LOCAKY,
			SECTID,
			TRNUID,
			PACKID,
			QTYRCV ,
			TRUNC(QTYRCV/QTDUOM) AS BOXQTY,
			MOD(QTYRCV,QTDUOM) AS REMQTY,
			QTYDIF,
			QTYUOM,
			QTYUOM AS ASNQTY,
			TRUNTY,
			MEASKY,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			INDRCN,
			CRECVD,
			RSNCOD,
			LOTA01,
			LOTA02,
			(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = LOTA02) AS LOTA02NM,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			' ' AS LOTA01NM,
			' ' AS SBKTXT,
			AWMSNO,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			DESC01,
			DESC02,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			QTYORG,
			SMANDT,
			SEBELN,
			SEBELP,
			SZMBLNO,
			SZMIPNO,
			STRAID,
			SVBELN,
			SPOSNR,
			STKNUM,
			STPNUM,
			SWERKS,
			SLGORT,
			SDATBG,
			STDLNR,
			SSORNU,
			SSORIT,
			SMBLNR,
			SZEILE,
			SMJAHR,
			SXBLNR,
			RCPRSN,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR,
			' ' AS CUSRNM,
			' ' AS LUSRNM
		FROM RECDI
		WHERE RECVKY = #RECVKY#
	</select>
		
	<!-- GR01, GR02, GR20 VALIDATION START -->
	<select id="GR02BAK_VALIDATION" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.GOODRECEIPT.VALIDATE_RC -->
		SELECT	CASE	WHEN DC.DOCCAT IS NULL THEN 'DOCCAT' || '/' || STD.DOCCAT 
						WHEN DT.DOCUTY IS NULL THEN 'DOCUTY' || '/' || STD.DOCUTY 
						WHEN WH.WAREKY IS NULL THEN 'WAREKY' || '/' || STD.WAREKY 
						WHEN LM.LOCAKY IS NULL THEN 'LOCAKY' || '/' || STD.LOCAKY 
						WHEN OW.OWNRKY IS NULL THEN 'OWNRKY' || '/' || STD.OWNRKY 
						WHEN BZ.PTNRKY IS NULL THEN 'DPTNKY' || '/' || STD.DPTNKY 
						WHEN SM.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY 
						WHEN SW.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY 
						WHEN MH.MEASKY IS NULL THEN 'MEASKY' || '/' || STD.MEASKY 
						WHEN MI.UOMKEY IS NULL THEN 'UOMKEY' || '/' || STD.UOMKEY 
						/* WHEN STD.DOCUTY IN ('101','102','103','104','109','110','115') 
							AND (IF.C00102 IS NULL OR IF.C00102 = ' ') THEN 'RORDCF' || '/' || STD.EBELN   */
						ELSE 'OK' 
				END AS "resultMsg" 
		FROM	( $VALIDATION_SQL$ ) STD 
				LEFT OUTER JOIN IFWMS103 IF	ON IF.WERKS = STD.OWNRKY 
		         							AND IF.EBELN = STD.EBELN 
		            						AND IF.EBELP = STD.EBELP 
		            						AND IF.STATUS IN ('A','C') 
		            						AND IF.IFFLG IN ('Y','N')
       			LEFT OUTER JOIN DOCCM DC	ON DC.DOCCAT = STD.DOCCAT 
       			LEFT OUTER JOIN DOCTM DT	ON DT.DOCUTY = STD.DOCUTY 
       			LEFT OUTER JOIN WAHMA WH	ON WH.WAREKY = STD.WAREKY 
       			LEFT OUTER JOIN LOCMA LM	ON LM.WAREKY = STD.WAREKY 
              								AND LM.LOCAKY = STD.LOCAKY 
       			LEFT OUTER JOIN OWNER OW	ON OW.OWNRKY = STD.OWNRKY 
       			LEFT OUTER JOIN BZPTN BZ	ON BZ.PTNRKY = STD.DPTNKY 
              								AND BZ.PTNRTY IN (CASE	WHEN STD.DOCUTY IN ('108','109','110','111','115','116') THEN 'CT' 
                                     								WHEN STD.DOCUTY IN ('166') THEN 'TM' 
                                     						  ELSE 'VD'
                                     						  END) 
											<!-- AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = STD.WAREKY)  -->
				LEFT OUTER JOIN SKUMA SM	ON SM.OWNRKY = STD.OWNRKY 
											AND SM.SKUKEY = STD.SKUKEY 
				LEFT OUTER JOIN SKUWC SW	ON SW.WAREKY = STD.WAREKY 
              								AND SW.OWNRKY = STD.OWNRKY 
              								AND SW.SKUKEY = STD.SKUKEY 
				LEFT OUTER JOIN MEASH MH	ON MH.WAREKY = STD.WAREKY 
              								AND MH.MEASKY = STD.MEASKY 
       			LEFT OUTER JOIN MEASI MI	ON MI.WAREKY = STD.WAREKY 
              								AND MI.MEASKY = STD.MEASKY 
              								AND MI.UOMKEY = STD.UOMKEY 
	</select>
	<!-- GR01, GR01, GR20 VALIDATION END -->
	
<!-- GR02 SQL END-->
<!-- GR14 SQL START-->


<!-- GR14 HEAD GRID SELECT START -->
   <select id="GR14_LIST" parameterClass="Map" resultClass="DataMap">
      SELECT    
            ' ' AS RECVKY,
             #WAREKY#  AS WAREKY, -- 技记蔼 
            (SELECT WH.NAME01 FROM WAHMA WH WHERE WH.WAREKY = #WAREKY#) AS WAREKYNM,
            '111'  AS RCPTTY,
            ( SELECT  DT.SHORTX FROM DOCTM DT WHERE DOCUTY = #RCPTTY#)  AS RCPTTYNM,
            'NEW' AS STATDO,
            ' ' AS SAPSTS,
            TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
            '100' AS DOCCAT,
            (SELECT DC.SHORTX FROM DOCCM DC WHERE DOCCAT = '100') AS DOCCATNM,
           ' '  AS DPTNKY,
           ' '  AS DPTNKYNM,
            ' ' AS DRELIN,
            TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
            #SES_OWNER# AS OWNRKY,
            ' ' AS INDRCN,
            ' ' AS CRECVD,
            ' ' AS RSNCOD,
            ' ' AS PUTSTS,
            ' ' AS LGORT,
            ' ' AS LGORTNM,
            ' ' AS DOCTXT,
            ' '  AS SEBELN,
            ' ' AS CONFIM,
            ' ' AS USRID1,
            ' ' AS DEPTID1,
            ' ' AS DEPTID1NM,
            ' ' AS USRID2,
            ' ' AS DEPTID2,
            ' ' AS USRID3,
            ' ' AS DEPTID3,   
		    ' '  AS DEPTID4,
		    ' '  AS DNAME4,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
			#SES_USER_ID# AS CREUSR,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
			#SES_USER_ID# AS LMOUSR                   
      FROM   DUAL
   </select>
   <!-- GR14 HEAD GRID SELECT END -->
	
	<!-- GR14 ITEM GRID SELECT START -->
	<select id="GR14Sub_LIST" parameterClass="Map" resultClass="DataMap">
SELECT 
             ' '                     AS RECVKY
           , ' '                     AS RECVIT
           , 'NEW'                   AS STATIT
           , ' '                     AS SAPSTS
           , TI.SKUKEY           AS SKUKEY
           , ' '                 AS LOTNUM
           , 'PV'                AS AREAKY
           , NVL(TI.LOCASR,' ')  AS LOCAKY
           , ' '                 AS SECTID
           , ' '                 AS TRNUID
           , ' '                 AS PACKID
           , TI.QTCOMP  AS ASNQTY
           , TI.QTCOMP  AS QTYRCV
           , 0                   AS QTYDIF
           , TI.QTCOMP   AS QTYUOM
           , ' '                 AS TRUNTY
           , NVL(TI.SMEAKY,' ')  AS MEASKY
           , NVL(SM.DUOMKY,' ')  AS UOMKEY
           , 1                   AS QTPUOM
           , NVL(SM.DUOMKY,' ')  AS DUOMKY
           , NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM
           , 0 AS BOXQTY
           , 0 AS REMQTY
           , ' '                 AS INDRCN
           , ' '                 AS CRECVD
           , ' '                 AS RSNCOD
           ,TI.LOTA01      AS LOTA01
           , (SELECT BZ.NAME01 FROM BZPTN BZ WHERE  BZ.PTNRKY = TI.LOTA01 AND ROWNUM = 1)  AS LOTA01NM 
           , TI.LOTA02    AS LOTA02
           , (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = TI.LOTA02) AS LOTA02NM
           , TI.LOTA03      AS LOTA03
           , TI.LOTA04      AS LOTA04
           , SM.SKUG04           AS LOTA05
           , #LOTA06#            AS LOTA06 -- DEFAUL  蔼捞哥 VALUE肺 罐酒具 窃 
           , ' '                 AS LOTA07
           , ' '                 AS LOTA08
           , ' '                 AS LOTA09
           , ' '                 AS LOTA10
           , TO_CHAR(SYSDATE,'YYYYMMDD')    AS LOTA11
           , TO_CHAR(SYSDATE,'YYYYMMDD')    AS LOTA12
           , TO_CHAR(SYSDATE + SM.RIMDMT,'YYYYMMDD') AS LOTA13
           , TH.DOCDAT    AS LOTA14
           , ' '                 AS LOTA15
           , TI.LOTA16    AS LOTA16
           , 0                   AS LOTA17
           , 0                   AS LOTA18
           , 0                   AS LOTA19
           , 0                   AS LOTA20
           , ' '                 AS AWMSNO
           ,TI.TASKKY      AS REFDKY
           , TI.TASKIT      AS REFDIT
           , ' '                 AS REFCAT
           , TO_CHAR(SYSDATE,'YYYYMMDD')    AS REFDAT
           , NVL(SM.DESC01,' ')  AS DESC01
           , NVL(SM.DESC02,' ')  AS DESC02
           , NVL(SM.ASKU01,' ') AS ASKU01
           , NVL(SM.ASKU02,' ')  AS ASKU02
           , NVL(SM.ASKU03,' ')  AS ASKU03
           , NVL(SM.ASKU04,' ')  AS ASKU04
           , NVL(SM.ASKU05,' ')  AS ASKU05
           , NVL(SM.EANCOD,' ')  AS EANCOD
           , NVL(SM.GTINCD,' ')  AS GTINCD
           , NVL(SM.SKUG01,' ')  AS SKUG01
           , NVL(SM.SKUG02,' ')  AS SKUG02
           , NVL(SM.SKUG03,' ')  AS SKUG03
           , NVL(SM.SKUG04,' ')  AS SKUG04
           , NVL(SM.SKUG05,' ')  AS SKUG05
           , NVL(SM.GRSWGT,0)    AS GRSWGT
           , NVL(SM.NETWGT,0)    AS NETWGT
           , NVL(SM.WGTUNT,' ')  AS WGTUNT
           , NVL(SM.LENGTH,0)    AS LENGTH
           , NVL(SM.WIDTHW,0)    AS WIDTHW
           , NVL(SM.HEIGHT,0)    AS HEIGHT
           , NVL(SM.CUBICM,0)    AS CUBICM
           , NVL(SM.CAPACT,0)    AS CAPACT
           , TI.QTCOMP      AS QTYORG
           , TI.SMANDT      AS SMANDT
           , ' '            AS SEBELN
           , ' '             AS SEBELP
           , TI.SZMBLNO      AS SZMBLNO
           , TI.SZMIPNO      AS SZMIPNO
           , TI.STRAID      AS STRAID
           , TI.SVBELN     AS SVBELN
           , TI.SPOSNR     AS SPOSNR
           , TI.STKNUM    AS STKNUM
           , TI.STPNUM    AS STPNUM
           , ' '                 AS SWERKS
           , TI.SLGORT           AS SLGORT
           , ' '                 AS SDATBG
           , ' '                 AS STDLNR
           , ' '                 AS SSORNU
           , ' '                 AS SSORIT
           , ' '                 AS SMBLNR
           , ' '                 AS SZEILE
           , ' '                 AS SMJAHR
           , ' '                 AS SXBLNR
           , ' '                 AS SBKTXT
           , ' '                 AS RCPRSN
        FROM TASDH TH  ,  TASDI TI , SKUMA SM
        WHERE TH.TASKKY = TI.TASKKY
        AND     TH.TASOTY = '331'
        AND     TI.OWNRKY = SM.OWNRKY
        AND     TI.SKUKEY = SM.SKUKEY
      <isNotEmpty property="ZONE">
			AND NVL(SUBSTR(TI.LOCASR,1,2),' ') = #ZONE#
	  </isNotEmpty>        
      <isNotEmpty property="RANGE_SQL">
             $RANGE_SQL$
      </isNotEmpty>        
   </select>
	<!-- GR14 ITEM GRID SELECT END -->
	
	<select id="GR14Sub_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT CASE 
		            WHEN LC.LOCAKY IS NULL THEN 'MASTER_M0477'  || ' ' || STD.LOCAKY 
		
		            ELSE 'OK'
		       END AS MSG
		FROM 
          		(         
				   $VALIDATION_SQL$
		 		) STD 
       LEFT OUTER JOIN LOCMA  LC
	   		ON LC.LOCAKY = STD.LOCAKY
	   WHERE LC.LOCAKY IS NULL) 
	</select>
	
	<!-- GR14 HEAD GRID INSERT START -->
	<insert id="GR14H_UPDATE" parameterClass="Map">
		INSERT INTO RECDH
		(
			RECVKY,
			WAREKY,
			RCPTTY,
			STATDO,
			SAPSTS,
			DOCDAT,
			DOCCAT,
			DPTNKY,
			DRELIN,
			ARCPTD,			
			OWNRKY,
			INDRCN,
			CRECVD,
			RSNCOD,
			PUTSTS,
			USRID1,
			UNAME1,
			DEPTID1,
			DNAME1,
			USRID2,			
			UNAME2,
			DEPTID2,
			DNAME2,
			USRID3,
			UNAME3,
			DEPTID3,
			DNAME3,
			USRID4,
			UNAME4,
			DEPTID4,			
			DNAME4,
			DOCTXT,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
		) VALUES (
			NVL( #RECVKY#, ' '),
			NVL( #WAREKY#, ' '),
			NVL( #RCPTTY#, ' '),
			NVL( #STATDO#, ' '),
			NVL( #SAPSTS#, ' '),
			NVL( #DOCDAT#, ' '),
			NVL( #DOCCAT#, ' '),
			NVL( #DPTNKY#, ' '),
			NVL( #DRELIN#, ' '),
			NVL( #ARCPTD#, ' '),
			NVL( #OWNRKY#, ' '),
			NVL( #INDRCN#, ' '),
			NVL( #CRECVD#, ' '),
			NVL( #RSNCOD#, ' '),
			NVL( #PUTSTS#, ' '),
			NVL( #USRID1#, ' '),
			NVL( #UNAME1#, ' '),
			NVL( #DEPTID1#, ' '),
			NVL( #DNAME1#, ' '),
			NVL( #USRID2#, ' '),			
			NVL( #UNAME2#, ' '),
			NVL( #DEPTID2#, ' '),
			NVL( #DNAME2#, ' '),
			NVL( #USRID3#, ' '),
			NVL( #UNAME3#, ' '),
			NVL( #DEPTID3#, ' '),
			NVL( #DNAME3#, ' '),
			NVL( #USRID4#, ' '),
			NVL( #UNAME4#, ' '),
			NVL( #DEPTID4#, ' '),			
			NVL( #DNAME4#, ' '),
			NVL( #DOCTXT#, ' '),
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'),
			#SES_USER_ID#,
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'),
			#SES_USER_ID#
		)
	</insert>
	<!-- GR14 HEAD GRID INSERT END -->
	
	
	<!-- GR14 ITEM GRID INSERT START -->
	<insert id="GR14Sub_UPDATE" parameterClass="Map">
		INSERT INTO RECDI
		(
			RECVKY,
			RECVIT,
			STATIT,
			SAPSTS,
			SKUKEY,
			LOTNUM,
			AREAKY,
			LOCAKY,
			SECTID,
			TRNUID,
			PACKID,
			QTYRCV,
			QTYDIF,
			QTYUOM,
			TRUNTY,
			MEASKY,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			INDRCN,
			CRECVD,
			RSNCOD,
			LOTA01,
			LOTA02,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			AWMSNO,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			DESC01,
			DESC02,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			QTYORG,
			SMANDT,
			SEBELN,
			SEBELP,
			SZMBLNO,
			SZMIPNO,
			STRAID,
			SVBELN,
			SPOSNR,
			STKNUM,
			STPNUM,
			SWERKS,
			SLGORT,
			SDATBG,
			STDLNR,
			SSORNU,
			SSORIT,
			SMBLNR,
			SZEILE,
			SMJAHR,
			SXBLNR,
			RCPRSN,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
		)
		VALUES(
			#RECVKY#,
			#RECVIT#,
			#STATIT#,
			#SAPSTS#,
			#SKUKEY#,
			#LOTNUM#,
			#AREAKY#,
			#LOCAKY#,
			#SECTID#,
			#TRNUID#,
			#PACKID#,
			#QTYRCV#,
			#QTYDIF#,
			#QTYUOM#,
			#TRUNTY#,
			#MEASKY#,
			#UOMKEY#,
			#QTPUOM#,
			#DUOMKY#,
			#QTDUOM#,
			#INDRCN#,
			#CRECVD#,
			#RSNCOD#,
			#LOTA01#,
			#LOTA02#,
			#LOTA03#,
			#LOTA04#,
			#LOTA05#,
			#LOTA06#,
			#LOTA07#,
			#LOTA08#,
			#LOTA09#,
			#LOTA10#,
			#LOTA11#,
			#LOTA12#,
			#LOTA13#,
			#LOTA14#,
			#LOTA15#,
			#LOTA16#,
			#LOTA17#,
			#LOTA18#,
			#LOTA19#,
			#LOTA20#,
			#AWMSNO#,
			#REFDKY#,
			#REFDIT#,
			#REFCAT#,
			#REFDAT#,
			#DESC01#,
			#DESC02#,
			#ASKU01#,
			#ASKU02#,
			#ASKU03#,
			#ASKU04#,
			#ASKU05#,
			#EANCOD#,
			#GTINCD#,
			#SKUG01#,
			#SKUG02#,
			#SKUG03#,
			#SKUG04#,
			#SKUG05#,
			#GRSWGT#,
			#NETWGT#,
			#WGTUNT#,
			#LENGTH#,
			#WIDTHW#,
			#HEIGHT#,
			#CUBICM#,
			#CAPACT#,
			#QTYORG#,
			#SMANDT#,
			#SEBELN#,
			#SEBELP#,
			#SZMBLNO#,
			#SZMIPNO#,
			#STRAID#,
			#SVBELN#,
			#SPOSNR#,
			#STKNUM#,
			#STPNUM#,
			#SWERKS#,
			#SLGORT#,
			#SDATBG#,
			#STDLNR#,
			#SSORNU#,
			#SSORIT#,
			#SMBLNR#,
			#SZEILE#,
			#SMJAHR#,
			#SXBLNR#,
			#RCPRSN#,
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'), 
			#SES_USER_ID#,
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'), 
			#SES_USER_ID#
		)
	</insert>
	<!-- GR14 ITEM GRID INSERT END -->
	
	<select id="GR14R_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT H.RECVKY,
		       CASE WHEN H.RCPTTY IN ('101','102','103','104','105') THEN I.SEBELN ELSE I.SVBELN END AS SEBELN,
		       DT.SHORTX AS RCPTTYNM,
		       WAREKY,
		       RCPTTY,
		       STATDO,
		       H.SAPSTS,
		       DOCDAT,
		       H.DOCCAT,
		       DPTNKY,
		       ( SELECT NAME01 FROM BZPTN BZ WHERE BZ.PTNRKY = H.DPTNKY AND  BZ.PTNRTY
		       = CASE WHEN  H.RCPTTY IN ('101','102','103','104','105') THEN 'VD' 
		              WHEN  H.RCPTTY IN ('108','109','110') THEN 'CT'
		              ELSE  'VD'
		              END ) AS DPTNKYNM,
		       ' ' AS WAREKYNM,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       DRELIN,
		       ARCPTD,
		       OWNRKY,
		       H.INDRCN,
		       H.CRECVD,
		       H.RSNCOD,
		       PUTSTS,
		       USRID1,
		       UNAME1,
		       DEPTID1,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = DEPTID1) AS DEPTID1NM,
		       DNAME1,
		       USRID2,
		       UNAME2,
		       DEPTID2,
		       DNAME2,
		       USRID3,
		       UNAME3,
		       DEPTID3,
		       DNAME3,
		       USRID4,
		       UNAME4,
		       DEPTID4,
		       DNAME4,
		       DOCTXT,
		       H.CREDAT,
		       H.CRETIM,
		       H.CREUSR,
		       H.LMODAT,
		       H.LMOTIM,
		       H.LMOUSR,
		       ' ' AS CUSRNM,
			   ' ' AS LUSRNM
		FROM   RECDH H
		    LEFT OUTER JOIN RECDI I
		ON H.RECVKY = I.RECVKY
		    LEFT OUTER JOIN DOCTM DT	
		ON DT.DOCUTY = H.RCPTTY
		    LEFT OUTER JOIN DOCCM DC	
		ON DC.DOCCAT = '100'
		WHERE H.RECVKY IN ( $RECVKY$ )
	</select>
	
	<select id="GR14IR_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			RECVKY,
			RECVIT,
			STATIT,
			SAPSTS,
			SKUKEY,
			LOTNUM,
			AREAKY,
			LOCAKY,
			SECTID,
			TRNUID,
			PACKID,
			QTYRCV ,
			TRUNC(QTYRCV/QTDUOM) AS BOXQTY,
			MOD(QTYRCV,QTDUOM) AS REMQTY,
			QTYDIF,
			QTYUOM,
			QTYUOM AS ASNQTY,
			TRUNTY,
			MEASKY,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			INDRCN,
			CRECVD,
			RSNCOD,
			LOTA01,
			LOTA02,
			(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = LOTA02) AS LOTA02NM,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			' ' AS LOTA01NM,
			' ' AS SBKTXT,
			AWMSNO,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			DESC01,
			DESC02,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			QTYORG,
			SMANDT,
			SEBELN,
			SEBELP,
			SZMBLNO,
			SZMIPNO,
			STRAID,
			SVBELN,
			SPOSNR,
			STKNUM,
			STPNUM,
			SWERKS,
			SLGORT,
			SDATBG,
			STDLNR,
			SSORNU,
			SSORIT,
			SMBLNR,
			SZEILE,
			SMJAHR,
			SXBLNR,
			RCPRSN,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR,
			' ' AS CUSRNM,
			' ' AS LUSRNM
		FROM RECDI
		WHERE RECVKY = #RECVKY#
	</select>
		
	<!-- GR01, GR14, GR20 VALIDATION START -->
	<select id="GR14_VALIDATION" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.GOODRECEIPT.VALIDATE_RC -->
		SELECT	CASE	WHEN DC.DOCCAT IS NULL THEN 'DOCCAT' || '/' || STD.DOCCAT 
						WHEN DT.DOCUTY IS NULL THEN 'DOCUTY' || '/' || STD.DOCUTY 
						WHEN WH.WAREKY IS NULL THEN 'WAREKY' || '/' || STD.WAREKY 
						WHEN LM.LOCAKY IS NULL THEN 'LOCAKY' || '/' || STD.LOCAKY 
						WHEN OW.OWNRKY IS NULL THEN 'OWNRKY' || '/' || STD.OWNRKY 
						WHEN BZ.PTNRKY IS NULL THEN 'DPTNKY' || '/' || STD.DPTNKY 
						WHEN SM.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY 
						WHEN SW.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY 
						WHEN MH.MEASKY IS NULL THEN 'MEASKY' || '/' || STD.MEASKY 
						WHEN MI.UOMKEY IS NULL THEN 'UOMKEY' || '/' || STD.UOMKEY 
						/* WHEN STD.DOCUTY IN ('101','102','103','104','109','110','115') 
							AND (IF.C00102 IS NULL OR IF.C00102 = ' ') THEN 'RORDCF' || '/' || STD.EBELN   */
						ELSE 'OK' 
				END AS "resultMsg" 
		FROM	( $VALIDATION_SQL$ ) STD 
				LEFT OUTER JOIN IFWMS103 IF	ON IF.WERKS = STD.OWNRKY 
		         							AND IF.EBELN = STD.EBELN 
		            						AND IF.EBELP = STD.EBELP 
		            						AND IF.STATUS IN ('A','C') 
		            						AND IF.IFFLG IN ('Y','N')
       			LEFT OUTER JOIN DOCCM DC	ON DC.DOCCAT = STD.DOCCAT 
       			LEFT OUTER JOIN DOCTM DT	ON DT.DOCUTY = STD.DOCUTY 
       			LEFT OUTER JOIN WAHMA WH	ON WH.WAREKY = STD.WAREKY 
       			LEFT OUTER JOIN LOCMA LM	ON LM.WAREKY = STD.WAREKY 
              								AND LM.LOCAKY = STD.LOCAKY 
       			LEFT OUTER JOIN OWNER OW	ON OW.OWNRKY = STD.OWNRKY 
       			LEFT OUTER JOIN BZPTN BZ	ON BZ.PTNRKY = STD.DPTNKY 
              								AND BZ.PTNRTY IN (CASE	WHEN STD.DOCUTY IN ('108','109','110','111','115','116') THEN 'CT' 
                                     								WHEN STD.DOCUTY IN ('166') THEN 'TM' 
                                     						  ELSE 'VD'
                                     						  END) 
											<!-- AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = STD.WAREKY)  -->
				LEFT OUTER JOIN SKUMA SM	ON SM.OWNRKY = STD.OWNRKY 
											AND SM.SKUKEY = STD.SKUKEY 
				LEFT OUTER JOIN SKUWC SW	ON SW.WAREKY = STD.WAREKY 
              								AND SW.OWNRKY = STD.OWNRKY 
              								AND SW.SKUKEY = STD.SKUKEY 
				LEFT OUTER JOIN MEASH MH	ON MH.WAREKY = STD.WAREKY 
              								AND MH.MEASKY = STD.MEASKY 
       			LEFT OUTER JOIN MEASI MI	ON MI.WAREKY = STD.WAREKY 
              								AND MI.MEASKY = STD.MEASKY 
              								AND MI.UOMKEY = STD.UOMKEY 
	</select>
	<!-- GR01, GR01, GR20 VALIDATION END -->
	
<!-- GR14 SQL END-->
<!-- //구매입하 -->

<!-- 반품통지입하 -->
<!-- GR05 SQL START -->

	<!-- GR05 HEAD GRID SELECT START -->
<!-- 	<select id="GR05_LIST" parameterClass="Map" resultClass="DataMap">
		SQL Key : INBOUND.GOODRECEIPT.FIND_INTERFACE_TO_CREATE_RECDH
		SELECT 
		       ' ' AS RECVKY,
		       IFWMS103.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       #RCPTTY# AS RCPTTY,
		       DT.SHORTX AS RCPTTYNM,
		       'NEW' AS STATDO,
		       ' ' AS SAPSTS,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       '100' AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       IFWMS103.LIFNR AS DPTNKY,
		       VD.NAME01 AS DPTNKYNM,
		       ' ' AS DRELIN,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
		       #SES_OWNER# AS OWNRKY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       ' ' AS PUTSTS,
		       IFWMS103.LGORT AS LGORT,
		       NVL(LG.NAME01,' ') AS LGORTNM,
		       NVL(VU.ERPUSR,' ') AS USRID1,
		       NVL(VU.ERPNAM,' ') AS UNAME1,
		       NVL(VU.DEPTID,' ') AS DEPTID1,
		       NVL(VU.DPNAME,' ') AS DNAME1,
		       NVL(VU2.ERPUS2,' ') AS USRID2,
		       NVL(VU2.USNAM2,' ') AS UNAME2,
		       NVL(VU2.DEPID2,' ') AS DEPTID2,
		       NVL(VU2.DPNAM2,' ') AS DNAME2,
		       NVL(VU2.ERPUS3,' ') AS USRID3,
		       NVL(VU2.USNAM3,' ') AS UNAME3,
		       NVL(VU2.DEPID3,' ') AS DEPTID3,
		       NVL(VU2.DPNAM3,' ') AS DNAME3,
		       NVL(VU2.ERPUS4,' ') AS USRID4,
		       NVL(VU2.USNAM4,' ') AS UNAME4,
		       NVL(VU2.DEPID4,' ') AS DEPTID4,
		       NVL(VU2.DPNAM4,' ') AS DNAME4,
		       IFWMS103.C00103 AS DOCTXT,
		       IFWMS103.EBELN AS SEBELN,
		       IFWMS103.C00102 AS CONFIM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24:MI:SS') AS CRETIM,
		       'DEV' AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24:MI:SS') AS LMOTIM,
		       'DEV' AS LMOUSR,
		       ' ' AS LUSRNM
		  FROM IFWMS103
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = #SES_OWNER#
		              AND SM.SKUKEY = IFWMS103.SKUKEY
		       LEFT OUTER JOIN SKUWC SW
		               ON SW.WAREKY = #WAREKY#
		              AND SW.OWNRKY = #SES_OWNER#
		              AND SW.SKUKEY = IFWMS103.SKUKEY
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = IFWMS103.WAREKY
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '100'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #RCPTTY#
		       LEFT OUTER JOIN BZPTN VD
		               ON VD.PTNRKY = IFWMS103.LIFNR
		              AND VD.PTNRTY IN (CASE WHEN #RCPTTY# IN ('108','109','110','111','115','116') THEN 'CT'
		                                     WHEN #RCPTTY# IN ('166') THEN 'TM'
		                                     ELSE 'VD' END)
		              AND VD.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN BZPTN LG
		               ON LG.PTNRKY = IFWMS103.LGORT
		              AND LG.PTNRTY = 'WH'
		              AND LG.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP VU
		               ON VU.OWNRKY = #SES_OWNER#
		              AND VU.USERID = 'DEV'
		       LEFT OUTER JOIN VUSER_WAREDOCUSER VU2
		               ON VU2.WAREKY = #WAREKY#
		              AND VU2.DOCUTY = #RCPTTY#
		 WHERE IFWMS103.WERKS = #SES_OWNER#
		   AND IFWMS103.IFFLG = 'N'
		   AND #WAREKY# LIKE (CASE WHEN IFWMS103.WERKS = 'CSHA' AND IFWMS103.WAREKY = 'WSH_' THEN 'WSH%'
		                           WHEN IFWMS103.WERKS = 'CMAS' AND IFWMS103.WAREKY = 'WSH_' THEN 'PMS%'
		                           ELSE IFWMS103.WAREKY END)
		   AND IFWMS103.BWART = #RCPTTY#
		   AND (IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R) &gt; 0
		   <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY IFWMS103.EBELN, IFWMS103.WAREKY, IFWMS103.LIFNR, IFWMS103.LGORT, IFWMS103.C00102, IFWMS103.C00103,
		          WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01, LG.NAME01,
		          VU.ERPUSR, VU.ERPNAM, VU.DEPTID, VU.DPNAME,
		          VU2.ERPUS2, VU2.USNAM2, VU2.DEPID2, VU2.DPNAM2,
		          VU2.ERPUS3, VU2.USNAM3, VU2.DEPID3, VU2.DPNAM3,
		          VU2.ERPUS4, VU2.USNAM4, VU2.DEPID4, VU2.DPNAM4
		 ORDER BY IFWMS103.EBELN DESC
	</select>
	GR05 HEAD GRID SELECT END
	
	
	GR05 ITEM GRID SELECT START
	<select id="GR05Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SQL KEY : INBOUND.GOODRECEIPT.FIND_INTERFACE_TO_CREATE_RECDI
		SELECT 
		       ' ' AS RECVKY,
		       ' ' AS RECVIT,
		       'NEW' AS STATIT,
		       ' ' AS SAPSTS,
		       IFWMS103.SKUKEY AS SKUKEY,
		       ' ' AS LOTNUM,
		       ' ' AS AREAKY,
		       CASE WHEN IFWMS103.BWART IN ('108','109','110','111', '115', '116')
		                 THEN 'RTNLOC'
		            WHEN IFWMS103.BWART IN ('101','102','103','104') AND IFWMS103.C00104 = 'DS'
		                 THEN 'DIRLOC'
		            ELSE NVL(SW.LOCARV,' ') END AS LOCAKY,
		       ' ' AS SECTID,
		       ' ' AS TRNUID,
		       ' ' AS PACKID,
		       IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS ASNQTY,
		       IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS QTYRCV,
		       0 AS QTYDIF,
		       IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R AS QTYUOM,
		       ' ' AS TRUNTY,
		       NVL(SW.MEASKY,' ') AS MEASKY,
		       NVL((SELECT UOMKEY FROM UOMMA WHERE UOMKEY = IFWMS103.MEINS), 'EA') AS UOMKEY,
		       NVL(ITFMS.QTPUOM,0) AS QTPUOM,
		       NVL(SM.DUOMKY,' ') AS DUOMKY,
		       NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM,
		       TRUNC((IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R)/NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS BOXQTY,
		       MOD(IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R,NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS REMQTY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       DECODE(SM.LOTL08,'V','*',' ')    AS LOTA01,
		       NVL(L01NM.NAME01,' ') AS LOTA01NM,
		       ' ' AS LOTA02,
		       IFWMS103.LIFNR AS LOTA03,
		       IFWMS103.EBELN||IFWMS103.EBELP AS LOTA04,
		       IFWMS103.C00104 AS LOTA05,
		       '00' AS LOTA06,
		       ' ' AS LOTA07,
		       ' ' AS LOTA08,
		       ' ' AS LOTA09,
		       ' ' AS LOTA10,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11,
		       ' ' AS LOTA12,
		       ' ' AS LOTA13,
		       ' ' AS LOTA14,
		       ' ' AS LOTA15,
		       0 AS LOTA16,
		       0 AS LOTA17,
		       0 AS LOTA18,
		       0 AS LOTA19,
		       0 AS LOTA20,
		       ' ' AS AWMSNO,
		       IFWMS103.EBELN AS REFDKY,
		       IFWMS103.EBELP AS REFDIT,
		       ' ' AS REFCAT,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
		       NVL(SM.DESC01,' ') AS DESC01,
		       NVL(SM.DESC02,' ') AS DESC02,
		       SZF_GETOLDSKUKEY(#WAREKY#, IFWMS103.SKUKEY) AS ASKU01,
		       NVL(SM.ASKU02,' ') AS ASKU02,
		       NVL(SM.ASKU03,' ') AS ASKU03,
		       NVL(SM.ASKU04,' ') AS ASKU04,
		       NVL(SM.ASKU05,' ') AS ASKU05,
		       NVL(SM.EANCOD,' ') AS EANCOD,
		       NVL(SM.GTINCD,' ') AS GTINCD,
		       NVL(SM.SKUG01,' ') AS SKUG01,
		       NVL(SM.SKUG02,' ') AS SKUG02,
		       NVL(SM.SKUG03,' ') AS SKUG03,
		       NVL(SM.SKUG04,' ') AS SKUG04,
		       NVL(SM.SKUG05,' ') AS SKUG05,
		       NVL(SM.GRSWGT,0) AS GRSWGT,
		       NVL(SM.NETWGT,0) AS NETWGT,
		       NVL(SM.WGTUNT,' ') AS WGTUNT,
		       NVL(SM.LENGTH,0) AS LENGTH,
		       NVL(SM.WIDTHW,0) AS WIDTHW,
		       NVL(SM.HEIGHT,0) AS HEIGHT,
		       NVL(SM.CUBICM,0) AS CUBICM,
		       NVL(SM.CAPACT,0) AS CAPACT,
		       0 AS QTYORG,
		       IFWMS103.MANDT AS SMANDT,
		       IFWMS103.EBELN AS SEBELN,
		       IFWMS103.EBELP AS SEBELP,
		       IFWMS103.MBLNO AS SZMBLNO,
		       IFWMS103.MIPNO AS SZMIPNO,
		       IFWMS103.VGBEL AS STRAID,
		       ' ' AS SVBELN,
		       ' ' AS SPOSNR,
		       ' ' AS STKNUM,
		       ' ' AS STPNUM,
		       ' ' AS SWERKS,
		       IFWMS103.LGORT AS SLGORT,
		       ' ' AS SDATBG,
		       ' ' AS STDLNR,
		       ' ' AS SSORNU,
		       ' ' AS SSORIT,
		       ' ' AS SMBLNR,
		       ' ' AS SZEILE,
		       ' ' AS SMJAHR,
		       ' ' AS SXBLNR,
		       ' ' AS SBKTXT,
		       ' ' AS RCPRSN,
		        TO_CHAR(SYSDATE,'YYYY-MM-DD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24:MI:SS') AS CRETIM,
		       'DEV' AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24:MI:SS') AS LMOTIM,
		       'DEV' AS LMOUSR,
		       ' ' AS LUSRNM
		  FROM IFWMS103
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = #SES_OWNER#
		              AND SM.SKUKEY = IFWMS103.SKUKEY
		       LEFT OUTER JOIN SKUWC SW
		               ON SW.WAREKY = #WAREKY#
		              AND SW.OWNRKY = #SES_OWNER#
		              AND SW.SKUKEY = IFWMS103.SKUKEY
		       LEFT OUTER JOIN MEASI ITFMS
		               ON ITFMS.WAREKY = #WAREKY#
		              AND ITFMS.MEASKY = SW.MEASKY
		              AND ITFMS.UOMKEY = IFWMS103.MEINS
		       LEFT OUTER JOIN BZPTN L01NM
		               ON L01NM.PTNRKY = IFWMS103.DEPTID1
		              AND L01NM.PTNRTY = 'TM'
		              AND L01NM.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		 WHERE IFWMS103.WERKS = #SES_OWNER#
		   AND IFWMS103.IFFLG IN ('N','Y')
		   AND IFWMS103.STATUS IN ('A', 'C')
		   AND #WAREKY# LIKE (CASE WHEN IFWMS103.WERKS = 'CSHA' AND IFWMS103.WAREKY = 'WSH_' THEN 'WSH%'
		                           WHEN IFWMS103.WERKS = 'CMAS' AND IFWMS103.WAREKY = 'WSH_' THEN 'PMS%'
		                           ELSE IFWMS103.WAREKY END)
		   AND IFWMS103.BWART = #RCPTTY#
		   AND (IFWMS103.MENGE - IFWMS103.MENGE_B - IFWMS103.MENGE_R) &gt; 0
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select> -->
	
	<select id="GR05R_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT H.RECVKY,
		       ' ' AS SEBELN,
		       DT.SHORTX AS RCPTTYNM,
		       WAREKY,
		       RCPTTY,
		       STATDO,
		       H.SAPSTS,
		       DOCDAT,
		       H.DOCCAT,
		       DPTNKY,
		       ' ' AS DPTNKYNM,
		       ' ' AS WAREKYNM,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       DRELIN,
		       ARCPTD,
		       OWNRKY,
		       H.INDRCN,
		       H.CRECVD,
		       H.RSNCOD,
		       PUTSTS,
		       USRID1,
		       UNAME1,
		       DEPTID1,
		       DNAME1,
		       USRID2,
		       UNAME2,
		       DEPTID2,
		       DNAME2,
		       USRID3,
		       UNAME3,
		       DEPTID3,
		       DNAME3,
		       USRID4,
		       UNAME4,
		       DEPTID4,
		       DNAME4,
		       DOCTXT,
		       H.CREDAT,
		       H.CRETIM,
		       H.CREUSR,
		       H.LMODAT,
		       H.LMOTIM,
		       H.LMOUSR,
		       ' ' AS CUSRNM,
			   ' ' AS LUSRNM
		FROM   RECDH H
		    LEFT OUTER JOIN RECDI I
		ON H.RECVKY = I.RECVKY
		    LEFT OUTER JOIN DOCTM DT	
		ON DT.DOCUTY = H.RECVKY
		    LEFT OUTER JOIN DOCCM DC	
		ON DC.DOCCAT = '100'
		WHERE H.RECVKY IN ( $RECVKY$ )
	</select>
	
	<select id="GR05IR_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			RECVKY,
			RECVIT,
			STATIT,
			SAPSTS,
			SKUKEY,
			LOTNUM,
			AREAKY,
			LOCAKY,
			SECTID,
			TRNUID,
			PACKID,
			QTYRCV ,
			TRUNC(QTYRCV/QTDUOM) AS BOXQTY,
			MOD(QTYRCV,QTDUOM) AS REMQTY,
			QTYDIF,
			QTYUOM AS ASNQTY,
			QTYUOM, 
			TRUNTY,
			MEASKY,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			INDRCN,
			CRECVD,
			RSNCOD,
			LOTA01,
			LOTA02,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			' ' AS LOTA01NM,
			' ' AS SBKTXT,
			AWMSNO,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			DESC01,
			DESC02,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			QTYORG,
			SMANDT,
			SEBELN,
			SEBELP,
			SZMBLNO,
			SZMIPNO,
			STRAID,
			SVBELN,
			SPOSNR,
			STKNUM,
			STPNUM,
			SWERKS,
			SLGORT,
			SDATBG,
			STDLNR,
			SSORNU,
			SSORIT,
			SMBLNR,
			SZEILE,
			SMJAHR,
			SXBLNR,
			RCPRSN,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR,
			' ' AS CUSRNM,
			' ' AS LUSRNM
		FROM RECDI
		WHERE RECVKY = #RECVKY#
	</select>
	
	<!-- GR05 ITEM GRID SELECT END -->
	<update id="RECDH_UPDATE" parameterClass="Map">
		INSERT INTO RECDH (RECVKY,WAREKY,RCPTTY,STATDO,SAPSTS
						  ,DOCDAT,DOCCAT,DPTNKY,DRELIN,ARCPTD
					  	  ,OWNRKY,INDRCN,CRECVD,RSNCOD,PUTSTS
						  ,USRID1,UNAME1,DEPTID1,DNAME1,USRID2
						  ,UNAME2,DEPTID2,DNAME2,USRID3,UNAME3
						  ,DEPTID3,DNAME3,USRID4,UNAME4,DEPTID4
						  ,DNAME4,DOCTXT,CREDAT,CRETIM,CREUSR
						  ,LMODAT,LMOTIM,LMOUSR,INDBZL,INDARC
						  ,UPDCHK) 
 		VALUES (#RECVKY#,#WAREKY#,#RCPTTY#,#STATDO#,#SAPSTS#
			   ,#DOCDAT#,#DOCCAT#,#DPTNKY#,#DRELIN#,#ARCPTD#
			   ,#OWNRKY#,#INDRCN#,#CRECVD#,#RSNCOD#,#PUTSTS#
			   ,NVL(#USRID1#, ' '),NVL(#UNAME1#, ' '),NVL(#DEPTID1#, ' '),NVL(#DNAME1#, ' '),NVL(#USRID2#, ' ')
			   ,NVL(#UNAME2#, ' '),NVL(#DEPTID2#, ' '),NVL(#DNAME2#, ' '),NVL(#USRID3#, ' '),NVL(#UNAME3#, ' ')
			   ,NVL(#DEPTID3#, ' '),NVL(#DNAME3#, ' '),NVL(#USRID4#, ' '),NVL(#UNAME4#, ' '),NVL(#DEPTID4#, ' ')
			   ,NVL(#DNAME4#, ' '),#DOCTXT#,TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   #SES_USER_ID#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   #SES_USER_ID#,' ',' ',0)

	</update>
	
	<update id="RECDI_UPDATE" parameterClass="Map">
		INSERT INTO RECDI
			(
			   RECVKY,
			   RECVIT,
			   STATIT,
			   SAPSTS,
			   SKUKEY,
			   LOTNUM,
			   AREAKY,
			   LOCAKY,
			   SECTID,
			   TRNUID,
			   PACKID,
			   QTYRCV,
			   QTYDIF,
			   QTYUOM,
			   TRUNTY,
			   MEASKY,
			   UOMKEY,
			   QTPUOM,
			   DUOMKY,
			   QTDUOM,
			   INDRCN,
			   CRECVD,
			   RSNCOD,
			   LOTA01,
			   LOTA02,
			   LOTA03,
			   LOTA04,
			   LOTA05,
			   LOTA06,
			   LOTA07,
			   LOTA08,
			   LOTA09,
			   LOTA10,
			   LOTA11,
			   LOTA12,
			   LOTA13,
			   LOTA14,
			   LOTA15,
			   LOTA16,
			   LOTA17,
			   LOTA18,
			   LOTA19,
			   LOTA20,
			   AWMSNO,
			   REFDKY,
			   REFDIT,
			   REFCAT,
			   REFDAT,
			   DESC01,
			   DESC02,
			   ASKU01,
			   ASKU02,
			   ASKU03,
			   ASKU04,
			   ASKU05,
			   EANCOD,
			   GTINCD,
			   SKUG01,
			   SKUG02,
			   SKUG03,
			   SKUG04,
			   SKUG05,
			   GRSWGT,
			   NETWGT,
			   WGTUNT,
			   LENGTH,
			   WIDTHW,
			   HEIGHT,
			   CUBICM,
			   CAPACT,
			   QTYORG,
			   SMANDT,
			   SEBELN,
			   SEBELP,
			   SZMBLNO,
			   SZMIPNO,
			   STRAID,
			   SVBELN,
			   SPOSNR,
			   STKNUM,
			   STPNUM,
			   SWERKS,
			   SLGORT,
			   SDATBG,
			   STDLNR,
			   SSORNU,
			   SSORIT,
			   SMBLNR,
			   SZEILE,
			   SMJAHR,
			   SXBLNR,
			   RCPRSN,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)
			VALUES(
			   #RECVKY#,
			   #RECVIT#,
			   #STATIT#,
			   #SAPSTS#,
			   #SKUKEY#,
			   #LOTNUM#,
			   #AREAKY#,
			   #LOCAKY#,
			   #SECTID#,
			   #TRNUID#,
			   #PACKID#,
			   #QTYRCV#,
			   #QTYDIF#,
			   #QTYUOM#,
			   #TRUNTY#,
			   #MEASKY#,
			   #UOMKEY#,
			   #QTPUOM#,
			   #DUOMKY#,
			   #QTDUOM#,
			   #INDRCN#,
			   #CRECVD#,
			   #RSNCOD#,
			   #LOTA01#,
			   #LOTA02#,
			   #LOTA03#,
			   #LOTA04#,
			   #LOTA05#,
			   #LOTA06#,
			   #LOTA07#,
			   #LOTA08#,
			   #LOTA09#,
			   #LOTA10#,
			   #LOTA11#,
			   #LOTA12#,
			   #LOTA13#,
			   #LOTA14#,
			   #LOTA15#,
			   #LOTA16#,
			   #LOTA17#,
			   #LOTA18#,
			   #LOTA19#,
			   #LOTA20#,
			   #AWMSNO#,
			   #REFDKY#,
			   #REFDIT#,
			   #REFCAT#,
			   #REFDAT#,
			   NVL(#DESC01#, ' '),
			   #DESC02#,
			   #ASKU01#,
			   #ASKU02#,
			   #ASKU03#,
			   #ASKU04#,
			   #ASKU05#,
			   #EANCOD#,
			   #GTINCD#,
			   #SKUG01#,
			   #SKUG02#,
			   #SKUG03#,
			   #SKUG04#,
			   #SKUG05#,
			   #GRSWGT#,
			   #NETWGT#,
			   #WGTUNT#,
			   #LENGTH#,
			   #WIDTHW#,
			   #HEIGHT#,
			   #CUBICM#,
			   #CAPACT#,
			   #QTYORG#,
			   #SMANDT#,
			   #SEBELN#,
			   #SEBELP#,
			   #SZMBLNO#,
			   #SZMIPNO#,
			   #STRAID#,
			   #SVBELN#,
			   #SPOSNR#,
			   #STKNUM#,
			   #STPNUM#,
			   #SWERKS#,
			   #SLGORT#,
			   #SDATBG#,
			   #STDLNR#,
			   #SSORNU#,
			   #SSORIT#,
			   #SMBLNR#,
			   #SZEILE#,
			   #SMJAHR#,
			   #SXBLNR#,
			   #RCPRSN#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   #SES_USER_ID#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   #SES_USER_ID#
			)
	</update>



<!-- GR05 SQL END -->
<!-- //반품통지입하 -->

<!-- 입하조회 -->
<!-- GR09 SQL START -->

	<!-- GR09 HEAD GRID SELECT START -->
	<select id="GR09_LIST" parameterClass="Map" resultClass="DataMap">
	   SELECT 
	          RH.RECVKY AS RECVKY,
	          RH.WAREKY AS WAREKY,
	          WH.NAME02 AS WAREKYNM,
	          RI.AREAKY AS AREAKY,
	          NVL((SELECT AR.SHORTX FROM AREMA AR WHERE AR.WAREKY = RH.WAREKY AND AR.AREAKY = RI.AREAKY), ' ') AS AREAKYNM,
	          RH.RCPTTY AS RCPTTY,
	          DT.SHORTX AS RCPTTYNM,
	          RH.STATDO AS STATDO,
	          NVL(STH.CDESC1,' ') AS STATDONM,
	          DECODE(RH.SAPSTS,' ',' ','V') AS SAPSTS,
	          RH.DOCDAT AS DOCDAT,
	          RH.DOCCAT AS DOCCAT,
	          DC.SHORTX AS DOCCATNM,
	          RH.DPTNKY AS DPTNKY,
	          MAX(VD.NAME01) AS DPTNKYNM,
	          RH.DRELIN AS DRELIN,
	          RH.ARCPTD AS ARCPTD,
	          RH.OWNRKY AS OWNRKY,
	          NVL((SELECT NAME01 FROM OWNER WHERE OWNER.OWNRKY = RH.OWNRKY),' ') AS OWNRNM, 
	          RH.INDRCN AS INDRCN,
	          RH.CRECVD AS CRECVD,
	          RH.RSNCOD AS RSNCOD,
	          RI.RCPRSN AS RCPRSN,
	          RH.PUTSTS AS PUTSTS,
	          NVL(RH.USRID1 , ' ') AS USRID1,
	          NVL(RH.UNAME1 , ' ') AS UNAME1,
	          NVL(RH.DEPTID1, ' ') AS DEPTID1,
	          (SELECT NAME01 FROM BZPTN BZ WHERE BZ.OWNRKY = RH.OWNRKY AND PTNRTY = 'DP' AND PTNRKY = NVL(RH.DEPTID1, ' ')) AS DEPTID1NM,
	          NVL(RH.DNAME1 , ' ') AS DNAME1,
	          NVL(RH.USRID2 , ' ') AS USRID2,
	          NVL(RH.UNAME2 , ' ') AS UNAME2,
	          NVL(RH.DEPTID2, ' ') AS DEPTID2,
	          NVL(RH.DNAME2 , ' ') AS DNAME2,
	          NVL(RH.USRID3 , ' ') AS USRID3,
	          NVL((SELECT BC.NAME01 FROM BZPTN BC WHERE BC.OWNRKY = RH.OWNRKY AND BC.PTNRKY = NVL(RH.USRID3,' ') AND BC.PTNRTY = 'CO'), ' ') AS USRID3NM,
	          NVL(RH.UNAME3 , ' ') AS UNAME3,
	          NVL(RH.DEPTID3, ' ') AS DEPTID3,
	          NVL((SELECT BC.NAME01 FROM BZPTN BC WHERE BC.OWNRKY = RH.OWNRKY AND BC.PTNRKY = NVL(RH.DEPTID3,' ') AND BC.PTNRTY = 'CT'), ' ') AS DEPTID3NM, 
	          NVL(RH.DNAME3 , ' ') AS DNAME3,
	          NVL(RH.USRID4 , ' ') AS USRID4,
	          NVL(RH.UNAME4 , ' ') AS UNAME4,
	          NVL(RH.DEPTID4, ' ') AS DEPTID4,
	          NVL(RH.DNAME4 , ' ') AS DNAME4,
	          RH.DOCTXT AS DOCTXT,
	          MAX(RI.SEBELN) AS SEBELN,
	          MAX(RI.STRAID) AS VGBEL,
	          ' ' AS ASNDKY,
	          ' ' AS SHPOKY,
	          RH.CREDAT AS CREDAT,
	          RH.CRETIM AS CRETIM,
	          RH.CREUSR AS CREUSR,
	          CU.NMLAST AS CUSRNM,
	          RH.LMODAT AS LMODAT,
	          RH.LMOTIM AS LMOTIM,
	          RH.LMOUSR AS LMOUSR,
	          LU.NMLAST AS LUSRNM,
	          ' ' AS ERPWHF,
	          ' ' AS ERPFNM,
	          ' ' AS ERPWHT,
	          ' ' AS ERPTNM,
	          <!--   PO.DEPTID4, -->
			  ' ' AS DEPTID4,
			  ' ' AS DEPTID4NM,
			  RI.LOTA07 AS LOTA07
			  <!--NVL((SELECT NAME01 FROM AREMA WHERE WAREKY = PO.LIFNR AND AREAKY = PO.DEPTID4),' ') AS DEPTID4NM -->
	   FROM   RECDH RH
           INNER JOIN RECDI RI
                   ON RI.RECVKY = RH.RECVKY
           LEFT OUTER JOIN SKUMA SM
		           ON SM.OWNRKY = RH.OWNRKY
		          AND SM.SKUKEY = RI.SKUKEY
		        INNER JOIN LOCMA LM
  				   ON LM.WAREKY = RH.WAREKY
                  AND LM.LOCAKY = RI.LOCAKY  
                <!-- INNER JOIN ZONMA ZM
                   ON ZM.WAREKY = RH.WAREKY
                  AND ZM.AREAKY = RI.AREAKY  -->
           LEFT OUTER JOIN CMCDV STH
                   ON STH.CMCDKY = 'STATDO'
                  AND STH.CMCDVL = RH.STATDO
           LEFT OUTER JOIN USRMA CU
                   ON CU.USERID = RH.CREUSR
           LEFT OUTER JOIN USRMA LU
                   ON LU.USERID = RH.LMOUSR
           LEFT OUTER JOIN WAHMA WH
                   ON WH.WAREKY = RH.WAREKY
           LEFT OUTER JOIN DOCCM DC
                   ON DC.DOCCAT = '100'
           LEFT OUTER JOIN DOCTM DT
                   ON DT.DOCUTY = RH.RCPTTY
           LEFT OUTER JOIN BZPTN VD
                   ON VD.PTNRKY = RH.DPTNKY
                  AND VD.PTNRTY IN (CASE WHEN RH.RCPTTY IN ('108','109') THEN 'CT'
                                         WHEN RH.RCPTTY IN ('166') THEN 'TM'
                                         ELSE 'VD' END)
	    WHERE   1 = 1
	    AND		RH.WAREKY = #WAREKY#
	  <!--  AND RI.AREAKY = #AREAKY# -->
	<isNotEmpty property="OWNRKY">
		AND 	RH.OWNRKY = #OWNRKY#
	</isNotEmpty>
    <isNotEmpty property="ZONE">
		AND 	RI.SZMIPNO = #ZONE# 
	</isNotEmpty>
	<isNotEmpty property="DEPART">
		AND 	RH.DEPTID1 = #DEPART# 
	</isNotEmpty>   	 
	<isNotEmpty property="RANGE_SQL">
		$RANGE_SQL$
	</isNotEmpty>
	<isNotEmpty property="RANGE_SQL1">
		OR 		$RANGE_SQL1$
	   	AND 	RH.WAREKY = #WAREKY#
	   	AND 	RI.AREAKY = #AREAKY#
	</isNotEmpty>
	<isEqual property="Opt" compareValue="1">
		AND 	TRIM(RI.INDRCN) IS NULL
	</isEqual>
	<isEqual property="Opt" compareValue="2">
		AND 	TRIM(RI.INDRCN) IS NOT NULL
	</isEqual>
	    GROUP BY RH.RECVKY,RH.WAREKY,RI.AREAKY,RH.RCPTTY,RH.STATDO,RH.SAPSTS, NVL(STH.CDESC1,' '),
                 RH.DOCDAT,RH.DOCCAT,RH.DPTNKY,RH.DRELIN,RH.ARCPTD,
                 RH.OWNRKY,RH.INDRCN,RH.CRECVD,RH.RSNCOD,RI.RCPRSN,
                 RH.PUTSTS,RH.CREDAT,RH.CRETIM,RH.CREUSR,CU.NMLAST,
                 RH.LMODAT,RH.LMOTIM,RH.LMOUSR,LU.NMLAST,
                 WH.NAME02, DC.SHORTX, DT.SHORTX, VD.NAME01,
                 NVL(RH.USRID1 , ' ') ,
                 NVL(RH.UNAME1 , ' ') ,
                 NVL(RH.DEPTID1, ' ') ,
                 NVL(RH.DNAME1 , ' ') ,
                 NVL(RH.USRID2 , ' ') ,
                 NVL(RH.UNAME2 , ' ') ,
                 NVL(RH.DEPTID2, ' ') ,
                 NVL(RH.DNAME2 , ' ') ,
                 NVL(RH.USRID3 , ' ') ,
                 NVL(RH.UNAME3 , ' ') ,
                 NVL(RH.DEPTID3, ' ') ,
                 NVL(RH.DNAME3 , ' ') ,
                 NVL(RH.USRID4 , ' ') ,
                 NVL(RH.UNAME4 , ' ') ,
                 NVL(RH.DEPTID4, ' ') ,
                 NVL(RH.DNAME4 , ' ') ,
                 RH.DOCTXT,
                 RI.LOTA07
        ORDER BY RH.RECVKY DESC
	</select>
	<!-- GR09 HEAD GRID SELECT END -->
	
	
	<!-- GR09 ITEM GRID SELECT START -->
	<select id="GR09Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		       RI.RECVKY  AS RECVKY,
		       RI.RECVIT  AS RECVIT,
		       RI.STATIT  AS STATIT,
		       DECODE(RI.SAPSTS,' ',' ','V') AS SAPSTS,
		       RI.SKUKEY  AS SKUKEY,
		       RI.LOTNUM  AS LOTNUM,
		       <!-- RI.AREAKY  AS AREAKY,-->
		       RI.LOCAKY  AS LOCAKY, 
		       #AREA# AS AREAKY,
		      <!--  #LOCA# AS LOCAKY, -->
		       RI.SECTID  AS SECTID,
		       RI.TRNUID  AS TRNUID,
		       RI.PACKID  AS PACKID,
		       RI.QTYRCV  AS QTYRCV,
		       RI.QTYRCV  AS SNDQTY,
		       RI.QTYDIF  AS QTYDIF,
		       RI.QTYUOM  AS QTYUOM,
		       RI.TRUNTY  AS TRUNTY,
		       RI.MEASKY  AS MEASKY,
		       RI.UOMKEY  AS UOMKEY,
		       RI.QTPUOM  AS QTPUOM,
		       RI.DUOMKY  AS DUOMKY,
		       RI.QTDUOM  AS QTDUOM,
		       TRUNC(RI.QTYRCV/RI.QTDUOM) AS BOXQTY,
		       MOD(RI.QTYRCV,RI.QTDUOM) AS REMQTY,
		       RI.INDRCN  AS INDRCN,
		       RI.CRECVD  AS CRECVD,
		       RI.RSNCOD  AS RSNCOD,
		       RI.LOTA01  AS LOTA01,
		       NVL((SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'VD' AND PTNRKY = RI.LOTA01), ' ') AS LOTA01NMN,
		       L01NM.NAME01 AS LOTA01NM,
		       RI.LOTA02  AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = RI.LOTA02) AS LOTA02NM,
		       RI.LOTA03  AS LOTA03,
		       RI.LOTA04  AS LOTA04,
		       RI.LOTA05  AS LOTA05,
		       RI.LOTA06  AS LOTA06,
		       RI.LOTA07  AS LOTA07,
		       RI.LOTA08  AS LOTA08,
		       RI.LOTA09  AS LOTA09,
		       RI.LOTA10  AS LOTA10,
		       RI.LOTA11  AS LOTA11,
		       RI.LOTA12  AS LOTA12,
		       RI.LOTA13  AS LOTA13,
		       RI.LOTA14  AS LOTA14,
		       RI.LOTA15  AS LOTA15,
		       RI.LOTA16  AS LOTA16,
		       RI.LOTA17  AS LOTA17,
		       RI.LOTA18  AS LOTA18,
		       RI.LOTA19  AS LOTA19,
		       RI.LOTA20  AS LOTA20,
		       RI.AWMSNO  AS AWMSNO,
		       RI.REFDKY  AS REFDKY,
		       RI.REFDIT  AS REFDIT,
		       RI.REFCAT  AS REFCAT,
		       RI.REFDAT  AS REFDAT,
		       RI.DESC01  AS DESC01,
		       RI.DESC02  AS DESC02,
		       RI.ASKU01  AS ASKU01,
		       RI.ASKU02  AS ASKU02,
		       RI.ASKU03  AS ASKU03,
		       RI.ASKU04  AS ASKU04,
		       RI.ASKU05  AS ASKU05,
		       RI.EANCOD  AS EANCOD,
		       RI.GTINCD  AS GTINCD,
		       RI.SKUG01  AS SKUG01,
		       RI.SKUG02  AS SKUG02,
		       RI.SKUG03  AS SKUG03,
		       RI.SKUG04  AS SKUG04,
		       RI.SKUG05  AS SKUG05,
		       RI.GRSWGT  AS GRSWGT,
		       RI.NETWGT  AS NETWGT,
		       RI.WGTUNT  AS WGTUNT,
		       RI.LENGTH  AS LENGTH,
		       RI.WIDTHW  AS WIDTHW,
		       RI.HEIGHT  AS HEIGHT,
		       RI.CUBICM  AS CUBICM,
		       RI.CAPACT  AS CAPACT,
		       RI.QTYORG  AS QTYORG,
		       RI.SMANDT  AS SMANDT,
		       RI.SEBELN  AS SEBELN,
		       RI.SEBELP  AS SEBELP,
		       RI.SZMBLNO AS SZMBLNO,
		       RI.SZMIPNO AS SZMIPNO,
		       RI.STRAID  AS STRAID,
		       RI.SVBELN  AS SVBELN,
		       RI.SPOSNR  AS SPOSNR,
		       RI.STKNUM  AS STKNUM,
		       RI.STPNUM  AS STPNUM,
		       RI.SWERKS  AS SWERKS,
		       RI.SLGORT  AS SLGORT,
		       RI.SDATBG  AS SDATBG,
		       RI.STDLNR  AS STDLNR,
		       RI.SSORNU  AS SSORNU,
		       RI.SSORIT  AS SSORIT,
		       RI.SMBLNR  AS SMBLNR,
		       RI.SZEILE  AS SZEILE,
		       RI.SMJAHR  AS SMJAHR,
		       RI.SXBLNR  AS SXBLNR,
		       RI.SBKTXT  AS SBKTXT,
		       RI.RCPRSN  AS RCPRSN,
		       RI.CREDAT AS CREDAT,
		       RI.CRETIM AS CRETIM,
		       RI.CREUSR AS CREUSR,
		       CU.NMLAST AS CUSRNM,
		       RI.LMODAT AS LMODAT,
		       RI.LMOTIM AS LMOTIM,
		       RI.LMOUSR AS LMOUSR,
		       LU.NMLAST AS LUSRNM
		  FROM RECDH RH
		       INNER JOIN RECDI RI
		               ON RI.RECVKY = RH.RECVKY
		       LEFT OUTER JOIN SKUMA SM
		          	   ON SM.OWNRKY = RH.OWNRKY
		              AND SM.SKUKEY = RI.SKUKEY
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = RI.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = RI.LMOUSR
		       LEFT OUTER JOIN BZPTN L01NM
		               ON L01NM.PTNRKY = RI.LOTA01
		              AND L01NM.PTNRTY = 'TM'
		 WHERE 1 = 1
		   AND RH.WAREKY = #WAREKY#
		<isNotEmpty property="RECVKY">
		   AND RI.RECVKY = #RECVKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
		       $RANGE_SQL$
		</isNotEmpty>
		 ORDER BY RI.RECVKY, RI.RECVIT
	</select>
	<!-- GR09 ITEM GRID SELECT END -->
	
	<!-- GR09 입고아이템취소-->
	<update id="GR09DELETE_UPDATE" parameterClass="Map">
	   UPDATE RECDI
          SET STATIT = 'FCN'
            , INDRCN = 'V'
            , CRECVD = TO_CHAR(SYSDATE,'YYYYMMDD')
             <isNotEmpty property="RSNCOD">
            	, RSNCOD = #RSNCOD#
            </isNotEmpty>
            <isNotEmpty property="RCPRSN">
           	 	, RCPRSN = #RCPRSN#
            </isNotEmpty>
	    WHERE 1 = 1
	      AND RECVKY = #RECVKY#
	</update>
	
	<!-- GR09 입고헤더취소-->
	<update id="GR09DELETEHEADER_UPDATE" parameterClass="Map">
	   UPDATE RECDH
          SET STATDO = 'FCN'
            , INDRCN = 'V'
            , CRECVD = TO_CHAR(SYSDATE,'YYYYMMDD')
             <isNotEmpty property="RSNCOD">
            	, RSNCOD = #RSNCOD#
            </isNotEmpty>
	    WHERE 1 = 1
	      AND RECVKY = #RECVKY#
	</update>
	
	<select id="GR09PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_RECEIPT_CANCEL_PROCESS(#RECVKY#, #SES_USER_ID#) }
	</select>
	
	<select id="GR09DOCPROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_AIRWMS_DOCUMENT_PROCESS(#DOCCAT#, #RECVKY#, ' ', 'C', #SES_USER_ID#) }
	</select>
	
	<select id="SEQPRTSEQ_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT SEQ_PRTSEQ.NEXTVAL AS PRTSEQ FROM DUAL
	</select>
	
	<insert id="PRTLGRECV_INSERT" parameterClass="Map">
		INSERT
			INTO PRTLG
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
             , INDBZL, INDARC, UPDCHK)
			VALUES 
			(    #PRTSEQ#, 1, #PRTTYP#, #WAREKY#, ' ', ' ', ' ', #OWNRKY#, ' ', ' '
				, ' ', NVL(#CREDAT#,' '), ' ', ' ', NVL(#RQSHPD#,' '), ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0,NVL(#DOCKEY#,' '),' ', ' ', ' ', ' ', ' ', ' ', #RECVKY#
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
                , ' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#
                , ' ', ' ', 0 
			)
	</insert>

	<!-- GR10 HEAD GRID SELECT START -->
	<select id="GR10_LIST" parameterClass="Map" resultClass="DataMap">
	<!-- SQL Key : INBOUND.GOODRECEIPT.FIND_RECDH -->
		SELECT 
		       RH.RECVKY AS RECVKY,
		       RH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       RH.RCPTTY AS RCPTTY,
		       DT.SHORTX AS RCPTTYNM,
		       RH.STATDO AS STATDO,
		       NVL(STH.CDESC1,' ') AS STATDONM,
		       DECODE(RH.SAPSTS,' ',' ','V') AS SAPSTS,
		       RH.DOCDAT AS DOCDAT,
		       RH.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       RH.DPTNKY AS DPTNKY,
		       MAX(VD.NAME01) AS DPTNKYNM,
		       RH.DRELIN AS DRELIN,
		       RH.ARCPTD AS ARCPTD,
		       RH.OWNRKY AS OWNRKY,
		       RH.INDRCN AS INDRCN,
		       RH.CRECVD AS CRECVD,
		       RH.RSNCOD AS RSNCOD,
		       RH.PUTSTS AS PUTSTS,
		       DECODE(RH.USRID1, ' ', NVL(VU.ERPUSR ,' '), RH.USRID1 ) AS USRID1,
		       DECODE(RH.USRID1, ' ', NVL(VU.ERPNAM ,' '), RH.UNAME1 ) AS UNAME1,
		       DECODE(RH.USRID1, ' ', NVL(VU.DEPTID ,' '), RH.DEPTID1) AS DEPTID1,
		       DECODE(RH.USRID1, ' ', NVL(VU.DPNAME ,' '), RH.DNAME1 ) AS DNAME1,
		       DECODE(RH.USRID2, ' ', NVL(VU2.ERPUS2,' '), RH.USRID2 ) AS USRID2,
		       DECODE(RH.USRID2, ' ', NVL(VU2.USNAM2,' '), RH.UNAME2 ) AS UNAME2,
		       DECODE(RH.USRID2, ' ', NVL(VU2.DEPID2,' '), RH.DEPTID2) AS DEPTID2,
		       DECODE(RH.USRID2, ' ', NVL(VU2.DPNAM2,' '), RH.DNAME2 ) AS DNAME2,
		       DECODE(RH.USRID3, ' ', NVL(VU2.ERPUS3,' '), RH.USRID3 ) AS USRID3,
		       DECODE(RH.USRID3, ' ', NVL(VU2.USNAM3,' '), RH.UNAME3 ) AS UNAME3,
		       DECODE(RH.USRID3, ' ', NVL(VU2.DEPID3,' '), RH.DEPTID3) AS DEPTID3,
		       DECODE(RH.USRID3, ' ', NVL(VU2.DPNAM3,' '), RH.DNAME3 ) AS DNAME3,
		       DECODE(RH.USRID4, ' ', NVL(VU2.ERPUS4,' '), RH.USRID4 ) AS USRID4,
		       DECODE(RH.USRID4, ' ', NVL(VU2.USNAM4,' '), RH.UNAME4 ) AS UNAME4,
		       DECODE(RH.USRID4, ' ', NVL(VU2.DEPID4,' '), RH.DEPTID4) AS DEPTID4,
		       DECODE(RH.USRID4, ' ', NVL(VU2.DPNAM4,' '), RH.DNAME4 ) AS DNAME4,
		       RH.DOCTXT AS DOCTXT,
		       MAX(RI.SEBELN) AS SEBELN,
		       MAX(RI.STRAID) AS VGBEL,
		       MAX(CASE WHEN RH.RCPTTY IN ('111', '112', '114') THEN RI.REFDKY
		                ELSE ' '
		            END) AS ASNDKY,
		       MAX(CASE WHEN RH.RCPTTY IN ('108') THEN RI.REFDKY
		                ELSE ' '
		            END) AS SHPOKY,
		       RH.CREDAT AS CREDAT,
		       RH.CRETIM AS CRETIM,
		       RH.CREUSR AS CREUSR,
		       CU.NMLAST AS CUSRNM,
		       RH.LMODAT AS LMODAT,
		       RH.LMOTIM AS LMOTIM,
		       RH.LMOUSR AS LMOUSR,
		       LU.NMLAST AS LUSRNM,
		       F_GET_LGORT_IFWMS103(RH.WAREKY, MAX(RI.SEBELN)) AS ERPWHF,
		       SZF_GET_BZPTN_NM('WH', F_GET_LGORT_IFWMS103(RH.WAREKY, MAX(RI.SEBELN))) AS ERPFNM,
		       ' ' AS ERPWHT,
		       ' ' AS ERPTNM
		  FROM RECDH RH
		       INNER JOIN RECDI RI
		               ON RI.RECVKY = RH.RECVKY
		       LEFT OUTER JOIN CMCDV STH
		               ON STH.CMCDKY = 'STATDO'
		              AND STH.CMCDVL = RH.STATDO
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = RH.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = RH.LMOUSR
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = RH.WAREKY
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '100'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = RH.RCPTTY
		       LEFT OUTER JOIN BZPTN VD
		               ON VD.PTNRKY = RH.DPTNKY
		              AND VD.PTNRTY IN (CASE WHEN RH.RCPTTY IN ('108','109','110','111','115') THEN 'CT'
		                                     WHEN RH.RCPTTY IN ('166') THEN 'TM'
		                                     ELSE 'VD' END)
		              AND VD.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP VU
		               ON VU.USERID = RH.CREUSR
		       LEFT OUTER JOIN VUSER_WAREDOCUSER VU2
		               ON VU2.WAREKY = RH.WAREKY
		              AND VU2.DOCUTY = RH.RCPTTY
		 WHERE RH.WAREKY = #WAREKY#
		   AND RI.INDRCN &lt;&gt; 'V'
		   AND RH.RCPTTY &lt;&gt; '166'
		   <isEqual property="SAPSTS" compareValue="1"> AND RH.SAPSTS = ' '</isEqual>
		   <isNotEqual property="SAPSTS" compareValue="1"> AND RH.SAPSTS != ' '</isNotEqual>
		   <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY RH.RECVKY,RH.WAREKY,RH.RCPTTY,RH.STATDO,RH.SAPSTS, NVL(STH.CDESC1,' '),
		          RH.DOCDAT,RH.DOCCAT,RH.DPTNKY,RH.DRELIN,RH.ARCPTD,
		          RH.OWNRKY,RH.INDRCN,RH.CRECVD,RH.RSNCOD,RH.PUTSTS,
		          RH.CREDAT,RH.CRETIM,RH.CREUSR,CU.NMLAST,
		          RH.LMODAT,RH.LMOTIM,RH.LMOUSR,LU.NMLAST,
		          WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01,
		          DECODE(RH.USRID1, ' ', NVL(VU.ERPUSR ,' '), RH.USRID1 ),
		          DECODE(RH.USRID1, ' ', NVL(VU.ERPNAM ,' '), RH.UNAME1 ), 
		          DECODE(RH.USRID1, ' ', NVL(VU.DEPTID ,' '), RH.DEPTID1),
		          DECODE(RH.USRID1, ' ', NVL(VU.DPNAME ,' '), RH.DNAME1 ), 
		          DECODE(RH.USRID2, ' ', NVL(VU2.ERPUS2,' '), RH.USRID2 ),
		          DECODE(RH.USRID2, ' ', NVL(VU2.USNAM2,' '), RH.UNAME2 ),
		          DECODE(RH.USRID2, ' ', NVL(VU2.DEPID2,' '), RH.DEPTID2),
		          DECODE(RH.USRID2, ' ', NVL(VU2.DPNAM2,' '), RH.DNAME2 ),
		          DECODE(RH.USRID3, ' ', NVL(VU2.ERPUS3,' '), RH.USRID3 ),
		          DECODE(RH.USRID3, ' ', NVL(VU2.USNAM3,' '), RH.UNAME3 ),
		          DECODE(RH.USRID3, ' ', NVL(VU2.DEPID3,' '), RH.DEPTID3),
		          DECODE(RH.USRID3, ' ', NVL(VU2.DPNAM3,' '), RH.DNAME3 ),
		          DECODE(RH.USRID4, ' ', NVL(VU2.ERPUS4,' '), RH.USRID4 ),
		          DECODE(RH.USRID4, ' ', NVL(VU2.USNAM4,' '), RH.UNAME4 ),
		          DECODE(RH.USRID4, ' ', NVL(VU2.DEPID4,' '), RH.DEPTID4),
		          DECODE(RH.USRID4, ' ', NVL(VU2.DPNAM4,' '), RH.DNAME4 ),
		          RH.DOCTXT
		 ORDER BY RH.RECVKY DESC
	</select>
	<!-- GR10 HEAD GRID SELECT END -->
	
	<!-- GR10 ITEM GRID SELECT START -->
	<select id="GR10Sub_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : INBOUND.GOODRECEIPT.FIND_RECDI -->
		SELECT 
		       RI.RECVKY  AS RECVKY,
		       RI.RECVIT  AS RECVIT,
		       RI.STATIT  AS STATIT,
		       DECODE(RI.SAPSTS,' ',' ','V') AS SAPSTS,
		       RI.SKUKEY  AS SKUKEY,
		       RI.LOTNUM  AS LOTNUM,
		       RI.AREAKY  AS AREAKY,
		       RI.LOCAKY  AS LOCAKY,
		       RI.SECTID  AS SECTID,
		       RI.TRNUID  AS TRNUID,
		       RI.PACKID  AS PACKID,
		       RI.QTYRCV  AS QTYRCV,
		       RI.QTYRCV  AS SNDQTY,
		       RI.QTYDIF  AS QTYDIF,
		       RI.QTYUOM  AS QTYUOM,
		       RI.TRUNTY  AS TRUNTY,
		       RI.MEASKY  AS MEASKY,
		       RI.UOMKEY  AS UOMKEY,
		       RI.QTPUOM  AS QTPUOM,
		       RI.DUOMKY  AS DUOMKY,
		       RI.QTDUOM  AS QTDUOM,
		       TRUNC(RI.QTYRCV/RI.QTDUOM) AS BOXQTY,
		       MOD(RI.QTYRCV,RI.QTDUOM) AS REMQTY,
		       RI.INDRCN  AS INDRCN,
		       RI.CRECVD  AS CRECVD,
		       RI.RSNCOD  AS RSNCOD,
		       RI.LOTA01  AS LOTA01,
		       L01NM.NAME01 AS LOTA01NM,
		       RI.LOTA02  AS LOTA02,
		       RI.LOTA03  AS LOTA03,
		       RI.LOTA04  AS LOTA04,
		       RI.LOTA05  AS LOTA05,
		       RI.LOTA06  AS LOTA06,
		       RI.LOTA07  AS LOTA07,
		       RI.LOTA08  AS LOTA08,
		       RI.LOTA09  AS LOTA09,
		       RI.LOTA10  AS LOTA10,
		       RI.LOTA11  AS LOTA11,
		       RI.LOTA12  AS LOTA12,
		       RI.LOTA13  AS LOTA13,
		       RI.LOTA14  AS LOTA14,
		       RI.LOTA15  AS LOTA15,
		       RI.LOTA16  AS LOTA16,
		       RI.LOTA17  AS LOTA17,
		       RI.LOTA18  AS LOTA18,
		       RI.LOTA19  AS LOTA19,
		       RI.LOTA20  AS LOTA20,
		       RI.AWMSNO  AS AWMSNO,
		       RI.REFDKY  AS REFDKY,
		       RI.REFDIT  AS REFDIT,
		       RI.REFCAT  AS REFCAT,
		       RI.REFDAT  AS REFDAT,
		       RI.DESC01  AS DESC01,
		       RI.DESC02  AS DESC02,
		       RI.ASKU01  AS ASKU01,
		       RI.ASKU02  AS ASKU02,
		       RI.ASKU03  AS ASKU03,
		       RI.ASKU04  AS ASKU04,
		       RI.ASKU05  AS ASKU05,
		       RI.EANCOD  AS EANCOD,
		       RI.GTINCD  AS GTINCD,
		       RI.SKUG01  AS SKUG01,
		       RI.SKUG02  AS SKUG02,
		       RI.SKUG03  AS SKUG03,
		       RI.SKUG04  AS SKUG04,
		       RI.SKUG05  AS SKUG05,
		       RI.GRSWGT  AS GRSWGT,
		       RI.NETWGT  AS NETWGT,
		       RI.WGTUNT  AS WGTUNT,
		       RI.LENGTH  AS LENGTH,
		       RI.WIDTHW  AS WIDTHW,
		       RI.HEIGHT  AS HEIGHT,
		       RI.CUBICM  AS CUBICM,
		       RI.CAPACT  AS CAPACT,
		       RI.QTYORG  AS QTYORG,
		       RI.SMANDT  AS SMANDT,
		       RI.SEBELN  AS SEBELN,
		       RI.SEBELP  AS SEBELP,
		       RI.SZMBLNO AS SZMBLNO,
		       RI.SZMIPNO AS SZMIPNO,
		       RI.STRAID  AS STRAID,
		       RI.SVBELN  AS SVBELN,
		       RI.SPOSNR  AS SPOSNR,
		       RI.STKNUM  AS STKNUM,
		       RI.STPNUM  AS STPNUM,
		       RI.SWERKS  AS SWERKS,
		       RI.SLGORT  AS SLGORT,
		       RI.SDATBG  AS SDATBG,
		       RI.STDLNR  AS STDLNR,
		       RI.SSORNU  AS SSORNU,
		       RI.SSORIT  AS SSORIT,
		       RI.SMBLNR  AS SMBLNR,
		       RI.SZEILE  AS SZEILE,
		       RI.SMJAHR  AS SMJAHR,
		       RI.SXBLNR  AS SXBLNR,
		       RI.SBKTXT  AS SBKTXT,
		       RI.RCPRSN  AS RCPRSN,
		       RI.CREDAT  AS CREDAT,
		       RI.CRETIM  AS CRETIM,
		       RI.CREUSR  AS CREUSR,
		       CU.NMLAST  AS CUSRNM,
		       RI.LMODAT  AS LMODAT,
		       RI.LMOTIM  AS LMOTIM,
		       RI.LMOUSR  AS LMOUSR,
		       LU.NMLAST  AS LUSRNM
		  FROM RECDH RH
		       INNER JOIN RECDI RI
		               ON RI.RECVKY = RH.RECVKY
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = RI.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = RI.LMOUSR
		       LEFT OUTER JOIN BZPTN L01NM
		               ON L01NM.PTNRKY = RI.LOTA01
		              AND L01NM.PTNRTY = 'TM'
		              AND L01NM.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		 WHERE RH.WAREKY = #WAREKY#
		   AND RI.RECVKY = #RECVKY#
		   AND RH.RCPTTY &lt;&gt; '166'
		   <isEqual property="SAPSTS" compareValue="1">AND RH.SAPSTS = ' '</isEqual>
		   <isNotEqual property="SAPSTS" compareValue="1">AND RH.SAPSTS &lt;&gt; ' '</isNotEqual>
		   <isNotEmpty property="RANGE_SQL">
		   		$RANGE_SQL$
		   </isNotEmpty>
		 ORDER BY RI.RECVKY, RI.RECVIT
	</select>
	<!-- GR10 ITEM GRID SELECT END -->
	
	<select id="GR10COMBO_LIST" parameterClass="Map" resultClass="DataMap"><!-- 거점 Combo -->
		SELECT CMCDVL AS VALUE_COL,
		       CDESC1 AS TEXT_COL
		FROM CMCDV
		WHERE CMCDKY = 'RTNTYP'
		<isNotEmpty property="WERKS">
		   AND (USARG1 = #WERKS# OR USARG2 = #WERKS# OR USARG3 = #WERKS# OR USARG4 = #WERKS# OR USARG5 = #WERKS#)
		</isNotEmpty>
		ORDER BY CMCDVL
	</select>
	
	<update id="GR10_UPDATE" parameterClass="Map">
		UPDATE RECDH
		   SET STATDO = 'FCN',
		       INDRCN = 'V',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = 'DEV'
		 WHERE RECVKY = #RECVKY#
	</update>
	
	<update id="GR10Sub_UPDATE" parameterClass="Map">
		UPDATE RECDI
		   SET STATIT = 'FCN',
		       INDRCN = 'V',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = 'DEV'
		 WHERE RECVKY = #RECVKY# 
	</update>
	
<!-- GR10 SQL END -->
<!-- //입하취소 -->

	<select id="GR20_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  
			' ' AS RECVKY,
			#WAREKY# AS WAREKY,
			NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = #WAREKY#),' ') AS WARENM,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			#OWNRKY# AS OWNRKY,
			NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = #OWNRKY# ),' ') AS OWNRNM,
			' ' AS AREAKY,
			<!-- NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = #WAREKY# AND AREAKY = #AREAKY#),' ') AS AREANM, -->
			#DOCUTY# AS DOCUTY,
			NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = #DOCUTY#),' ') AS DOCTNM,
			'NEW' AS STATDO,
			NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATDONM,
		    ' ' AS DOCTXT
		FROM DUAL
	</select>

	<select id="GR20Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  ' ' AS RECVIT,
				' ' AS SKUKEY,
				' ' AS DESC01,
				' ' AS DESC02,
				CASE WHEN EXISTS (SELECT 1 FROM DOCTM WHERE DOCUTY = #DOCUTY# AND DOCGRP LIKE '%RTN%')
				          THEN NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = #DOCUTY#),'RTNLOC')
					 ELSE NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = #DOCUTY#),'RCVLOC') END AS LOCAKY,
				' ' AS TRNUID,
				' ' AS QTYRCV,
				' ' AS UOMKEY,
				' ' AS MEASKY,
				' ' AS LOTA01,
				' ' AS LOTA02,
				' ' AS LOTA03,
				' ' AS LOTA04,
				' ' AS LOTA05,
				'00' AS LOTA06,
				' ' AS LOTA07,
				' ' AS LOTA08,
				' ' AS LOTA09,
				' ' AS LOTA10,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11,
		        TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12,
		        '99991231' AS LOTA13,
				' ' AS LOTA16,
				' ' AS LOTA17,
		        ' ' AS RSNCOD,
		        ' ' AS TASRSN,
		        ' ' AS MATNR,
		        ' ' AS INPUTSKU
		FROM	DUAL
		WHERE	1 = 1
	</select>

	<select id="GR20H_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
   		   RECVKY,
		   (SELECT SHORTX FROM DOCCM WHERE DOCCAT = '100') AS DOCCATNM,
		   (SELECT SHORTX FROM DOCTM WHERE DOCUTY = '180') AS RCPTTYNM,
		   DOCCAT,
		   WAREKY,
		   DOCDAT,
		   ARCPTD,
		   RCPTTY,
		   STATDO,
		   DOCTXT,
		   CREDAT,
		   CREUSR,
		   LMODAT,
		   LMOUSR
	  FROM RECDH
	  WHERE 
	  RECVKY = #RECVKY#
	</select>

	<select id="GR20I_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		    RECVIT,
		    SKUKEY,
			DESC01,
			DESC02,
			QTYRCV,
			LOCAKY,
			AREAKY,
			LOTA01,
			LOTA02,
			(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = LOTA02) AS LOTA02NM,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			SKUG05,
			UOMKEY,
			DUOMKY,
			QTDUOM,
			QTPUOM,
			(TRUNC(QTYRCV/QTDUOM)) AS BOXQTY,
			(QTYRCV - (QTDUOM * (TRUNC(QTYRCV/QTDUOM)))) AS REMQTY,
			CREDAT,
			CREUSR,
			LMODAT,
			LMOUSR
		FROM RECDI
		WHERE 
			 RECVKY = #RECVKY# 
		<isNotEmpty property="RECVIT">			
			AND RECVIT = #RECVIT# 
		 </isNotEmpty>
	</select>

	<insert id="GR02H_INSERT" parameterClass="Map">
		INSERT INTO RECDH
		(
			RECVKY,
			WAREKY,
			RCPTTY,
			STATDO,
			SAPSTS,
			DOCDAT,
			DOCCAT,
			DPTNKY,
			DRELIN,
			ARCPTD,
			
			INDRCN,
			CRECVD,
			RSNCOD,
			PUTSTS,
			USRID1,
			UNAME1,
			DEPTID1,
			DNAME1,
			USRID2,
			
			UNAME2,
			DEPTID2,
			DNAME2,
			USRID3,
			UNAME3,
			DEPTID3,
			DNAME3,
			USRID4,
			UNAME4,
			DEPTID4,
			
			DNAME4,
			DOCTXT,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
		) VALUES (
			NVL( #RECVKY#, ' '),
			NVL( #WAREKY#, ' '),
			NVL( #RCPTTY#, ' '),
			NVL( #STATDO#, ' '),
			NVL( #SAPSTS#, ' '),
			NVL( #DOCDAT#, ' '),
			NVL( #DOCCAT#, ' '),
			NVL( #DPTNKY#, ' '),
			NVL( #DRELIN#, ' '),
			<!-- #ARCPTD#, -->
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			
			(SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#),
			NVL( #INDRCN#, ' '),
			NVL( #CRECVD#, ' '),
			NVL( #RSNCOD#, ' '),
			NVL( #PUTSTS#, ' '),
			NVL( #USRID1#, ' '),
			NVL( #UNAME1#, ' '),
			NVL( #DEPTID1#, ' '),
			NVL( #DNAME1#, ' '),
			NVL( #USRID2#, ' '),
			
			NVL( #UNAME2#, ' '),
			NVL( #DEPTID2#, ' '),
			NVL( #DNAME2#, ' '),
			NVL( #USRID3#, ' '),
			NVL( #UNAME3#, ' '),
			NVL( #DEPTID3#, ' '),
			NVL( #DNAME3#, ' '),
			NVL( #USRID4#, ' '),
			NVL( #UNAME4#, ' '),
			NVL( #DEPTID4#, ' '),
			
			NVL( #DNAME4#, ' '),
			NVL( #DOCTXT#, ' '),
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'),
			#SES_USER_ID#,
			TO_CHAR(SYSDATE, 'YYYYMMDD'),
			TO_CHAR(SYSDATE, 'HH24MISS'),
			#SES_USER_ID#
		)
	</insert>
	
	<update id="GR20RECDH_UPDATE" parameterClass="Map">
		INSERT INTO RECDH (RECVKY,WAREKY,RCPTTY,STATDO,SAPSTS,
						   DOCDAT,DOCCAT,DPTNKY,DRELIN,ARCPTD,
						   OWNRKY,INDRCN,CRECVD,RSNCOD,PUTSTS,
						   USRID1,UNAME1,DEPTID1,DNAME1,USRID2,
						   UNAME2,DEPTID2,DNAME2,USRID3,UNAME3,
						   DEPTID3,DNAME3,USRID4,UNAME4,DEPTID4,
						   DNAME4,DOCTXT,CREDAT,CRETIM,CREUSR,
						   LMODAT,LMOTIM,LMOUSR,INDBZL,INDARC,
						   UPDCHK,KEEPTS) 
 		VALUES (#RECVKY#,#WAREKY#,#DOCUTY#,'NEW',' ',
				#DOCDAT#,'100',' ',' ',TO_CHAR(SYSDATE, 'YYYYMMDD'),
				#OWNRKY#,' ',' ',' ',' ',
				' ',' ',' ',' ',' ',
				' ',' ',' ',' ',' ',
				' ',' ',' ',' ',' ',
				' ',NVL(#DOCTXT#, ' '),TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,
				TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ',
				'0',' ')
	</update>
	
	<update id="GR20RECDI_UPDATE" parameterClass="Map">
		INSERT INTO RECDI(RECVKY,RECVIT,SKUKEY,DESC01,QTYRCV,
						  LOCAKY,LOTA01,LOTA02,LOTA03,LOTA05,
						  LOTA06,LOTA08,LOTA09,LOTA11,LOTA13,
						  UOMKEY,QTDUOM,CREDAT,CREUSR,LMODAT,LMOUSR)
		VALUES (#RECVKY#,#RECVIT#,#SKUKEY#,#DESC01#,#QTYRCV#,
				#LOCAKY#,#LOTA01#,#LOTA02#,#LOTA03#,#LOTA05#,
				#LOTA06#,#LOTA08#,#LOTA09#,#LOTA11#,#LOTA13#,
				#UOMKEY#,#QTDUOM#,TO_CHAR(SYSDATE, 'YYYYMMDD'),#SES_USER_ID#,
			    TO_CHAR(SYSDATE, 'YYYYMMDD'),#SES_USER_ID#
		)
	</update>
	
	<!-- GR20 ITEM GRID INSERT START -->
	<insert id="GR20RECDI_INSERT" parameterClass="Map">
		INSERT INTO RECDI (RECVKY,RECVIT,STATIT,SAPSTS,SKUKEY,
						   LOTNUM,AREAKY,LOCAKY,SECTID,TRNUID,
						   PACKID,QTYRCV,QTYDIF,QTYUOM,TRUNTY,
						   MEASKY,UOMKEY,QTPUOM,DUOMKY,QTDUOM,
						   INDRCN,CRECVD,RSNCOD,WORKID,WORKNM,
						   HHTTID,LOTA01,LOTA02,LOTA03,LOTA04,
						   LOTA05,LOTA06,LOTA07,LOTA08,LOTA09,
						   LOTA10,LOTA11,LOTA12,LOTA13,LOTA14,
						   LOTA15,LOTA16,LOTA17,LOTA18,LOTA19,
						   LOTA20,AWMSNO,REFDKY,REFDIT,REFCAT,
						   REFDAT,DESC01,DESC02,ASKU01,ASKU02,
						   ASKU03,ASKU04,ASKU05,EANCOD,GTINCD,
						   SKUG01,SKUG02,SKUG03,SKUG04,SKUG05,
						   GRSWGT,NETWGT,WGTUNT,LENGTH,WIDTHW,
						   HEIGHT,CUBICM,CAPACT,QTYORG,SMANDT,
						   SEBELN,SEBELP,SZMBLNO,SZMIPNO,STRAID,
						   SVBELN,SPOSNR,STKNUM,STPNUM,SWERKS,
						   SLGORT,SDATBG,STDLNR,SSORNU,SSORIT,
						   SMBLNR,SZEILE,SMJAHR,SXBLNR,SBKTXT,
						   RCPRSN,CREDAT,CRETIM,CREUSR,LMODAT,
						   LMOTIM,LMOUSR,INDBZL,INDARC,UPDCHK) 
		 VALUES (#RECVKY#,#RECVIT#,'NEW',' ',#SKUKEY#,
		         ' ',' ',#LOCAKY#,' ',NVL(#TRNUID#,' '),
				 ' ',#QTYRCV#,'0',#QTYRCV#,' ',
				 #MEASKY#,#UOMKEY#,'1',#UOMKEY#,'1',
				 ' ',' ',' ',' ',' ',
				 ' ',NVL(#LOTA01#, ' '),NVL(#LOTA02#, ' '),NVL(#LOTA03#, ' '),NVL(#LOTA04#, ' '),
				 NVL(#LOTA05#, ' '),'00',NVL(#LOTA07#, ' '),NVL(#LOTA08#, ' '),NVL(#LOTA09#, ' '),
				 NVL(#LOTA10#, ' '),NVL(#LOTA11#, ' '),NVL(#LOTA12#, ' '),NVL(#LOTA13#, ' '),' ',
		         ' ',NVL(TRIM(#LOTA16#), '0'),NVL(TRIM(#LOTA17#), '0'),'0','0',
				 '0',' ',' ',' ',' ',
				 #DOCDAT#,#DESC01#,NVL(#DESC02#, ' '),
				 (SELECT ASKU01 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT ASKU02 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				                                                                
				 (SELECT ASKU03 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT ASKU04 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT ASKU05 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT EANCOD FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT GTINCD FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				                                                               
				 (SELECT SKUG01 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT SKUG02 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT SKUG03 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT SKUG04 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT SKUG05 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				                                                                
				 (SELECT GRSWGT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT NETWGT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT WGTUNT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT LENGTH FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT WIDTHW FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				                                                               
				 (SELECT HEIGHT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT CUBICM FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 (SELECT CAPACT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #OWNRKY# ),
				 '0',' ',                                                       
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,TO_CHAR(SYSDATE, 'YYYYMMDD'),
				 TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ','0')
	</insert>
	
	<insert id="GR03RECDI_INSERT" parameterClass="Map">
		INSERT INTO RECDI (RECVKY,RECVIT,STATIT,SAPSTS,SKUKEY,
						   LOTNUM,AREAKY,LOCAKY,SECTID,TRNUID,
						   PACKID,QTYRCV,QTYDIF,QTYUOM,TRUNTY,
						   MEASKY,UOMKEY,QTPUOM,DUOMKY,QTDUOM,
						   INDRCN,CRECVD,RSNCOD,WORKID,WORKNM,
						   HHTTID,LOTA01,LOTA02,LOTA03,LOTA04,
						   LOTA05,LOTA06,LOTA07,LOTA08,LOTA09,
						   LOTA10,LOTA11,LOTA12,LOTA13,LOTA14,
						   LOTA15,LOTA16,LOTA17,LOTA18,LOTA19,
						   LOTA20,AWMSNO,REFDKY,REFDIT,REFCAT,
						   REFDAT,DESC01,DESC02,ASKU01,ASKU02,
						   ASKU03,ASKU04,ASKU05,EANCOD,GTINCD,
						   SKUG01,SKUG02,SKUG03,SKUG04,SKUG05,
						   GRSWGT,NETWGT,WGTUNT,LENGTH,WIDTHW,
						   HEIGHT,CUBICM,CAPACT,QTYORG,SMANDT,
						   SEBELN,SEBELP,SZMBLNO,SZMIPNO,STRAID,
						   SVBELN,SPOSNR,STKNUM,STPNUM,SWERKS,
						   SLGORT,SDATBG,STDLNR,SSORNU,SSORIT,
						   SMBLNR,SZEILE,SMJAHR,SXBLNR,SBKTXT,
						   RCPRSN,CREDAT,CRETIM,CREUSR,LMODAT,
						   LMOTIM,LMOUSR,INDBZL,INDARC,UPDCHK) 
		 VALUES (#RECVKY#,#RECVIT#,'NEW',' ',#SKUKEY#,
		         ' ',#AREAKY#,#LOCAKY#,' ',NVL(#TRNUID#,' '),
				 ' ',#QTYRCV#,'0',#QTYRCV#,' ',
				 #MEASKY#,#UOMKEY#,'1',#UOMKEY#,'1',
				 ' ',' ',' ',' ',' ',
				 ' ',NVL(#LOTA01#, ' '),NVL(#LOTA02#, ' '),NVL(#LOTA03#, ' '),NVL(#LOTA04#, ' '),
				 NVL(#LOTA05#, ' '),'10',NVL(#LOTA07#, ' '),NVL(#LOTA08#, ' '),NVL(#LOTA09#, ' '),
				 NVL(#LOTA10#, ' '),NVL(#LOTA11#, ' '),NVL(#LOTA12#, ' '),NVL(#LOTA13#, ' '),' ',
		         ' ',NVL(TRIM(#LOTA16#), '0'),NVL(TRIM(#LOTA17#), '0'),'0','0',
				 '0',' ',' ',' ',' ',
				 #DOCDAT#,#DESC01#,NVL(#DESC02#, ' '),
				 (SELECT ASKU01 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT ASKU02 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 
				 (SELECT ASKU03 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT ASKU04 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT ASKU05 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT EANCOD FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT GTINCD FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				  
				 (SELECT SKUG01 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT SKUG02 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT SKUG03 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT SKUG04 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT SKUG05 FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				  
				 (SELECT GRSWGT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT NETWGT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT WGTUNT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT LENGTH FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT WIDTHW FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				  
				 (SELECT HEIGHT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT CUBICM FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 (SELECT CAPACT FROM SKUMA WHERE SKUKEY = #SKUKEY# AND OWNRKY = #SES_OWNER# ),
				 '0',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,TO_CHAR(SYSDATE, 'YYYYMMDD'),
				 TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ','0')
	</insert>
	
	<insert id="GR15RECDI_INSERT" parameterClass="Map">
		INSERT INTO RECDI (RECVKY,RECVIT,STATIT,SAPSTS,SKUKEY,
						   LOTNUM,AREAKY,LOCAKY,SECTID,TRNUID,
						   PACKID,QTYRCV,QTYDIF,QTYUOM,TRUNTY,
						   MEASKY,UOMKEY,QTPUOM,DUOMKY,QTDUOM,
						   INDRCN,CRECVD,RSNCOD,WORKID,WORKNM,
						   HHTTID,LOTA01,LOTA02,LOTA03,LOTA04,
						   LOTA05,LOTA06,LOTA07,LOTA08,LOTA09,
						   LOTA10,LOTA11,LOTA12,LOTA13,LOTA14,
						   LOTA15,LOTA16,LOTA17,LOTA18,LOTA19,
						   LOTA20,AWMSNO,REFDKY,REFDIT,REFCAT,
						   REFDAT,DESC01,DESC02,ASKU01,ASKU02,
						   ASKU03,ASKU04,ASKU05,EANCOD,GTINCD,
						   SKUG01,SKUG02,SKUG03,SKUG04,SKUG05,
						   GRSWGT,NETWGT,WGTUNT,LENGTH,WIDTHW,
						   HEIGHT,CUBICM,CAPACT,QTYORG,SMANDT,
						   SEBELN,SEBELP,SZMBLNO,SZMIPNO,STRAID,
						   SVBELN,SPOSNR,STKNUM,STPNUM,SWERKS,
						   SLGORT,SDATBG,STDLNR,SSORNU,SSORIT,
						   SMBLNR,SZEILE,SMJAHR,SXBLNR,SBKTXT,
						   RCPRSN,CREDAT,CRETIM,CREUSR,LMODAT,
						   LMOTIM,LMOUSR,INDBZL,INDARC,UPDCHK) 
		 VALUES (#RECVKY#,#RECVIT#,'NEW',' ',#SKUKEY#,
		         ' ',#AREAKY#,#LOCAKY#,' ',' ',
				 ' ',#QTYRCV#,'0','0',' ',
				 #SKUKEY#,#UOMKEY#,#QTPUOM#,#DUOMKY#,#QTDUOM#,
				 ' ',' ',' ',' ',' ',
				 ' ',NVL(#LOTA01#, ' '),NVL(#LOTA02#, ' '),NVL(#LOTA03#, ' '),NVL(#LOTA04#, ' '),
				 NVL(#LOTA05#, ' '),NVL(#LOTA06#, ' '),NVL(#LOTA07#, ' '),NVL(#LOTA08#, ' '),NVL(#LOTA09#, ' '),
				 NVL(#LOTA10#, ' '),NVL(#LOTA11#, ' '),NVL(#LOTA12#, ' '),NVL(#LOTA13#, ' '),NVL(#LOTA14#, ' '),
		         NVL(#LOTA15#, ' '),'0','0','0','0',
			     '0',' ',' ',' ',' ',
				 ' ',#DESC01#,NVL(#DESC02#, ' '),' ',' ',
				 ' ',' ',' ',' ',' ',
				 ' ',' ',' ',' ',NVL(#SKUG05#, ' '),
				 '0','0',' ','0','0',
                 '0','0','0',#QTYRCV#,'0',
                 ' ',' ',' ',' ',' ',
                 ' ',' ',' ',' ',' ',
                 ' ',' ',' ',' ',' ',
                 ' ',' ',' ',' ',' ',
				 ' ',TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,TO_CHAR(SYSDATE, 'YYYYMMDD'),
				 TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ','0')
	</insert>
	
	<select id="GR15REFDKY_OBJECT" parameterClass="Map" resultClass="Integer">
		SELECT SEQ_IMF_BARCD.NEXTVAL FROM DUAL
	</select>

	<insert id="GR15BARCOD_INSERT" parameterClass="Map">
		<selectKey keyProperty="BARCOD" resultClass="String">
          SELECT 'VP'||SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),3,7)||LPAD(SEQ_IMF_VP_BARCODE.NEXTVAL,7,0) FROM DUAL 
       </selectKey>
	      INSERT INTO BARCD
	           (
	        	REFDKY
	           ,BARCOD
	           ,WAREKY
	           ,SKUKEY
	           ,DESC01
	           ,DESC02
	           ,PRTDAT
               ,QTYRCV
	           ,QTDUOM
	           ,QTDBOX
	           ,QTDREM
	           ,QTDPRT
	           ,CREDAT
	           ,CRETIM
	           ,CREUSR
	           ,LMODAT
	           ,LMOTIM
	           ,LMOUSR
	           ,LOTA05
	           ,LOTA02
	           ,RECVKY
               ,SHPOKY
               ,TASKKY
               ,SADJKY
               ,UPDCHK
	     	 )
	        VALUES
	           (
	           #REFDKY#
	           ,#BARCOD#
	           ,#WAREKY#
	           ,#SKUKEY# 
	           ,#DESC01#
	           ,NVL(#DESC02#, ' ')
	           ,TO_CHAR(SYSDATE,'YYYYMMDD')
	           ,#QTYRCV#
	           ,#QTDUOM#
	           ,#BOXQTY#
	           ,'0'
	           ,'1'
	           ,TO_CHAR(SYSDATE,'YYYYMMDD')
	           ,TO_CHAR(SYSDATE,'HH24MISS')
	           ,#SES_USER_ID#
	           ,TO_CHAR(SYSDATE,'YYYYMMDD')
	           ,TO_CHAR(SYSDATE,'HH24MISS')
	           ,#SES_USER_ID#
	           ,' '
	           ,' '
	           ,#RECVKY#
	           ,' '
	           ,' '
	           ,' '
	           ,0
	      )
	</insert>
	
	<update id="GR15RECDH_UPDATE" parameterClass="Map">
		INSERT INTO RECDH (RECVKY,WAREKY,RCPTTY,STATDO,SAPSTS,
						   DOCDAT,DOCCAT,DPTNKY,DRELIN,ARCPTD,
						   OWNRKY,INDRCN,CRECVD,RSNCOD,PUTSTS,
						   USRID1,UNAME1,DEPTID1,DNAME1,USRID2,
						   UNAME2,DEPTID2,DNAME2,USRID3,UNAME3,
						   DEPTID3,DNAME3,USRID4,UNAME4,DEPTID4,
						   DNAME4,DOCTXT,CREDAT,CRETIM,CREUSR,
						   LMODAT,LMOTIM,LMOUSR,INDBZL,INDARC,
						   UPDCHK,KEEPTS) 
 		VALUES (#RECVKY#,#SES_WAREKY#,#RCPTTY#,#STATDO#,' ',
				#DOCDAT#,'100',' ',' ',TO_CHAR(SYSDATE, 'YYYYMMDD'),
				#SES_OWNER#,' ',' ',' ',' ',
				NVL(#USRID1#, ' '),NVL(#UNAME1#, ' '),NVL(#DEPTID1#, ' '),NVL(#DNAME1#, ' '),NVL(#USRID2#, ' '),
				NVL(#UNAME2#, ' '),NVL(#DEPTID2#, ' '),NVL(#DNAME2#, ' '),NVL(#USRID3#, ' '),NVL(#UNAME3#, ' '),
				NVL(#DEPTID3#, ' '),NVL(#DNAME3#, ' '),NVL(#USRID4#, ' '),NVL(#UNAME4#, ' '),NVL(#DEPTID4#, ' '),
				NVL(#DNAME4#, ' '),NVL(#DOCTXT#, ' '),TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,
				TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ',
				'0',' ')
	</update>

	<select id="GR20PRO_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_LOTOS_IFWMS301_BWTAR(#DOCCAT#, #RCPTTY#, #RECVKY#, ' ', ' ', ' ')}
	</select>
	
	<select id="GR15_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT ' ' AS RECVKY,
			   (SELECT SHORTX FROM	DOCCM WHERE	DOCCAT = '100') AS DOCCATNM,
			   '100' AS DOCCAT,
			   '$WAREKY$' AS WAREKY,
			   TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			   TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
			   #RCPTTY# AS RCPTTY,
			   (SELECT SHORTX FROM DOCTM WHERE DOCUTY = #RCPTTY#) AS RCPTTYNM,
			   'NEW' AS STATDO,
			   ' ' AS DOCTXT,
			   ' ' AS USRID1,
			   ' ' AS UNAME1,
			   ' ' AS DEPTID1,
		       ' '  AS DNAME1,
		       ' '  AS USRID2,
		       ' '  AS UNAME2,
		       ' '  AS DEPTID2,
		       ' '  AS DNAME2,
		       ' '  AS USRID3,
		       ' '  AS UNAME3,
		       ' '  AS DEPTID3,
		       ' '  AS DNAME3,
		       ' '  AS USRID4,
		       ' '  AS UNAME4,
		       ' '  AS DEPTID4,
		       ' '  AS DNAME4,
			   TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
			   #SES_USER_ID# AS CREUSR,
			   TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
			   #SES_USER_ID# AS LMOUSR
		FROM	DUAL
		WHERE	1 = 1
	</select>

	<select id="GR15Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  ' ' AS RECVIT,
				'' AS SKUKEY,
				' ' AS DESC01,
				' ' AS DESC02,
				' ' AS QTYRCV,
				#AREA# AS AREAKY,
				#LOCA# AS LOCAKY,
				' ' AS LOTA01,
				#DEPART# AS LOTA02,
				(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = #DEPART#) AS LOTA02NM,
				' ' AS LOTA03,
				' ' AS LOTA04,
				' ' AS LOTA05,
				#LOTA06# AS LOTA06,
				' ' AS LOTA07,
				' ' AS LOTA08,
				' ' AS LOTA09,
				' ' AS LOTA10,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12,
				' ' AS LOTA13,
				' ' AS LOTA14,
				' ' AS LOTA15,
				' ' AS LOTA16,
				' ' AS LOTA17,
				' ' AS LOTA18,
				' ' AS LOTA19,
				' ' AS LOTA20,
				' ' AS UOMKEY,
				' ' AS DUOMKY,
				' ' AS QTDUOM,
				' ' AS BOXQTY,
				' ' AS REMQTY,
				' ' AS QTPUOM,
				' ' AS SKUG05,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
				#SES_USER_ID# AS CREUSR,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
			    #SES_USER_ID# AS LMOUSR
		FROM	DUAL
		WHERE	1 = 1
	</select>

	<select id="GR15H_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
   		   RECVKY,
		   (SELECT SHORTX FROM DOCCM WHERE DOCCAT = '100') AS DOCCATNM,
		   <!-- (SELECT SHORTX FROM DOCTM WHERE DOCUTY = #RCPTTY#) AS RCPTTYNM, -->
		   #RCPTTYNM# AS RCPTTYNM,
		   DOCCAT,
		   WAREKY,
		   DOCDAT,
		   ARCPTD,
		   RCPTTY,
		   STATDO,
		   DOCTXT,
		   USRID1,
		   UNAME1,
		   DEPTID1,
		   DNAME1,
		   USRID2,
		   UNAME2,
		   DEPTID2,
		   DNAME2,
		   USRID3,
		   UNAME3,
		   DEPTID3,
		   DNAME3,
		   USRID4,
		   UNAME4,
		   DEPTID4,
		   DNAME4,
		   CREDAT,
		   CREUSR,
		   LMODAT,
		   LMOUSR
	  FROM RECDH
	  WHERE 
	  RECVKY = #RECVKY#
	</select>

	<select id="GR15I_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		    RECVIT,
		    SKUKEY,
			DESC01,
			DESC02,
			QTYRCV,
			AREAKY,
			LOCAKY,
			LOTA01,
			LOTA02,
			(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = LOTA02) AS LOTA02NM,
			<!-- #LOTA02NM# AS LOTA02NM, -->
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			<!-- (LOTA16 * QTYRCV) AS LOTA17, -->
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			UOMKEY,
			DUOMKY,
			QTDUOM,
			QTPUOM,
			(TRUNC(QTYRCV/QTDUOM)) AS BOXQTY,
			(QTYRCV - (QTDUOM * (TRUNC(QTYRCV/QTDUOM)))) AS REMQTY,
			CREDAT,
			CREUSR,
			LMODAT,
			LMOUSR,
			SKUG05,
			LOTA03 AS BARCOD
		FROM RECDI
		WHERE 
			 RECVKY = #RECVKY# 
		<isNotEmpty property="RECVIT">			
			AND RECVIT = #RECVIT# 
		 </isNotEmpty>
	</select>

	<!-- NR01 채번규칙 SQL -->
	<select id="NR01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT NUMOBJ AS "NUMOBJ"
		      ,SHORTX AS "SHORTX"
		      ,NUMBFR AS "NUMBFR"
		      ,NUMBTO AS "NUMBTO"
		      ,NUMBST AS "NUMBST"
		      ,CREDAT AS "CREDAT"
		      ,CRETIM AS "CRETIM"
		      ,CREUSR AS "CREUSR"
		      ,(SELECT NMLAST FROM USRMA WHERE USRMA.USERID = NMOBJ.CREUSR AND ROWNUM = 1) AS "CUSRNM"
		      ,LMODAT AS "LMODAT"
		      ,LMOTIM AS "LMOTIM"
		      ,LMOUSR AS "LMOUSR"
		      ,(SELECT NMLAST FROM USRMA WHERE USRMA.USERID = NMOBJ.LMOUSR AND ROWNUM = 1) AS "LUSRNM"
		      ,INDBZL AS "INDBZL"
		      ,INDARC AS "INDARC"
		      ,UPDCHK AS "UPDCHK"
		FROM NMOBJ
		WHERE 1=1
		<isNotEmpty property="NUMOBJ">
		  AND NUMOBJ = #NUMOBJ#
		</isNotEmpty>
	</select>
	<!-- NR01 채번규칙 SQL -->
	
	<!-- <select id="GR18_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT RH.RECVKY AS RECVKY,
		       RI.RECVIT AS RECVIT,
		       RH.WAREKY AS WAREKY,
		       NVL(WH.NAME01,' ') AS WAREKYNM,
		       RH.RCPTTY AS RCPTTY,
		       NVL(DT.SHORTX,' ') AS RCPTTYNM,
		       RH.STATDO AS STATDO,
		       NVL(STH.CDESC1,' ') AS STATDONM,
		       RH.SAPSTS AS SAPSTS,
		       RH.DOCDAT AS DOCDAT,
		       RH.DOCCAT AS DOCCAT,
		       NVL(DC.SHORTX,' ') AS DOCCATNM,
		       RH.DPTNKY AS DPTNKY,
		       NVL(BZ.NAME01,' ') AS DPTNKYNM,
		       RH.DRELIN AS DRELIN,
		       RH.ARCPTD AS ARCPTD,
		       RH.OWNRKY AS OWNRKY,
		       RH.INDRCN AS INDRCN,
		       RH.CRECVD AS CRECVD,
		       RH.RSNCOD AS RSNCOD,
		       RH.PUTSTS AS PUTSTS,
		       RH.USRID1 AS USRID1,
		       RH.UNAME1 AS UNAME1,
		       RH.DEPTID1 AS DEPTID1,
		       RH.DNAME1 AS DNAME1,
		       RH.USRID2 AS USRID2,
		       RH.UNAME2 AS UNAME2,
		       RH.DEPTID2 AS DEPTID2,
		       RH.DNAME2 AS DNAME2,
		       RH.USRID3 AS USRID3,
		       RH.UNAME3 AS UNAME3,
		       RH.DEPTID3 AS DEPTID3,
		       RH.DNAME3 AS DNAME3,
		       RH.USRID4 AS USRID4,
		       RH.UNAME4 AS UNAME4,
		       RH.DEPTID4 AS DEPTID4,
		       RH.DNAME4 AS DNAME4,
		       RH.DOCTXT AS DOCTXT,
		       RI.STATIT AS STATIT,
		       NVL(STI.CDESC1,' ') AS STATITNM,
		       RI.SAPSTS AS SAPSTS,
		       RI.SKUKEY AS SKUKEY,
		       RI.LOTNUM AS LOTNUM,
		       RI.AREAKY AS AREAKY,
		       RI.LOCAKY AS LOCAKY,
		       RI.SECTID AS SECTID,
		       RI.TRNUID AS TRNUID,
		       RI.PACKID AS PACKID,
		       RI.QTYRCV AS QTYRCV,
		       RI.QTYDIF AS QTYDIF,
		       RI.QTYUOM AS QTYUOM,
		       RI.TRUNTY AS TRUNTY,
		       RI.MEASKY AS MEASKY,
		       RI.UOMKEY AS UOMKEY,
		       RI.QTPUOM AS QTPUOM,
		       RI.DUOMKY AS DUOMKY,
		       RI.QTDUOM AS QTDUOM,
		       RI.INDRCN AS INDRCN,
		       RI.CRECVD AS CRECVD,
		       RI.RSNCOD AS RSNCOD,
		       RI.WORKID AS WORKID,
		       RI.WORKNM AS WORKNM,
		       RI.HHTTID AS HHTTID,
		       RI.LOTA01 AS LOTA01,
		       NVL(LT1.NAME01,' ') AS LOTA01NM,
		       RI.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = RI.LOTA02) AS LOTA02NM,
		       RI.LOTA03 AS LOTA03,
		       RI.LOTA04 AS LOTA04,
		       RI.LOTA05 AS LOTA05,
		       ( SELECT CDESC1 FROM CMCDV CV  WHERE CV.CMCDKY = 'LOTA06' AND  CV.CMCDVL = RI.LOTA06 AND ROWNUM = 1) AS LOTA06,
		       RI.LOTA07 AS LOTA07,
		       RI.LOTA08 AS LOTA08,
		       RI.LOTA09 AS LOTA09,
		       RI.LOTA10 AS LOTA10,
		       RI.LOTA11 AS LOTA11,
		       RI.LOTA12 AS LOTA12,
		       RI.LOTA13 AS LOTA13,
		       RI.LOTA14 AS LOTA14,
		       RI.LOTA15 AS LOTA15,
		       RI.LOTA16 AS LOTA16,
		       RI.LOTA16*RI.QTYRCV AS LOTA17,
		       RI.LOTA18 AS LOTA18,
		       RI.LOTA19 AS LOTA19,
		       RI.LOTA20 AS LOTA20,
		       RI.AWMSNO AS AWMSNO,
		       RI.REFDKY AS REFDKY,
		       RI.REFDIT AS REFDIT,
		       RI.REFCAT AS REFCAT,
		       RI.REFDAT AS REFDAT,
		       RI.DESC01 AS DESC01,
		       RI.DESC02 AS DESC02,
		       RI.ASKU01 AS ASKU01,
		       RI.ASKU02 AS ASKU02,
		       RI.ASKU03 AS ASKU03,
		       RI.ASKU04 AS ASKU04,
		       RI.ASKU05 AS ASKU05,
		       RI.EANCOD AS EANCOD,
		       RI.GTINCD AS GTINCD,
		       RI.SKUG01 AS SKUG01,
		       RI.SKUG02 AS SKUG02,
		       RI.SKUG03 AS SKUG03,
		       RI.SKUG04 AS SKUG04,
		       RI.SKUG05 AS SKUG05,
		       RI.GRSWGT AS GRSWGT,
		       RI.NETWGT AS NETWGT,
		       RI.WGTUNT AS WGTUNT,
		       RI.LENGTH AS LENGTH,
		       RI.WIDTHW AS WIDTHW,
		       RI.HEIGHT AS HEIGHT,
		       RI.CUBICM AS CUBICM,
		       RI.CAPACT AS CAPACT,
		       RI.QTYORG AS QTYORG,
		       RI.SMANDT AS SMANDT,
		       RI.SEBELN AS SEBELN,
		       RI.SEBELP AS SEBELP,
		       RI.SZMBLNO AS SZMBLNO,
		       RI.SZMIPNO AS SZMIPNO,
		       RI.STRAID AS STRAID,
		       RI.SVBELN AS SVBELN,
		       RI.SPOSNR AS SPOSNR,
		       RI.STKNUM AS STKNUM,
		       RI.STPNUM AS STPNUM,
		       RI.SWERKS AS SWERKS,
		       RI.SLGORT AS SLGORT,
		       RI.SDATBG AS SDATBG,
		       RI.STDLNR AS STDLNR,
		       RI.SSORNU AS SSORNU,
		       RI.SSORIT AS SSORIT,
		       RI.SMBLNR AS SMBLNR,
		       RI.SZEILE AS SZEILE,
		       RI.SMJAHR AS SMJAHR,
		       RI.SXBLNR AS SXBLNR,
		       RI.SBKTXT AS SBKTXT,
		       RI.RCPRSN AS RCPRSN,
		       RI.CREDAT AS CREDAT,
		       RI.CRETIM AS CRETIM,
		       RI.CREUSR AS CREUSR,
		       NVL(CU.NMLAST,' ') AS CUSRNM,
		       RI.LMODAT AS LMODAT,
		       RI.LMOTIM AS LMOTIM,
		       RI.LMOUSR AS LMOUSR,
		       NVL(LU.NMLAST,' ') AS LUSRNM
		  FROM RECDH RH
		       INNER JOIN RECDI RI
		               ON RI.RECVKY = RH.RECVKY
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = RH.WAREKY
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = RH.RCPTTY
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = RH.DOCCAT
		       LEFT OUTER JOIN CMCDV STH
		               ON STH.CMCDKY = 'STATDO'
		              AND STH.CMCDVL = RH.STATDO
		       LEFT OUTER JOIN CMCDV STI
		               ON STI.CMCDKY = 'STATIT'
		              AND STI.CMCDVL = RI.STATIT
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = RH.DPTNKY
		              AND BZ.PTNRTY IN (CASE WHEN RH.RCPTTY IN ('108','109','110','111','115') THEN 'CT'
		                                     WHEN RH.RCPTTY IN ('166') THEN 'TM'
		                                     ELSE 'VD' END)
		              AND BZ.OWNRKY = RH.OWNRKY
		       LEFT OUTER JOIN BZPTN LT1
		               ON LT1.PTNRKY = RI.LOTA01
		              AND LT1.PTNRTY = 'TM'
		              AND LT1.OWNRKY = RH.OWNRKY
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = RI.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = RI.LMOUSR
		 WHERE RH.WAREKY = #WAREKY#
	     <isNotEmpty property="AREA">
		 AND RI.AREAKY = #AREA#
	 	 </isNotEmpty>
  		 <isNotEmpty property="RANGE_SQL">
		       $RANGE_SQL$
		 </isNotEmpty>
		 <isEqual property="sapsts" compareValue="Y">AND RH.SAPSTS &lt;&gt; ' '</isEqual>
   		 <isEqual property="sapsts" compareValue="N">AND RH.SAPSTS = ' '</isEqual>
		 ORDER BY RH.RECVKY, RI.RECVIT
	</select> -->
	
	<select id="GR06_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT  
		       ' ' AS RECVKY,
		       #WAREKY# AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       #RCPTTY# AS RCPTTY,
		       DT.SHORTX AS RCPTTYNM,
		       'NEW' AS STATDO,
		       ' ' AS SAPSTS,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       '100' AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       SH.DPTNKY AS DPTNKY,
		       VD.NAME01 AS DPTNKYNM,
		       ' ' AS DRELIN,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
		       SH.OWNRKY AS OWNRKY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       ' ' AS PUTSTS,
		       NVL(VU.ERPUSR,' ') AS USRID1,
		       NVL(VU.ERPNAM,' ') AS UNAME1,
		       NVL(VU.DEPTID,' ') AS DEPTID1,
		       NVL(VU.DPNAME,' ') AS DNAME1,
		       NVL(VU2.ERPUS2,' ') AS USRID2,
		       NVL(VU2.USNAM2,' ') AS UNAME2,
		       NVL(VU2.DEPID2,' ') AS DEPTID2,
		       NVL(VU2.DPNAM2,' ') AS DNAME2,
		       NVL(VU2.ERPUS3,' ') AS USRID3,
		       NVL(VU2.USNAM3,' ') AS UNAME3,
		       NVL(VU2.DEPID3,' ') AS DEPTID3,
		       NVL(VU2.DPNAM3,' ') AS DNAME3,
		       NVL(VU2.ERPUS4,' ') AS USRID4,
		       NVL(VU2.USNAM4,' ') AS UNAME4,
		       NVL(VU2.DEPID4,' ') AS DEPTID4,
		       NVL(VU2.DPNAM4,' ') AS DNAME4,
		       SH.DOCTXT AS DOCTXT,
		       SH.SHPOKY AS SHPOKY,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24:MI:SS') AS CRETIM,
		       'DEV' AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24:MI:SS') AS LMOTIM,
		       'DEV' AS LMOUSR,
		       ' ' AS LUSRNM
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI
		               ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN TASDI TI
		               ON TI.SHPOKY = SI.SHPOKY
		              AND SI.SHPOIT = SI.SHPOIT
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #WAREKY#
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '100'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #RCPTTY#
		       LEFT OUTER JOIN BZPTN VD
		               ON VD.PTNRKY = SH.DPTNKY
		              AND VD.PTNRTY = 'CT'
		              AND VD.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP VU
		               ON VU.OWNRKY = #SES_OWNER#
		              AND VU.USERID = 'DEV'
		       LEFT OUTER JOIN VUSER_WAREDOCUSER VU2
		               ON VU2.WAREKY = #WAREKY#
		              AND VU2.DOCUTY = #RCPTTY#
		 WHERE 1 = 1
	   <isEqual property="WAREKY" compareValue="WSH1">AND SH.WAREKY IN ('WSH1','WSH2','WSH_')</isEqual>
	   <isNotEqual property="WAREKY" compareValue="WSH1">AND SH.WAREKY = #WAREKY#</isNotEqual>
	   <isNotEmpty property="RANGE_SQL">
			 $RANGE_SQL$
	   </isNotEmpty>
		 GROUP BY SH.SHPOKY, SH.WAREKY, SH.DPTNKY, SH.OWNRKY,
		          WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01,
		          VU.ERPUSR, VU.ERPNAM, VU.DEPTID, VU.DPNAME,
		          VU2.ERPUS2, VU2.USNAM2, VU2.DEPID2, VU2.DPNAM2,
		          VU2.ERPUS3, VU2.USNAM3, VU2.DEPID3, VU2.DPNAM3,
		          VU2.ERPUS4, VU2.USNAM4, VU2.DEPID4, VU2.DPNAM4,
		          SH.DOCTXT
		UNION ALL
		SELECT  
		       ' ' AS RECVKY,
		       #WAREKY# AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       #RCPTTY# AS RCPTTY,
		       DT.SHORTX AS RCPTTYNM,
		       'NEW' AS STATDO,
		       ' ' AS SAPSTS,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       '100' AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       IF.KUNAG AS DPTNKY,
		       VD.NAME01 AS DPTNKYNM,
		       ' ' AS DRELIN,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
		       #SES_OWNER# AS OWNRKY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       ' ' AS PUTSTS,
		       NVL(VU.ERPUSR,' ') AS USRID1,
		       NVL(VU.ERPNAM,' ') AS UNAME1,
		       NVL(VU.DEPTID,' ') AS DEPTID1,
		       NVL(VU.DPNAME,' ') AS DNAME1,
		       NVL(VU2.ERPUS2,' ') AS USRID2,
		       NVL(VU2.USNAM2,' ') AS UNAME2,
		       NVL(VU2.DEPID2,' ') AS DEPTID2,
		       NVL(VU2.DPNAM2,' ') AS DNAME2,
		       NVL(VU2.ERPUS3,' ') AS USRID3,
		       NVL(VU2.USNAM3,' ') AS UNAME3,
		       NVL(VU2.DEPID3,' ') AS DEPTID3,
		       NVL(VU2.DPNAM3,' ') AS DNAME3,
		       NVL(VU2.ERPUS4,' ') AS USRID4,
		       NVL(VU2.USNAM4,' ') AS UNAME4,
		       NVL(VU2.DEPID4,' ') AS DEPTID4,
		       NVL(VU2.DPNAM4,' ') AS DNAME4,
		       IF.VTEXT AS DOCTXT,
		       IF.VBELN AS SHPOKY,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24:MI:SS') AS CRETIM,
		       'DEV' AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24:MI:SS') AS LMOTIM,
		       'DEV' AS LMOUSR,
		       ' ' AS LUSRNM
		  FROM IFWMS413 IF
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #WAREKY#
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '100'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #RCPTTY#
		       LEFT OUTER JOIN BZPTN VD
		               ON VD.PTNRKY = IF.KUNAG
		              AND VD.PTNRTY = 'CT'
		              AND VD.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP VU
		               ON VU.OWNRKY = #SES_OWNER#
		              AND VU.USERID = 'DEV'
		       LEFT OUTER JOIN VUSER_WAREDOCUSER VU2
		               ON VU2.WAREKY = #WAREKY#
		              AND VU2.DOCUTY = #RCPTTY#
		 WHERE 1 = 1
	 <isEqual property="WAREKY" compareValue="WSH1">AND IF.WAREKY IN ('WSH1','WSH2','WSH_')</isEqual>
	 <isNotEqual property="WAREKY" compareValue="WSH1">AND IF.WAREKY = #WAREKY#</isNotEqual>
	 <isNotEmpty property="RANGE_SQL_ERP">
	   		$RANGE_SQL_ERP$
	 </isNotEmpty>
	 GROUP BY IF.VBELN, IF.WAREKY, IF.KUNAG,
	          WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01,
	          VU.ERPUSR, VU.ERPNAM, VU.DEPTID, VU.DPNAME,
	          VU2.ERPUS2, VU2.USNAM2, VU2.DEPID2, VU2.DPNAM2,
	          VU2.ERPUS3, VU2.USNAM3, VU2.DEPID3, VU2.DPNAM3,
	          VU2.ERPUS4, VU2.USNAM4, VU2.DEPID4, VU2.DPNAM4,
	          IF.VTEXT
	 ORDER BY 1 DESC
	</select>
	
	<select id="GR06Sub_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL KEY : INBOUND.GOODRECEIPT.FIND_INTERFACE_TO_CREATE_RECDI -->
		SELECT SH.SHPOKY AS SHPOKY,
		       ' ' AS RECVKY,
		       ' ' AS RECVIT,
		       'NEW' AS STATIT,
		       ' ' AS SAPSTS,
		       SI.SKUKEY AS SKUKEY,
		       ' ' AS LOTNUM,
		       ' ' AS AREAKY,
		       'RTNLOC' AS LOCAKY,
		       ' ' AS SECTID,
		       ' ' AS TRNUID,
		       ' ' AS PACKID,
		       SI.QTSHPD - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                          FROM RECDH H
		                               INNER JOIN RECDI I
		                                       ON H.RECVKY = I.RECVKY
		                         WHERE H.STATDO IN ('NEW','FRV')
		                           AND H.RCPTTY = '108'
		                           AND I.REFDKY = SH.SHPOKY
		                           AND I.REFDIT = SI.SHPOIT
		                       ),0) AS ASNQTY,
		       SI.QTSHPD - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                          FROM RECDH H
		                               INNER JOIN RECDI I
		                                       ON H.RECVKY = I.RECVKY
		                         WHERE H.STATDO IN ('NEW','FRV')
		                           AND H.RCPTTY = '108'
		                           AND I.REFDKY = SH.SHPOKY
		                           AND I.REFDIT = SI.SHPOIT
		                       ),0) AS QTYRCV,
		       0 AS QTYDIF,
		       SI.QTYUOM AS QTYUOM,
		       ' ' AS TRUNTY,
		       SI.MEASKY AS MEASKY,
		       SI.UOMKEY AS UOMKEY,
		       NVL(MS.QTPUOM,0) AS QTPUOM,
		       NVL(SM.DUOMKY,' ') AS DUOMKY,
		       NVL(SM.QTDUOM,9999999) AS QTDUOM,
		       TRUNC((SI.QTSHPD - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                                 FROM RECDH H
		                                      INNER JOIN RECDI I
		                                              ON H.RECVKY = I.RECVKY
		                                WHERE H.STATDO IN ('NEW','FRV')
		                                  AND H.RCPTTY = '108'
		                                  AND I.REFDKY = SH.SHPOKY
		                                  AND I.REFDIT = SI.SHPOIT
		                              ),0))/NVL(SM.QTDUOM,9999999)) AS BOXQTY,
		       MOD((SI.QTSHPD - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                               FROM RECDH H
		                                    INNER JOIN RECDI I
		                                            ON H.RECVKY = I.RECVKY
		                              WHERE H.STATDO IN ('NEW','FRV')
		                                AND H.RCPTTY = '108'
		                                AND I.REFDKY = SH.SHPOKY
		                                AND I.REFDIT = SI.SHPOIT
		                            ),0)),NVL(SM.QTDUOM,9999999)) AS REMQTY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       NVL((SELECT MAX(BWTAR) FROM IFWMS113 WHERE WERKS = SH.OWNRKY AND VBELN = SI.SVBELN AND POSNR = SI.SPOSNR AND STATUS IN ('A','C') AND IFFLG IN ('Y','N')), ' ') AS LOTA01,
		       NVL((SELECT NAME01 FROM BZPTN
		             WHERE PTNRKY = NVL((SELECT MAX(BWTAR) FROM IFWMS113
		                                  WHERE WERKS = SH.OWNRKY
		                                    AND VBELN = SI.SVBELN
		                                    AND POSNR = SI.SPOSNR
		                                    AND STATUS IN ('A','C')
		                                    AND IFFLG IN ('Y','N')), ' ') 
		               AND PTNRTY = 'TM'
		               AND PTNL05 = (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)), ' ') AS LOTA01NM,
		       NVL(MIN(TI.LOTA02),' ') AS LOTA02,
		       NVL(MIN(TI.LOTA03),' ') AS LOTA03,
		       NVL(MIN(TI.LOTA04),' ') AS LOTA04,
		       NVL(MIN(TI.LOTA05),' ') AS LOTA05,
		       '00' AS LOTA06,
		       NVL(MIN(TI.LOTA07),' ') AS LOTA07,
		       NVL(MIN(TI.LOTA08),' ') AS LOTA08,
		       NVL(MIN(TI.LOTA09),' ') AS LOTA09,
		       NVL(MIN(TI.LOTA10),' ') AS LOTA10,
		       NVL(MIN(TI.LOTA11),' ') AS LOTA11,
		       NVL(MIN(TI.LOTA12),' ') AS LOTA12,
		       NVL(MIN(TI.LOTA13),' ') AS LOTA13,
		       NVL(MIN(TI.LOTA14),' ') AS LOTA14,
		       NVL(MIN(TI.LOTA15),' ') AS LOTA15,
		       NVL(MIN(TI.LOTA16),0) AS LOTA16,
		       NVL(MIN(TI.LOTA17),0) AS LOTA17,
		       NVL(MIN(TI.LOTA18),0) AS LOTA18,
		       NVL(MIN(TI.LOTA19),0) AS LOTA19,
		       NVL(MIN(TI.LOTA20),0) AS LOTA20,
		       NVL(MIN(TI.AWMSNO),' ') AS AWMSNO,
		       SH.SHPOKY AS REFDKY,
		       SI.SHPOIT AS REFDIT,
		       SH.DOCCAT AS REFCAT,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
		       SI.DESC01 AS DESC01,
		       SI.DESC02 AS DESC02,
		       NVL(MIN(TI.ASKU01),' ') AS ASKU01,
		       NVL(MIN(TI.ASKU02),' ') AS ASKU02,
		       NVL(MIN(TI.ASKU03),' ') AS ASKU03,
		       NVL(MIN(TI.ASKU04),' ') AS ASKU04,
		       NVL(MIN(TI.ASKU05),' ') AS ASKU05,
		       NVL(MIN(TI.EANCOD),' ') AS EANCOD,
		       NVL(MIN(TI.GTINCD),' ') AS GTINCD,
		       NVL(MIN(TI.SKUG01),' ') AS SKUG01,
		       NVL(MIN(TI.SKUG02),' ') AS SKUG02,
		       NVL(MIN(TI.SKUG03),' ') AS SKUG03,
		       NVL(MIN(TI.SKUG04),' ') AS SKUG04,
		       NVL(MIN(TI.SKUG05),' ') AS SKUG05,
		       NVL(MIN(TI.GRSWGT),0) AS GRSWGT,
		       NVL(MIN(TI.NETWGT),0) AS NETWGT,
		       NVL(MIN(TI.WGTUNT),' ') AS WGTUNT,
		       NVL(MIN(TI.LENGTH),0) AS LENGTH,
		       NVL(MIN(TI.WIDTHW),0) AS WIDTHW,
		       NVL(MIN(TI.HEIGHT),0) AS HEIGHT,
		       NVL(MIN(TI.CUBICM),0) AS CUBICM,
		       NVL(MIN(TI.CAPACT),0) AS CAPACT,
		       0 AS QTYORG,
		       NVL(MIN(TI.SMANDT),' ') AS SMANDT,
		       NVL(MIN(TI.SEBELN),' ') AS SEBELN,
		       NVL(MIN(TI.SEBELP),' ') AS SEBELP,
		       NVL(MIN(TI.SZMBLNO),' ') AS SZMBLNO,
		       NVL(MIN(TI.SZMIPNO),' ') AS SZMIPNO,
		       NVL(MIN(TI.STRAID),' ') AS STRAID,
		       NVL(MIN(TI.SVBELN),' ') AS SVBELN,
		       NVL(MIN(TI.SPOSNR),' ') AS SPOSNR,
		       NVL(MIN(TI.STKNUM),' ') AS STKNUM,
		       NVL(MIN(TI.STPNUM),' ') AS STPNUM,
		       NVL(MIN(TI.SWERKS),' ') AS SWERKS,
		       NVL(MIN(TI.SLGORT),' ') AS SLGORT,
		       NVL(MIN(TI.SDATBG),' ') AS SDATBG,
		       NVL(MIN(TI.STDLNR),' ') AS STDLNR,
		       SH.SHPOKY AS SSORNU,
		       SI.SHPOIT AS SSORIT,
		       NVL(MIN(TI.SMBLNR),' ') AS SMBLNR,
		       NVL(MIN(TI.SZEILE),' ') AS SZEILE,
		       NVL(MIN(TI.SMJAHR),' ') AS SMJAHR,
		       NVL(MIN(TI.SXBLNR),' ') AS SXBLNR,
		       ' ' AS SBKTXT,
		       ' ' AS RCPRSN,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24:MI:SS') AS CRETIM,
		       'DEV' AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24:MI:SS') AS LMOTIM,
		       'DEV' AS LMOUSR,
		       ' ' AS LUSRNM
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI
		               ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN TASDI TI
		               ON TI.SHPOKY = SI.SHPOKY
		              AND TI.SHPOIT = SI.SHPOIT
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = SH.OWNRKY
		              AND SM.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN SKUWC SW
		               ON SW.WAREKY = SH.WAREKY
		              AND SW.OWNRKY = SH.OWNRKY
		              AND SW.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN MEASI MS
		               ON MS.WAREKY = SH.WAREKY
		              AND MS.MEASKY = SI.MEASKY
		              AND MS.UOMKEY = SI.UOMKEY
		 WHERE 1 = 1
		   AND SI.QTSHPD - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                          FROM RECDH H
		                               INNER JOIN RECDI I
		                                       ON H.RECVKY = I.RECVKY
		                         WHERE H.STATDO IN ('NEW','FRV')
		                           AND H.RCPTTY = '108'
		                           AND I.REFDKY = SH.SHPOKY
		                           AND I.REFDIT = SI.SHPOIT
		                       ),0) > 0
		   <isEqual property="WAREKY" compareValue="WSH2">AND 1 = 2</isEqual>
		   <isEqual property="WAREKY" compareValue="WSH1">AND SH.WAREKY IN ('WSH1','WSH2','WSH_')</isEqual>
		   <isNotEqual property="WAREKY" compareValue="WSH1">AND SH.WAREKY = #WAREKY#</isNotEqual>
		   AND SH.SHPOKY = #SHPOKY#
		   <isNotEmpty property="RANGE_SQL">
		   		$RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY SH.OWNRKY, SH.SHPOKY, SI.SHPOIT, SH.DOCCAT, SI.SKUKEY, SI.DESC01, SI.DESC02, SI.SVBELN, SI.SPOSNR,
		          SW.LOCARV, SI.QTSHPD, SI.QTYUOM, SI.MEASKY, SI.UOMKEY, MS.QTPUOM,
		          SM.DUOMKY, SM.QTDUOM
		UNION ALL
		SELECT IF.VBELN AS VBELN,
		       ' ' AS RECVKY,
		       ' ' AS RECVIT,
		       'NEW' AS STATIT,
		       ' ' AS SAPSTS,
		       IF.MATNR AS SKUKEY,
		       ' ' AS LOTNUM,
		       ' ' AS AREAKY,
		       'RTNLOC' AS LOCAKY,
		       ' ' AS SECTID,
		       ' ' AS TRNUID,
		       ' ' AS PACKID,
		       IF.LFIMG - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                         FROM RECDH H
		                              INNER JOIN RECDI I
		                                      ON H.RECVKY = I.RECVKY
		                        WHERE H.STATDO IN ('NEW','FRV')
		                          AND H.RCPTTY = '108'
		                          AND I.REFDKY = IF.VBELN
		                          AND I.REFDIT = IF.POSNR
		                      ),0) AS ASNQTY,
		       IF.LFIMG - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                         FROM RECDH H
		                              INNER JOIN RECDI I
		                                      ON H.RECVKY = I.RECVKY
		                        WHERE H.STATDO IN ('NEW','FRV')
		                          AND H.RCPTTY = '108'
		                          AND I.REFDKY = IF.VBELN
		                          AND I.REFDIT = IF.POSNR
		                      ),0) AS QTYRCV,
		       0 AS QTYDIF,
		       IF.LFIMG - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                         FROM RECDH H
		                              INNER JOIN RECDI I
		                                      ON H.RECVKY = I.RECVKY
		                        WHERE H.STATDO IN ('NEW','FRV')
		                          AND H.RCPTTY = '108'
		                          AND I.REFDKY = IF.VBELN
		                          AND I.REFDIT = IF.POSNR
		                      ),0) AS QTYUOM,
		       ' ' AS TRUNTY,
		       IF.MATNR AS MEASKY,
		       DECODE(IF.MEINS, ' ','EA', IF.MEINS) AS UOMKEY,
		       NVL(MS.QTPUOM,0) AS QTPUOM,
		       NVL(SM.DUOMKY,' ') AS DUOMKY,
		       NVL(SM.QTDUOM,9999999) AS QTDUOM,
		       TRUNC(IF.LFIMG - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                               FROM RECDH H
		                                    INNER JOIN RECDI I
		                                            ON H.RECVKY = I.RECVKY
		                              WHERE H.STATDO IN ('NEW','FRV')
		                                AND H.RCPTTY = '108'
		                                AND I.REFDKY = IF.VBELN
		                                AND I.REFDIT = IF.POSNR
		                            ),0)/NVL(SM.QTDUOM,9999999)) AS BOXQTY,
		       MOD(IF.LFIMG - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                             FROM RECDH H
		                                  INNER JOIN RECDI I
		                                          ON H.RECVKY = I.RECVKY
		                            WHERE H.STATDO IN ('NEW','FRV')
		                              AND H.RCPTTY = '108'
		                              AND I.REFDKY = IF.VBELN
		                              AND I.REFDIT = IF.POSNR
		                          ),0),NVL(SM.QTDUOM,9999999)) AS REMQTY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       IF.BWTAR AS LOTA01,
		       NVL((SELECT NAME01 FROM BZPTN WHERE PTNRKY = IF.BWTAR AND PTNRTY = 'TM' AND PTNL05 = (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)), ' ') AS LOTA01NM,
		       ' ' AS LOTA02,
		       ' ' AS LOTA03,
		       ' ' AS LOTA04,
		       ' ' AS LOTA05,
		       '00' AS LOTA06,
		       ' ' AS LOTA07,
		       ' ' AS LOTA08,
		       ' ' AS LOTA09,
		       ' ' AS LOTA10,
		       ' ' AS LOTA11,
		       ' ' AS LOTA12,
		       ' ' AS LOTA13,
		       ' ' AS LOTA14,
		       ' ' AS LOTA15,
		       0 AS LOTA16,
		       0 AS LOTA17,
		       0 AS LOTA18,
		       0 AS LOTA19,
		       0 AS LOTA20,
		       ' ' AS AWMSNO,
		       IF.VBELN AS REFDKY,
		       IF.POSNR AS REFDIT,
		       'ERP' AS REFCAT,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
		       NVL(SM.DESC01,' ') AS DESC01,
		       NVL(SM.DESC02,' ') AS DESC02,
		       NVL(MIN(SM.ASKU01),' ') AS ASKU01,
		       NVL(MIN(SM.ASKU02),' ') AS ASKU02,
		       NVL(MIN(SM.ASKU03),' ') AS ASKU03,
		       NVL(MIN(SM.ASKU04),' ') AS ASKU04,
		       NVL(MIN(SM.ASKU05),' ') AS ASKU05,
		       NVL(MIN(SM.EANCOD),' ') AS EANCOD,
		       NVL(MIN(SM.GTINCD),' ') AS GTINCD,
		       NVL(MIN(SM.SKUG01),' ') AS SKUG01,
		       NVL(MIN(SM.SKUG02),' ') AS SKUG02,
		       NVL(MIN(SM.SKUG03),' ') AS SKUG03,
		       NVL(MIN(SM.SKUG04),' ') AS SKUG04,
		       NVL(MIN(SM.SKUG05),' ') AS SKUG05,
		       NVL(MIN(SM.GRSWGT),0) AS GRSWGT,
		       NVL(MIN(SM.NETWGT),0) AS NETWGT,
		       NVL(MIN(SM.WGTUNT),' ') AS WGTUNT,
		       NVL(MIN(SM.LENGTH),0) AS LENGTH,
		       NVL(MIN(SM.WIDTHW),0) AS WIDTHW,
		       NVL(MIN(SM.HEIGHT),0) AS HEIGHT,
		       NVL(MIN(SM.CUBICM),0) AS CUBICM,
		       NVL(MIN(SM.CAPACT),0) AS CAPACT,
		       0 AS QTYORG,
		       NVL(MIN(IF.MANDT),' ') AS SMANDT,
		       ' ' AS SEBELN,
		       ' ' AS SEBELP,
		       ' ' AS SZMBLNO,
		       ' ' AS SZMIPNO,
		       ' ' AS STRAID,
		       NVL(MIN(IF.VBELN),' ') AS SVBELN,
		       NVL(MIN(IF.POSNR),' ') AS SPOSNR,
		       ' ' AS STKNUM,
		       ' ' AS STPNUM,
		       ' ' AS SWERKS,
		       ' ' AS SLGORT,
		       ' ' AS SDATBG,
		       ' ' AS STDLNR,
		       ' ' AS SSORNU,
		       ' ' AS SSORIT,
		       ' ' AS SMBLNR,
		       ' ' AS SZEILE,
		       ' ' AS SMJAHR,
		       ' ' AS SXBLNR,
		       ' ' AS SBKTXT,
		       ' ' AS RCPRSN,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24:MI:SS') AS CRETIM,
		       'DEV' AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYY-MM-DD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24:MI:SS') AS LMOTIM,
		       'DEV' AS LMOUSR,
		       ' ' AS LUSRNM
		  FROM IFWMS413 IF
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = #SES_OWNER#
		              AND SM.SKUKEY = IF.MATNR
		       LEFT OUTER JOIN SKUWC SW
		               ON SW.WAREKY = IF.WAREKY
		              AND SW.OWNRKY = #SES_OWNER#
		              AND SW.SKUKEY = IF.MATNR
		       LEFT OUTER JOIN MEASI MS
		               ON MS.WAREKY = IF.WAREKY
		              AND MS.MEASKY = IF.MATNR
		              AND MS.UOMKEY = IF.MEINS
		 WHERE 1 = 1
		   AND IF.LFIMG - NVL((SELECT NVL(SUM(I.QTYRCV),0)
		                         FROM RECDH H
		                              INNER JOIN RECDI I
		                                      ON H.RECVKY = I.RECVKY
		                        WHERE H.STATDO IN ('NEW','FRV')
		                          AND H.RCPTTY = '108'
		                          AND I.REFDKY = IF.VBELN
		                          AND I.REFDIT = IF.POSNR
		                      ),0) > 0
		   <isEqual property="WAREKY" compareValue="WSH2">AND 1 = 2</isEqual>
		   <isEqual property="WAREKY" compareValue="WSH1">AND IF.WAREKY IN ('WSH1','WSH2','WSH_')</isEqual>
		   <isNotEqual property="WAREKY" compareValue="WSH1">AND IF.WAREKY = #WAREKY#</isNotEqual>
		   AND IF.VBELN = #SHPOKY#
		   <isNotEmpty property="RANGE_SQL">
		   		$RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY IF.VBELN, IF.POSNR, IF.MATNR, SM.DESC01, SM.DESC02, IF.BWTAR,
		          IF.LFIMG, IF.MEINS, MS.QTPUOM, SM.DUOMKY, SM.QTDUOM
	</select>
	
	<update id="GR06_UPDATE" parameterClass="Map">
		INSERT INTO RECDH
			(
			   RECVKY,
			   WAREKY,
			   RCPTTY,
			   STATDO,
			   SAPSTS,
			   DOCDAT,
			   DOCCAT,
			   DPTNKY,
			   DRELIN,
			   ARCPTD,
			   OWNRKY,
			   INDRCN,
			   CRECVD,
			   RSNCOD,
			   PUTSTS,
			   USRID1,
			   UNAME1,
			   DEPTID1,
			   DNAME1,
			   USRID2,
			   UNAME2,
			   DEPTID2,
			   DNAME2,
			   USRID3,
			   UNAME3,
			   DEPTID3,
			   DNAME3,
			   USRID4,
			   UNAME4,
			   DEPTID4,
			   DNAME4,
			   DOCTXT,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)
			VALUES(
			   #RECVKY#,
			   #WAREKY#,
			   #RCPTTY#,
			   #STATDO#,
			   #SAPSTS#,
			   #DOCDAT#,
			   #DOCCAT#,
			   #DPTNKY#,
			   #DRELIN#,
			   #ARCPTD#,
			   #OWNRKY#,
			   #INDRCN#,
			   #CRECVD#,
			   #RSNCOD#,
			   #PUTSTS#,
			   #USRID1#,
			   #UNAME1#,
			   #DEPTID1#,
			   #DNAME1#,
			   #USRID2#,
			   #UNAME2#,
			   #DEPTID2#,
			   #DNAME2#,
			   #USRID3#,
			   #UNAME3#,
			   #DEPTID3#,
			   #DNAME3#,
			   #USRID4#,
			   #UNAME4#,
			   #DEPTID4#,
			   #DNAME4#,
			   #DOCTXT#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV',
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV'
			)

	</update>
	
	<update id="GR06Sub_UPDATE" parameterClass="Map">
		INSERT INTO RECDI
			(
			   RECVKY,
			   RECVIT,
			   STATIT,
			   SAPSTS,
			   SKUKEY,
			   LOTNUM,
			   AREAKY,
			   LOCAKY,
			   SECTID,
			   TRNUID,
			   PACKID,
			   QTYRCV,
			   QTYDIF,
			   QTYUOM,
			   TRUNTY,
			   MEASKY,
			   UOMKEY,
			   QTPUOM,
			   DUOMKY,
			   QTDUOM,
			   INDRCN,
			   CRECVD,
			   RSNCOD,
			   LOTA01,
			   LOTA02,
			   LOTA03,
			   LOTA04,
			   LOTA05,
			   LOTA06,
			   LOTA07,
			   LOTA08,
			   LOTA09,
			   LOTA10,
			   LOTA11,
			   LOTA12,
			   LOTA13,
			   LOTA14,
			   LOTA15,
			   LOTA16,
			   LOTA17,
			   LOTA18,
			   LOTA19,
			   LOTA20,
			   AWMSNO,
			   REFDKY,
			   REFDIT,
			   REFCAT,
			   REFDAT,
			   DESC01,
			   DESC02,
			   ASKU01,
			   ASKU02,
			   ASKU03,
			   ASKU04,
			   ASKU05,
			   EANCOD,
			   GTINCD,
			   SKUG01,
			   SKUG02,
			   SKUG03,
			   SKUG04,
			   SKUG05,
			   GRSWGT,
			   NETWGT,
			   WGTUNT,
			   LENGTH,
			   WIDTHW,
			   HEIGHT,
			   CUBICM,
			   CAPACT,
			   QTYORG,
			   SMANDT,
			   SEBELN,
			   SEBELP,
			   SZMBLNO,
			   SZMIPNO,
			   STRAID,
			   SVBELN,
			   SPOSNR,
			   STKNUM,
			   STPNUM,
			   SWERKS,
			   SLGORT,
			   SDATBG,
			   STDLNR,
			   SSORNU,
			   SSORIT,
			   SMBLNR,
			   SZEILE,
			   SMJAHR,
			   SXBLNR,
			   RCPRSN,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)
			VALUES(
			   #RECVKY#,
			   #RECVIT#,
			   #STATIT#,
			   #SAPSTS#,
			   #SKUKEY#,
			   #LOTNUM#,
			   #AREAKY#,
			   #LOCAKY#,
			   #SECTID#,
			   #TRNUID#,
			   #PACKID#,
			   #QTYRCV#,
			   #QTYDIF#,
			   #QTYUOM#,
			   #TRUNTY#,
			   #MEASKY#,
			   #UOMKEY#,
			   #QTPUOM#,
			   #DUOMKY#,
			   #QTDUOM#,
			   #INDRCN#,
			   #CRECVD#,
			   #RSNCOD#,
			   #LOTA01#,
			   #LOTA02#,
			   #LOTA03#,
			   #LOTA04#,
			   #LOTA05#,
			   #LOTA06#,
			   #LOTA07#,
			   #LOTA08#,
			   #LOTA09#,
			   #LOTA10#,
			   #LOTA11#,
			   #LOTA12#,
			   #LOTA13#,
			   #LOTA14#,
			   #LOTA15#,
			   #LOTA16#,
			   #LOTA17#,
			   #LOTA18#,
			   #LOTA19#,
			   #LOTA20#,
			   #AWMSNO#,
			   #REFDKY#,
			   #REFDIT#,
			   #REFCAT#,
			   #REFDAT#,
			   NVL(#DESC01#, ' '),
			   #DESC02#,
			   #ASKU01#,
			   #ASKU02#,
			   #ASKU03#,
			   #ASKU04#,
			   #ASKU05#,
			   #EANCOD#,
			   #GTINCD#,
			   #SKUG01#,
			   #SKUG02#,
			   #SKUG03#,
			   #SKUG04#,
			   #SKUG05#,
			   #GRSWGT#,
			   #NETWGT#,
			   #WGTUNT#,
			   #LENGTH#,
			   #WIDTHW#,
			   #HEIGHT#,
			   #CUBICM#,
			   #CAPACT#,
			   #QTYORG#,
			   #SMANDT#,
			   #SEBELN#,
			   #SEBELP#,
			   #SZMBLNO#,
			   #SZMIPNO#,
			   #STRAID#,
			   #SVBELN#,
			   #SPOSNR#,
			   #STKNUM#,
			   #STPNUM#,
			   #SWERKS#,
			   #SLGORT#,
			   #SDATBG#,
			   #STDLNR#,
			   #SSORNU#,
			   #SSORIT#,
			   #SMBLNR#,
			   #SZEILE#,
			   #SMJAHR#,
			   #SXBLNR#,
			   #RCPRSN#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV',
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV'
			)
	</update>
	
	<select id="GR06R_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT H.RECVKY,
		       I.SEBELN,
		       DT.SHORTX AS RCPTTYNM,
		       WAREKY,
		       RCPTTY,
		       STATDO,
		       H.SAPSTS,
		       DOCDAT,
		       H.DOCCAT,
		       DPTNKY,
		       ' ' AS DPTNKYNM,
		       ' ' AS WAREKYNM,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       I.SSORNU AS SHPOKY,
		       DRELIN,
		       ARCPTD,
		       OWNRKY,
		       H.INDRCN,
		       H.CRECVD,
		       H.RSNCOD,
		       PUTSTS,
		       USRID1,
		       UNAME1,
		       DEPTID1,
		       DNAME1,
		       USRID2,
		       UNAME2,
		       DEPTID2,
		       DNAME2,
		       USRID3,
		       UNAME3,
		       DEPTID3,
		       DNAME3,
		       USRID4,
		       UNAME4,
		       DEPTID4,
		       DNAME4,
		       DOCTXT,
		       H.CREDAT,
		       H.CRETIM,
		       H.CREUSR,
		       ' ' AS CUSRNM,
		       H.LMODAT,
		       H.LMOTIM,
		       H.LMOUSR,
		       ' ' AS LUSRNM
		FROM   RECDH H
		    LEFT OUTER JOIN RECDI I
		ON H.RECVKY = I.RECVKY
		    LEFT OUTER JOIN DOCTM DT	
		ON DT.DOCUTY = H.RECVKY
		    LEFT OUTER JOIN DOCCM DC	
		ON DC.DOCCAT = '100'
		WHERE H.RECVKY IN ( $RECVKY$ )
	</select>
	
	<select id="GR06IR_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			RECVKY,
			RECVIT,
			STATIT,
			SAPSTS,
			SKUKEY,
			LOTNUM,
			AREAKY,
			LOCAKY,
			SECTID,
			TRNUID,
			PACKID,
			QTYRCV ,
			TRUNC(QTYRCV/QTDUOM) AS BOXQTY,
			MOD(QTYRCV,QTDUOM) AS REMQTY,
			QTYDIF,
			QTYUOM,
			QTYUOM AS ASNQTY,
			TRUNTY,
			MEASKY,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			INDRCN,
			CRECVD,
			RSNCOD,
			LOTA01,
			LOTA02,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			' ' AS LOTA01NM,
			' ' AS SBKTXT,
			AWMSNO,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			DESC01,
			DESC02,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			QTYORG,
			SMANDT,
			SEBELN,
			SEBELP,
			SZMBLNO,
			SZMIPNO,
			STRAID,
			SVBELN,
			SPOSNR,
			STKNUM,
			STPNUM,
			SWERKS,
			SLGORT,
			SDATBG,
			STDLNR,
			SSORNU,
			SSORIT,
			SMBLNR,
			SZEILE,
			SMJAHR,
			SXBLNR,
			RCPRSN,
			CREDAT,
			CRETIM,
			CREUSR,
			' ' AS CUSRNM,
			LMODAT,
			LMOTIM,
			LMOUSR,
			' ' AS LUSRNM
		FROM RECDI
		WHERE RECVKY = #RECVKY#
	</select>
	
	<select id="GR15BAK_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRF.SHPOKY AS SHPOKY,
		       ' ' AS RECVKY,
		       TRF.WARETG AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       #RCPTTY# AS RCPTTY,
		       DT.SHORTX AS RCPTTYNM,
		       'NEW' AS STATDO,
		       ' ' AS SAPSTS,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       '100' AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       TRF.WARESR AS DPTNKY,
		       VD.NAME01 AS DPTNKYNM,
		       ' ' AS DRELIN,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
		       #SES_OWNER# AS OWNRKY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       ' ' AS PUTSTS,
		       TRF.SHPOKY AS SHPOKY,
		       NVL(VU.ERPUSR,' ') AS USRID1,
		       NVL(VU.ERPNAM,' ') AS UNAME1,
		       NVL(VU.DEPTID,' ') AS DEPTID1,
		       NVL(VU.DPNAME,' ') AS DNAME1,
		       NVL(VU2.ERPUS2,' ') AS USRID2,
		       NVL(VU2.USNAM2,' ') AS UNAME2,
		       NVL(VU2.DEPID2,' ') AS DEPTID2,
		       NVL(VU2.DPNAM2,' ') AS DNAME2,
		       NVL(VU2.ERPUS3,' ') AS USRID3,
		       NVL(VU2.USNAM3,' ') AS UNAME3,
		       NVL(VU2.DEPID3,' ') AS DEPTID3,
		       NVL(VU2.DPNAM3,' ') AS DNAME3,
		       NVL(VU2.ERPUS4,' ') AS USRID4,
		       NVL(VU2.USNAM4,' ') AS UNAME4,
		       NVL(VU2.DEPID4,' ') AS DEPTID4,
		       NVL(VU2.DPNAM4,' ') AS DNAME4,
		       ' ' AS DOCTXT,
		       TRF.CREDAT AS CREDAT,
		       TRF.CRETIM,
		       TRF.CREUSR,
		       TRF.LMODAT,
		       TRF.LMOTIM,
		       TRF.LMOUSR
		  FROM TRFIT TRF
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = #SES_OWNER#
		              AND SM.SKUKEY = TRF.SKUKEY
		       LEFT OUTER JOIN SKUWC SW
		               ON SW.WAREKY = TRF.WARETG
		              AND SW.OWNRKY = #SES_OWNER#
		              AND SW.SKUKEY = TRF.SKUKEY
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = TRF.WARETG
		       LEFT OUTER JOIN WAHMA VD
		               ON VD.WAREKY = TRF.WARESR
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '100'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #RCPTTY#
		       LEFT OUTER JOIN VUSER_WMSERP VU
		               ON VU.OWNRKY = #SES_OWNER#
		              AND VU.USERID = 'DEV'
		       LEFT OUTER JOIN VUSER_WAREDOCUSER VU2
		               ON VU2.WAREKY = #WAREKY#
		              AND VU2.DOCUTY = #RCPTTY#
		 WHERE TRF.WARETG = #WAREKY#
		   AND TRF.STATIT = 'NEW'
		   AND TRF.QTYTRF > 0
		   <isNotEmpty property="RANGE_SQL">
		   		$RANGE_SQL$
	       </isNotEmpty>
		 GROUP BY TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX,
		          DC.SHORTX, TRF.WARESR, VD.NAME01,
		          VU.ERPUSR, VU.ERPNAM, VU.DEPTID, VU.DPNAME,
		          VU2.ERPUS2, VU2.USNAM2, VU2.DEPID2, VU2.DPNAM2,
		          VU2.ERPUS3, VU2.USNAM3, VU2.DEPID3, VU2.DPNAM3,
		          VU2.ERPUS4, VU2.USNAM4, VU2.DEPID4, VU2.DPNAM4,
		          TRF.SHPOKY, TRF.CREDAT, TRF.CRETIM, TRF.CREUSR, 
		          TRF.LMODAT, TRF.LMOTIM, TRF.LMOUSR
		 ORDER BY TRF.TASKKY DESC
	</select>
	
	<select id="GR15BAKSub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRF.SHPOKY AS SHPOKY,
		       ' ' AS RECVKY,
		       ' ' AS RECVIT,
		       'NEW' AS STATIT,
		       ' ' AS SAPSTS,
		       TRF.SKUKEY AS SKUKEY,
		       TRF.SKUKEY AS LOTNUM,
		       ' ' AS AREAKY,
		       'DOCLOC'  AS LOCAKY,  
		       ' ' AS SECTID,
		       ' ' AS TRNUID,
		       ' ' AS PACKID,
		       TRF.QTYTRF AS QTYRCV,
		       0 AS QTYDIF,
		       TRF.QTYTRF AS QTYUOM,
		       ' ' AS TRUNTY,
		       TRF.MEASKY AS MEASKY,
		       NVL(SM.DUOMKY,'EA') AS UOMKEY,
		       NVL(MS.QTPUOM,0) AS QTPUOM,
		       NVL(SM.DUOMKY,'EA') AS DUOMKY,
		       NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM,
		       TRUNC(TRF.QTYTRF/NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS BOXQTY,
		       MOD(TRF.QTYTRF,NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS REMQTY,
		       ' ' AS INDRCN,
		       ' ' AS CRECVD,
		       ' ' AS RSNCOD,
		       TRF.LOTA01 AS LOTA01,
		       L01NM.NAME01 AS LOTA01NM,
		       TRF.LOTA02 AS LOTA02,
		       TRF.LOTA03 AS LOTA03,
		       TRF.LOTA04 AS LOTA04,
		       TRF.LOTA05 AS LOTA05,
		       '00' AS LOTA06,
		       TRF.LOTA07 AS LOTA07,
		       TRF.LOTA08 AS LOTA08,
		       TRF.LOTA09 AS LOTA09,
		       TRF.LOTA10 AS LOTA10,
		       TRF.LOTA11 AS LOTA11,
		       TRF.LOTA12 AS LOTA12,
		       TRF.LOTA13 AS LOTA13,
		       TRF.LOTA14 AS LOTA14,
		       TRF.LOTA15 AS LOTA15,
		       TRF.LOTA16 AS LOTA16,
		       TRF.LOTA17 AS LOTA17,
		       TRF.LOTA18 AS LOTA18,
		       TRF.LOTA19 AS LOTA19,
		       TRF.LOTA20 AS LOTA20,
		       TRF.TRFKEY AS AWMSNO,
		       TRF.REFDKY AS REFDKY,
		       TRF.REFDIT AS REFDIT,
		       ' ' AS REFCAT,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
		       NVL(SM.DESC01,' ') AS DESC01,
		       NVL(SM.DESC02,' ') AS DESC02,
		       TRF.ASKU01 AS ASKU01,
		       TRF.ASKU02 AS ASKU02,
		       TRF.ASKU03 AS ASKU03,
		       TRF.ASKU04 AS ASKU04,
		       TRF.ASKU05 AS ASKU05,
		       ' ' AS EANCOD,
		       ' ' AS GTINCD,
		       TRF.SKUG01 AS SKUG01,
		       TRF.SKUG02 AS SKUG02,
		       TRF.SKUG03 AS SKUG03,
		       TRF.SKUG04 AS SKUG04,
		       TRF.SKUG05 AS SKUG05,
		       TRF.GRSWGT AS GRSWGT,
		       TRF.NETWGT AS NETWGT,
		       TRF.WGTUNT AS WGTUNT,
		       TRF.LENGTH AS LENGTH,
		       TRF.WIDTHW AS WIDTHW,
		       TRF.HEIGHT AS HEIGHT,
		       TRF.CUBICM AS CUBICM,
		       TRF.CAPACT AS CAPACT,
		       0 AS QTYORG,
		       ' ' AS SMANDT,
		       ( SELECT NVL(MAX(VGBEL),' ') FROM IFWMS113 WHERE VBELN = TRF.REFDKY AND POSNR = TRF.REFDIT   ) AS SEBELN,
		       ' ' AS SEBELP,
		       ' ' AS SZMBLNO,
		       ' ' AS SZMIPNO,
		       ' ' AS STRAID,
		       ' ' AS SVBELN,
		       ' ' AS SPOSNR,
		       ' ' AS STKNUM,
		       ' ' AS STPNUM,
		       ' ' AS SWERKS,
		       ' ' AS SLGORT,
		       ' ' AS SDATBG,
		       ' ' AS STDLNR,
		       ' ' AS SSORNU,
		       ' ' AS SSORIT,
		       ' ' AS SMBLNR,
		       ' ' AS SZEILE,
		       ' ' AS SMJAHR,
		       ' ' AS SXBLNR,
		       ' ' AS SBKTXT,
		       ' ' AS RCPRSN,
		       TRF.CREDAT AS CREDAT ,
		       TRF.CRETIM,
		       TRF.CREUSR,
		       TRF.LMODAT,
		       TRF.LMOTIM,
		       TRF.LMOUSR
		  FROM TRFIT TRF
		       LEFT OUTER JOIN SKUMA SM
		               ON SM.OWNRKY = #SES_OWNER#
		              AND SM.SKUKEY = TRF.SKUKEY
		       LEFT OUTER JOIN SKUWC SW
		               ON SW.WAREKY = TRF.WARETG
		              AND SW.OWNRKY = #SES_OWNER#
		              AND SW.SKUKEY = TRF.SKUKEY
		       LEFT OUTER JOIN MEASI MS
		               ON MS.WAREKY = TRF.WARETG
		              AND MS.MEASKY = TRF.MEASKY
		              AND MS.UOMKEY = TRF.UOMKEY
		       LEFT OUTER JOIN BZPTN L01NM
		               ON L01NM.PTNRKY = TRF.LOTA01
		              AND L01NM.PTNRTY = 'TM'
		              AND L01NM.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		 WHERE TRF.WARETG = #WAREKY#
		   AND TRF.STATIT = 'NEW'
		   AND TRF.QTYTRF > 0
		   AND TRF.SHPOKY = #SHPOKY#
   		<isNotEmpty property="RANGE_SQL">
		   		$RANGE_SQL$
	    </isNotEmpty>
	</select>
	
	<update id="GR15BAK_UPDATE" parameterClass="Map">
		INSERT INTO RECDH
			(
			   RECVKY,
			   WAREKY,
			   RCPTTY,
			   STATDO,
			   SAPSTS,
			   DOCDAT,
			   DOCCAT,
			   DPTNKY,
			   DRELIN,
			   ARCPTD,
			   OWNRKY,
			   INDRCN,
			   CRECVD,
			   RSNCOD,
			   PUTSTS,
			   USRID1,
			   UNAME1,
			   DEPTID1,
			   DNAME1,
			   USRID2,
			   UNAME2,
			   DEPTID2,
			   DNAME2,
			   USRID3,
			   UNAME3,
			   DEPTID3,
			   DNAME3,
			   USRID4,
			   UNAME4,
			   DEPTID4,
			   DNAME4,
			   DOCTXT,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)
			VALUES(
			   #RECVKY#,
			   #WAREKY#,
			   #RCPTTY#,
			   #STATDO#,
			   #SAPSTS#,
			   #DOCDAT#,
			   #DOCCAT#,
			   #DPTNKY#,
			   #DRELIN#,
			   #ARCPTD#,
			   #OWNRKY#,
			   #INDRCN#,
			   #CRECVD#,
			   #RSNCOD#,
			   #PUTSTS#,
			   #USRID1#,
			   #UNAME1#,
			   #DEPTID1#,
			   #DNAME1#,
			   #USRID2#,
			   #UNAME2#,
			   #DEPTID2#,
			   #DNAME2#,
			   #USRID3#,
			   #UNAME3#,
			   #DEPTID3#,
			   #DNAME3#,
			   #USRID4#,
			   #UNAME4#,
			   #DEPTID4#,
			   #DNAME4#,
			   #DOCTXT#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV',
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV'
			)

	</update>
	
	<update id="GR15BAKSub_UPDATE" parameterClass="Map">
		INSERT INTO RECDI
			(
			   RECVKY,
			   RECVIT,
			   STATIT,
			   SAPSTS,
			   SKUKEY,
			   LOTNUM,
			   AREAKY,
			   LOCAKY,
			   SECTID,
			   TRNUID,
			   PACKID,
			   QTYRCV,
			   QTYDIF,
			   QTYUOM,
			   TRUNTY,
			   MEASKY,
			   UOMKEY,
			   QTPUOM,
			   DUOMKY,
			   QTDUOM,
			   INDRCN,
			   CRECVD,
			   RSNCOD,
			   LOTA01,
			   LOTA02,
			   LOTA03,
			   LOTA04,
			   LOTA05,
			   LOTA06,
			   LOTA07,
			   LOTA08,
			   LOTA09,
			   LOTA10,
			   LOTA11,
			   LOTA12,
			   LOTA13,
			   LOTA14,
			   LOTA15,
			   LOTA16,
			   LOTA17,
			   LOTA18,
			   LOTA19,
			   LOTA20,
			   AWMSNO,
			   REFDKY,
			   REFDIT,
			   REFCAT,
			   REFDAT,
			   DESC01,
			   DESC02,
			   ASKU01,
			   ASKU02,
			   ASKU03,
			   ASKU04,
			   ASKU05,
			   EANCOD,
			   GTINCD,
			   SKUG01,
			   SKUG02,
			   SKUG03,
			   SKUG04,
			   SKUG05,
			   GRSWGT,
			   NETWGT,
			   WGTUNT,
			   LENGTH,
			   WIDTHW,
			   HEIGHT,
			   CUBICM,
			   CAPACT,
			   QTYORG,
			   SMANDT,
			   SEBELN,
			   SEBELP,
			   SZMBLNO,
			   SZMIPNO,
			   STRAID,
			   SVBELN,
			   SPOSNR,
			   STKNUM,
			   STPNUM,
			   SWERKS,
			   SLGORT,
			   SDATBG,
			   STDLNR,
			   SSORNU,
			   SSORIT,
			   SMBLNR,
			   SZEILE,
			   SMJAHR,
			   SXBLNR,
			   RCPRSN,
			   CREDAT,
			   CRETIM,
			   CREUSR,
			   LMODAT,
			   LMOTIM,
			   LMOUSR
			)
			VALUES(
			   #RECVKY#,
			   #RECVIT#,
			   #STATIT#,
			   #SAPSTS#,
			   #SKUKEY#,
			   #LOTNUM#,
			   #AREAKY#,
			   #LOCAKY#,
			   #SECTID#,
			   #TRNUID#,
			   #PACKID#,
			   #QTYRCV#,
			   #QTYDIF#,
			   #QTYUOM#,
			   #TRUNTY#,
			   #MEASKY#,
			   #UOMKEY#,
			   #QTPUOM#,
			   #DUOMKY#,
			   #QTDUOM#,
			   #INDRCN#,
			   #CRECVD#,
			   #RSNCOD#,
			   #LOTA01#,
			   #LOTA02#,
			   #LOTA03#,
			   #LOTA04#,
			   #LOTA05#,
			   #LOTA06#,
			   #LOTA07#,
			   #LOTA08#,
			   #LOTA09#,
			   #LOTA10#,
			   #LOTA11#,
			   #LOTA12#,
			   #LOTA13#,
			   #LOTA14#,
			   #LOTA15#,
			   #LOTA16#,
			   #LOTA17#,
			   #LOTA18#,
			   #LOTA19#,
			   #LOTA20#,
			   #AWMSNO#,
			   #REFDKY#,
			   #REFDIT#,
			   #REFCAT#,
			   #REFDAT#,
			   NVL(#DESC01#, ' '),
			   #DESC02#,
			   #ASKU01#,
			   #ASKU02#,
			   #ASKU03#,
			   #ASKU04#,
			   #ASKU05#,
			   #EANCOD#,
			   #GTINCD#,
			   #SKUG01#,
			   #SKUG02#,
			   #SKUG03#,
			   #SKUG04#,
			   #SKUG05#,
			   #GRSWGT#,
			   #NETWGT#,
			   #WGTUNT#,
			   #LENGTH#,
			   #WIDTHW#,
			   #HEIGHT#,
			   #CUBICM#,
			   #CAPACT#,
			   #QTYORG#,
			   #SMANDT#,
			   #SEBELN#,
			   #SEBELP#,
			   #SZMBLNO#,
			   #SZMIPNO#,
			   #STRAID#,
			   #SVBELN#,
			   #SPOSNR#,
			   #STKNUM#,
			   #STPNUM#,
			   #SWERKS#,
			   #SLGORT#,
			   #SDATBG#,
			   #STDLNR#,
			   #SSORNU#,
			   #SSORIT#,
			   #SMBLNR#,
			   #SZEILE#,
			   #SMJAHR#,
			   #SXBLNR#,
			   #RCPRSN#,
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV',
			   TO_CHAR(SYSDATE, 'YYYYMMDD'),
			   TO_CHAR(SYSDATE, 'HH24MISS'), 
			   'DEV'
			)
	</update>
	
	<select id="GR15BAKR_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT H.RECVKY,
		       I.SEBELN,
		       DT.SHORTX AS RCPTTYNM,
		       I.SSORNU AS SHPOKY,
		       WAREKY,
		       RCPTTY,
		       STATDO,
		       H.SAPSTS,
		       DOCDAT,
		       H.DOCCAT,
		       DPTNKY,
		       ' ' AS DPTNKYNM,
		       ' ' AS WAREKYNM,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS LGORT,
		       ' ' AS LGORTNM,
		       DRELIN,
		       ARCPTD,
		       OWNRKY,
		       H.INDRCN,
		       H.CRECVD,
		       H.RSNCOD,
		       PUTSTS,
		       USRID1,
		       UNAME1,
		       DEPTID1,
		       DNAME1,
		       USRID2,
		       UNAME2,
		       DEPTID2,
		       DNAME2,
		       USRID3,
		       UNAME3,
		       DEPTID3,
		       DNAME3,
		       USRID4,
		       UNAME4,
		       DEPTID4,
		       DNAME4,
		       DOCTXT,
		       H.CREDAT,
		       H.CRETIM,
		       H.CREUSR,
		       H.LMODAT,
		       H.LMOTIM,
		       H.LMOUSR
		FROM   RECDH H
		    LEFT OUTER JOIN RECDI I
		ON H.RECVKY = I.RECVKY
		    LEFT OUTER JOIN DOCTM DT	
		ON DT.DOCUTY = H.RECVKY
		    LEFT OUTER JOIN DOCCM DC	
		ON DC.DOCCAT = '100'
		WHERE H.RECVKY IN ( $RECVKY$ )
	</select>
	
	<select id="GR15BAKIR_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			RECVKY,
			RECVIT,
			STATIT,
			SAPSTS,
			SKUKEY,
			LOTNUM,
			AREAKY,
			LOCAKY,
			SECTID,
			TRNUID,
			PACKID,
			QTYRCV ,
			TRUNC(QTYRCV/QTDUOM) AS BOXQTY,
			MOD(QTYRCV,QTDUOM) AS REMQTY,
			QTYDIF,
			QTYUOM,
			TRUNTY,
			MEASKY,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			INDRCN,
			CRECVD,
			RSNCOD,
			LOTA01,
			LOTA02,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			' ' AS LOTA01NM,
			' ' AS SBKTXT,
			AWMSNO,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			DESC01,
			DESC02,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			QTYORG,
			SMANDT,
			SEBELN,
			SEBELP,
			SZMBLNO,
			SZMIPNO,
			STRAID,
			SVBELN,
			SPOSNR,
			STKNUM,
			STPNUM,
			SWERKS,
			SLGORT,
			SDATBG,
			STDLNR,
			SSORNU,
			SSORIT,
			SMBLNR,
			SZEILE,
			SMJAHR,
			SXBLNR,
			RCPRSN,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
		FROM RECDI
		WHERE RECVKY = #RECVKY#
	</select>
	
	<!-- <select id="GR05_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	 
				' ' AS RECVKY,
				IFWMS113.WAREKY AS WAREKY,
				WH.NAME01 AS WAREKYNM,
				#RCPTTY# AS RCPTTY,
				DT.SHORTX AS RCPTTYNM,
				'NEW' AS STATDO,
				' ' AS SAPSTS,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
				'100' AS DOCCAT,
				DC.SHORTX AS DOCCATNM,
				IFWMS113.KUNNR AS DPTNKY,
				VD.NAME01 AS DPTNKYNM,
				' ' AS DRELIN,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS ARCPTD,
				#SES_OWNER# AS OWNRKY,
				' ' AS INDRCN,
				' ' AS CRECVD,
				' ' AS RSNCOD,
				' ' AS PUTSTS,
				IFWMS113.LGORT AS LGORT,
				' ' AS LGORTNM,
				NVL( IFWMS113.C00103,' ') AS DOCTXT,
				IFWMS113.VBELN AS SEBELN,
				NVL(IFWMS113.C00102,' ') AS CONFIM
		FROM	IFWMS113
				LEFT OUTER JOIN SKUMA SM	ON SM.OWNRKY = #SES_OWNER#
											AND SM.SKUKEY = IFWMS113.SKUKEY
				LEFT OUTER JOIN SKUWC SW	ON SW.WAREKY = #WAREKY#
											AND SW.OWNRKY = #SES_OWNER#
											AND SW.SKUKEY = IFWMS113.SKUKEY
				LEFT OUTER JOIN WAHMA WH	ON WH.WAREKY = IFWMS113.WAREKY
				LEFT OUTER JOIN DOCCM DC	ON DC.DOCCAT = '100'
				LEFT OUTER JOIN DOCTM DT	ON DT.DOCUTY = #RCPTTY#
				LEFT OUTER JOIN BZPTN VD	ON VD.PTNRKY = IFWMS113.KUNNR
		 				AND VD.PTNRTY IN (CASE	WHEN #RCPTTY# IN ('108','109','110','111','115','116') THEN 'CT'
		 										WHEN #RCPTTY# IN ('166') THEN 'TM'
		 									 ELSE 'VD' END)
											AND VD.OWNRKY = #SES_OWNER#
			WHERE	IFWMS113.WERKS = #SES_OWNER#  
			AND		IFWMS113.IFFLG = 'N'
			AND		IFWMS113.WAREKY = #WAREKY# 
			AND		IFWMS113.BWART IN ( CASE WHEN  #RCPTTY# = '109' THEN '220' 
			                              WHEN  #RCPTTY# = '108' THEN '211'
			                              ELSE #RCPTTY#
			                              END )
			AND		IFWMS113.LFIMG - IFWMS113.QTSHP  > 0
		<isNotEmpty property="RANGE_SQL">
		       $RANGE_SQL$
		</isNotEmpty>
		 GROUP BY IFWMS113.VBELN, IFWMS113.WAREKY, IFWMS113.KUNNR, IFWMS113.LGORT, IFWMS113.C00103,IFWMS113.C00102,
		 WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01 
		 ORDER BY IFWMS113.VBELN DESC
	</select>
	
 	<select id="GR05Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		       ' '                 AS RECVKY
		     , ' '                 AS RECVIT
		     , 'NEW'               AS STATIT
		     , ' '                 AS SAPSTS
		     , IFWMS113.SKUKEY     AS SKUKEY
		     , ' '                 AS LOTNUM
		     , ' '                 AS AREAKY
             , (SELECT NVL(LM.SYSLOC,'RCVLOC') FROM DOCTM LM WHERE LM.DOCUTY = #RCPTTY#) 
		     , ' '                 AS SECTID
		     , ' '                 AS TRNUID
		     , ' '                 AS PACKID
		     , IFWMS113.LFIMG - IFWMS113.QTSHP AS ASNQTY
		     , IFWMS113.LFIMG - IFWMS113.QTSHP AS QTYRCV
		     , 0                   AS QTYDIF
		     , IFWMS113.LFIMG - IFWMS113.QTSHP AS QTYUOM
		     , ' '                 AS TRUNTY
		     , NVL(SW.MEASKY,' ')  AS MEASKY
		     , NVL((SELECT UOMKEY FROM UOMMA WHERE UOMKEY = IFWMS113.MEINS), 'EA') AS UOMKEY
		     , NVL(ITFMS.QTPUOM,0) AS QTPUOM
		     , NVL(SM.DUOMKY,' ')  AS DUOMKY
		     , NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM
		     , TRUNC((IFWMS113.LFIMG - IFWMS113.QTSHP)/NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS BOXQTY
		     , MOD(IFWMS113.LFIMG - IFWMS113.QTSHP,NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999)) AS REMQTY
		     , ' '                 AS INDRCN
		     , ' '                 AS CRECVD
		     , ' '                 AS RSNCOD
		     , IFWMS113.KUNNR  AS LOTA01
		     , (SELECT BZ.NAME01 FROM BZPTN BZ WHERE PTNRTY = 'CT' AND BZ.PTNRKY = IFWMS113.KUNNR AND ROWNUM = 1)  AS LOTA01NM 
		     , ' '                 AS LOTA02
		     , ' '                 AS LOTA03
		     , IFWMS113.VBELN      AS LOTA04
		     , SM.SKUG04           AS LOTA05 
		     , '00'                AS LOTA06
		     , ' '                 AS LOTA07
		     , ' '                 AS LOTA08
		     , ' '                 AS LOTA09
		     , ' '                 AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12
		     , TO_CHAR(SYSDATE + SM.RIMDMT,'YYYYMMDD') AS LOTA13
		     , ' '                 AS LOTA14
		     , ' '                 AS LOTA15
		     , 0                   AS LOTA16
		     , 0                   AS LOTA17
		     , 0                   AS LOTA18
		     , 0                   AS LOTA19
		     , 0                   AS LOTA20
		     , ' '                 AS AWMSNO
		     , ' '   			   AS REFDKY
		     , ' '    			   AS REFDIT
		     , ' '                 AS REFCAT
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT
		     , NVL(SM.DESC01,' ')  AS DESC01
		     , NVL(SM.DESC02,' ')  AS DESC02
		     , NVL(SM.ASKU01,' ')  AS ASKU01
		     , NVL(SM.ASKU02,' ')  AS ASKU02
		     , NVL(SM.ASKU03,' ')  AS ASKU03
		     , NVL(SM.ASKU04,' ')  AS ASKU04
		     , NVL(SM.ASKU05,' ')  AS ASKU05
		     , NVL(SM.EANCOD,' ')  AS EANCOD
		     , NVL(SM.GTINCD,' ')  AS GTINCD
		     , NVL(SM.SKUG01,' ')  AS SKUG01
		     , NVL(SM.SKUG02,' ')  AS SKUG02
		     , NVL(SM.SKUG03,' ')  AS SKUG03
		     , NVL(SM.SKUG04,' ')  AS SKUG04
		     , NVL(SM.SKUG05,' ')  AS SKUG05
		     , NVL(SM.GRSWGT,0)    AS GRSWGT
		     , NVL(SM.NETWGT,0)    AS NETWGT
		     , NVL(SM.WGTUNT,' ')  AS WGTUNT
		     , NVL(SM.LENGTH,0)    AS LENGTH
		     , NVL(SM.WIDTHW,0)    AS WIDTHW
		     , NVL(SM.HEIGHT,0)    AS HEIGHT
		     , NVL(SM.CUBICM,0)    AS CUBICM
		     , NVL(SM.CAPACT,0)    AS CAPACT
		     , 0                   AS QTYORG
		     , IFWMS113.MANDT      AS SMANDT
		     , ' '   			   AS SEBELN
		     , ' '                 AS SEBELP
		     , ' '                 AS SZMBLNO
		     , ' '                 AS SZMIPNO
		     , ' '                 AS STRAID
		     , IFWMS113.VBELN      AS SVBELN
		     , IFWMS113.POSNR      AS SPOSNR
		     , ' '                 AS STKNUM
		     , ' '                 AS STPNUM
		     , ' '                 AS SWERKS
		     , ' '    			   AS SLGORT
		     , ' '                 AS SDATBG
		     , ' '                 AS STDLNR
		     , ' '                 AS SSORNU
		     , ' '                 AS SSORIT
		     , ' '                 AS SMBLNR
		     , ' '                 AS SZEILE
		     , ' '                 AS SMJAHR
		     , ' '                 AS SXBLNR
		     , ' '                 AS SBKTXT
		     , ' '                 AS RCPRSN
		  FROM IFWMS113
		       LEFT OUTER JOIN SKUMA SM
		    ON SM.OWNRKY        = #SES_OWNER# 
		   AND SM.SKUKEY        = IFWMS113.SKUKEY
		       LEFT OUTER JOIN SKUWC SW
		    ON SW.WAREKY        = #WAREKY#
		   AND SW.OWNRKY        = #SES_OWNER# 
		   AND SW.SKUKEY        = IFWMS113.SKUKEY
		       LEFT OUTER JOIN MEASI ITFMS
		    ON ITFMS.WAREKY     = #WAREKY#
		   AND ITFMS.MEASKY     = SW.MEASKY
		   AND ITFMS.UOMKEY     = IFWMS113.MEINS
		 WHERE IFWMS113.WERKS = #SES_OWNER#  
		   AND IFWMS113.IFFLG  IN ('N', 'Y')
		   AND IFWMS113.STATUS IN ('A', 'C')
		   AND IFWMS113.BWART  IN ( CASE WHEN  #RCPTTY# = '109' THEN '220' 
			                              WHEN  #RCPTTY# = '108' THEN '211'
			                              ELSE #RCPTTY#
			                              END )
		   AND IFWMS113.LFIMG - IFWMS113.QTSHP > 0
		   AND IFWMS113.VBELN = #SEBELN#
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select> -->
	
	<select id="BARCOD_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	LOTA03,
			    WAREKY,
			    SKUKEY,
			    DESC01,
			    DESC02,
			    PRTDAT,
			    QTDUOM,
			    QTDBOX,
			    QTDREM,
			    QTDPRT,
			    LOTA05,
			    LOTA02,
			    RECVKY,
			    SHPOKY,
			    TASKKY,
			    SADJKY,
			    LOTA14
		FROM	V_SHP_BARCOD
		WHERE	1 = 1
		AND		LOTA03 = #BARCOD#
		AND		WAREKY = #WAREKY#
		AND		SKUKEY = #SKUKEY#
	</select>
	
	<select id="NAME01_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT 
			PTNRKY,
		    NAME01,
		    PTNG01,
		    PTNL01,
		    PTNG02,
		    PTNL02
		FROM V_BZPTN_PV
		WHERE 1 = 1
		  AND PTNRKY = #LOTA02#
	</select>
	
	<select id="AREAKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
        FROM   
        	AREMA 
		WHERE  
			AREAKY = #AREA#
	</select>
	
	<select id="GR20LOG1_MAP" parameterClass="Map" resultClass="DataMap">
		 { call SZP_PLSQL_LOG(#RECVKY# || #SKUKEY#)}
	</select>
	
	<select id="GR20LOG2_MAP" parameterClass="Map" resultClass="DataMap">
		 { call SZP_PLSQL_LOG(#RECVKY# || #SKUKEY#)}
	</select>
	
	<select id="GR01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	PO.WERKS AS OWNRKY,
				NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = PO.WERKS), ' ') AS OWNRNM,
				' ' AS RECVKY,
				PO.EBELN AS SEBELN,
				PO.EBELN AS DOCKEY,
				PO.WAREKY,
				NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = PO.WAREKY),' ') AS WARENM,
				PO.BWART AS RCPTTY,
				NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS RCPTNM,
				PO.EINDT AS ASNDAT,
				NVL((SELECT DOCCAT FROM DOCTM WHERE DOCUTY = PO.BWART), '100') AS DOCCAT,
				TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
				PO.LGORT AS AREAKY,
				NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = PO.WAREKY AND AREAKY = PO.LGORT),' ') AS AREANM,
				PO.LIFNR AS DPTNKY,
				NVL((SELECT NAME01 FROM BZPTN WHERE OWNRKY = #OWNRKY# AND PTNRKY = PO.LIFNR AND PTNRTY = DECODE(SUBSTR(PO.BWART,0,2), '13', 'CT', 'VD')),' ') AS DPTNNM,
			    BZ.NAME01 AS DPTNNM,
			    PO.BWART AS DOCUTY,
	         	PO.VGBEL AS SALCOM,
	         	NVL((SELECT BC.NAME01 FROM BZPTN BC WHERE BC.OWNRKY = #OWNRKY# AND BC.PTNRKY = PO.VGBEL AND BC.PTNRTY = 'CO'), ' ') AS SALCOMNM, 
	         	PO.VGPOS AS SALPLT,
	         	NVL((SELECT BC.NAME01 FROM BZPTN BC WHERE BC.OWNRKY = #OWNRKY# AND BC.PTNRKY = PO.VGPOS AND BC.PTNRTY = 'CT'), ' ') AS SALPLTNM,
			    NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS DOCTNM,
			    'NEW' AS STATDO,
			    NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATDONM,
			    ' ' AS DOCTXT, 
			    <!-- PO.BOX_CNT, -->
			    PO.EBELN
		FROM	IFWMS103 PO
			 LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = #OWNRKY# AND BZ.PTNRTY = DECODE(SUBSTR(PO.BWART,0,2), '13', 'CT', 'VD')
			 LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = #OWNRKY# AND SM.SKUKEY = PO.SKUKEY
		WHERE	PO.WAREKY = #WAREKY#
		  AND 	PO.WERKS  = #OWNRKY# 
	      AND  (PO.MENGE - PO.MENGE_R - PO.MENGE_B) > 0
	      AND 	PO.STATUS IN ('A','C')
	      AND 	PO.IFFLG IN ('N')
	    <isNotEmpty property="RCPTTY">
		  AND 	PO.BWART = #RCPTTY#
	    </isNotEmpty>
        <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		GROUP BY PO.WERKS,
				 PO.EBELN,
				 PO.WAREKY,
				 PO.BWART,
				 PO.EINDT,
				 PO.LIFNR,
			     BZ.NAME01,
			     PO.VGBEL,
			     PO.VGPOS,
			     PO.LGORT
			     <!-- PO.C00110, -->
			     <!-- PO.BOX_CNT -->
		ORDER BY PO.EBELN DESC
	</select>
	
	<select id="GR01Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PO.SKUKEY
		     , SM.DESC01 
		     , SM.DESC02
		     , 'RCVLOC' AS LOCAKY
		     <!-- , NVL(TRIM(SW.LOCARV),NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = PO.BWART),'RCVLOC')) AS LOCAKY -->
		     , ' ' AS TRNUID
		     , PO.MENGE AS QTYORD
		     , PO.MEINS AS UOMKEY
		     , PO.MENGE_R AS MENGER
		     , (PO.MENGE - PO.MENGE_R - PO.MENGE_B) AS QTYRCV1
		     , (PO.MENGE - PO.MENGE_R - PO.MENGE_B) AS QTYRCV
		     , ' '		 AS LOTA01
		     , ' '       AS LOTA02
		     , ' '       AS LOTA03
		     , ' '		 AS LOTA04
		     , ' '		 AS LOTA05
		     , '00'      AS LOTA06
		     , ' ' 		 AS LOTA07
		     , ' '       AS LOTA08
		     , ' '		 AS LOTA09
		     , ' '		 AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12
		     , '99991231' AS LOTA13
		     , ' '       AS LOTA14
		     , ' '       AS LOTA15
		     , ' '		 AS LOTA16
		     , ' '		 AS LOTA17
		     , ' '       AS LOTA18
		     , ' '       AS LOTA19
		     , ' '       AS LOTA20
		     , PO.EBELN AS SEBELN
		     , PO.EBELP AS SEBELP
		     , ' '      AS RECVKY
		     , ' '      AS RECVIT
		     , BZ.NAME01 AS DPTNNM
		     , PO.MANDT
		     , PO.SEQNO
		     , SM.ASKU05
		     , SW.MEASKY AS MEASKY 
		  FROM IFWMS103 PO
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = #OWNRKY# AND SM.SKUKEY = PO.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = PO.WAREKY AND SW.OWNRKY = #OWNRKY# AND SW.SKUKEY = PO.SKUKEY
			   LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = #OWNRKY# AND BZ.PTNRTY = DECODE(SUBSTR(PO.BWART,0,2), '13', 'CT', 'VD')
		 WHERE PO.WAREKY = #WAREKY#
		   AND PO.WERKS = #OWNRKY# 
		   AND PO.EBELN = #SEBELN#
           AND (PO.MENGE - PO.MENGE_R - PO.MENGE_B) > 0
           AND PO.STATUS IN ('A','C')
           AND PO.IFFLG IN ('N')
	</select>
	
	<insert id="GR01_INSERT" parameterClass="Map">
		INSERT INTO RECDH (RECVKY,WAREKY,RCPTTY,STATDO,SAPSTS,
			               DOCDAT,DOCCAT,DPTNKY,DRELIN,ARCPTD,
			               OWNRKY,INDRCN,CRECVD,RSNCOD,PUTSTS,
			               USRID1,UNAME1,DEPTID1,DNAME1,USRID2,
			               UNAME2,DEPTID2,DNAME2,USRID3,UNAME3,
			               DEPTID3,DNAME3,USRID4,UNAME4,DEPTID4,
			               DNAME4,DOCTXT,CREDAT,CRETIM,CREUSR,
			               LMODAT,LMOTIM,LMOUSR,INDBZL,INDARC,UPDCHK) 
			VALUES (#RECVKY#,#WAREKY#,#RCPTTY#,#STATDO#,' ',
				    #DOCDAT#,#DOCCAT#,#DPTNKY#,' ',#ASNDAT#,
			        #OWNRKY#,' ',' ',' ',' ',
			        ' ',' ',' ',' ',' ',
			        ' ',' ',' ',' ',' ',
			        ' ',' ',' ',' ',' ',
			        ' ',NVL( #DOCTXT#, ' ' ),TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,
 				    TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ',0)
	</insert>
	
	<insert id="GR01Sub_INSERT" parameterClass="Map">
		INSERT INTO RECDI (RECVKY,RECVIT,STATIT,SAPSTS,SKUKEY,
						   LOTNUM,AREAKY,LOCAKY,SECTID,TRNUID,
						   PACKID,QTYRCV,QTYDIF,QTYUOM,TRUNTY,
						   MEASKY,UOMKEY,QTPUOM,DUOMKY,QTDUOM,
						   INDRCN,CRECVD,RSNCOD,WORKID,WORKNM,
						   HHTTID,LOTA01,LOTA02,LOTA03,LOTA04,
						   LOTA05,LOTA06,LOTA07,LOTA08,LOTA09,
						   LOTA10,LOTA11,LOTA12,LOTA13,LOTA14,
						   LOTA15,LOTA16,LOTA17,LOTA18,LOTA19,
						   LOTA20,AWMSNO,REFDKY,REFDIT,REFCAT,
						   REFDAT,DESC01,DESC02,ASKU01,ASKU02,
						   ASKU03,ASKU04,ASKU05,EANCOD,GTINCD,
						   SKUG01,SKUG02,SKUG03,SKUG04,SKUG05,
						   GRSWGT,NETWGT,WGTUNT,LENGTH,WIDTHW,
						   HEIGHT,CUBICM,CAPACT,QTYORG,SMANDT,
						   SEBELN,SEBELP,SZMBLNO,SZMIPNO,STRAID,
						   SVBELN,SPOSNR,STKNUM,STPNUM,SWERKS,
						   SLGORT,SDATBG,STDLNR,SSORNU,SSORIT,
						   SMBLNR,SZEILE,SMJAHR,SXBLNR,SBKTXT,
						   RCPRSN,CREDAT,CRETIM,CREUSR,LMODAT,
						   LMOTIM,LMOUSR,INDBZL,INDARC,UPDCHK) 
			VALUES (#RECVKY#,#RECVIT#,' ',' ',#SKUKEY#,
					' ',NVL(#AREAKY#, ' '), #LOCAKY#,' ',NVL(#TRNUID#,' '),
				    ' ',#QTYRCV#,0,0,' ',
					'STD',#UOMKEY#,0,' ',0,
					' ',' ',' ',' ',' ',
					' ',#LOTA01#,#LOTA02#,#LOTA03#,#LOTA04#,
					#LOTA05#,#LOTA06#,NVL( #LOTA07#, ' ' ),#LOTA08#,NVL( #LOTA09#, ' ' ),
					#LOTA10#,#LOTA11#,#LOTA12#,#LOTA13#,' ',
					' ',0,0,0,0,
					0,' ',NVL(#REFDKY#,' '),NVL(#REFDIT#,' '),NVL(#REFCAT#,' '),
					#ASNDAT#,#DESC01#,#DESC02#,' ',' ',
				    ' ',' ',' ',' ',' ',
					' ',' ',' ',' ',' ',
					0,0,' ',0,0,
					0,0,0,0,' ',
					#SEBELN#,#SEBELP#,' ',' ',' ',
					' ',' ',' ',' ',' ',
					' ',' ',' ',' ',' ',
					' ',' ',' ',' ',' ',
					' ',TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,
 				    TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#SES_USER_ID#,' ',' ',0)
	</insert>
	
	<select id="GR_AIRWMS_DOCUMENT_PROCESS_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_AIRWMS_DOCUMENT_PROCESS(#DOCCAT#, #DOCUKY#, NVL(#DOCUIT#, ' '), NVL(#DOFLAG#, ' '), #SES_USER_ID#) }
	</select>
	
	<select id="GR01PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_RECEIPT_PROCESS(#RECVKY#, #SES_USER_ID#) }
	</select>
	
	<!-- <select id="GR01Sub_VALIDATION" parameterClass="Map" resultClass="DataMap">
	 	SELECT
			CASE
		         WHEN SM.SKUKEY IS NOT NULL THEN 'MASTER_M0669' || ' ' || STD.SKUKEY
		         WHEN SW.IBPROT = 'V' THEN 'VALID_M1559' || ' ' || STD.IBPROT      
		         WHEN BZ.PROCHA = 'V' THEN 'VALID_M1559' || ' ' || STD.PROCHA     
		         WHEN MI.MEASKY IS NOT NULL THEN 'VALID_M1556' || ' ' || STD.MEASKY 
		         WHEN BZ.PTNRKY IS NOT NULL THEN 'VALID_M1558' || ' ' || STD.PTNRKY 
		         ELSE 'OK'
		       END AS MSG
		FROM   ( 
					$VALIDATION_SQL$ 
                ) STD 
		       LEFT OUTER JOIN SKUMA SM 
		      		ON SM.OWNRKY = #SES_OWNER# AND SM.SKUKEY = STD.SKUKEY
		       LEFT OUTER JOIN SKUWC SW	
		            ON SW.WAREKY = STD.WAREKY 
              	   AND SW.OWNRKY = STD.OWNRKY 
              	   AND SW.SKUKEY = STD.SKUKEY
		       LEFT OUTER JOIN MEASI MI	
		       		ON MI.WAREKY = STD.WAREKY 
              	   AND MI.MEASKY = STD.MEASKY 
              	   AND MI.UOMKEY = STD.UOMKEY
               LEFT OUTER JOIN BZPTN BZ 
               		ON BZ.PTNRKY = STD.PTNRKY AND BZ.PTNRTY = STD.PTNRTY
	 </select> -->
	
	<select id="VALIDCHECK_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) AS CNT 
        FROM IFWMS103 PO
             INNER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
             INNER JOIN SKUWC SW ON SW.WAREKY = PO.WAREKY AND SW.OWNRKY = 'IMV' AND SW.SKUKEY = PO.SKUKEY
             INNER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'VD'
       WHERE PO.MANDT = #MANDT#
         AND PO.SEQNO = #SEQNO# 
         AND (SW.IBPROT = 'V' OR BZ.PROCHA = 'V' OR (PO.MENGE-PO.MENGE_R) <![CDATA[ < ]]> 0  OR PO.STATUS = 'D')
	</select>
	
	<select id="GR02_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			' ' AS RECVKY,
			PO.EBELN AS SEBELN,
			PO.WAREKY,
			NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = PO.WAREKY),' ') AS WARENM,
			PO.BWART AS RCPTTY,
			NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS RCPTNM,
			PO.EINDT AS ASNDAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			PO.LGORT AS AREAKY,
			NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = PO.WAREKY AND AREAKY = PO.LGORT),' ') AS AREANM,
			PO.LIFNR AS DPTNKY,
		    BZ.NAME01 AS DPTNNM,
		    PO.BWART AS DOCUTY,
		    NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS DOCTNM,
		    'NEW' AS STATDO,
		    NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATDONM,
		    PO.C00110 AS DOCTXT,
		    PO.DEPTID4,
		    PO.USRID3,
<!--             NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = PO.DEPTID4),' ') AS DEPTID4NM -->
            NVL((SELECT NAME01 FROM AREMA WHERE WAREKY = PO.LIFNR AND AREAKY = PO.DEPTID4),' ') AS DEPTID4NM
		FROM IFWMS103 PO
			 LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'VD'
			 LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		WHERE PO.WAREKY = #WAREKY#
		  AND PO.WERKS  = #SES_OWNER# 
		  AND PO.LGORT  = #AREAKY#
          AND PO.BWART IN ('101','102','103')
          AND PO.MENGE - PO.MENGE_R > 0
          AND PO.STATUS IN ('A','C')
          AND PO.IFFLG IN ('N','Y')
        <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL1">
			OR $RANGE_SQL1$
		</isNotEmpty>
		GROUP BY PO.EBELN,
			     PO.WAREKY,
			     PO.BWART,
			     PO.EINDT,
				 PO.LGORT,
				 PO.LIFNR,
		    	 BZ.NAME01,
		   	 	 PO.BWART,
		   	     PO.C00110,
           	     PO.DEPTID4,
           	     PO.USRID3
		ORDER BY PO.EBELN DESC
	</select>
	
	<select id="GR02Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PO.SKUKEY
		     , SM.DESC01 
		     , SM.DESC02
		     , ('RCV'||#AREAKY#) AS LOCAKY
		     <!-- , NVL(TRIM(SW.LOCARV),NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = PO.BWART),'RCVLOC')) AS LOCAKY -->
		     , ' ' AS TRNUID
		     , PO.MENGE AS QTYORD
		     , PO.MEINS AS UOMKEY
		     , PO.MENGE AS QTYRCV
		     , PO.LIFNR  AS LOTA01
		     , ' '       AS LOTA02
		     , ' '       AS LOTA03
		     , PO.MBLNO  AS LOTA04
		     , PO.MIPNO  AS LOTA05
		     , '00'      AS LOTA06
		     , CASE WHEN PO.C00107 = 'IMV' THEN PO.USRID3 ELSE ' ' END AS LOTA07
		     , ' ' AS LOTA08
		     , CASE WHEN PO.C00107 = 'WMS' THEN PO.EBELN ELSE ' ' END AS LOTA09
		     , PO.C00101 AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12
		     , '99991231' AS LOTA13
		     , CASE WHEN PO.C00107 = 'IMV' THEN PO.DEPTID3 ELSE ' ' END AS LOTA14
		     , ' '       AS LOTA15
		     , PO.N00101 AS LOTA16
		     , PO.N00103 AS LOTA17
		     , ' '       AS LOTA18
		     , ' '       AS LOTA19
		     , ' '       AS LOTA20
		     , PO.EBELN AS SEBELN
		     , PO.EBELP AS SEBELP
		     , ' '      AS RECVKY
		     , ' '      AS RECVIT
		     , BZ.NAME01 AS DPTNNM
		     , PO.MANDT
		     , PO.SEQNO
		     , PO.USRID3
		     , SM.SKUG05
		  FROM IFWMS103 PO
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = PO.WAREKY AND SW.OWNRKY = 'IMV' AND SW.SKUKEY = PO.SKUKEY
			   LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'VD'
		 WHERE PO.WAREKY = #WAREKY#
		   AND PO.WERKS = #SES_OWNER# 
		   AND PO.EBELN = #SEBELN#
		   AND PO.LGORT = #AREAKY#
           AND PO.BWART IN ('101','102','103')
           AND PO.MENGE - PO.MENGE_R > 0
           AND PO.STATUS IN ('A','C')
           AND PO.IFFLG IN ('N','Y')
	</select>
	
	<select id="GR03_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			' ' AS RECVKY,
			PO.EBELN AS SEBELN,
			PO.WAREKY,
			NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = PO.WAREKY),' ') AS WARENM,
			PO.BWART AS RCPTTY,
			NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS RCPTNM,
			PO.EINDT AS ASNDAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			PO.LGORT AS AREAKY,
			NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = PO.WAREKY AND AREAKY = PO.LGORT),' ') AS AREANM,
			PO.LIFNR AS DPTNKY,
		    BZ.NAME01 AS DPTNNM,
		    PO.BWART AS DOCUTY,
		    NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS DOCTNM,
		    'NEW' AS STATDO,
		    NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATDONM,
		    PO.C00110 AS DOCTXT
		FROM IFWMS103 PO
		     INNER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'CT'
		     INNER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		WHERE PO.WAREKY = #WAREKY#
		  AND PO.WERKS  = #SES_OWNER# 
		  AND PO.LGORT  = #AREAKY#
          AND PO.BWART = '104'
          AND PO.MENGE - PO.MENGE_R > 0
          AND PO.STATUS IN ('A','C')
          AND PO.IFFLG IN ('N','Y')
        <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		GROUP BY PO.EBELN,
			     PO.WAREKY,
			     PO.BWART,
		     	 PO.EINDT,
			     PO.LGORT,
			     PO.LIFNR,
		         BZ.NAME01,
		         PO.BWART,
		         PO.C00110
	</select>
	
	<select id="GR03Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PO.SKUKEY
		     , SM.DESC01 
		     , SM.DESC02
		     , ('RCV'||#AREAKY#) AS LOCAKY
		     <!-- , NVL(TRIM(SW.LOCARV),NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = PO.BWART),'RCVLOC')) AS LOCAKY -->
		     , ' ' AS TRNUID
		     , PO.MENGE AS QTYORD
		     , PO.MEINS AS UOMKEY
		     , PO.MENGE AS QTYRCV
		     , PO.LIFNR  AS LOTA01
		     , ' '       AS LOTA02
		     , ' '       AS LOTA03
		     , PO.MBLNO  AS LOTA04
		     , PO.MIPNO  AS LOTA05
		     , '00'      AS LOTA06
		     , CASE WHEN PO.C00107 = 'IMV' THEN PO.EBELN ELSE ' ' END AS LOTA07
		     , ' '       AS LOTA08
		     , CASE WHEN PO.C00107 = 'WMS' THEN PO.EBELN ELSE ' ' END AS LOTA09
		     , PO.C00101 AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12
		     , '99991231' AS LOTA13
		     , ' '       AS LOTA14
		     , ' '       AS LOTA15
		     , PO.N00101 AS LOTA16
		     , PO.N00103 AS LOTA17
		     , ' '       AS LOTA18
		     , ' '       AS LOTA19
		     , ' '       AS LOTA20
		     , PO.EBELN AS SEBELN
		     , PO.EBELP AS SEBELP
		     , ' '      AS RECVKY
		     , ' '      AS RECVIT
		     , BZ.NAME01 AS DPTNNM
		     , PO.MANDT
		     , PO.SEQNO
		  FROM IFWMS103 PO
		       INNER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		       INNER JOIN SKUWC SW ON SW.WAREKY = PO.WAREKY AND SW.OWNRKY = 'IMV' AND SW.SKUKEY = PO.SKUKEY
			   INNER JOIN BZPTN BZ ON BZ.PTNRKY = PO.LIFNR AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'CT'
		 WHERE PO.WAREKY = #WAREKY#
		   AND PO.WERKS = #SES_OWNER# 
		   AND PO.EBELN = #SEBELN#
		   AND PO.LGORT = #AREAKY#
           AND PO.BWART = '104'
           AND PO.MENGE - PO.MENGE_R > 0
           AND PO.STATUS IN ('A','C')
           AND PO.IFFLG IN ('N','Y')
	</select>
	
	<select id="GR04_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			' ' AS RECVKY,
			PO.EBELN AS SEBELN,
			PO.WAREKY,
			NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = PO.WAREKY),' ') AS WARENM,
			PO.BWART AS RCPTTY,
			NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS RCPTNM,
			PO.EINDT AS ASNDAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			PO.LGORT AS AREAKY,
			NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = PO.WAREKY AND AREAKY = PO.LGORT),' ') AS AREANM,
			PO.LIFNR AS DPTNKY,
		    BZ.NAME01 AS DPTNNM,
		    PO.BWART AS DOCUTY,
		    NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS DOCTNM,
		    'NEW' AS STATDO,
		    NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATDONM,
		    PO.C00110 AS DOCTXT
		FROM IFWMS103 PO
		     LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = PO.VGPOS AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'CT'
		     LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		WHERE PO.WAREKY = #WAREKY#
		  AND PO.WERKS  = #SES_OWNER# 
		  AND PO.LGORT  = #AREAKY#
          AND PO.BWART IN ('107')
          AND PO.MENGE - PO.MENGE_R > 0
          AND PO.STATUS IN ('A','C')
          AND PO.IFFLG IN ('N','Y')
        <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		GROUP BY PO.EBELN,
			     PO.WAREKY,
			     PO.BWART,
			     PO.EINDT,
			     PO.LGORT,
			     PO.LIFNR,
		         BZ.NAME01,
		         PO.BWART,
		         PO.C00110
		ORDER BY PO.EBELN DESC
	</select>
	
	<select id="GR04Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PO.SKUKEY
		     , SM.DESC01 
		     , SM.DESC02
		     , ('RTN'||#AREAKY#) AS LOCAKY
		     , ' ' AS TRNUID
		     , PO.MENGE AS QTYORD
		     , PO.MEINS AS UOMKEY
		     , PO.MENGE AS QTYRCV
		     , PO.LIFNR  AS LOTA01
		     , ' '       AS LOTA02
		     , ' '       AS LOTA03
		     , PO.MBLNO  AS LOTA04
		     , PO.MIPNO  AS LOTA05
		     , '10'      AS LOTA06
		     , CASE WHEN PO.C00107 = 'IMV' THEN PO.EBELN ELSE ' ' END AS LOTA07
		     , ' '       AS LOTA08
		     , CASE WHEN PO.C00107 = 'WMS' THEN PO.EBELN ELSE ' ' END AS LOTA09
		     , PO.C00101 AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12
		     , '99991231' AS LOTA13
		     , ' '       AS LOTA14
		     , ' '       AS LOTA15
		     , PO.N00101 AS LOTA16
		     , PO.N00103 AS LOTA17
		     , ' '       AS LOTA18
		     , ' '       AS LOTA19
		     , ' '       AS LOTA20
		     , PO.EBELN AS SEBELN
		     , PO.EBELP AS SEBELP
		     , ' '      AS RECVKY
		     , ' '      AS RECVIT
		     , BZ.NAME01 AS DPTNNM
		     , PO.MANDT
		     , PO.SEQNO
		     , SM.SKUG05
		  FROM IFWMS103 PO
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = PO.WAREKY AND SW.OWNRKY = 'IMV' AND SW.SKUKEY = PO.SKUKEY
			   LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = PO.VGPOS AND BZ.OWNRKY = 'IMV' AND BZ.PTNRTY = 'CT'
		 WHERE PO.WAREKY = #WAREKY#
		   AND PO.WERKS = #SES_OWNER# 
		   AND PO.EBELN = #SEBELN#
		   AND PO.LGORT = #AREAKY#
           AND PO.BWART IN ('107')
           AND PO.MENGE - PO.MENGE_R > 0
           AND PO.STATUS IN ('A','C')
           AND PO.IFFLG IN ('N','Y')
	</select>
	
	<select id="GR09VAL_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		  FROM (
		         SELECT CASE WHEN TRIM(RH.INDRCN) IS NOT NULL
		                          THEN 'MASTER_M0690' || ' ' || STD.RECVKY
		                     ELSE 'OK'
		                  END AS MSG
		           FROM ( $VALIDATION_SQL$ ) STD 
		                LEFT OUTER JOIN RECDH RH ON RH.RECVKY = STD.RECVKY
		                LEFT OUTER JOIN RECDI RI ON RI.RECVKY = STD.RECVKY
		       )
		 WHERE MSG != 'OK'
   </select>
   
	<select id="GR18_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT RH.OWNRKY, NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = RH.OWNRKY),' ') AS OWNRNM 
    		 , RH.WAREKY, NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = RH.WAREKY),' ') AS WARENM 
		     , RI.AREAKY, NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = RH.WAREKY AND AREAKY = RI.AREAKY),' ') AS AREANM 
		     , RH.DOCDAT, RI.REFDAT AS ASNDAT 
		     , RH.RECVKY, RI.RECVIT, RI.SEBELN, RI.SEBELP 
		     , RH.RCPTTY, NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = RH.RCPTTY),' ') AS RCPTNM 
		     , RI.INDRCN, RI.CRECVD 
		     , RH.DPTNKY, VD.PTNRKY
		     , VD.NAME01 AS NAME01
		     , RI.SKUKEY, SM.DESC01, SM.DESC02 
		     , RI.QTYRCV, RI.UOMKEY 
		     , RI.LOTA01, RI.LOTA02, RI.LOTA03, RI.LOTA04, RI.LOTA05 
		     , RI.LOTA06, NVL((SELECT CDESC1 FROM CMCDV CV WHERE CV.CMCDKY = 'LOTA06' AND CV.CMCDVL = RI.LOTA06),' ') AS LOTA06NM
		     , RI.LOTA07, RI.LOTA08, RI.LOTA09, RI.LOTA10 
		     , RI.LOTA11, RI.LOTA12, RI.LOTA13, RI.LOTA14, RI.LOTA15 
		     , RI.LOTA16, RI.LOTA17, RI.LOTA18, RI.LOTA19, RI.LOTA20 
		     , RI.CREDAT, RI.CRETIM, RI.CREUSR, NVL((SELECT NMLAST FROM USRMA WHERE USERID = RI.CREUSR),' ') AS CUSRNM 
		     , RI.LMODAT, RI.LMOTIM, RI.LMOUSR, NVL((SELECT NMLAST FROM USRMA WHERE USERID = RI.LMOUSR),' ') AS LUSRNM
		     , RH.DEPTID4, ' ' AS DEPTID4NM
		     , RH.RSNCOD AS RSNCOD
		     , RI.RCPRSN AS RCPRSN
		     , RH.DOCCAT
		     , NVL((SELECT SHORTX FROM RSNCD WHERE OWNRKY = RH.OWNRKY AND DOCCAT = RH.DOCCAT AND DOCUTY = 'CRCV' AND RSNCOD = RH.RSNCOD),' ')  AS RSNCDNM
		  FROM RECDH RH 
		       INNER JOIN RECDI RI ON RI.RECVKY = RH.RECVKY 
		       INNER JOIN SKUMA SM ON SM.OWNRKY = RH.OWNRKY AND SM.SKUKEY = RI.SKUKEY
		       INNER JOIN DOCTM DT ON DT.DOCUTY = RH.RCPTTY
		       LEFT OUTER JOIN BZPTN VD ON VD.OWNRKY = RH.OWNRKY AND VD.PTNRKY = RH.DPTNKY AND VD.PTNRTY = DT.CDOCTY
		 WHERE 1 = 1  
		   AND RH.WAREKY = #WAREKY# 
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		<isEqual property="Opt" compareValue="1">
			AND TRIM(RI.INDRCN) IS NULL
		</isEqual>
		<isEqual property="Opt" compareValue="2">
			AND TRIM(RI.INDRCN) IS NOT NULL
		</isEqual>
	</select>
   
   
	
	<select id="GOODS_RECEIPT_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		  FROM (
		         SELECT CASE WHEN NOT EXISTS (SELECT 1 FROM IFWMS103 WHERE WERKS = STD.OWNRKY AND EBELN = STD.SEBELN AND EBELP = STD.SEBELP AND IFFLG IN ('Y','N') AND STATUS IN ('A','C'))
		                          THEN 'IN_M0125†' || STD.SEBELN || '/' || STD.SEBELP
		                     WHEN NVL((SELECT MAX(MENGE - MENGE_R) FROM IFWMS103 WHERE WERKS = STD.OWNRKY AND EBELN = STD.SEBELN AND EBELP = STD.SEBELP AND IFFLG IN ('Y','N') AND STATUS IN ('A','C') <!-- AND BWART = #RCPTTY# -->),0) - STD.QTYRCV &lt; 0
		                          THEN 'IN_M0078†' || STD.SEBELN || '/' || STD.SEBELP
		                     WHEN NOT EXISTS (SELECT PROCHA FROM BZPTN WHERE PTNRTY = 'VD' AND PTNRKY = STD.DPTNKY)
		                          THEN 'VALID_M0205†' || STD.DPTNKY
<!-- 		                     WHEN STD.RCPTTY NOT IN ('104','105','107') AND NVL((SELECT PROCHA FROM BZPTN WHERE OWNRKY = STD.OWNRKY AND PTNRTY = NVL((SELECT CDOCTY FROM DOCTM WHERE DOCUTY = STD.RCPTTY),'VD') AND PTNRKY = STD.DPTNKY),'V') = 'V' -->
<!-- 		                          THEN 'IN_M0127†' || STD.DPTNKY || '/' || NVL((SELECT NAME01 FROM BZPTN WHERE OWNRKY = STD.OWNRKY AND PTNRTY = NVL((SELECT CDOCTY FROM DOCTM WHERE DOCUTY = STD.RCPTTY),'VD') AND PTNRKY = STD.DPTNKY),'X') -->
		                     WHEN NOT EXISTS (SELECT 1 FROM SKUMA WHERE OWNRKY = STD.OWNRKY AND SKUKEY = STD.SKUKEY)
		                          THEN 'VALID_M0206†' || STD.SKUKEY
<!-- 		                     WHEN NVL((SELECT IBPROT FROM SKUWC WHERE WAREKY = STD.WAREKY AND OWNRKY = STD.OWNRKY AND SKUKEY = STD.SKUKEY),'V') = 'V' -->
<!-- 		                          THEN 'IN_M0128†' || STD.SKUKEY || '/' || NVL((SELECT DESC01 FROM SKUMA WHERE OWNRKY = STD.OWNRKY AND SKUKEY = STD.SKUKEY),'X') -->
<!-- 		                     WHEN NOT EXISTS (SELECT 1 FROM MEASI WHERE WAREKY = STD.WAREKY AND MEASKY = STD.OWNRKY || STD.SKUKEY AND UOMKEY = STD.UOMKEY) -->
<!-- 		                          THEN 'IN_M0129†' || STD.UOMKEY || '/' || NVL((SELECT DUOMKY FROM SKUMA WHERE OWNRKY = STD.OWNRKY AND SKUKEY = STD.SKUKEY),'X') -->
		                     WHEN NOT EXISTS (SELECT 1 FROM LOCMA WHERE WAREKY = STD.WAREKY AND LOCAKY = STD.LOCAKY)
		                          THEN 'IN_M0130†' || STD.LOCAKY
		                     ELSE 'OK'
		                  END AS RESULTMSG
		           FROM (
		                  $APPEND_QUERY$
		                ) STD
		       )
		 WHERE RESULTMSG != 'OK'
	</select>
	
	<select id="GR05_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			' ' AS RECVKY,
			PO.EBELN AS SEBELN,
			PO.WAREKY,
			NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = PO.WAREKY),' ') AS WARENM,
			PO.BWART AS RCPTTY,
			NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS RCPTNM,
			PO.EINDT AS ASNDAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			PO.LGORT AS AREAKY,
			NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = PO.WAREKY AND AREAKY = PO.LGORT),' ') AS AREANM,
			PO.LIFNR AS DPTNKY,
		    NVL(US.NMLAST,' ') AS DPTNNM,
		    PO.BWART AS DOCUTY,
         	' ' AS SALCOM,
         	' ' AS SALCOMNM, 
         	' ' AS SALPLT,
         	' ' AS SALPLTNM,
		    NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = PO.BWART),' ') AS DOCTNM,
		    'NEW' AS STATDO,
		    NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATDONM,
		    PO.C00110 AS DOCTXT, 
		    PO.BOX_CNT
		FROM IFWMS103 PO
			 LEFT OUTER JOIN USRMA US ON US.USERID = PO.LIFNR
			 LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		WHERE PO.WAREKY = #WAREKY#
		  AND PO.WERKS  = #SES_OWNER# 
		  AND PO.LGORT  = #AREAKY#
	      AND PO.BWART IN ('104','105')
	      AND PO.MENGE - PO.MENGE_R > 0
	      AND PO.STATUS IN ('A','C')
	      AND PO.IFFLG IN ('N','Y')
        <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		GROUP BY PO.EBELN,
			PO.WAREKY,
			PO.BWART,
			PO.EINDT,
			PO.LGORT,
			PO.LIFNR,
		    NVL(US.NMLAST,' '),
		    PO.BWART,
		    PO.C00110,
		    PO.BOX_CNT
		ORDER BY PO.EBELN DESC
	</select>
	
	<select id="GR05Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PO.SKUKEY
		     , SM.DESC01 
		     , SM.DESC02
		     , ('RTN'||#AREAKY#) AS LOCAKY
		     <!-- , NVL(TRIM(SW.LOCARV),NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = PO.BWART),'RCVLOC')) AS LOCAKY -->
		     , ' ' AS TRNUID
		     , PO.MENGE AS QTYORD
		     , PO.MEINS AS UOMKEY
		     , PO.MENGE AS QTYRCV
		     , PO.LIFNR  AS LOTA01
		     , NVL((SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'VD' AND PTNRKY = PO.LIFNR),' ') AS LOTA01NMN
		     , ' '       AS LOTA02
		     , ' '       AS LOTA03
		     , PO.MBLNO  AS LOTA04
		     , PO.MIPNO  AS LOTA05
		     , '10'      AS LOTA06
		     , CASE WHEN PO.C00107 = 'IMV' THEN PO.EBELN ELSE ' ' END AS LOTA07
		     , ' '       AS LOTA08
		     , CASE WHEN PO.C00107 = 'WMS' THEN PO.EBELN ELSE ' ' END AS LOTA09
		     , PO.C00101 AS LOTA10
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA11
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12
		     , '99991231' AS LOTA13
		     , ' '       AS LOTA14
		     , ' '       AS LOTA15
		     , PO.N00101 AS LOTA16
		     , PO.N00103 AS LOTA17
		     , ' '       AS LOTA18
		     , ' '       AS LOTA19
		     , ' '       AS LOTA20
		     , PO.EBELN AS SEBELN
		     , PO.EBELP AS SEBELP
		     , ' '      AS RECVKY
		     , ' '      AS RECVIT
		     , NVL(US.NMLAST,' ') AS DPTNNM
		     , PO.MANDT
		     , PO.SEQNO
		     , SM.SKUG05
		  FROM IFWMS103 PO
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = 'IMV' AND SM.SKUKEY = PO.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = PO.WAREKY AND SW.OWNRKY = 'IMV' AND SW.SKUKEY = PO.SKUKEY
			   LEFT OUTER JOIN USRMA US ON US.USERID = PO.LIFNR
		 WHERE PO.WAREKY = #WAREKY#
		   AND PO.WERKS = #SES_OWNER# 
		   AND PO.EBELN = #SEBELN#
		   AND PO.LGORT = #AREAKY#
           AND PO.BWART IN ('104','105')
           AND PO.MENGE - PO.MENGE_R > 0
           AND PO.STATUS IN ('A','C')
           AND PO.IFFLG IN ('N','Y')
	</select>
</sqlMap>