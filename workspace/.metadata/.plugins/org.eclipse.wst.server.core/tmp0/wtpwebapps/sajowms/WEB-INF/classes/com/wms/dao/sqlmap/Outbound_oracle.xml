<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="WmsOutbound">
	<typeAlias alias="DataMap" type="com.common.bean.DataMap" />
	<typeAlias alias="StringMap" type="com.common.util.StringMap" />
	
	<select id="WAREKYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT WAREKY AS VALUE_COL
		    ,  NAME01 AS TEXT_COL
		FROM WAHMA
	</select>
	
	<select id="RSNCDCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT RSNCOD AS VALUE_COL
		    ,  SHORTX AS TEXT_COL
		FROM RSNCD
		WHERE OWNRKY = 'CMAS'
		AND   DOCCAT = '300'
	</select>
	
	<select id="OWNRKY_OBJECT" parameterClass="Map" resultClass="java.lang.String">
		SELECT DISTINCT ADDR01 FROM WAHMA WHERE WAREKY = #WAREKY#
	</select>
	
	<select id="SHPDH_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT 'S/O 수량이 변경되어 할당할 수 없습니다 [' || IF.VBELN || '-' || IF.POSNR || ']' AS MSG
		  FROM ( $VALIDATION_SQL$ ) QT
		       INNER JOIN IFWMS113 IF
		               ON IF.MANDT = QT.SMANDT
		              AND IF.VBELN = QT.SVBELN
		              AND IF.POSNR = QT.SPOSNR
		              AND IF.IFFLG IN ('Y','N')
			      AND IF.WERKS = (SELECT DISTINCT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY# AND ROWNUM = 1)
		 WHERE QT.QTSHPO > IF.LFIMG - IF.N00101 - IF.QTSHP
		   AND ROWNUM = 1
	</select>
	
	<select id="DL01DOCCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			DOCUTY AS VALUE_COL,
			SHORTX AS TEXT_COL 
		FROM DOCTM 
		WHERE DOCCAT='200'
		<isEqual property="MENUID" compareValue="DL01">
			AND DOCUTY IN ('201', '203', '220', '230') 
		</isEqual>
		<isEqual property="MENUID" compareValue="DL11">
			AND DOCUTY IN ('231', '204', '207') 
		</isEqual>
		
	</select>
	
	<select id="DL01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT IFW.VBELN AS KEY,
		       ' ' AS SHPOKY,
				NVL((SELECT SUM(LFIMG) FROM IFWMS113 WHERE VGBEL = IFW.VBELN AND BWART = '231' AND STATUS != 'D'),0) AS LFIMG,
				NVL((SELECT SUM(QTSHP) FROM IFWMS113 WHERE VGBEL = IFW.VBELN AND BWART = '231' AND STATUS != 'D'),0) AS QTSHP,
				<!--  NVL((SELECT SUM(LFIMG) FROM IFWMS113 WHERE VGBEL = IFW.VBELN AND BWART = '231' AND STATUS != 'D'),0) - NVL((SELECT SUM(QTSHP) FROM IFWMS113 WHERE VGBEL = IFW.VBELN AND BWART = '231' AND STATUS != 'D'),0) AS CHKVAL,-->
				CASE WHEN  BWART = '230'  THEN (SELECT COUNT(*) FROM IFWMS113 IF113 WHERE IF113.VGBEL = IFW.VBELN AND IF113.STATUS !='D' AND ( IF113.QTSHP > 0 OR IF113.LFIMG = 0) )ELSE 1 END AS CHKVAL,
		        IFW.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       IFW.WAREKY AS SHIPTO,
		       WH.NAME01 AS SHIPTONM,
		       'NEW' AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       F_DEF_ALSTKY(IFW.WAREKY) AS ALSTKY,		
		       IFW.KUNAG AS DPTNKY,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'CT' AND PTNRKY = IFW.KUNAG AND ROWNUM = 1) AS DPTNKYNM,		
		       IFW.KUNNR AS PTRCVR,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'CT' AND PTNRKY = IFW.KUNNR AND ROWNUM = 1) AS PTRCVRNM,			   
			   ' ' AS VEHINO, 
			   ' ' AS DRIVER,			   
			   ' ' AS PGRC01,			   			  
		       ' ' AS PGRC02,
		       ' ' AS PGRC03,
		       ' ' AS PGRC04,
		       ' ' AS PGRC05,
		       ' ' AS PTNBLK,
		       #SES_OWNER# AS OWNRKY,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       '200' AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       IFW.BWART AS SHPMTY,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = IFW.BWART) AS SHPMTYNM,
		       IFW.BWART AS DOCUTY,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = IFW.BWART) AS DOCUTYNM,
		       MAX(IFW.WADAT) AS RQSHPD,
		       IFW.ZLIKP_ERDAT AS RQARRD,
		       IFW.ZLIKP_ERZET AS RQARRT,
		       IFW.VBELN AS SVBELN,
		       ' ' AS OPURKY,
		       MAX(IFW.VTEXT) AS DOCTXT,
		       #LOTA05# AS LOTA05,
		       #PROGID# AS PROGID,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM,
		       #SES_USER_ID# AS CREUSR,
		       (SELECT NAME01 FROM USRMA WHERE USERID = #SES_USER_ID# AND ROWNUM =1 ) AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
		       TO_CHAR(SYSDATE,'HH24MISS') AS LMOTIM,
		       #SES_USER_ID# AS LMOUSR,
		       (SELECT NAME01 FROM USRMA WHERE USERID = #SES_USER_ID# AND ROWNUM =1 ) AS LUSRNM,
		       IFW.USRID1 AS USRID1,
	         U1.NMLAST AS UNAME1,
	         IFW.DEPTID1 AS DEPTID1, 
	         (SELECT NAME01 FROM BZPTN WHERE PTNRTY='DP' AND PTNRKY=IFW.DEPTID1) DNAME1,
	         IFW.USRID2 AS USRID2,
	         U2.NMLAST AS UNAME2,
	         ' ' AS DEPTID2,
	         IFW.USRID3 AS USRID3,
	         U3.NMLAST AS UNAME3,
	         IFW.DEPTID3 AS DEPTID3,
	         IFW.USRID4 AS USRID4,
	         U4.NMLAST AS UNAME4,
	         IFW.DEPTID4 AS DEPTID4
		  FROM IFWMS113 IFW
		       INNER JOIN SKUMA SM
		               ON SM.SKUKEY = IFW.MATNR
                      AND SM.OWNRKY = #SES_OWNER#
		       INNER JOIN SKUWC SW
		               ON SW.WAREKY = #WAREKY#
		              AND SW.SKUKEY = IFW.MATNR
                      AND SW.OWNRKY = #SES_OWNER#
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = IFW.WAREKY
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = 'NEW'
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '200'
		       LEFT OUTER JOIN USRMA U1 ON U1.USERID = IFW.USRID1 
	         LEFT OUTER JOIN USRMA U2 ON U2.USERID = IFW.USRID2 
	         LEFT OUTER JOIN USRMA U3 ON U3.USERID = IFW.USRID3 
	         LEFT OUTER JOIN USRMA U4 ON U4.USERID = IFW.USRID4 
		 WHERE IFW.IFFLG IN ('N')
		   AND IFW.STATUS IN ('A','C')
		   AND IFW.LFIMG - IFW.QTSHP - NVL(IFW.N00101,0) > 0
		   AND IFW.WAREKY = #WAREKY# 
		   <!-- AND IFW.MBLNO  = #AREA# 기존 -->
			<!-- isEqual property="PROGID" compareValue="DL01">
			   AND IFW.BWART NOT IN ('266')
			</isEqual>
			<isEqual property="PROGID" compareValue="DL03">
			   AND IFW.BWART IN ('266')
			</isEqual-->
			<isEqual property="MENUID" compareValue="DL01">
				<isEqual property="BWART" compareValue="ALL">
					AND IFW.BWART IN ('200','203','220','230')
					<!-- AND IFW.BWART IN ('200','203','220','230') 기존 -->
				</isEqual>
				<isNotEqual property="BWART" compareValue="ALL">
					AND IFW.BWART = #BWART#
				</isNotEqual>
			</isEqual>
		<isEqual property="MENUID" compareValue="DL11">
			<isEqual property="BWART" compareValue="ALL">
				AND IFW.BWART IN ('231','204', '207')
			</isEqual>
			<isNotEqual property="BWART" compareValue="ALL">
				AND IFW.BWART = #BWART#
			</isNotEqual>
				AND SUBSTR(IFW.MIPNO,0,2) = #ZONE#
		</isEqual>
		    <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
			</isNotEmpty>
         GROUP BY IFW.VBELN,      IFW.WAREKY,  WH.NAME01,       IFW.KUNAG,        ST.CDESC1,
                  DC.SHORTX,      IFW.BWART,        <!-- IFW.LGORT, -->
                  IFW.LFART,      IFW.KUNNR ,  IFW.ZLIKP_ERDAT, IFW.ZLIKP_ERZET,  
                  IFW.USRID1, U1.NMLAST, IFW.DEPTID1,
					 IFW.USRID2, U2.NMLAST,
					 IFW.USRID3, U3.NMLAST, IFW.DEPTID3,
					 IFW.USRID4, U4.NMLAST, IFW.DEPTID4
         ORDER BY IFW.VBELN 
	</select>
	
	<select id="DL01_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT IFW.VBELN AS VBELN,
		       ' ' AS TASKKY,
		       ' ' AS SHPOKY,
		       ' ' AS SHPOIT,
		       'NEW' AS STATIT,
                F_DEF_ALSTKY(IFW.WAREKY) AS ALSTKY,			   
			   #WAREKY# AS WAREKY,
			   #SES_OWNER# AS OWNRKY,
			   IFW.STKNUM AS STKNUM,
		       IFW.LFIMG AS QTSORG,
		       IFW.LFIMG AS QTYORG,
		       IFW.LFIMG - IFW.QTSHP - NVL(IFW.N00101,0) AS QTSHPO,
		       0 AS QTUALO,
		       0 AS QTALOC,
		       0 AS QTSHPD,
		       0 AS QTSHPC,
		       SW.MEASKY AS MEASKY,
		       IFW.MATNR AS SKUKEY,
		       IFW.MATNR AS MATNR,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       IFW.MEINS AS UOMKEY,
		       1 AS QTPUOM,
		       SM.DUOMKY AS DUOMKY,
		       SM.QTDUOM AS QTDUOM,		
		       IFW.VBELN AS REFDKY,
		       IFW.POSNR AS REFDIT,
		       ' ' AS REFCAT,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,		
		       SM.ASKU01 AS ASKU01,
		       SM.ASKU02 AS ASKU02,
		       SM.ASKU03 AS ASKU03,
		       SM.ASKU04 AS ASKU04,
		       SM.ASKU05 AS ASKU05,
		       SM.EANCOD AS EANCOD,
		       SM.GTINCD AS GTINCD,
		       SM.SKUG01 AS SKUG01,
		       SM.SKUG02 AS SKUG02,
		       SM.SKUG03 AS SKUG03,
		       SM.SKUG04 AS SKUG04,
		       SM.SKUG05 AS SKUG05,
		       SM.GRSWGT AS GRSWGT,
		       SM.NETWGT AS NETWGT,
		       SM.WGTUNT AS WGTUNT,
		       SM.LENGTH AS LENGTH,
		       SM.WIDTHW AS WIDTHW,
		       SM.HEIGHT AS HEIGHT,
		       SM.CUBICM AS CUBICM,
		       SM.CAPACT AS CAPACT,		
		       ' ' AS LOTA01,
		       IFW.DEPTID2 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = IFW.DEPTID2) AS LOTA02NM,
		       ' ' AS LOTA03,
		       ' ' AS LOTA04,
		       ' ' AS LOTA05,
		       ' ' AS LOTA06,
		       ' ' AS LOTA07,
		       ' ' AS LOTA08,
		       ' ' AS LOTA09,
		       ' ' AS LOTA10,
		       ' ' AS LOTA11,
		       ' ' AS LOTA12,
		       ' ' AS LOTA13,
		       ' ' AS LOTA14,
		       ' ' AS LOTA15,
		       0 AS LOTA16,
		       0 AS LOTA17,
		       0 AS LOTA18,
		       0 AS LOTA19,
		       0 AS LOTA20,		
		       IFW.MBLNO AS AREAKY,
		       IFW.SEQNO AS AWMSNO,
		       IFW.MANDT AS SMANDT,
		       IFW.VBELN AS SVBELN,
		       IFW.POSNR AS SPOSNR,
		       IFW.MANDT AS MANDT,
		       IFW.POSNR AS POSNR,
		       IFW.VGBEL AS SSORNU,
		       IFW.VGPOS AS SSORIT,
		       IFW.VGBEL AS STRAID,
		       SW.OBPROT AS OBLKYN,
		       IFW.LGORT AS SLGORT,
 		       IFW.MBLNO AS SZMBLNO,
		       NVL(SUBSTR(IFW.MIPNO,1,2),' ') AS SZMIPNO,
		       ' ' AS SEBELN,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
		       TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM,
		       #SES_USER_ID# AS CREUSR,
		       ' ' AS CUSRNM,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
	           TO_CHAR(SYSDATE,'HH24MISS') AS LMOTIM,
		       #SES_USER_ID# AS LMOUSR,
		       ' ' AS LUSRNM,
		       IFW.PSTYV AS SAPSTS,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = IFW.PSTYV AND ROWNUM = 1) AS SAPSTSNM
		  FROM IFWMS113 IFW
		       INNER JOIN SKUMA SM
			       ON SM.SKUKEY = IFW.MATNR
		       INNER JOIN SKUWC SW
			       ON SW.WAREKY = #WAREKY#
			      AND SW.SKUKEY = IFW.MATNR
		 WHERE  IFW.WAREKY = #WAREKY# 
		   AND IFW.IFFLG IN ('N')
		   AND IFW.STATUS IN ('A','C')
		   AND IFW.LFIMG - IFW.QTSHP - NVL(IFW.N00101,0) <![CDATA[>]]> 0		   
		   AND SM.OWNRKY = #SES_OWNER#
		   AND SW.OWNRKY = #SES_OWNER#		   
		   AND IFW.VBELN  = #SVBELN#
		   <!-- AND IFW.MBLNO  = #AREA# 2016/06/08 주석처리-->
		   <!-- AND IFW.MIPNO  = #ZONE# -->
		<!-- isEqual property="PROGID" compareValue="DL01">
			AND IFW.BWART NOT IN ('266')
		</isEqual>
		<isEqual property="PROGID" compareValue="DL03">
			AND IFW.BWART IN ('266')
		</isEqual-->
		<isNotEmpty property="SBWART">
				AND		IFW.VBELN||IFW.BWART = #SVBELN#||#SBWART#
		</isNotEmpty>		
		<isEqual property="MENUID" compareValue="DL01">
			<isEqual property="BWART" compareValue="ALL">
				AND IFW.BWART IN ('200','203','220','230')
			    <!-- AND IFW.BWART IN ('200','203','220','230') -->
			</isEqual>
			<isNotEqual property="BWART" compareValue="ALL">
				AND IFW.BWART = #BWART#
			</isNotEqual>
		</isEqual>
		<isEqual property="MENUID" compareValue="DL11">
			<isEqual property="BWART" compareValue="ALL">
				AND IFW.BWART IN ('231','204', '207')
			</isEqual>
			<isNotEqual property="BWART" compareValue="ALL">
				AND IFW.BWART = #BWART#
			</isNotEqual>
			AND SUBSTR(IFW.MIPNO,0,2) = #ZONE#
		</isEqual>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 ORDER BY IFW.VBELN, TO_NUMBER(IFW.POSNR)
	</select>
	
	<select id="SHPORDERVBELN_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT I.QTSHPO AS QTSHPO,
		       I.SMANDT AS SMANDT,
		       I.SVBELN AS SVBELN,
		       I.SPOSNR AS SPOSNR,
		       H.WAREKY AS DESC01,
		       H.OWNRKY AS DESC02
		  FROM SHPDH H INNER JOIN SHPDI I ON I.SHPOKY = H.SHPOKY
		 WHERE H.SHPOKY = #SHPOKY#
	</select>
	
	<insert id="SHPDIALL_INSERT" parameterClass="Map">
		INSERT INTO SHPDI(
			SHPOKY,
			SHPOIT,
			STATIT,
			ALSTKY,
			STKNUM,
			QTYORG,
			QTSHPO,
			QTALOC,
			QTSHPD,
			QTSHPC,
			MEASKY,
			SKUKEY,
			DESC01,
			DESC02,
			UOMKEY,
			QTPUOM,
			DUOMKY,
			QTDUOM,
			REFDKY,
			REFDIT,
			REFCAT,
			REFDAT,
			ASKU01,
			ASKU02,
			ASKU03,
			ASKU04,
			ASKU05,
			EANCOD,
			GTINCD,
			SKUG01,
			SKUG02,
			SKUG03,
			SKUG04,
			SKUG05,
			GRSWGT,
			NETWGT,
			WGTUNT,
			LENGTH,
			WIDTHW,
			HEIGHT,
			CUBICM,
			CAPACT,
			LOTA01,
			LOTA02,
			LOTA03,
			LOTA04,
			LOTA05,
			LOTA06,
			LOTA07,
			LOTA08,
			LOTA09,
			LOTA10,
			LOTA11,
			LOTA12,
			LOTA13,
			LOTA14,
			LOTA15,
			LOTA16,
			LOTA17,
			LOTA18,
			LOTA19,
			LOTA20,
			AWMSNO,
			SMANDT,
			SVBELN,
			SPOSNR,
			STRAID,
			SAPSTS,
			AREAKY,
			SZMBLNO,
			SZMIPNO,
			SLGORT,
			SSORNU,
			SSORIT,
			CREDAT,
			CRETIM,
			CREUSR,
			LMODAT,
			LMOTIM,
			LMOUSR
			)
		SELECT #SHPOKY# AS SHPOKY,
		       LPAD(ROWNUM * 10,6,0) AS SHPOIT,
		       ' ' AS STATIT,
		       F_DEF_ALSTKY(IFW.WAREKY) AS ALSTKY,
			   IFW.STKNUM AS STKNUM,
		       IFW.LFIMG AS QTSORG,
		       IFW.LFIMG - IFW.QTSHP - NVL(IFW.N00101,0) AS QTSHPO,
		       0 AS QTALOC,
		       0 AS QTSHPD,
		       0 AS QTSHPC,
		       SW.MEASKY AS MEASKY,
		       IFW.MATNR AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       IFW.MEINS AS UOMKEY,
		       1 AS QTPUOM,
		       SM.DUOMKY AS DUOMKY,
		       SM.QTDUOM AS QTDUOM,
		       IFW.VBELN AS REFDKY,
		       IFW.POSNR AS REFDIT,
		       ' ' AS REFCAT,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
		       SM.ASKU01 AS ASKU01,
		       SM.ASKU02 AS ASKU02,
		       SM.ASKU03 AS ASKU03,
		       SM.ASKU04 AS ASKU04,
		       SM.ASKU05 AS ASKU05,
		       SM.EANCOD AS EANCOD,
		       SM.GTINCD AS GTINCD,
		       SM.SKUG01 AS SKUG01,
		       SM.SKUG02 AS SKUG02,
		       SM.SKUG03 AS SKUG03,
		       SM.SKUG04 AS SKUG04,
		       SM.SKUG05 AS SKUG05,
		       SM.GRSWGT AS GRSWGT,
		       SM.NETWGT AS NETWGT,
		       SM.WGTUNT AS WGTUNT,
		       SM.LENGTH AS LENGTH,
		       SM.WIDTHW AS WIDTHW,
		       SM.HEIGHT AS HEIGHT,
		       SM.CUBICM AS CUBICM,
		       SM.CAPACT AS CAPACT,
		       ' '       AS LOTA01,
		       IFW.DEPTID2 AS LOTA02,
		       ' ' AS LOTA03,
		       ' ' AS LOTA04,
		       ' ' AS LOTA05,
		       ' ' AS LOTA06,
		       ' ' AS LOTA07,
		       ' ' AS LOTA08,
		       ' ' AS LOTA09,
		       ' ' AS LOTA10,
		       ' ' AS LOTA11,
		       ' ' AS LOTA12,
		       ' ' AS LOTA13,
		       ' ' AS LOTA14,
		       ' ' AS LOTA15,
		       IFW.NETPR AS LOTA16,
		       IFW.NETWR AS LOTA17,
		       0 AS LOTA18,
		       0 AS LOTA19,
		       0 AS LOTA20,
		       IFW.SEQNO AS AWMSNO,
		       IFW.MANDT AS SMANDT,
		       IFW.VBELN AS SVBELN,
		       IFW.POSNR AS SPOSNR,
		       IFW.VGBEL AS STRAID,
		       IFW.PSTYV AS SAPSTS,
		       IFW.MBLNO AS AREAKY,
               IFW.MBLNO AS SZMBLNO,
               NVL(SUBSTR(IFW.MIPNO,1,2),' ') AS SZMIPNO,
               IFW.LGORT AS SLGORT,
               IFW.VGBEL AS SSORNU,
               IFW.VGPOS AS SSORIT,
               TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT,
               TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM,
		       #SES_USER_ID# AS CREUSR,
               TO_CHAR(SYSDATE,'YYYYMMDD') AS LMODAT,
		       TO_CHAR(SYSDATE,'HH24MISS') AS LMOTIM,
		       #SES_USER_ID# AS LMOUSR
		  FROM IFWMS113 IFW
		       INNER JOIN SKUMA SM
			       ON SM.OWNRKY = #SES_OWNER#
			      AND SM.SKUKEY = IFW.MATNR
		       INNER JOIN SKUWC SW
			       ON SW.OWNRKY = #SES_OWNER#
			      AND SW.WAREKY = #WAREKY#
			      AND SW.SKUKEY = IFW.MATNR
		       LEFT OUTER JOIN BZPTN BZ
			       ON BZ.PTNRKY = IFW.KUNAG
			      AND BZ.PTNRTY = 'CT'
		  WHERE IFW.WAREKY = #WAREKY# 
		   AND IFW.IFFLG IN ('N','Y')
		   AND IFW.STATUS IN ('A','C')
		   AND IFW.LFIMG - IFW.QTSHP - NVL(IFW.N00101,0) <![CDATA[>]]> 0
		   AND IFW.VBELN  = #SVBELN#
		<isNotEmpty property="SHPMTY">
				AND		IFW.VBELN||IFW.BWART= #SVBELN#||#SHPMTY#
		</isNotEmpty>		   
		   AND SUBSTR(IFW.MIPNO,1,2) = NVL(#ZONE#, ' ')
		<isEqual property="PROGID" compareValue="DL01">
			AND IFW.BWART NOT IN ('266')
		</isEqual>
		<isEqual property="PROGID" compareValue="DL03">
			AND IFW.BWART IN ('266')
		</isEqual>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 ORDER BY IFW.VBELN, TO_NUMBER(IFW.POSNR)
	</insert>
	
	<select id="DL01_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT
			'S/O 수량이 변경되어 할당할 수 없습니다 [' || IFW.VBELN || '-' || IFW.POSNR || ']' AS MSG
		FROM(
		    $VALIDATION_SQL$
		) P 
		INNER JOIN IFWMS113 IFW ON IFW.MANDT = QT.MANDT
					              AND IFW.VBELN = QT.VBELN
					              AND IFW.POSNR = QT.POSNR
					              AND IFW.IFFLG IN ('Y','N')
		WHERE QT.QTSHPO <![CDATA[>]]> IFW.LFIMG - IFW.N00101 - IFW.QTSHP
		AND ROWNUM = 1
	</select>
	
	<!-- <select id="DL04HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.SHPOKY AS KEY,
		       SH.SHPOKY AS SHPOKY,
		       SIC.ITEMCNT  AS ITEMCOUNT,
		       SH.DPTNKY AS SHIPTO,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'CT' AND PTNRKY = SH.DPTNKY AND ROWNUM =1)  AS SHIPTONM,
		       SH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       SH.STATDO AS STATDO,
		       CV.CDESC1 AS STATDONM,
		       SH.DRELIN AS DRELIN,
		       SH.INDDCL AS INDDCL,
		       SH.ALSTKY AS ALSTKY,
		       SH.DPTNKY AS DPTNKY,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'CT' AND PTNRKY = SH.DPTNKY AND ROWNUM =1)  AS DPTNKYNM,
		       SH.PTRCVR AS PTRCVR,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'CT' AND PTNRKY = SH.PTRCVR AND ROWNUM =1)  AS PTRCVRNM,
		       SH.PGRC01 AS PGRC01,
		       SH.PGRC02 AS PGRC02,
		       SH.PGRC03 AS PGRC03,
		       SH.PGRC04 AS PGRC04,
		       SH.PGRC05 AS PGRC05,
		       ' ' AS PTNBLK,
		       SH.OWNRKY AS OWNRKY,
		       SH.DOCDAT AS DOCDAT,
		       SH.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       SH.SHPMTY AS SHPMTY,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       SH.DOCUTY AS DOCUTY,
		       DT.SHORTX AS DOCUTYNM,
		       SH.RQSHPD AS RQSHPD,
		       SH.RQARRD AS RQARRD,
		       SH.RQARRT AS RQARRT,
		       SH.OPURKY AS OPURKY,
		       DECODE(SH.DOCUTY, '299', ' ', SI.SVBELN) AS SVBELN,
		       DECODE(SH.STATDO, 'REF', SI.STKNUM, DECODE(SH.DOCUTY, '299', SI.STKNUM, ' ')) AS STKNUM,
		       CASE WHEN SH.DOCUTY = '299'
		                 THEN NVL((SELECT MAX(SUBSTR(SDATBG,1,8)) FROM IFWMS113 WHERE STKNUM = SI.STKNUM), ' ')
		            ELSE ' ' END AS SDATBG,
		       SH.QTAPPO AS QTAPPO,		
		       SH.LOCADT AS LOCADT,
		       SH.LOCADK AS LOCADK,		       
		       SI.TOTCBM AS TOTCBM,		       
		       SH.VEHINO AS VEHINO,
		       SH.DRIVER AS DRIVER,
		       '' AS ALCCFM,		       
		       SH.USRID1 AS USRID1,
		       SH.UNAME1 AS UNAME1,
		       SH.DEPTID1 AS DEPTID1,
		       SH.DNAME1 AS DNAME1,
		       SH.USRID2 AS USRID2,
		       SH.UNAME2 AS UNAME2,
		       SH.DEPTID2 AS DEPTID2,
		       SH.DNAME2 AS DNAME2,
		       SH.USRID3 AS USRID3,
		       SH.UNAME3 AS UNAME3,
		       SH.DEPTID3 AS DEPTID3,
		       SH.DNAME3 AS DNAME3,
		       SH.USRID4 AS USRID4,
		       SH.UNAME4 AS UNAME4,
		       SH.DEPTID4 AS DEPTID4,
		       SH.DNAME4 AS DNAME4,
		       SH.DOCTXT AS DOCTXT,
		       SH.CREDAT AS CREDAT,
		       SH.CRETIM AS CRETIM,
		       SH.CREUSR AS CREUSR,
		       (SELECT NMLAST FROM USRMA WHERE USERID = SH.CREUSR) AS CUSRNM,
		       SH.LMODAT AS LMODAT,
		       SH.LMOTIM AS LMOTIM,
		       SH.LMOUSR AS LMOUSR,
		       (SELECT NMLAST FROM USRMA WHERE USERID = SH.LMOUSR) AS LUSRNM
		  FROM SHPDH SH
		       INNER JOIN (SELECT SHPOKY AS SHPOKY,
		                          SVBELN AS SVBELN,
		                          STKNUM AS STKNUM,
		                          SZMBLNO AS SZMBLNO,
		                          SZMIPNO AS SZMIPNO,
		                          ROUND(NVL(SUM(QTSHPD*CUBICM/DECODE(QTDUOM, 0, 9999999, QTDUOM)),0),3) AS TOTCBM
		                     FROM SHPDI
		                    GROUP BY SHPOKY, SVBELN, STKNUM, SZMBLNO, SZMIPNO) SI
		               ON SH.SHPOKY = SI.SHPOKY
		       INNER JOIN (SELECT SHPOKY, COUNT(*) AS ITEMCNT FROM SHPDI GROUP BY SHPOKY) SIC
		               ON SH.SHPOKY = SIC.SHPOKY
		       INNER JOIN WAHMA WH
		               ON SH.WAREKY = WH.WAREKY
		       INNER JOIN CMCDV CV
		                     ON SH.STATDO = CV.CMCDVL
		                    AND CV.CMCDKY = 'STATDO'
		       INNER JOIN DOCCM DC
		                     ON SH.DOCCAT = DC.DOCCAT
		       INNER JOIN DOCTM DT
		                     ON SH.DOCUTY = DT.DOCUTY
		 WHERE SH.WAREKY = #WAREKY#
		<isEqual property="PROGID" compareValue="DL04">
		   AND SH.STATDO NOT IN ('REF','PSH','FSH')
		   AND SH.INDDCL = ' '
		</isEqual>
		
		<isNotEmpty property="SHPOKY">
			AND SH.SHPOKY IN ( $SHPOKY$ )
		</isNotEmpty>
		<isNotEmpty property="AREA">
		    AND SI.SZMBLNO = #AREA#
	    </isNotEmpty>
	    <isNotEqual property="MENUID" compareValue="DL01">
		    <isNotEmpty property="ZONE">
			    AND SI.SZMIPNO = #ZONE#
		    </isNotEmpty>
	    </isNotEqual>
		<isEqual property="CLOSE" compareValue="V">
		   AND STATDO <![CDATA[ <> ]]> 'REF'
		</isEqual>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 ORDER BY DECODE(SH.STATDO, 'REF', SI.STKNUM, DECODE(SH.SHPMTY, '299', SI.STKNUM, ' ')), SH.LOCADK, SH.SHPOKY
		ORDER BY DOCDAT DESC
	</select> -->
	
	<!-- <select id="DL04_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SI.SHPOKY AS KEY,
		       SI.SHPOKY AS SHPOKY,
		       SH.SHPMTY AS SHPMTY,
		       SH.DOCUTY AS DOCUTY,
			   (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       SI.SHPOIT AS SHPOIT,
		       (SELECT NVL(TASKKY,' ') FROM TASDI WHERE TASDI.SHPOKY = SH.SHPOKY AND ROWNUM =1) AS TASKKY,
		       SIC.ITEMCNT AS ITEMCOUNT,
		       SI.STATIT AS STATIT,
		       CV.CDESC1 AS STATITNM,
		       SI.SKUKEY AS SKUKEY,
		       SI.QTSHPO AS QTSHPO,
		       SI.QTSHPO - SI.QTALOC AS QTALLM,
		       CASE WHEN SI.QTSHPO - SI.QTALOC &lt; 0 THEN 0 ELSE SI.QTSHPO - SI.QTALOC END QTUALO,
		       SI.QTYORG AS QTYORG,
		       SI.QTYORG AS QTSORG,
		       DECODE(SI.STATIT, 'REF', SI.QTJCMP, SI.QTYREF) AS QTYREF,
		       SI.QTAPPO AS QTAPPO,
		       SI.QTALOC AS QTALOC,
		       SI.QTJCMP AS QTJCMP,
		       SI.QTSHPD AS QTSHPD,
		       SI.QTSHPC AS QTSHPC,
		       SI.QTYUOM AS QTYUOM,
		       SI.MEASKY AS MEASKY,
		       SI.UOMKEY AS UOMKEY,
		       SI.QTPUOM AS QTPUOM,
		       SI.DUOMKY AS DUOMKY,
		       SI.QTDUOM AS QTDUOM,
		       SI.SASTKY AS SASTKY,
		       SI.ALSTKY AS ALSTKY,
		       SI.TKFLKY AS TKFLKY,
		       SI.ESHPKY AS ESHPKY,
		       SI.ESHPIT AS ESHPIT,
		       SI.OPURKY AS OPURKY,
		       SI.REFDKY AS REFDKY,
		       SI.REFDIT AS REFDIT,
		       SI.REFCAT AS REFCAT,
		       SI.REFDAT AS REFDAT,
		       SI.EXSUBS AS EXSUBS,
		       SI.DESC01 AS DESC01,
		       SI.DESC02 AS DESC02,
		       SI.ASKU01 AS ASKU01,
		       SI.ASKU02 AS ASKU02,
		       SI.ASKU03 AS ASKU03,
		       SI.ASKU04 AS ASKU04,
		       SI.ASKU05 AS ASKU05,
		       SI.EANCOD AS EANCOD,
		       SI.GTINCD AS GTINCD,
		       SI.SKUG01 AS SKUG01,
		       SI.SKUG02 AS SKUG02,
		       SI.SKUG03 AS SKUG03,
		       SI.SKUG04 AS SKUG04,
		       SI.SKUG05 AS SKUG05,
		       SI.GRSWGT AS GRSWGT,
		       SI.NETWGT AS NETWGT,
		       SI.WGTUNT AS WGTUNT,
		       SI.LENGTH AS LENGTH,
		       SI.WIDTHW AS WIDTHW,
		       SI.HEIGHT AS HEIGHT,
		       SI.CUBICM AS CUBICM,
		       CASE WHEN SI.QTDUOM IN (0,9999999) OR SI.CUBICM = 0 THEN 0
		            ELSE ROUND(SI.QTALOC * (SI.CUBICM / SI.QTDUOM),3) END AS CUBICT,
		       SI.CAPACT AS CAPACT,
		       SI.PROCHA AS PROCHA,
		       SI.AREAKY AS AREAKY,
		       SI.LOTA01 AS LOTA01,
		       SI.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = SI.LOTA02) AS LOTA02NM,
		       SI.LOTA03 AS LOTA03,
		       SI.LOTA04 AS LOTA04,
		       SI.LOTA05 AS LOTA05,
		       SI.LOTA06 AS LOTA06,
		       SI.LOTA07 AS LOTA07,
		       SI.LOTA08 AS LOTA08,
		       SI.LOTA09 AS LOTA09,
		       SI.LOTA10 AS LOTA10,
		       SI.LOTA11 AS LOTA11,
		       SI.LOTA12 AS LOTA12,
		       SI.LOTA13 AS LOTA13,
		       SI.LOTA14 AS LOTA14,
		       SI.LOTA15 AS LOTA15,
		       SI.LOTA16 AS LOTA16,
		       SI.LOTA17 AS LOTA17,
		       SI.LOTA18 AS LOTA18,
		       SI.LOTA19 AS LOTA19,
		       SI.LOTA20 AS LOTA20,
		       SI.AWMSNO AS AWMSNO,
		       SI.SMANDT AS SMANDT,
		       SI.SEBELN AS SEBELN,
		       SI.SEBELP AS SEBELP,
		       SI.STRAID AS STRAID,
		       SI.SVBELN AS SVBELN,
		       SI.SVBELN AS VBELN,
		       SI.SPOSNR AS SPOSNR,
		       SI.STKNUM AS STKNUM,
		       SI.STPNUM AS STPNUM,
		       SI.SWERKS AS SWERKS,
		       SI.SLGORT AS SLGORT,
		       SI.SDATBG AS SDATBG,
		       SI.STDLNR AS STDLNR,
		       SI.SSORNU AS SSORNU,
		       SI.SSORIT AS SSORIT,
		       SI.SMBLNR AS SMBLNR,
		       SI.SZEILE AS SZEILE,
		       SI.SMJAHR AS SMJAHR,
		       SI.SXBLNR AS SXBLNR,
		       SI.SAPSTS AS SAPSTS,
		       SI.PTNRKY AS PTNRKY,
		       SI.NAME01 AS NAME01,
		       SI.SLAND1 AS SLAND1,
		       SI.SBKTXT AS SBKTXT,
		       SH.SHPMTY AS SHPMTY,
		       SH.WAREKY,
		       SH.OWNRKY,
		       SI.CREDAT,
			   SI.CRETIM,
			   SI.CREUSR,
			   ' ' AS CUSRNM,
			   SI.LMODAT,
			   SI.LMOTIM,
			   SI.LMOUSR,
			   ' ' AS LUSRNM,
			   SI.INDBZL,
			   SI.INDARC,
			   SI.UPDCHK,
		       SI.STRAID AS VGBEL,
		       SK.QTDUOM,
		       SK.BATMNG,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SI.SAPSTS AND ROWNUM = 1) AS SAPSTSNM,
		       SI.SZMBLNO,
		       SI.SZMIPNO 
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI
		               ON SH.SHPOKY = SI.SHPOKY
		              AND SI.SHPOKY IN (SELECT SHPOKY FROM SHPDI)
		       INNER JOIN (SELECT SHPOKY, COUNT(*) AS ITEMCNT FROM SHPDI GROUP BY SHPOKY) SIC
		               ON SIC.SHPOKY = SH.SHPOKY
		       INNER JOIN CMCDV CV
		               ON CV.CMCDKY = 'STATIT'
		              AND CV.CMCDVL = SI.STATIT
		       INNER JOIN SKUMA SK ON SI.SKUKEY = SK.SKUKEY
		WHERE  SH.WAREKY = #WAREKY#
		   AND SH.STATDO NOT IN ('REF')
		<isNotEmpty property="SHPOKY">
		   AND SH.SHPOKY IN ( $SHPOKY$ )
		   AND SH.SHPOKY = $SHPOKY$
		</isNotEmpty>
		<isNotEmpty property="SHPMTY">
				AND		SI.SVBELN||SH.SHPMTY = #SVBELN#||#SHPMTY#
		</isNotEmpty>			
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		<isNotEmpty property="R_SQL">
			$R_SQL$
		</isNotEmpty>
		<isNotEqual property="WAREKY" compareValue="WSZ1">
		ORDER  BY SI.SHPOKY, SI.SHPOIT
		</isNotEqual>
		<isEqual property="WAREKY" compareValue="WSZ1">
		ORDER  BY SI.SVBELN, TO_NUMBER(SI.SPOSNR)
		</isEqual>
	</select> -->
	
	<select id="SEQPRTSEQ_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT SEQ_PRTSEQ.NEXTVAL AS PRTSEQ FROM DUAL
	</select>
	
	<select id="SEQSTKNUM_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT SEQ_STKNUM.NEXTVAL AS STKNUM FROM DUAL
	</select>
	
	<insert id="PRTLG_INSERT" parameterClass="Map">
		INSERT
			INTO PRTLG
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
             , INDBZL, INDARC, UPDCHK)
			VALUES 
			(    #PRTSEQ#, 1, 'SHPD', #WAREKY#, ' ', ' ', ' ', #OWNRKY#, ' ', ' '
				,' ', #CREDAT#, ' ', ' ', NVL(#RQSHPD#,' '), ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', #SHPOKY#, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
                ,' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#,' '
                ,' ', 0 
			)
	</insert>
	
	<insert id="PRTLGPICK_INSERT" parameterClass="Map">				
		INSERT		
			INTO PRTLG	
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY	
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV	
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM	
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08	
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18				
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY				
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT				
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR				
             , INDBZL, INDARC, UPDCHK)				
			VALUES 	
			(    #PRTSEQ#, 1, 'PICK', #WAREKY#, #AREAKY#, ' ', ' ', #OWNRKY#, ' ', ' '	
				,' ', #CREDAT#, ' ', ' ', #RQSHPD#, ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', #SHPOKY#, ' ', ' ', ' ', #TASKKY#, ' ', ' ', ' ', ' '
                ,' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#,' '				
                ,' ', 0 				
			)	
	</insert>	
	
	<insert id="PRTLGSHIP_INSERT" parameterClass="Map">
		INSERT
			INTO PRTLG
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
             , INDBZL, INDARC, UPDCHK)
			VALUES 
			(    #PRTSEQ#, 1, 'SHIP', #WAREKY#, ' ', ' ', ' ', #OWNRKY#, ' ', ' '
				, ' ', #CREDAT#, ' ', ' ', NVL(#RQSHPD#,' '), ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', #SHPOKY#, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
                , ' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#
                , ' ', ' ', 0 
			)
	</insert>
	
<!-- 	<select id="DL06HEAD_LIST" parameterClass="Map" resultClass="DataMap"> -->
<!-- 		SELECT TASDH.TASKKY AS TASKKY, -->
<!-- 		       TASDH.WAREKY AS WAREKY, -->
<!-- 		       NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY),' ') AS WARENM, -->
<!-- 		       TASDH.TASOTY AS TASOTY, -->
<!-- 		       NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY),' ') AS TASONM, -->
<!-- 		       TASDH.DOCDAT AS DOCDAT, -->
<!-- 		       TASDH.DOCCAT AS DOCCAT, -->
<!-- 		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM, -->
<!-- 		       TASDH.DRELIN AS DRELIN, -->
<!-- 		       TASDH.STATDO AS STATDO, -->
<!-- 		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM, -->
<!-- 		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC, -->
<!-- 		       TASDH.QTTAOR AS QTTAOR, -->
<!-- 		       TASDH.QTCOMP AS QTCOMP, -->
<!-- 		       TASDH.TSPKEY AS TSPKEY, -->
<!-- 		       TASDH.DOORKY AS DOORKY, -->
<!-- 		       DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG, -->
<!-- 		       TASDH.PTNRKY AS PTNRKY, -->
<!-- 		       TASDH.CREDAT AS CREDAT, -->
<!-- 		       TASDH.CRETIM AS CRETIM, -->
<!-- 		       TASDH.CREUSR AS CREUSR, -->
<!-- 		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM, -->
<!-- 		       TASDH.LMODAT AS LMODAT, -->
<!-- 		       TASDH.LMOTIM AS LMOTIM, -->
<!-- 		       TASDH.LMOUSR AS LMOUSR, -->
<!-- 		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM, -->
<!-- 		       TASDH.INDBZL AS INDBZL, -->
<!-- 		       TASDH.INDARC AS INDARC, -->
<!-- 		       TASDH.UPDCHK AS UPDCHK, -->
<!-- 		       TASDH.KEEPTS AS KEEPTS, -->
<!-- 		       MAX(TASDI.RECVKY) AS RECVKY, -->
<!-- 		       MAX(TASDI.SHPOKY) AS SHPOKY, -->
<!-- 		       MAX(SHPDH.SHPMTY) AS SHPMTY, -->
<!-- 		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SHPDH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM, -->
<!-- 		       MAX(SHPDH.STATDO) AS SHSTATDO, -->
<!-- 		       MAX(CMCDV.CDESC1) AS SHSTATDONM, -->
<!-- 		       MAX(SHPDH.DPTNKY) AS DPTNKY, -->
<!-- 		       MAX(BZPTN.NAME01) AS DPTNKYNM, -->
<!-- 		       MAX(TASDI.SEBELN) AS SEBELN, -->
<!-- 		       MAX(TASDI.SZMBLNO) AS SZMBLNO, -->
<!-- 		       MAX(TASDI.SZMIPNO) AS SZMIPNO, -->
<!-- 		       MAX(TASDI.STRAID) AS STRAID, -->
<!-- 		       MAX(TASDI.SVBELN) AS SVBELN, -->
<!-- 		       MAX(TASDI.STKNUM) AS STKNUM, -->
<!-- 		       MAX(TASDI.STDLNR) AS STDLNR, -->
<!-- 		       MAX(TASDI.SSORNU) AS SSORNU, -->
<!-- 		       MAX(TASDI.SMBLNR) AS SMBLNR, -->
<!-- 		       MAX(TASDI.SXBLNR) AS SXBLNR, -->
<!-- 		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT, -->
<!-- 		       MAX(TASDI.AREAKY) AS AREAKY, -->
<!-- 		       MAX(TASDI.LOTA01) AS LOTA01, -->
<!-- 		       MAX(TASDI.LOTA04) AS LOTA04, -->
<!-- 		       ' ' AS BUNAME, -->
<!--      		   ' ' AS BUPLANT, -->
<!--                ' ' AS BUCHRG,   -->
<!--                ' ' AS TOVCHRG -->
<!-- 		  FROM TASDH -->
<!-- 		       INNER JOIN TASDI -->
<!-- 		               ON TASDH.TASKKY = TASDI.TASKKY -->
<!-- 		       LEFT OUTER JOIN SHPDI -->
<!-- 		               ON SHPDI.SHPOKY = TASDI.SHPOKY  -->
<!-- 		               AND SHPDI.SHPOIT = TASDI.SHPOIT -->
<!-- 		       LEFT OUTER JOIN SHPDH  -->
<!-- 		               ON SHPDH.SHPOKY = TASDI.SHPOKY -->
<!-- 		       LEFT OUTER JOIN DOCTM -->
<!-- 		               ON SHPDH.DOCUTY = DOCTM.DOCUTY -->
<!-- 		       LEFT OUTER JOIN CMCDV -->
<!-- 		               ON SHPDH.STATDO = CMCDV.CMCDVL  -->
<!-- 		               AND CMCDKY = 'STATDO' -->
<!-- 		       LEFT OUTER JOIN BZPTN -->
<!-- 		               ON SHPDH.DPTNKY = BZPTN.PTNRKY -->
<!-- 		               AND BZPTN.PTNRTY = 'CT' -->
<!-- 		 WHERE TASDH.WAREKY = #WAREKY# -->
<!-- 		   AND TASDI.STATIT = 'NEW' -->
<!-- 		<isNotEmpty property="REFDAT1"> -->
<!-- 		   AND SHPDH.RQSHPD &gt;= #REFDAT1# AND SHPDH.RQSHPD &lt;= #REFDAT2#   -->
<!-- 		</isNotEmpty> -->
<!-- 		<isNotEmpty property="RANGE_SQL"> -->
<!-- 			$RANGE_SQL$ -->
<!-- 		</isNotEmpty> -->
<!-- 		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT, -->
<!-- 		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY, -->
<!-- 		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT, -->
<!-- 		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK, -->
<!-- 		          TASDH.KEEPTS, TASDH.WARETG, SHPDH.SHPMTY -->
<!-- 		 ORDER BY TASDH.TASKKY -->
<!-- 	</select> -->
	
<!-- 	<select id="DL06_LIST" parameterClass="Map" resultClass="DataMap"> -->
<!-- 		SELECT A.WAREKY AS WAREKY, -->
<!-- 		       B.TASKKY AS TASKKY, -->
<!-- 		       B.TASKIT AS TASKIT, -->
<!-- 		       B.TASKTY AS TASKTY, -->
<!-- 		       B.RSNCOD AS RSNCOD, -->
<!-- 		       B.TASRSN AS TASRSN, -->
<!-- 		       B.STATIT AS STATIT, -->
<!-- 		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM, -->
<!-- 	           (SELECT S.QTSHPO - (SELECT NVL(SUM(T.QTTAOR) ,0) -->
<!-- 		                         FROM TASDI T -->
<!-- 		                         WHERE T.SHPOKY = B.SHPOKY -->
<!-- 		                         AND   T.SHPOIT = B.SHPOIT -->
<!-- 		                         AND   T.TASKKY != B.TASKKY) -->
<!-- 	            FROM SHPDI S -->
<!-- 	            WHERE S.SHPOKY = B.SHPOKY -->
<!-- 	            AND   S.SHPOIT = B.SHPOIT) AS QTABLE, -->
<!-- 		       B.QTTAOR AS QTTAOR, -->
<!-- 		       B.QTTAOR AS QTCOMP, -->
<!-- 		       B.OWNRKY AS OWNRKY, -->
<!-- 		       B.SKUKEY AS SKUKEY, -->
<!-- 		       B.LOTNUM AS LOTNUM, -->
<!-- 		       B.ACTCDT AS ACTCDT, -->
<!-- 		       B.ACTCTI AS ACTCTI, -->
<!-- 		       B.QTYUOM AS QTYUOM, -->
<!-- 		       B.TKFLKY AS TKFLKY, -->
<!-- 		       B.STEPNO AS STEPNO, -->
<!-- 		       B.LSTTFL AS LSTTFL, -->
<!-- 		       B.LOCASR AS LOCASR, -->
<!-- 		       B.SECTSR AS SECTSR, -->
<!-- 		       B.PAIDSR AS PAIDSR, -->
<!-- 		       B.TRNUSR AS TRNUSR, -->
<!-- 		       B.STRUTY AS STRUTY, -->
<!-- 		       B.SMEAKY AS SMEAKY, -->
<!-- 		       B.SUOMKY AS SUOMKY, -->
<!-- 		       B.QTSPUM AS QTSPUM, -->
<!-- 		       B.SDUOKY AS SDUOKY, -->
<!-- 		       B.QTSDUM AS QTSDUM, -->
<!-- 		       B.LOCATG AS LOCATG, -->
<!-- 		       B.SECTTG AS SECTTG, -->
<!-- 		       B.PAIDTG AS PAIDTG, -->
<!-- 		       B.TRNUTG AS TRNUTG, -->
<!-- 		       B.TTRUTY AS TTRUTY, -->
<!-- 		       B.TMEAKY AS TMEAKY, -->
<!-- 		       B.TUOMKY AS TUOMKY, -->
<!-- 		       B.QTTPUM AS QTTPUM, -->
<!-- 		       B.TDUOKY AS TDUOKY, -->
<!-- 		       B.QTTDUM AS QTTDUM, -->
<!-- 		       (CASE -->
<!-- 		          WHEN B.ACTCDT = '00000000' THEN B.LOCATG -->
<!-- 		          ELSE B.LOCAAC END) AS LOCAAC, -->
<!-- 		       (CASE -->
<!-- 		          WHEN B.ACTCDT = '00000000' THEN B.SECTTG -->
<!-- 		          ELSE B.SECTAC END) AS SECTAC, -->
<!-- 		       (CASE -->
<!-- 		          WHEN B.ACTCDT = '00000000' THEN B.PAIDTG -->
<!-- 		          ELSE B.PAIDAC END) AS PAIDAC, -->
<!-- 		       (CASE -->
<!-- 		          WHEN B.ACTCDT = '00000000' THEN B.TRNUTG -->
<!-- 		          ELSE B.TRNUAC END) AS TRNUAC, -->
<!-- 		       (CASE -->
<!-- 		          WHEN B.ACTCDT = '00000000' THEN B.TTRUTY -->
<!-- 		          ELSE B.ATRUTY END) AS ATRUTY, -->
<!-- 		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY, -->
<!-- 		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY, -->
<!-- 		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM, -->
<!-- 		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY, -->
<!-- 		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM, -->
<!-- 		       B.REFDKY AS REFDKY, -->
<!-- 		       B.REFDIT AS REFDIT, -->
<!-- 		       B.REFCAT AS REFCAT, -->
<!-- 		       B.REFDAT AS REFDAT, -->
<!-- 		       B.PURCKY AS PURCKY, -->
<!-- 		       B.PURCIT AS PURCIT, -->
<!-- 		       B.ASNDKY AS ASNDKY, -->
<!-- 		       B.ASNDIT AS ASNDIT, -->
<!-- 		       B.RECVKY AS RECVKY, -->
<!-- 		       B.RECVIT AS RECVIT, -->
<!-- 		       B.SHPOKY AS SHPOKY, -->
<!-- 		       B.SHPOIT AS SHPOIT, -->
<!-- 		       B.GRPOKY AS GRPOKY, -->
<!-- 		       B.GRPOIT AS GRPOIT, -->
<!-- 		       B.SADJKY AS SADJKY, -->
<!-- 		       B.SADJIT AS SADJIT, -->
<!-- 		       B.SDIFKY AS SDIFKY, -->
<!-- 		       B.SDIFIT AS SDIFIT, -->
<!-- 		       B.PHYIKY AS PHYIKY, -->
<!-- 		       B.PHYIIT AS PHYIIT, -->
<!-- 		       B.DROPID AS DROPID, -->
<!-- 		       B.DESC01 AS DESC01, -->
<!-- 		       B.DESC02 AS DESC02, -->
<!-- 		       B.ASKU01 AS ASKU01, -->
<!-- 		       B.ASKU02 AS ASKU02, -->
<!-- 		       B.ASKU03 AS ASKU03, -->
<!-- 		       B.ASKU04 AS ASKU04, -->
<!-- 		       B.ASKU05 AS ASKU05, -->
<!-- 		       B.EANCOD AS EANCOD, -->
<!-- 		       B.GTINCD AS GTINCD, -->
<!-- 		       B.SKUG01 AS SKUG01, -->
<!-- 		       B.SKUG02 AS SKUG02, -->
<!-- 		       B.SKUG03 AS SKUG03, -->
<!-- 		       B.SKUG04 AS SKUG04, -->
<!-- 		       B.SKUG05 AS SKUG05, -->
<!-- 		       B.GRSWGT AS GRSWGT, -->
<!-- 		       B.NETWGT AS NETWGT, -->
<!-- 		       B.WGTUNT AS WGTUNT, -->
<!-- 		       B.LENGTH AS LENGTH, -->
<!-- 		       B.WIDTHW AS WIDTHW, -->
<!-- 		       B.HEIGHT AS HEIGHT, -->
<!-- 		       B.CUBICM AS CUBICM, -->
<!-- 		       B.CAPACT AS CAPACT, -->
<!-- 		       B.WORKID AS WORKID, -->
<!-- 		       B.WORKNM AS WORKNM, -->
<!-- 		       B.HHTTID AS HHTTID, -->
<!-- 		       B.AREAKY AS AREAKY, -->
<!-- 		       B.LOTA01 AS LOTA01, -->
<!-- 		       B.LOTA02 AS LOTA02, -->
<!-- 		       B.LOTA03 AS LOTA03, -->
<!-- 		       B.LOTA04 AS LOTA04, -->
<!-- 		       B.LOTA05 AS LOTA05, -->
<!-- 		       B.LOTA06 AS LOTA06, -->
<!-- 		       B.LOTA07 AS LOTA07, -->
<!-- 		       B.LOTA08 AS LOTA08, -->
<!-- 		       B.LOTA09 AS LOTA09, -->
<!-- 		       B.LOTA10 AS LOTA10, -->
<!-- 		       B.LOTA11 AS LOTA11, -->
<!-- 		       B.LOTA12 AS LOTA12, -->
<!-- 		       B.LOTA13 AS LOTA13, -->
<!-- 		       B.LOTA14 AS LOTA14, -->
<!-- 		       B.LOTA15 AS LOTA15, -->
<!-- 		       B.LOTA16 AS LOTA16, -->
<!-- 		       B.LOTA17 AS LOTA17, -->
<!-- 		       B.LOTA18 AS LOTA18, -->
<!-- 		       B.LOTA19 AS LOTA19, -->
<!-- 		       B.LOTA20 AS LOTA20, -->
<!-- 		       B.AWMSNO AS AWMSNO, -->
<!-- 		       B.AWMSTS AS AWMSTS, -->
<!-- 		       B.SMANDT AS SMANDT, -->
<!-- 		       B.SEBELN AS SEBELN, -->
<!-- 		       B.SEBELP AS SEBELP, -->
<!-- 		       B.SZMBLNO AS SZMBLNO, -->
<!-- 		       B.SZMIPNO AS SZMIPNO, -->
<!-- 		       B.STRAID AS STRAID, -->
<!-- 		       B.SVBELN AS SVBELN, -->
<!-- 		       B.SPOSNR AS SPOSNR, -->
<!-- 		       B.STKNUM AS STKNUM, -->
<!-- 		       B.STPNUM AS STPNUM, -->
<!-- 		       B.SWERKS AS SWERKS, -->
<!-- 		       B.SLGORT AS SLGORT, -->
<!-- 		       B.SDATBG AS SDATBG, -->
<!-- 		       B.STDLNR AS STDLNR, -->
<!-- 		       B.SSORNU AS SSORNU, -->
<!-- 		       B.SSORIT AS SSORIT, -->
<!-- 		       B.SMBLNR AS SMBLNR, -->
<!-- 		       B.SZEILE AS SZEILE, -->
<!-- 		       B.SMJAHR AS SMJAHR, -->
<!-- 		       B.SXBLNR AS SXBLNR, -->
<!-- 		       B.SAPSTS AS SAPSTS, -->
<!-- 		       B.DOORKY AS DOORKY, -->
<!-- 		       B.PTLT01 AS PTLT01, -->
<!-- 		       B.PTLT02 AS PTLT02, -->
<!-- 		       B.PTLT03 AS PTLT03, -->
<!-- 		       B.PTLT04 AS PTLT04, -->
<!-- 		       B.PTLT05 AS PTLT05, -->
<!-- 		       B.PTLT06 AS PTLT06, -->
<!-- 		       B.PTLT07 AS PTLT07, -->
<!-- 		       B.PTLT08 AS PTLT08, -->
<!-- 		       B.PTLT09 AS PTLT09, -->
<!-- 		       B.PTLT10 AS PTLT10, -->
<!-- 		       B.PTLT11 AS PTLT11, -->
<!-- 		       B.PTLT12 AS PTLT12, -->
<!-- 		       B.PTLT13 AS PTLT13, -->
<!-- 		       B.PTLT14 AS PTLT14, -->
<!-- 		       B.PTLT15 AS PTLT15, -->
<!-- 		       B.PTLT16 AS PTLT16, -->
<!-- 		       B.PTLT17 AS PTLT17, -->
<!-- 		       B.PTLT18 AS PTLT18, -->
<!-- 		       B.PTLT19 AS PTLT19, -->
<!-- 		       B.PTLT20 AS PTLT20, -->
<!-- 		       C.AUTLOC AS AUTLOC, -->
<!-- 		       B.CREDAT AS CREDAT, -->
<!-- 		       B.CRETIM AS CRETIM, -->
<!-- 		       B.CREUSR AS CREUSR, -->
<!-- 		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM, -->
<!-- 		       B.LMODAT AS LMODAT, -->
<!-- 		       B.LMOTIM AS LMOTIM, -->
<!-- 		       B.LMOUSR AS LMOUSR, -->
<!-- 		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM, -->
<!-- 		       B.INDBZL AS INDBZL, -->
<!-- 		       B.INDARC AS INDARC, -->
<!-- 		       B.UPDCHK AS UPDCHK -->
<!-- 		  FROM TASDH A, -->
<!-- 		       TASDI B, -->
<!-- 		       LOCMA C -->
<!-- 		 WHERE A.TASKKY = B.TASKKY -->
<!-- 		   AND A.WAREKY = C.WAREKY -->
<!-- 		   AND B.LOCASR = C.LOCAKY -->
<!-- 		   AND A.TASKKY = #TASKKY# -->
<!-- 		   AND B.STATIT = 'NEW' -->
<!-- 		 ORDER BY B.TASKKY, B.TASKIT -->
<!-- 	</select> -->
	
	<select id="DL07HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY),' ') AS WARENM,
		       TASDH.TASOTY AS TASOTY,
		       NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY),' ') AS TASONM,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SHPDH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY,
		       MAX(TASDI.LOTA01) AS LOTA01,
         	   MAX(TASDI.LOTA07) AS LOTA07,
         	   MAX(TASDI.LOTA04) AS LOTA04,
         	   COUNT(DISTINCT TASDI.LOTA07) AS LOTA07CNT,
		       DECODE(TRIM(TASDI.DOORKY),NULL,' ','V') AS DOORKY2
		  FROM TASDH
		       INNER JOIN TASDI
		               ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = TASDI.SHPOKY 
		               AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.DOCUTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		 WHERE TASDH.WAREKY = #WAREKY#
		<isNotEmpty property="REFDAT1">
		   AND SHPDH.RQSHPD &gt;= #REFDAT1# AND SHPDH.RQSHPD &lt;= #REFDAT2#  
		</isNotEmpty>
		<isNotEmpty property="LMOUSR">
		   AND TASDI.LMOUSR = #LMOUSR#
		</isNotEmpty>
		 AND TASDH.STATDO IN ('DUMMY'
		 					  <isEqual property="STAT01" compareValue="V">, 'PAL', 'FAL', 'NEW'</isEqual>
		                      <isEqual property="STAT02" compareValue="V">, 'FPC'</isEqual>
		                      <isEqual property="STAT03" compareValue="V">, 'FCN','PCN'</isEqual>
		                    )
		                    <isEqual property="DOORKY" compareValue="V">AND TRIM(TASDI.DOORKY) IS NULL</isEqual>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
		          TASDH.KEEPTS, TASDH.WARETG, SHPDH.SHPMTY, SHPDH.RQSHPD, TASDI.LOTA07, TASDI.SKUKEY,
		          TASDI.DOORKY
		 ORDER BY TASDH.TASKKY
	</select>
	
	<select id="DL07_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       CASE WHEN B.STATIT = 'FCN' THEN 'V' ELSE ' ' END AS CANCEL,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       B.QTCOMP AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.LOCATG
		          ELSE B.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.SECTTG
		          ELSE B.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.PAIDTG
		          ELSE B.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.TRNUTG
		          ELSE B.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.TTRUTY
		          ELSE B.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND A.TASKKY = #TASKKY#
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="PICKING_CANCEL_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		  FROM (
		         SELECT CASE WHEN EXISTS (SELECT 1 FROM SHPDH WHERE SHPOKY = TI.SHPOKY AND INDDCL = 'V')
		                          THEN 'OUT_M0162†' || STD.TASKKY || '/' || TI.TASKIT || '/' || TI.SHPOKY
		                     ELSE 'OK'
		                  END AS RESULTMSG
		           FROM (
		                  $APPEND_QUERY$
		                ) STD
		                INNER JOIN TASDI TI ON TI.TASKKY = STD.TASKKY AND TI.STATIT = 'NEW'
		       )
		 WHERE RESULTMSG != 'OK'
	</select>
	
	<select id="PICKING_CANCEL_ITEM_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		  FROM (
		         SELECT CASE WHEN EXISTS (SELECT 1 FROM SHPDH WHERE SHPOKY = TI.SHPOKY AND INDDCL = 'V')
		                          THEN 'OUT_M0162†' || STD.TASKKY || '/' || STD.TASKIT || '/' || TI.SHPOKY
		                     WHEN TI.STATIT IN ('FCN')
		                          THEN 'OUT_M0165†' || STD.TASKKY || '/' || STD.TASKIT
		                     WHEN TI.STATIT NOT IN ('PPC','FPC')
		                          THEN 'OUT_M0163†' || STD.TASKKY || '/' || STD.TASKIT
		                     ELSE 'OK'
		                  END AS RESULTMSG
		           FROM (
		                  $APPEND_QUERY$
		                ) STD
		                INNER JOIN TASDI TI ON TI.TASKKY = STD.TASKKY AND TI.TASKIT = STD.TASKIT
		       )
		 WHERE RESULTMSG != 'OK'
	</select>
	
	<select id="CALL_PICKING_CANCEL_PROC_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_CANCEL_PICK( #TASKKY#, #TASKIT#, #SES_USER_ID# ) }
	</select>
	
	<select id="CALL_PICKING_CANCEL_PROC_DL07_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_CANCEL_PICK( #TASKKY#, ' ', #SES_USER_ID# ) }
	</select>
	
	<update id="IFWMS113ORDERDEL_DELETE" parameterClass="Map">
		UPDATE IFWMS113
		   SET IFFLG = 'X',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS')
		 WHERE VBELN = #SVBELN#
		   AND STATUS IN ('A','C')
		   AND IFFLG IN ('N','Y')
	</update>
	
	<delete id="SHPDI_DELETE" parameterClass="Map">
		DELETE FROM SHPDI
		WHERE SHPOKY = #SHPOKY#
		  AND QTALOC = 0
		  AND QTJCMP = 0
		  AND QTSHPC = 0
		  AND NOT EXISTS (SELECT 1
		                   FROM TASDI
		                  WHERE TASDI.SHPOKY = SHPDI.SHPOKY)
	</delete>
	
	<select id="SHPDH_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			 SHPOKY,
			 WAREKY,
			 SHPMTY,
			 ALSTKY,
			 STATDO,
			 DOCDAT,
			 DOCCAT,
			 PRORTY,
			 DOCUTY,
			 OWNRKY,
			 DRELIN,
			 RQSHPD,
			 RQARRD,
			 RQARRT,
			 LSHPCD,
			 DPTNKY,
			 PTRCVR,
			 PGRC01,
			 PGRC02,
			 PGRC03,
			 PGRC04,
			 PGRC05,
			 VEHINO,
			 DRIVER,
			 ESHPKY,
			 OPURKY,
			 LOCADT,
			 LOCADK,
			 INDDCL,
			 RSNCOD,
			 RSNRET,
			 QTSHPO,
			 QTYREF,
			 QTAPPO,
			 QTALOC,
			 QTJCMP,
			 QTSHPD,
			 QTSHPC,
			 USRID1,
			 UNAME1,
			 DEPTID1,
			 DNAME1,
			 USRID2,
			 UNAME2,
			 DEPTID2,
			 DNAME2,
			 USRID3,
			 UNAME3,
			 DEPTID3,
			 DNAME3,
			 USRID4,
			 UNAME4,
			 DEPTID4,
			 DNAME4,
			 DOCTXT,
			 CREDAT,
			 CRETIM,
			 CREUSR,
			 LMODAT,
			 LMOTIM,
			 LMOUSR,
			 INDBZL,
			 INDARC,
			 UPDCHK,
			 KEEPTS
		 FROM SHPDH
		 WHERE 
			 SHPOKY in ($SHPOKY$) 
	</select>
	<delete id="SHPDH_DELETE" parameterClass="Map">
		DELETE FROM SHPDH
		WHERE SHPOKY = #SHPOKY#
		  AND NOT EXISTS (SELECT 1
		                    FROM SHPDI
		                   WHERE SHPDI.SHPOKY = SHPDH.SHPOKY)
	</delete>
	
	<insert id="SHPDH_INSERT" parameterClass="Map">
		INSERT INTO SHPDH (
					SHPOKY,
					WAREKY,
					SHPMTY,
					ALSTKY,
					STATDO,
					DOCDAT,
					DOCCAT,
					PRORTY,
					DOCUTY,
					OWNRKY,
					DRELIN,
					RQSHPD,
					RQARRD,
					RQARRT,
					LSHPCD,
					DPTNKY,
					PTRCVR,
					PGRC01,
					PGRC02,
					PGRC03,
					PGRC04,
					PGRC05,
					VEHINO,
					DRIVER,
					ESHPKY,
					OPURKY,
					LOCADT,
					LOCADK,
					INDDCL,
					RSNCOD,
					RSNRET,
					QTSHPO,
					QTYREF,
					QTAPPO,
					QTALOC,
					QTJCMP,
					QTSHPD,
					QTSHPC,
					USRID1,
					UNAME1,
					DEPTID1,
					DNAME1,
					USRID2,
					UNAME2,
					DEPTID2,
					DNAME2,
					USRID3,
					UNAME3,
					DEPTID3,
					DNAME3,
					USRID4,
					UNAME4,
					DEPTID4,
					DNAME4,
					DOCTXT,
					CREDAT,
					CRETIM,
					CREUSR,
					LMODAT,
					LMOTIM,
					LMOUSR,
					INDBZL,
					INDARC,
					UPDCHK,
					KEEPTS
				) VALUES (
					#SHPOKY#,
					#WAREKY#,
					NVL(#SHPMTY#, ' '),
					NVL(#ALSTKY#, ' '),
					NVL(#STATDO#, ' '),
					NVL(#DOCDAT#, ' '),
					NVL(#DOCCAT#, ' '),
					NVL(#PRORTY#, ' '),
					NVL(#DOCUTY#, ' '),
					NVL(#OWNRKY#, ' '),
					NVL(#DRELIN#, ' '),
					NVL(#RQSHPD#, ' '),
					NVL(#RQARRD#, ' '),
					NVL(#RQARRT#, ' '),
					NVL(#LSHPCD#, ' '),
					NVL(#DPTNKY#, ' '),
					NVL(#PTRCVR#, ' '),
					NVL(#PGRC01#, ' '),
					NVL(#PGRC02#, ' '),
					NVL(#PGRC03#, ' '),
					NVL(#PGRC04#, ' '),
					NVL(#PGRC05#, ' '),
					NVL(#VEHINO#, ' '),
					NVL(#DRIVER#, ' '),
					NVL(#ESHPKY#, ' '),
					NVL(#OPURKY#, ' '),
					NVL(#LOCADT#, ' '),
					NVL(#LOCADK#, ' '),
					NVL(#INDDCL#, ' '),
					NVL(#RSNCOD#, ' '),
					NVL(#RSNRET#, ' '),
					NVL(#QTSHPO#, 0),
					NVL(#QTYREF#, 0),
					NVL(#QTAPPO#, 0),
					NVL(#QTALOC#, 0),
					NVL(#QTJCMP#, 0),
					NVL(#QTSHPD#, 0),
					NVL(#QTSHPC#, 0),
					NVL(#USRID1#, ' '),
					NVL(#UNAME1#, ' '),
					NVL(#DEPTID1#, ' '),
					NVL(#DNAME1#, ' '),
					NVL(#USRID2#, ' '),
					NVL(#UNAME2#, ' '),
					NVL(#DEPTID2#, ' '),
					NVL(#DNAME2#, ' '),
					NVL(#USRID3#, ' '),
					NVL(#UNAME3#, ' '),
					NVL(#DEPTID3#, ' '),
					NVL(#DNAME3#, ' '),
					NVL(#USRID4#, ' '),
					NVL(#UNAME4#, ' '),
					NVL(#DEPTID4#, ' '),
					NVL(#DNAME4#, ' '),
					NVL(#DOCTXT#, ' '),
					TO_CHAR(SYSDATE,'YYYYMMDD'),
					TO_CHAR(SYSDATE,'HH24MISS'),
					NVL(#SES_USER_ID#, 'DEV'),
					TO_CHAR(SYSDATE,'YYYYMMDD'),
					TO_CHAR(SYSDATE,'HH24MISS'),
					NVL(#SES_USER_ID#, 'DEV'),
					NVL(#INDBZL#, ' '),
					NVL(#INDARC#, ' '),
					0,
					NVL(#KEEPTS#, ' ')
				)
	</insert>
	
	<insert id="SHPDI_INSERT" parameterClass="Map">
		INSERT INTO SHPDI(
				SHPOKY,
				SHPOIT,
				STATIT,
				SKUKEY,
				QTYORG,
			 	QTSHPO,
				QTYREF,
				QTAPPO,
				QTALOC,
				QTJCMP,
				QTSHPD,
				QTSHPC,
				QTYUOM,
				MEASKY,
				UOMKEY,
				QTPUOM,
				DUOMKY,
				QTDUOM,
				SASTKY,
				ALSTKY,
				TKFLKY,
				ESHPKY,
				ESHPIT,
				OPURKY,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				EXSUBS,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				PROCHA,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				PTNRKY,
				NAME01,
				SLAND1,
				SBKTXT,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				#SHPOKY#,
				#SHPOIT#,
				' ',
				NVL(#MATNR#, ' '),
				TO_NUMBER(NVL(#QTSORG#, 0)),
				TO_NUMBER(NVL(#QTSHPO#, 0)),
				TO_NUMBER(NVL(#QTYREF#, 0)),
				TO_NUMBER(NVL(#QTAPPO#, 0)),
				TO_NUMBER(NVL(#QTALOC#, 0)),
				TO_NUMBER(NVL(#QTJCMP#, 0)),
				TO_NUMBER(NVL(#QTSHPD#, 0)),
				TO_NUMBER(NVL(#QTSHPC#, 0)),
				TO_NUMBER(NVL(#QTYUOM#, 0)),
				NVL(#MEASKY#, ' '),
				NVL(#UOMKEY#, ' '),
				TO_NUMBER(NVL(#QTPUOM#, 0)),
				NVL(#DUOMKY#, ' '),
				TO_NUMBER(NVL(#QTDUOM#, 0)),
				NVL(#SASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#TKFLKY#, ' '),
				NVL(#ESHPKY#, ' '),
				NVL(#ESHPIT#, ' '),
				NVL(#OPURKY#, ' '),
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#EXSUBS#, ' '),
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '),
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(#GRSWGT#, 0)),
				TO_NUMBER(NVL(#NETWGT#, 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(#LENGTH#, 0)),
				TO_NUMBER(NVL(#WIDTHW#, 0)),
				TO_NUMBER(NVL(#HEIGHT#, 0)),
				TO_NUMBER(NVL(#CUBICM#, 0)),
				TO_NUMBER(NVL(#CAPACT#, 0)),
				NVL(#PROCHA#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				TO_NUMBER(NVL(#LOTA16#, 0)),
				TO_NUMBER(NVL(#LOTA17#, 0)),
				TO_NUMBER(NVL(#LOTA18#, 0)),
				TO_NUMBER(NVL(#LOTA19#, 0)),
				TO_NUMBER(NVL(#LOTA20#, 0)),
				NVL(#AWMSNO#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#PTNRKY#, ' '),
				NVL(#NAME01#, ' '),
				NVL(#SLAND1#, ' '),
				NVL(#SBKTXT#, ' '),
				TO_CHAR(SYSDATE,'YYYYMMDD'),
				TO_CHAR(SYSDATE,'HH24MISS'),
				NVL(#SES_USER_ID#, 'DEV'),
				TO_CHAR(SYSDATE,'YYYYMMDD'),
				TO_CHAR(SYSDATE,'HH24MISS'),
				NVL(#SES_USER_ID#, 'DEV'),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				0
		)
	</insert>
	
	<update id="IF113N00101_UPDATE" parameterClass="Map">
		UPDATE IFWMS113
		   SET N00101 = N00101 + $QTSHPO$
		 WHERE MANDT = #SMANDT#
		   AND VBELN = #SVBELN#
		   AND POSNR = #SPOSNR#
		   AND IFFLG IN ('Y','N')
		   AND WAREKY =  #WAREKY#
	</update>
	
	<update id="IF113STKNUM_UPDATE" parameterClass="Map">
		UPDATE IFWMS113
		   SET N00101 = LFIMG
		 WHERE STKNUM = #STKNUM#
		   AND IFFLG IN ('Y','N')

	</update>
	
	<update id="SHPDH_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET DRELIN = 'V',
		   	   DOCDAT = #DOCDAT#,
		   	   VEHINO = NVL(#VEHINO#, ' '),
		   	   DRIVER = NVL(#DRIVER#, ' '),
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE SHPOKY = #SHPOKY#
	</update>
	
	
	<update id="SHPDHORG_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET WAREKY = #WAREKY#
		     , SHPMTY = NVL(#SHPMTY#, ' ')
		     , ALSTKY = NVL(#ALSTKY#, ' ')
		     , STATDO = NVL(#STATDO#, ' ')
		     , DOCDAT = NVL(#DOCDAT#, ' ')
		     , DOCCAT = NVL(#DOCCAT#, ' ')
		     , DOCUTY = NVL(#DOCUTY#, ' ')
		     , OWNRKY = NVL(#OWNRKY#, ' ')
		     , DRELIN = NVL(#DRELIN#, ' ')
		     , RQSHPD = NVL(#RQSHPD#, ' ')
		     , RQARRD = NVL(#RQARRD#, ' ')
		     , RQARRT = NVL(#RQARRT#, ' ')
		     , LSHPCD = NVL(#LSHPCD#, ' ')
		     , DPTNKY = NVL(#DPTNKY#, ' ')
		     , PTRCVR = NVL(#PTRCVR#, ' ')
		     , PGRC01 = NVL(#PGRC01#, ' ')
		     , PGRC02 = NVL(#PGRC02#, ' ')
		     , PGRC03 = NVL(#PGRC03#, ' ')
		     , PGRC04 = NVL(#PGRC04#, ' ')
		     , PGRC05 = NVL(#PGRC05#, ' ')
		     , VEHINO = NVL(#VEHINO#, ' ')
		     , DRIVER = NVL(#DRIVER#, ' ')
		     , ESHPKY = NVL(#ESHPKY#, ' ')
		     , OPURKY = NVL(#OPURKY#, ' ')
		     , LOCADT = NVL(#LOCADT#, ' ')
		     , LOCADK = NVL(#LOCADK#, ' ')
		     , INDDCL = NVL(#INDDCL#, ' ')
		     , RSNCOD = NVL(#RSNCOD#, ' ')
		     , RSNRET = NVL(#RSNRET#, ' ')
		     , KEEPTS = NVL(#KEEPTS#, ' ')
		     , LMODAT=TO_CHAR(SYSDATE,'YYYYMMDD')
		     , LMOTIM=TO_CHAR(SYSDATE,'HH24MISS')
		     , LMOUSR=#SES_USER_ID#
		 WHERE SHPOKY = #SHPOKY#
	</update>


<!-- TM06 화면 SQL START-->
	
	<!-- TM06 SETEBELN START -->
	<select id="SETEBELN_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	
			    'WMS'||( MAX( SUBSTR(EBELN,4,9) ) + 1) AS EBELN
		FROM	IFWMS103
		WHERE	1 = 1
		AND		BWART = #BWART#
		AND		SUBSTR(EBELN,0,3) = 'WMS'
	</select>
	<!-- TM06 SETEBELN END -->
	
	
	<!-- TM06 HEAD,SUB INSERT START -->
	<insert id="TM06_INSERT" parameterClass="Map">
		<!-- SQL Key : OUTBOUND.TM.IFWMS103.INSERT -->
			INSERT INTO IFWMS103
		(
			  MANDT, SEQNO, EBELN, EBELP, LIFNR, BWART, BEDAT, ZEKKO_AEDAT, LOEKZ, MATNR
			, MAKTX_K, MAKTX_E, MAKTX_C, MENGE, MEINS, WERKS, LGORT, EINDT, MENGE_B, MENGE_R
			, BWTAR, VGBEL, VGPOS, VGDAT, ELIKZ, STATUS, TDATE, CDATE, IFFLG, ERTXT
			, WAREKY, SKUKEY, DESC01, DESC02, USRID1, DEPTID1, USRID2, DEPTID2, USRID3, DEPTID3
			, USRID4, DEPTID4, MBLNO, MIPNO, C00101, C00102, C00103, C00104, C00105, N00101
			, N00102, CREDAT, CRETIM, LMODAT, LMOTIM
		)
		VALUES
		(
			  #MANDT#
			, #SEQNO# 
			, #EBELN#
			, NVL( TO_CHAR( #EBELP# ), ' ' )
			, NVL( #LIFNR#, ' ' )
			, NVL( #BWART#, ' ' )
			, NVL( #BEDAT#, ' ' )
			, TO_CHAR(SYSDATE, 'YYYYMMDD')	
			, NVL( #LOEKZ#, '0' )
			, NVL( #SKUKEY#, ' ' )
			, NVL( #DESC01#, ' ' ) 
			, NVL( #MAKTX_E#, ' ' )
			, NVL( #MAKTX_C#, ' ' )
			, TO_NUMBER(NVL(TRIM( #QTSIWH# ), 0))
			, NVL( #UOMKEY#, ' ' )
			, (SELECT	ADDR05 AS WERKS	 FROM	WAHMA WHERE	1 = 1 AND		WAREKY = #WAREKY#)
			, NVL( #LGORT#, ' ' ) <!-- LGORT -->
			, NVL( #EINDT#, ' ' )
			, TO_NUMBER(NVL(TRIM( #MENGE_B# ), 0))
			, TO_NUMBER(NVL(TRIM( #MENGE_R# ), 0))
			, NVL( #BWTAR#, ' ' )
			, 'SH-'||TO_CHAR(SYSDATE,'MMDDHH24MI')	 
			, NVL( #VGPOS#, ' ' )
			, NVL( #VGDAT#, ' ' )  <!-- VGDAT -->
			, NVL( #ELIKZ#, '0' )
			, NVL( #STATUS#, ' ' )
			, TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS')	
			, NVL( #CDATE#, ' ' )
			, NVL( #IFFLG#, ' ' )
			, NVL( #ERTXT#, ' ' )
			, NVL( #WAREKY#, ' ' )
			, NVL( #SKUKEY#, ' ' )
			, NVL( #DESC01#, ' ' ) 
			, NVL((SELECT DESC02 FROM SKUMA WHERE 1=1 AND OWNRKY = #SES_OWNER# AND SKUKEY = #SKUKEY# ),' ')
			, #SES_USER_ID#
			, NVL( #DEPTID1#, ' ' ) 
			, NVL( #USRID2#, ' ' )
			, NVL( #DEPTID2#, ' ' )
			, NVL( #USRID3#, ' ' )
			, NVL( #DEPTID3#, ' ' )
			, NVL( #USRID4#, ' ' )
			, NVL( #DEPTID4#, ' ' )
			, NVL( #MBLNO#, ' ' )
			, NVL( #MIPNO#, ' ' )
			, NVL( #C00101#, ' ' )
			, NVL( #C00102#, ' ' )
			, NVL( #C00103#, ' ' )
			, NVL( #C00104#, ' ' )
			, NVL( #C00105#, ' ' )
			, TO_NUMBER(NVL(TRIM( #N00101# ), 0))
			, TO_NUMBER(NVL(TRIM( #N00102# ), 0))
			, TO_CHAR(SYSDATE, 'YYYYMMDD')	
			, TO_CHAR(SYSDATE, 'HH24MISS')	
			, TO_CHAR(SYSDATE, 'YYYYMMDD')	
			, TO_CHAR(SYSDATE, 'HH24MISS')	
		)
	</insert>
	<!-- TM06 HEAD,SUB INSERT END -->
	
	
		
	
	<!-- TM06 HEAD GRID SELECT START -->
	<select id="TM06_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	'' AS EBELN
				, #BWART# AS BWART
				, TO_CHAR(SYSDATE, 'YYYYMMDD') AS ZEKKO_AEDAT
				, #WAREKY# AS WAREKY
				, '' AS PTNRKY
				, '' AS NAME01
		FROM	DUAL
		WHERE	ROWNUM = 1
	</select>
	<!-- TM06 HEAD GRID SELECT END -->
	
	<!-- TM06 SUB GRID SELECT START -->
	<select id="TM06Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	'' AS EBELN,
				'' AS SKUKEY,
				'' AS DESC01,
				'' AS EBELP,
				'' AS QTSIWH,
				'' AS UOMKEY
		FROM	DUAL
		WHERE	ROWNUM = 1
	</select>
	<!-- TM06 SUB GRID SELECT END -->
	
	<select id="WERKS_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : FIND.WERKS -->
		SELECT	ADDR05 AS WERKS 
		FROM	WAHMA
		WHERE	1 = 1
		AND		WAREKY = #WAREKY#
	</select>
	
	<select id="SKUMA_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : FIND.SKUMA -->
		SELECT	*
		FROM	SKUMA
		WHERE	1 = 1
		AND		OWNRKY = #OWNRKY#
		AND		SKUKEY = #SKUKEY#
	</select>
		
	<!-- TM06  품번코드  START -->
	<select id="SKUKEYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  COUNT(*) CNT
		FROM	SKUWC SW,
				MEASI MS,
				SKUMA SM
		WHERE	1 = 1
		AND		SW.SKUKEY = #SKUKEY#	<!-- PARAMETER[0]  -->
		<!-- AND		SW.OWNRKY = #OWNRKY# -->	<!-- PARAMETER[1]  -->
		AND		SW.OWNRKY = (
								SELECT	ADDR05 AS WERKS 
								FROM	WAHMA
								WHERE	1 = 1
								AND		WAREKY = #WAREKY#
							)
		AND		SW.WAREKY = #WAREKY#	<!-- PARAMETER[2]  -->
		AND		MS.INDDFU = 'V'
		AND		MS.MEASKY = SW.MEASKY
		AND		SW.SKUKEY = SM.SKUKEY
		AND		SW.OWNRKY = SM.OWNRKY
	</select>
	
	<select id="SKUKEY_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  DISTINCT
				SM.SKUKEY AS "SKUKEY",
				SM.DESC01 AS "DESC01",
				DECODE(NVL(SM.DESC02,'X'),'X',SM.DESC01, SM.DESC02) AS "DESC02", 
				SW.MEASKY AS "MEASKY",
				SW.OWNRKY AS "OWNRKY",
				SM.ASKU01 AS "ASKU01",
				SM.ASKU02 AS "ASKU02",
				SM.ASKU03 AS "ASKU03",
				SM.ASKU04 AS "ASKU04",
				SM.ASKU05 AS "ASKU05",
				SM.EANCOD AS "EANCOD",
				SM.GTINCD AS "GTINCD",
				SM.SKUG01 AS "SKUG01",
				SM.SKUG02 AS "SKUG02",
				SM.SKUG03 AS "SKUG03",
				SM.SKUG04 AS "SKUG04",
				SM.SKUG05 AS "SKUG05",
				SM.GRSWGT AS "GRSWGT",
				SM.NETWGT AS "NETWGT",
				SM.WGTUNT AS "WGTUNT",
				SM.LENGTH AS "LENGTH",
				SM.WIDTHW AS "WIDTHW",
				SM.HEIGHT AS "HEIGHT",
				SM.CUBICM AS "CUBICM",
				SM.CAPACT AS "CAPACT",
				SM.DUOMKY AS "DUOMKY",
				SM.DUOMKY AS "UOMKEY",
				SM.QTDUOM AS "QTDUOM",
				SM.QTDUOM AS "QTPUOM"
		FROM	SKUWC SW,
				MEASI MS,
				SKUMA SM
		WHERE	1 = 1
		AND		SW.SKUKEY = #SKUKEY#	<!-- PARAMETER[0]  -->
		AND		SW.OWNRKY = 'CMAS'      <!-- PARAMETER[1]  -->
		AND		SW.WAREKY = #WAREKY#	<!-- PARAMETER[2]  -->
		AND		MS.INDDFU = 'V'
		AND		MS.MEASKY = SW.MEASKY
		AND		SW.SKUKEY = SM.SKUKEY
		AND		SW.OWNRKY = SM.OWNRKY
	</select>
	<!-- TM06  품번코드  END -->
	
	
	
	
	<!-- TM06 재조회 HEAD GRID SELECT END -->
	<select id="TM06H_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	  SH.EBELN AS EBELN
				, SH.BWART AS BWART
				, SH.ZEKKO_AEDAT AS ZEKKO_AEDAT
				, SH.WAREKY AS WAREKY
				, SH.LIFNR AS PTNRKY  
				, (SELECT NAME01 AS NAME01      FROM BZPTN      WHERE 1 = 1      AND PTNRKY = SH.LIFNR     AND ROWNUM = 1  ) AS NAME01		
		FROM	IFWMS103 SH
		WHERE	1 = 1
		AND		EBELN = #EBELN#
       GROUP BY SH.EBELN, SH.BWART, SH.ZEKKO_AEDAT,SH.WAREKY , SH.LIFNR
	</select>
	<!-- TM06 재조회 HEAD GRID SELECT END -->
	
	
	<!-- TM06 재조회 SUB GRID SELECT START -->
	<select id="TM06I_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	EBELN AS EBELN
			,	SKUKEY AS SKUKEY
			,	DESC01 AS DESC01
			,	EBELP AS EBELP
			,	MENGE AS QTSIWH
			,	MEINS AS UOMKEY
		FROM	IFWMS103
		WHERE	1 = 1
		AND		EBELN = #EBELN#		
	</select>
	<!-- TM06 재조회 SUB GRID SELECT END -->
<!-- TM06 화면 SQL END-->


<!-- TM07 화면 SQL START-->	

	<!-- TM07 HEAD GRID SELECT START -->
	<select id="TM07_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : OUTBOUND.TM.IFWMS103.HEADER.LIST -->
		SELECT	EBELN AS VBELN
			  , BWART
			  , BEDAT AS WADAT
			  , WAREKY
			  , USRID1 AS WARETG
			  , DEPTID1
		FROM	IFWMS103
		WHERE	1 = 1
		AND		BWART IN ('101','102') 
		AND		IFFLG = 'N'
		AND		EBELN LIKE 'WMS%'
		AND		WAREKY = #WAREKY#
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		GROUP BY EBELN, BWART, BEDAT, WAREKY, USRID1, DEPTID1
		ORDER BY EBELN DESC
	</select>
	<!-- TM07 HEAD GRID SELECT END -->
	
	
	<!-- TM07 SUB GRID SELECT START -->
	 <select id="TM07Sub_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SQL Key : OUTBOUND.TM.IFWMS103.ITEM.LIST -->
		SELECT *
 			 FROM IFWMS103
 		WHERE 1 = 1
  			 AND EBELN = #VBELN#
 			ORDER BY EBELP
	</select>
	<!-- TM07 SUB GRID SELECT END -->
	
	<!-- TM07 HEAD,SUB GRID DELETE START -->
	<delete id="TM07_DELETE" parameterClass="Map">
		<!-- SQL Key : OUTBOUND.TM.IFWMS103.DELETE -->
		DELETE 
		FROM	IFWMS103
		WHERE	1 = 1
		AND		EBELN = #VBELN#
		AND		IFFLG = 'N'
	</delete>
	<!-- TM07 HEAD,SUB GRID DELETE END -->
	
	
<!-- TM07 화면 SQL END-->

	
	<select id="IF113PROC_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_COPY_IFWMS113_TO_SHIP( #SES_USER_ID#, #OWNRKY#, #WAREKY#, NVL(#STKNUM#, ' ')) }
	</select>
	
	<select id="IF313PROC_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_LOTOS_IFWMS313( #SHPOKY# )}
	</select>
	
	<select id="PDELSHPREF_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_DEL_SHP_REF( #SES_USER_ID#, #OWNRKY#, #WAREKY#, #STKNUM#)}
	</select>
	
	<select id="BATCHALLOCATION_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_BATCH_ALLOCATION( #SHPOKY#, #SES_USER_ID#)}
	</select>
	
	<select id="REMOVETASKKY_OBJECT" parameterClass="Map" resultClass="java.lang.String">
		 SELECT TASKKY
		  FROM TASDH
		 WHERE TASKKY IN (SELECT TASKKY
		                    FROM TASDI
		                   WHERE SHPOKY = #SHPOKY#
		                   AND    TASKTY = 'PK'
		                   GROUP BY TASKKY)
		   AND TASOTY in ('210','208')
		   AND EXISTS (SELECT 1
		                 FROM TASDI
		                WHERE TASDI.TASKKY = TASDH.TASKKY
		                  AND TASDI.ACTCDT = '00000000'
		                  AND TASKTY = 'PK')
	</select>
	
	<!-- 오더할당관리  -->
	<update id="ALLOCATIONCANCLE_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET DRELIN = ' ',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE 1 = 1
		<isEqual property="DOCUTY" compareValue="299">
		   AND SHPOKY IN (SELECT DISTINCT SHPOKY FROM SHPDI WHERE STKNUM = #STKNUM#)
		</isEqual>
		<isNotEqual property="DOCUTY" compareValue="299">
		   AND SHPOKY = #SHPOKY#
		</isNotEqual>
	</update>
	
	<update id="TKNUMQNTSUB_UPDATE" parameterClass="Map">
		UPDATE IFWMS113
		   SET N00101 = 0
		 WHERE STKNUM = #STKNUM#
		   AND IFFLG IN ('Y','N')
	</update>
	
	<delete id="REMOVETASDI_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		 WHERE TASKKY = #TASKKY#
		   AND ACTCDT = '00000000'
		   AND TASKTY = 'PK'
	</delete>
	
	<delete id="REMOVETASDH_DELETE" parameterClass="Map">
		DELETE FROM TASDH
		 WHERE TASKKY = #TASKKY#
		   AND TASOTY = '210'
		   AND NOT EXISTS (SELECT 1
		                 FROM TASDI
		                WHERE TASDI.TASKKY = TASDH.TASKKY
		                  AND TASDI.ACTCDT = '00000000'
		                  AND TASKTY = 'PK')
	</delete>
	
	<!-- 오더 조회 삭제 -->
	<!--  select id="TMDOCCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL 
			 , SHORTX AS TEXT_COL
		FROM DOCTM
		WHERE 1 =1
		AND DOCCAT = '300'
		AND DOCUTY IN ('382','386','389','390','393','394','395','396','399')
		ORDER BY DOCUTY	
	</select -->
	<select id="TMDOCCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL 
			 , SHORTX AS TEXT_COL
		FROM DOCTM
		WHERE 1 =1
		AND DOCCAT = '200'
		AND DOCUTY IN ('266','211','214','217','218','220')
		ORDER BY DOCUTY	
	</select>
	
	<select id="TM04HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		 SELECT VBELN
		     , BWART
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS WADAT
		     , WAREKY
		     , KUNNR WARETG
		     , DEPTID1
		  FROM IFWMS113
		 WHERE 1 = 1
		   AND BWART IN ('266','211','214','217','218','220') 
		   AND IFFLG = 'N'
		   AND VBELN LIKE 'WMS%'
		   AND WAREKY = #WAREKY#
		  <isNotEmpty property="RANGE_SQL">
			 $RANGE_SQL$
		  </isNotEmpty>
		 GROUP BY VBELN, BWART, WADAT, WAREKY, KUNNR, DEPTID1
		 ORDER BY VBELN DESC
	</select>
	
	<select id="TM04BODY_LIST" parameterClass="Map" resultClass="DataMap">
		 SELECT POSNR
		 	  , SKUKEY
		 	  , DESC01
		 	  , MEINS
		 	  , LFIMG
		 	  , C00104
		 	  , C00105
		 	  , MANDT
		 	  , VBELN
		 	  , BWART
		 	  , SEQNO
		 	  , WERKS
		 	  , IFFLG
		  FROM IFWMS113
		 WHERE 1 = 1
		   AND VBELN = #VBELN#
		 ORDER BY POSNR
	</select>
	
	<delete id="TM04IFWMS_DELETE" parameterClass="Map">
		DELETE FROM IFWMS113 WHERE VBELN = #VBELN# AND IFFLG = 'N' 
	</delete>
	
	<!--DL06 -->
<update id="SENDFLAGERP_UPDATE" parameterClass="Map">
	UPDATE TASDH
	   SET DRELIN = 'V',
		   DOCDAT = #DOCDAT#,
		   LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
	       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
	       LMOUSR = 'DEV'
	 WHERE TASKKY = #TASKKY#
</update>

<select id="SENDFLAGERP_MAP" parameterClass="Map" resultClass="DataMap">
	 { call P_LOTOS_IFWMS301_BWTAR( #DOCCAT#, #TASOTY#, #TASKKY#, #WAREKY#, #WARETG#, #LOTA01#) }
</select>

<!-- <select id="DL08_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT DISTINCT 
	       DECODE(SH.DOCUTY, '299', SI.STKNUM, SH.SHPOKY) AS KEY,
	       SH.SHPOKY AS SHPOKY,
	       SH.WAREKY AS WAREKY,
	       WH.NAME01 AS WAREKYNM,
	       SH.STATDO AS STATDO,
	       CV.CDESC1 AS STATDONM,
	       SH.DRELIN AS DRELIN,
	       SH.ALSTKY AS ALSTKY,
	       SH.DPTNKY AS DPTNKY,
	       BP.NAME01 AS DPTNKYNM,
	       SH.PTRCVR AS PTRCVR,
	       BT.NAME01 AS PTRCVRNM,
	       SH.PGRC01 AS PGRC01,
	       SH.PGRC02 AS PGRC02,
	       SH.PGRC03 AS PGRC03,
	       SH.PGRC04 AS PGRC04,
	       SH.PGRC05 AS PGRC05,
	       ' ' AS PTNBLK,
	       ' ' AS VGBEL,
	       ' ' AS VEHINO,
	       ' ' AS DRIVER,
	       ' ' AS LOCADT,
	       ' ' AS EMADDR,
	       SH.OWNRKY AS OWNRKY,
	       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
	       SH.DOCCAT AS DOCCAT,
	       DC.SHORTX AS DOCCATNM,
	       SH.SHPMTY AS SHPMTY,
	       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
	       SH.DOCUTY AS DOCUTY,
	       DT.SHORTX AS DOCUTYNM,
	       SH.RQSHPD AS RQSHPD,
	       SH.RQARRD AS RQARRD,
	       SH.RQARRT AS RQARRT,
	       SH.OPURKY AS OPURKY,
	       DECODE(SH.DOCUTY, '299', ' ', SI.SVBELN) AS SVBELN,
	       DECODE(SH.STATDO, 'REF', SI.STKNUM, DECODE(SH.DOCUTY, '299', SI.STKNUM, ' ')) AS STKNUM,
	       CASE WHEN SH.DOCUTY = '299'
	                 THEN NVL((SELECT MAX(SUBSTR(SDATBG,1,8)) FROM IFWMS113 WHERE STKNUM = SI.STKNUM), ' ')
	            ELSE ' ' END AS SDATBG,
	       SH.QTAPPO AS QTAPPO,
	       SH.DOCTXT AS DOCTXT,
	       F_GET_LGORT_IFWMS113(SH.WAREKY, SI.SVBELN) AS ERPWHF,
	       SZF_GET_BZPTN_NM('WH', F_GET_LGORT_IFWMS113(SH.WAREKY, SI.SVBELN)) AS ERPFNM,
	       F_GET_VGDAT_IFWMS113(SH.WAREKY, SI.SVBELN) AS ERPWHT,
	       SZF_GET_BZPTN_NM('WH', F_GET_VGDAT_IFWMS113(SH.WAREKY, SI.SVBELN)) AS ERPTNM,
	       SH.CREDAT AS CREDAT,
	       SH.CRETIM AS CRETIM,
	       SH.CREUSR AS CREUSR,
	       (SELECT NMLAST FROM USRMA WHERE USERID = SH.CREUSR) AS CUSRNM,
	       SH.LMODAT AS LMODAT,
	       SH.LMOTIM AS LMOTIM,
	       SH.LMOUSR AS LMOUSR,
	       (SELECT NMLAST FROM USRMA WHERE USERID = SH.LMOUSR) AS LUSRNM
	  FROM SHPDH SH
	       INNER JOIN (SELECT DISTINCT
	                          SHPOKY AS SHPOKY,
	                          SZMBLNO AS SZMBLNO,
	                          SZMIPNO AS SZMIPNO,
	                          SVBELN AS SVBELN,
	                          STKNUM AS STKNUM
	                     FROM SHPDI) SI
	               ON SH.SHPOKY = SI.SHPOKY
	       INNER JOIN WAHMA WH
	               ON SH.WAREKY = WH.WAREKY
	       LEFT OUTER JOIN BZPTN BP
	                    ON BP.PTNRKY = SH.DPTNKY
	                   AND BP.PTNRTY = 'CT'
	       LEFT OUTER JOIN BZPTN BT
	                    ON BT.PTNRKY = SH.PTRCVR
	                   AND BT.PTNRTY = 'CT'
	       INNER JOIN CMCDV CV
	                     ON SH.STATDO = CV.CMCDVL
	                    AND CV.CMCDKY = 'STATDO'
	       INNER JOIN DOCCM DC
	                     ON SH.DOCCAT = DC.DOCCAT
	       INNER JOIN DOCTM DT
	                     ON SH.DOCUTY = DT.DOCUTY
	       LEFT OUTER JOIN VUSER_WAREDOCUSER DU
	                    ON SH.SHPMTY = DU.DOCUTY
	                   AND SH.WAREKY = DU.WAREKY
	WHERE SH.DRELIN = 'V'
  		 AND SH.INDDCL &lt;&gt; 'V'
   AND STATDO &lt;&gt; 'REF'
   <isNotEmpty property="AREA">
		    AND SI.SZMBLNO = #AREA#
	    </isNotEmpty>
	    <isNotEmpty property="ZONE">
		    AND SI.SZMIPNO = #ZONE#
	    </isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		<isNotEmpty property="WAREKY">			
			AND SH.WAREKY = #WAREKY# 
		</isNotEmpty> 

	 ORDER BY SH.SHPOKY ASC
</select> -->

<select id="DL08Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DECODE(SI.STATIT, 'REF', SI.STKNUM, SI.SHPOKY) AS key,
	       SI.SHPOKY AS SHPOKY,
	       SI.SHPOIT AS SHPOIT,
	       SI.STATIT AS STATIT,
	       CV.CDESC1 AS STATITNM,
	       SI.SKUKEY AS SKUKEY,
	       SI.QTSHPO AS QTSHPO,
	       SI.QTYORG AS QTYORG,
	       SI.QTYREF AS QTYREF,
	       SI.QTAPPO AS QTAPPO,
	       SI.QTALOC AS QTALOC,
	       SI.QTJCMP AS QTJCMP,
	       DECODE(SI.EXSUBS, 'V', SI.QTSHPD, SI.QTJCMP) AS QTSHPD,
	       SI.QTSHPC AS QTSHPC,
	       SI.QTYUOM AS QTYUOM,
	       SI.MEASKY AS MEASKY,
	       SI.UOMKEY AS UOMKEY,
	       SI.QTPUOM AS QTPUOM,
	       SI.DUOMKY AS DUOMKY,
	       SI.QTDUOM AS QTDUOM,
	       SI.SASTKY AS SASTKY,
	       SI.ALSTKY AS ALSTKY,
	       SI.TKFLKY AS TKFLKY,
	       SI.ESHPKY AS ESHPKY,
	       SI.ESHPIT AS ESHPIT,
	       SI.OPURKY AS OPURKY,
	       SI.REFDKY AS REFDKY,
	       SI.REFDIT AS REFDIT,
	       SI.REFCAT AS REFCAT,
	       SI.REFDAT AS REFDAT,
	       SI.EXSUBS AS EXSUBS,
	       SI.DESC01 AS DESC01,
	       SI.DESC02 AS DESC02,
	       SI.ASKU01 AS ASKU01,
	       SI.ASKU02 AS ASKU02,
	       SI.ASKU03 AS ASKU03,
	       SI.ASKU04 AS ASKU04,
	       SI.ASKU05 AS ASKU05,
	       SI.EANCOD AS EANCOD,
	       SI.GTINCD AS GTINCD,
	       SI.SKUG01 AS SKUG01,
	       SI.SKUG02 AS SKUG02,
	       SI.SKUG03 AS SKUG03,
	       SI.SKUG04 AS SKUG04,
	       SI.SKUG05 AS SKUG05,
	       SI.GRSWGT AS GRSWGT,
	       SI.NETWGT AS NETWGT,
	       SI.WGTUNT AS WGTUNT,
	       SI.LENGTH AS LENGTH,
	       SI.WIDTHW AS WIDTHW,
	       SI.HEIGHT AS HEIGHT,
	       SI.CUBICM AS CUBICM,
	       ROUND((SI.QTJCMP/SI.QTDUOM)*SI.CUBICM,3) AS CUBICT,
	       SI.CAPACT AS CAPACT,
	       SI.PROCHA AS PROCHA,
	       SI.AREAKY AS AREAKY,
	       SI.LOTA01 AS LOTA01,
	       SI.LOTA02 AS LOTA02,
			(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = SI.LOTA02) AS LOTA02NM,
	       SI.LOTA03 AS LOTA03,
	       SI.LOTA04 AS LOTA04,
	       SI.LOTA05 AS LOTA05,
	       SI.LOTA06 AS LOTA06,
	       SI.LOTA07 AS LOTA07,
	       SI.LOTA08 AS LOTA08,
	       SI.LOTA09 AS LOTA09,
	       SI.LOTA10 AS LOTA10,
	       SI.LOTA11 AS LOTA11,
	       SI.LOTA12 AS LOTA12,
	       SI.LOTA13 AS LOTA13,
	       SI.LOTA14 AS LOTA14,
	       SI.LOTA15 AS LOTA15,
	       SI.LOTA16 AS LOTA16,
	       SI.LOTA17 AS LOTA17,
	       SI.LOTA18 AS LOTA18,
	       SI.LOTA19 AS LOTA19,
	       SI.LOTA20 AS LOTA20,
	       SI.AWMSNO AS AWMSNO,
	       SI.SMANDT AS SMANDT,
	       SI.SEBELN AS SEBELN,
	       SI.SEBELP AS SEBELP,
	       SI.STRAID AS STRAID,
	       SI.SVBELN AS SVBELN,
	       SI.SPOSNR AS SPOSNR,
	       SI.STKNUM AS STKNUM,
	       SI.STPNUM AS STPNUM,
	       SI.SWERKS AS SWERKS,
	       SI.SLGORT AS SLGORT,
	       SI.SDATBG AS SDATBG,
	       SI.STDLNR AS STDLNR,
	       SI.SSORNU AS SSORNU,
	       SI.SSORIT AS SSORIT,
	       SI.SMBLNR AS SMBLNR,
	       SI.SZEILE AS SZEILE,
	       SI.SMJAHR AS SMJAHR,
	       SI.SXBLNR AS SXBLNR,
	       SI.SAPSTS AS SAPSTS,
	       SI.PTNRKY AS PTNRKY,
	       SI.NAME01 AS NAME01,
	       SI.SLAND1 AS SLAND1,
	       SI.SBKTXT AS SBKTXT,
	       SH.SHPMTY AS SHPMTY,
	       SI.STRAID AS VGBEL,
	       0 AS QTUALO,
	       SI.CREDAT,
		   SI.CRETIM,
		   SI.CREUSR,
		   ' ' AS CUSRNM,
		   SI.LMODAT,
		   SI.LMOTIM,
		   SI.LMOUSR,
		   ' ' AS LUSRNM
	  FROM SHPDH SH
	       INNER JOIN SHPDI SI
	       ON    SH.SHPOKY = SI.SHPOKY
	       INNER JOIN CMCDV CV
	       ON    CV.CMCDKY = 'STATIT'
	       AND   CV.CMCDVL = SI.STATIT
	WHERE  SH.INDDCL = ' '
	   AND SH.DOCUTY &lt;&gt; '299'
	   AND SH.SHPOKY = SI.SHPOKY
	<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
	</isNotEmpty>
	<isNotEmpty property="WAREKY">			
			AND  SH.WAREKY = #WAREKY# 
	</isNotEmpty>
	 <isNotEmpty property="SHPOKY">			
			 AND  SI.SHPOKY = #SHPOKY# 
	</isNotEmpty>
	ORDER BY SI.SVBELN, SI.SHPOIT
</select>

	<select id="CNTTASK_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*) AS CNT
		  FROM TASDI
		 WHERE SHPOKY = #SHPOKY#
	   --  AND ACTCDT = '00000000'
		   AND STATIT = 'NEW'
		   AND TASKTY = 'PK'
	</select>

<select id="VALIDDL08_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SD.SHPOKY AS SHPOKY
		     , SD.SHPOIT AS SHPOIT
		     ,  SD.SKUKEY AS SKUKEY
		     ,  CASE WHEN SD.STATIT IN ('PSH','FSH') THEN 'OUT_M0141' || ' ' ||SD.SHPOKY -- 출하문서번호 [{0}] 는 이미 출하완료 되어있습니다.
		             WHEN SD.QTSHPO &lt; SD.QTSHPD THEN 'OUT_M0118'||SD.SHPOKY||' '||SD.SHPOIT||' '||SD.SKUKEY||' '||TO_CHAR(SD.QTSHPO)||' '||TO_CHAR(SD.QTSHPD) --[{0}/{1}/{2}] 지시수량({3})보다 출하완료수량({4})이 많습니다.
		             WHEN SD.QTJCMP &lt; SD.QTSHPD THEN 'OUT_M0116'||SD.SHPOKY||' '||SD.SHPOIT||' '||SD.SKUKEY||' '||TO_CHAR(SD.QTSHPD)||' '||TO_CHAR(SD.QTJCMP) -- [{0}/{1}/{2}] 출하완료수량({3})이 피킹수량({4})보다 클 수 없습니다.
		             WHEN SW.OBPROT = 'V' THEN 'OUT_M0119'||SD.SHPOKY||' '||SD.SHPOIT||' '||SD.SKUKEY||' '||SD.SKUKEY -- [{0}/{1}/{2}] 품목 [{3}]는 출고 제한 (수주블락) 품목입니다.
		             WHEN SD.INDDCL = 'V' THEN 'OUT_M0141'||SD.SHPOKY --[출하문서번호 [{0}] 는 이미 출하완료 되어있습니다.
		             WHEN SD.QTSHPO &lt; SD.QTALOC  OR  SD.QTSHPO &lt; SD.QTJCMP THEN 'VALID_M1562'||SD.SHPOKY -- 오더수량이 변경되어 과할당/과피킹 처리된 데이터가 존재합니다. 출고문서번호 : [{0}]
		             ELSE ' ' END AS RESULTMSG
		  FROM (SELECT TG.SHPOKY
		             , TG.SHPOIT
		             , TS.STATIT
		             , TS.SKUKEY
		             , TS.QTYORG
		             , TS.QTSHPO
		             , TS.QTALOC
		             , TS.QTJCMP
		             , SH.INDDCL
		             , TG.QTSHPD
		          FROM (
		          			$APPENDQUERY$ 
		                ) TG
		               INNER JOIN SHPDH SH ON SH.SHPOKY = TG.SHPOKY
		               INNER JOIN SHPDI TS ON TS.SHPOKY = TG.SHPOKY AND TS.SHPOIT = TG.SHPOIT
		         GROUP BY TG.SHPOKY, TG.SHPOIT, TS.STATIT, TS.SKUKEY,
		                  TS.QTYORG, TS.QTSHPO, TS.QTALOC, TS.QTJCMP,
		                  TG.QTSHPD, SH.INDDCL
		       ) SD
		       INNER JOIN SKUWC SW ON SW.OWNRKY = #OWNRKY#
		                          AND SW.WAREKY = #WAREKY#
		                          AND SW.SKUKEY = SD.SKUKEY
		 ORDER BY SD.SHPOKY, SD.SHPOIT
	</select>

	<update id="CLOSESHPDH_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET INDDCL = 'V',
		   	   DOCDAT = #DOCDAT#,
		   	   USRID1 = NVL((SELECT EMPLID FROM USRMA WHERE USERID = #SES_USER_ID#), ' '),
               UNAME1 = NVL((SELECT USNAME FROM ERPUSR WHERE USERID = (SELECT EMPLID FROM USRMA WHERE USERID = #SES_USER_ID#) AND WERKS = SHPDH.OWNRKY), ' '),
               DEPTID1 = NVL((SELECT DEPTID FROM ERPUSR WHERE USERID = (SELECT EMPLID FROM USRMA WHERE USERID = #SES_USER_ID#) AND WERKS = SHPDH.OWNRKY), ' '),
               DNAME1 = NVL((SELECT DPNAME FROM ERPUSR WHERE USERID = (SELECT EMPLID FROM USRMA WHERE USERID = #SES_USER_ID#) AND WERKS = SHPDH.OWNRKY), ' '),
               LSHPCD = TO_CHAR(SYSDATE, 'YYYYMMDD'),
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE SHPOKY = #SHPOKY#
           AND SHPDH.QTALOC = SHPDH.QTJCMP
	</update>
	
	<update id="SHPDI_UPDATE" parameterClass="Map">
		UPDATE SHPDI
		   SET QTSHPD = #QTSHPD#,
      		   ALSTKY = #ALSTKY#,
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE SHPOKY = #SHPOKY#
           AND SHPOIT = #SHPOIT#
           AND NOT EXISTS (SELECT 1 
                             FROM SHPDH 
                            WHERE SHPOKY = SHPDI.SHPOKY 
                              AND INDDCL = 'V')
	</update>
	
	<update id="SHPDIORG_UPDATE" parameterClass="Map">
		UPDATE SHPDI
		   SET STATIT = NVL(#STATIT#, ' ')
		     , SKUKEY = NVL(#SKUKEY#, ' ')
		     , QTYORG = TO_NUMBER(NVL(#QTYORG#, 0))
		     , QTSHPO = TO_NUMBER(NVL(#QTSHPO#, 0))
		     , QTAPPO = TO_NUMBER(NVL(#QTAPPO#, 0))
		     , QTYUOM = TO_NUMBER(NVL(#QTYUOM#, 0))
		     , MEASKY = NVL(#MEASKY#, ' ')
		     , UOMKEY = NVL(#UOMKEY#, ' ')
		     , QTPUOM = TO_NUMBER(NVL(#QTPUOM#, 0))
		     , SASTKY = NVL(#SASTKY#, ' ')
		     , ALSTKY = NVL(#ALSTKY#, ' ')
		     , TKFLKY = NVL(#ALSTKY#, ' ')
		     , ESHPKY = NVL(#ESHPKY#, ' ')
		     , ESHPIT = NVL(#ESHPIT#, ' ')
		     , OPURKY = NVL(#OPURKY#, ' ')
		     , REFDKY = NVL(#REFDKY#, ' ')
		     , REFDIT = NVL(#REFDIT#, ' ')
		     , REFCAT = NVL(#REFCAT#, ' ')
		     , REFDAT = NVL(#REFDAT#, ' ')
		     , EXSUBS = NVL(#EXSUBS#, ' ')
		     , DESC01 = NVL(#DESC01#, ' ')
		     , DESC02 = NVL(#DESC02#, ' ')
		     , ASKU01 = NVL(#ASKU01#, ' ')
		     , ASKU02 = NVL(#ASKU02#, ' ')
		     , ASKU03 = NVL(#ASKU03#, ' ')
		     , ASKU04 = NVL(#ASKU04#, ' ')
		     , ASKU05 = NVL(#ASKU05#, ' ')
		     , EANCOD = NVL(#EANCOD#, ' ')
		     , GTINCD = NVL(#GTINCD#, ' ')
		     , SKUG01 = NVL(#SKUG01#, ' ')
		     , SKUG02 = NVL(#SKUG02#, ' ')
		     , SKUG03 = NVL(#SKUG03#, ' ')
		     , SKUG04 = NVL(#SKUG04#, ' ')
		     , SKUG05 = NVL(#SKUG05#, ' ')
		     , GRSWGT = TO_NUMBER(NVL(#GRSWGT#, 0))
		     , NETWGT = TO_NUMBER(NVL(#NETWGT#, 0))
		     , WGTUNT = NVL(#SHPMTY#, ' ')
		     , LENGTH = TO_NUMBER(NVL(#LENGTH#, 0))
		     , WIDTHW = TO_NUMBER(NVL(#WIDTHW#, 0))
		     , HEIGHT = TO_NUMBER(NVL(#HEIGHT#, 0))
		     , CUBICM = TO_NUMBER(NVL(#CUBICM#, 0))
		     , CAPACT = TO_NUMBER(NVL(#CAPACT#, 0))
		     , PROCHA = NVL(#PROCHA#, ' ')
		     , AREAKY = NVL(#AREAKY#, ' ')
		     , LOTA01 = NVL(#LOTA01#, ' ')
		     , LOTA02 = NVL(#LOTA02#, ' ')
		     , LOTA03 = NVL(#LOTA03#, ' ')
		     , LOTA04 = NVL(#LOTA04#, ' ')
		     , LOTA05 = NVL(#LOTA05#, ' ')
		     , LOTA06 = NVL(#LOTA06#, ' ')
		     , LOTA07 = NVL(#LOTA07#, ' ')
		     , LOTA08 = NVL(#LOTA08#, ' ')
		     , LOTA09 = NVL(#LOTA09#, ' ')
		     , LOTA10 = NVL(#LOTA10#, ' ')
		     , LOTA11 = NVL(#LOTA11#, ' ')
		     , LOTA12 = NVL(#LOTA12#, ' ')
		     , LOTA13 = NVL(#LOTA13#, ' ')
		     , LOTA14 = NVL(#LOTA14#, ' ')
		     , LOTA15 = NVL(#LOTA15#, ' ')
		     , LOTA16 = TO_NUMBER(NVL(#LOTA16#, 0))
		     , LOTA17 = TO_NUMBER(NVL(#LOTA17#, 0))
		     , LOTA18 = TO_NUMBER(NVL(#LOTA18#, 0))
		     , LOTA19 = TO_NUMBER(NVL(#LOTA19#, 0))
		     , LOTA20 = TO_NUMBER(NVL(#LOTA20#, 0))
		     , AWMSNO = NVL(#AWMSNO#, ' ')
		     , SXBLNR = NVL(#SXBLNR#, ' ')
		     , LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD')
		     , LMOTIM = TO_CHAR(SYSDATE,'HH24MISS')
		     , LMOUSR = #SES_USER_ID#
		 WHERE SHPOKY = #SHPOKY# 
		   AND SHPOIT = #SHPOIT#     
	</update>
	
	
	
	
	
	<update id="SHPDIINTER_UPDATE" parameterClass="Map">
		UPDATE IFWMS113
		   SET N00101 = N00101 - #QTSHPO#
		 WHERE MANDT = #SMANDT#
		   AND VBELN = #SVBELN#
		   AND POSNR = #SPOSNR#
		   AND IFFLG IN ('Y','N')
		   AND WERKS = #SES_OWNER#
	</update>

	<update id="CLOSEREFSHPDH_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET INDDCL = 'V',
		   	   LSHPCD = TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   	   LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE SHPOKY IN (SELECT DISTINCT SHPOKY FROM SHPDI WHERE STKNUM = #STKNUM# AND STATIT = 'REF')
  		   AND SHPDH.QTALOC = SHPDH.QTJCMP
	</update>

	<update id="CLOSETOTSHPDI_UPDATE" parameterClass="Map">
		UPDATE SHPDI
		   SET QTSHPD = NVL((SELECT SUM(REF.QTSHPD) FROM SHPDI REF WHERE REF.STKNUM = #STKNUM# AND REF.STATIT = 'REF' AND REF.SKUKEY = SHPDI.SKUKEY),0),
		   	   LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE STKNUM = #STKNUM#
		   AND STATIT &lt;&gt; 'REF'
	</update>
	
	
	<select id="IFWMS301BWTAR_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_LOTOS_IFWMS301_BWTAR( #DOCCAT#, #SHPMTY#, #SHPOKY# ,#ERPWHF# ,#ERPWHT#, NVL(#LOTA01#,' '))}
	</select>
	
	
	<select id="IFWMS213_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_AIRWMS_IFWMS213( #SHPOKY#, #ERPWHF#, #ERPWHT# )}
	</select>
	
<!-- COMBO BOX -->
    <select id="BWARTCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT 
		DOCUTY AS VALUE_COL
		,SHORTX AS TEXT_COL
	FROM 
		DOCTM
	WHERE  1 =1 
	AND DOCCAT = '200'
	AND DOCUTY IN ('211','212','214','215','216','217','218')
	ORDER BY DOCUTY
    </select>
    
    <select id="BWARTCOMBO2_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT 
		DOCUTY AS VALUE_COL
		,SHORTX AS TEXT_COL
	FROM 
		DOCTM
	WHERE  1 =1 
	AND DOCCAT = '100'
	AND DOCUTY IN ('102')
	ORDER BY DOCUTY
    </select>
    
    <select id="BWARTCOMBO3_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT 
		DOCUTY AS VALUE_COL
		,SHORTX AS TEXT_COL
	FROM 
		DOCTM
	WHERE  1 =1 
	AND DOCCAT = '200'
	AND DOCUTY IN ('266')
	ORDER BY DOCUTY
    </select>
   
    <select id="WARETGCOMBO3_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT WAREKY AS VALUE_COL ,
			NAME01 AS TEXT_COL
	FROM   WAHMA 
    </select>
    
    <select id="LOTA05COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SUBSTR(CMCDVL,1,2) AS VALUE_COL,
		       CDESC1 AS TEXT_COL
		FROM CMCDV
		WHERE CMCDKY = 'LOTA05'
		AND 'WSH1' LIKE USARG1
	</select>
	<select id="LOTA02COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL,
		       CDESC1 AS TEXT_COL
		FROM CMCDV
		WHERE CMCDKY = 'LOTA02'
		AND 'WSH1' LIKE USARG1
		<isNotEmpty property="ASNDKY">
			AND WAREKY = #WAREKY#
		</isNotEmpty>
	</select>
	
	<!-- TM05 SETVBELN START -->
	<select id="SETVBELN_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	'WMS'|| NVL((MAX( SUBSTR(VBELN,4,9) ) + 1),'1000001') AS VBELN
		FROM	IFWMS113
		WHERE	1 = 1
		AND		BWART = #BWART#
		AND		SUBSTR(VBELN,0,3) = 'WMS'
	</select>
	
	<insert id="TM05_UPDATE" parameterClass="Map">
		<!-- SQL Key : OUTBOUND.TM.IFWMS113.INSERT -->
		INSERT INTO IFWMS113 (
			      MANDT  , SEQNO  , VBELN  , POSNR  , BWART  , PSTYV  , ZLIKP_ERDAT, ZLIKP_ERZET , ZLIKP_AEDAT, VSTEL      
			    , LFART  , WADAT  , KUNNR  , KUNAG  , WERKS  , LGORT  , MATNR      , LFIMG       , QTSHP      , MEINS      
			    , NETPR  , NETWR  , MWSBP  , MWSDC  , WAERK  , BWTAR  , VGBEL      , VGPOS       , VGDAT      , STKNUM     
			    , SDATBG , STATUS , TDATE  , CDATE  , IFFLG  , RETRY  , ERCOD      , ERTXT       , CUSRID     , CUNAME     
			    , CPSTLZ , LAND1  , TELF1  , TELE2  , SMTP_ADDR , KUKLA    , VTEXT , ADDR        , CNAME      , CPHON      
			    , BNAME  , BPHON  , WAREKY , SKUKEY , DESC01    , DESC02   , USRID1, DEPTID1     , USRID2     , DEPTID2    
			    , USRID3 , DEPTID3, USRID4 , DEPTID4, C00104    , C00105   , CREDAT , CRETIM     , LMODAT     , LMOTIM    
			) VALUES (
			      #MANDT#      
			    , #SEQNO#      
			    , #VBELN#      
			    , #POSNR#      
			    , #BWART#      
			    , NVL( #PSTYV#, ' ' )       
			    , TO_CHAR(SYSDATE, 'YYYYMMDD')
			    , TO_CHAR(SYSDATE, 'HH24MISS')
			    , TO_CHAR(SYSDATE, 'YYYYMMDD')
			    , NVL( #VSTEL#, ' ' )        
			    , NVL( #IFART#, ' ' )       
			    , #WADAT#      
			    , #PTNRKY#      
			    , #PTNRKY#      
			    , (SELECT	ADDR05 AS WERKS	 FROM	WAHMA WHERE	1 = 1 AND		WAREKY = #WAREKY#)    
			    , NVL( #LGORT#, '1.01' )        
			    , #SKUKEY#      
			    , TO_NUMBER(NVL(TRIM( #QTSIWH# ), 0))    
			    , TO_NUMBER(NVL(TRIM( #QTSHP# ), 0))     
			    , NVL( #MEINS#, ' ' )     
			    , TO_NUMBER(NVL(TRIM( #NETPR# ), 0))
			    , TO_NUMBER(NVL(TRIM( #NETWR# ), 0))
			    , TO_NUMBER(NVL(TRIM( #MWSBP# ), 0))
			    , TO_NUMBER(NVL(TRIM( #MWSDC# ), 0))     
			    , NVL( #WAERK#, ' ' )        
			    , NVL( #BWTAR#, ' ' )        
			    , NVL( #VGBEL#, ' ' )        
			    , NVL( #VGPOS#, ' ' )    
			    , NVL( #VGDAT#, '1.011' )       
			    , NVL( #STKNUM#, ' ' )       
			    , NVL( #SDATBG#, ' ' )       
			    , NVL( #STATUS#, ' ' )   
			    , TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')      
			    , NVL( #CDATE#, ' ' )        
			    , #IFFLG#      
			    , TO_NUMBER(NVL(TRIM( #RETRY# ), 0))
			    , TO_NUMBER(NVL(TRIM( #ERCOD# ), 0))		        
			    , NVL( #ERTXT#, ' ' )      
			    , NVL( #CUSRID#, ' ' )      
			    , NVL( #CUNAME#, ' ' )      
			    , NVL( #CPSTLZ#, ' ' )      
			    , NVL( #LAND1#, ' ' )       
			    , NVL( #TELF1#, ' ' )       
			    , NVL( #TELE2#, ' ' )       
			    , NVL( #SMTP_ADDR#, ' ' )   
			    , NVL( #KUKLA#, ' ' )       
			    , NVL( #VTEXT#, ' ' )   
			    , NVL( #ADDR#, ' ' )       
			    , NVL( #CNAME#, ' ' )       
			    , NVL( #CPHON#, ' ' )      
			    , NVL( #BNAME#, ' ' )       
			    , NVL( #BPHON#, ' ' )       
			    , #WAREKY#     
			    , #SKUKEY#     
			    , #DESC01#     
			    , NVL((SELECT DESC02 FROM SKUMA WHERE 1=1 AND OWNRKY = #SES_OWNER# AND SKUKEY = #SKUKEY# ),' ')   
			    , #SES_USER_ID#     
			    , NVL( #PTNRKY#, ' ' ) 
				, NVL( #USRID2#, ' ' )
				, NVL( #DEPTID2#, ' ' )
				, NVL( #USRID3#, ' ' )
				, NVL( #DEPTID3#, ' ' )
				, NVL( #USRID4#, ' ' )
				, NVL( #DEPTID4#, ' ' )
			    , NVL( #C00104#, ' ')  
			    , NVL( #C00105#, ' ')
			    , TO_CHAR(SYSDATE, 'YYYYMMDD')     
			    , TO_CHAR(SYSDATE, 'HH24MISS')     
			    , TO_CHAR(SYSDATE, 'YYYYMMDD')    
			    , TO_CHAR(SYSDATE, 'HH24MISS')   
			)    
    </insert>
	<!-- TM05 HEAD,SUB INSERT END -->
	<insert id="TM05G_UPDATE" parameterClass="Map">
		<!-- SQL Key : OUTBOUND.TM.IFWMS113.INSERT.NEXT -->
		INSERT INTO IFWMS113 
			( MANDT,SEQNO,VBELN,POSNR,BWART,
			PSTYV,ZLIKP_ERDAT,ZLIKP_ERZET,ZLIKP_AEDAT,
			VSTEL,LFART,WADAT,KUNNR,KUNAG,
			WERKS,LGORT,MATNR,LFIMG,QTSHP,
			MEINS,NETPR,NETWR,MWSBP,MWSDC,
			WAERK,BWTAR,VGBEL,VGPOS,VGDAT,
			STKNUM,SDATBG,STATUS,TDATE,CDATE,
			IFFLG,RETRY,ERCOD,ERTXT,CUSRID,
			CUNAME,CPSTLZ,LAND1,TELF1,TELE2,
			SMTP_ADDR,KUKLA,VTEXT,ADDR,CNAME,
			CPHON,BNAME,BPHON,WAREKY,SKUKEY,
			DESC01,DESC02,USRID1,DEPTID1,USRID2,
			DEPTID2,USRID3,DEPTID3,USRID4,DEPTID4,
			CREDAT,CRETIM,LMODAT,LMOTIM,C00101,
			C00102,C00103,C00104,C00105,N00101,
			N00102,C00106,C00107,C00108,C00109,
			C00110,N00103,N00104,N00105)
		SELECT  I.MANDT,#VSEQNO#, #VBELNEXT#, POSNR,'266',I.PSTYV, I.ZLIKP_ERDAT, I.ZLIKP_ERZET, I.ZLIKP_AEDAT,
				I.VSTEL,I.LFART,TO_CHAR(TO_DATE(I.WADAT,'YYYYMMDD')-1,'YYYYMMDD'), I.WAREKY KUNNR, I.WAREKY KUNAG, 
				W2.ADDR05 WERKS, I.LGORT, I.MATNR, ( MAX(LFIMG) - (SELECT NVL(SUM(QTSIWH) ,0)
                       FROM  STKKY S 
                       WHERE S.WAREKY = I.WAREKY 
                       AND   S.SKUKEY = I.MATNR 
                       AND   QTSIWH > 0) )   LFIMG, MAX(I.QTSHP)  QTSHP,
				I.MEINS, I.NETPR, I.NETWR, I.MWSBP,I.MWSDC,
				I.WAERK,I.BWTAR,I.VBELN  VGBEL,I.POSNR VGPOS,I.VGDAT,
				I.STKNUM,I.SDATBG,I.STATUS,I.TDATE,I.CDATE,
				I.IFFLG,I.RETRY,I.ERCOD,I.ERTXT,I.CUSRID,
				I.CUNAME,I.CPSTLZ,I.LAND1,I.TELF1,I.TELE2,
				I.SMTP_ADDR,I.KUKLA,I.VTEXT,I.ADDR,I.CNAME,
				I.CPHON,I.BNAME,I.BPHON,W2.WAREKY, I.SKUKEY,
				I.DESC01,I.DESC02,I.USRID1,I.WAREKY DEPTID1,I.USRID2,
				I.DEPTID2,I.USRID3,I.DEPTID3,I.USRID4,I.DEPTID4,
				I.CREDAT,I.CRETIM,I.LMODAT,I.LMOTIM,I.C00101,
				I.C00102,I.C00103,I.C00104,I.C00105,I.N00101,
				I.N00102,I.C00106,I.C00107,I.C00108,I.C00109,
				I.C00110,I.N00103,I.N00104,I.N00105
		   FROM IFWMS113 I, WAHMA W, WAHMA W2 
		  WHERE VBELN  =  #VBELN#
			AND I.WAREKY = #VWAREKY#
			AND I.WAREKY = W.WAREKY 
			AND W.REGN01 = W2.WAREKY 
		GROUP BY I.MANDT, POSNR,
				 I.PSTYV, I.ZLIKP_ERDAT, I.ZLIKP_ERZET, I.ZLIKP_AEDAT,
				 I.VSTEL,I.LFART,I.WADAT, I.WAREKY, I.WAREKY, 
				 W2.ADDR05, I.LGORT, I.MATNR, 
				 I.MEINS, I.NETPR, I.NETWR, I.MWSBP,I.MWSDC,
				 I.WAERK,I.BWTAR,I.VBELN,I.POSNR,I.VGDAT,
				 I.STKNUM,I.SDATBG,I.STATUS,I.TDATE,I.CDATE,
				 I.IFFLG,I.RETRY,I.ERCOD,I.ERTXT,I.CUSRID,
				 I.CUNAME,I.CPSTLZ,I.LAND1,I.TELF1,I.TELE2,
				 I.SMTP_ADDR,I.KUKLA,I.VTEXT,I.ADDR,I.CNAME,
				 I.CPHON,I.BNAME,I.BPHON,W2.WAREKY, I.SKUKEY,
				 I.DESC01,I.DESC02,I.USRID1,I.WAREKY,I.USRID2,
				 I.DEPTID2,I.USRID3,I.DEPTID3,I.USRID4,I.DEPTID4,
				 I.CREDAT,I.CRETIM,I.LMODAT,I.LMOTIM,I.C00101,
				 I.C00102,I.C00103,I.C00104,I.C00105,I.N00101,
				 I.N00102,I.C00106,I.C00107,I.C00108,I.C00109,
				 I.C00110,I.N00103,I.N00104,I.N00105
	    HAVING ( MAX(LFIMG) - (SELECT NVL(SUM(QTSIWH) ,0)
                       FROM  STKKY S 
                       WHERE S.WAREKY = I.WAREKY 
                       AND   S.SKUKEY = I.MATNR 
                       AND   QTSIWH > 0) ) > 0 
    </insert>
	
    <select id="TM05_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT	'' AS VBELN,
			#BWART# AS BWART,
			TO_CHAR(SYSDATE, 'YYYYMMDD') AS ZEKKO_AEDAT,
			 #WAREKY# AS  WAREKY,
			'' AS PTNRKY,
			'' AS NAME01
	FROM	DUAL
	WHERE	ROWNUM = 1
	</select>

    <select id="TM05Sub_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT	'' AS VBELN,
			'' AS POSNR,
			'' AS SKUKEY,
			'' AS DESC01,
			'' AS QTSIWH,
		    '' AS UOMKEY,
			'' AS CUBICM
	FROM	DUAL
	WHERE	ROWNUM = 1
	</select>
	<!-- TM05 재조회 HEAD GRID SELECT END -->
	<select id="TM05H_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	SH.VBELN AS VBELN
			  , SH.BWART AS BWART 
			  , SH.ZLIKP_AEDAT AS ZEKKO_AEDAT
     		  , SH.WAREKY AS WAREKY
              , SH.KUNAG AS PTNRKY
			  , (SELECT NAME01 AS NAME01      FROM BZPTN      WHERE 1 = 1      AND PTNRKY = SH.KUNAG     AND ROWNUM = 1  ) AS NAME01
		FROM	IFWMS113 SH
		WHERE	1 = 1
		AND		VBELN = #VBELN#
		GROUP BY SH.VBELN , SH.BWART, SH.ZLIKP_AEDAT, SH.WAREKY, SH.KUNAG
	</select>
	<!-- TM05 재조회 HEAD GRID SELECT END -->
	
	<!-- TM05 재조회 SUB GRID SELECT START -->
	<select id="TM05I_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	VBELN AS VBELN
			,	POSNR AS POSNR
			,	SKUKEY AS SKUKEY
			,	DESC01 AS DESC01
			,	LFIMG AS QTSIWH
			,	MEINS AS UOMKEY
			,	'' AS CUBICM
		FROM	IFWMS113
		WHERE	1 = 1
		AND		VBELN = #VBELN#		
	</select>
	<!-- TM05 재조회 SUB GRID SELECT END -->
	
	<select id="TM03_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	'' AS VBELN
				, #BWART# AS BWART
				, TO_CHAR(SYSDATE, 'YYYYMMDD') AS ZEKKO_AEDAT
				, #WAREKY# AS WAREKY
				, '' AS PTNRKY
		FROM	DUAL
		WHERE	ROWNUM = 1
	</select>
     <select id="TM03Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT	'' AS VBELN,
			'' AS POSNR,
			'' AS SKUKEY,
			'' AS DESC01,
			'' AS QTSIWH,
		    '' AS UOMKEY,
			'' AS CUBICM
		FROM	DUAL
		WHERE	ROWNUM = 1
	</select>
	
	<insert id="TM03_UPDATE" parameterClass="Map">
		<!-- SQL Key : OUTBOUND.TM.IFWMS113.INSERT -->
		INSERT INTO IFWMS113 
			( MANDT,SEQNO,VBELN,POSNR,BWART,
			PSTYV,ZLIKP_ERDAT,ZLIKP_ERZET,ZLIKP_AEDAT,
			VSTEL,LFART,WADAT,KUNNR,KUNAG,
			WERKS,LGORT,MATNR,LFIMG,QTSHP,
			MEINS,NETPR,NETWR,MWSBP,MWSDC,
			WAERK,BWTAR,VGBEL,VGPOS,VGDAT,
			STKNUM,SDATBG,STATUS,TDATE,CDATE,
			IFFLG,RETRY,ERCOD,ERTXT,CUSRID,
			CUNAME,CPSTLZ,LAND1,TELF1,TELE2,
			SMTP_ADDR,KUKLA,VTEXT,ADDR,CNAME,
			CPHON,BNAME,BPHON,WAREKY,SKUKEY,
			DESC01,DESC02,USRID1,DEPTID1,USRID2,
			DEPTID2,USRID3,DEPTID3,USRID4,DEPTID4,
			CREDAT,CRETIM,LMODAT,LMOTIM,C00101,
			C00102,C00103,C00104,C00105,N00101,
			N00102,C00106,C00107,C00108,C00109,
			C00110,N00103,N00104,N00105)
SELECT  I.MANDT,#VSEQNO#, #VBELNEXT#, POSNR,'266',I.PSTYV, I.ZLIKP_ERDAT, I.ZLIKP_ERZET, I.ZLIKP_AEDAT,
I.VSTEL,I.LFART,TO_CHAR(TO_DATE(I.WADAT,'YYYYMMDD')-1,'YYYYMMDD'), I.WAREKY KUNNR, I.WAREKY KUNAG, 
W2.ADDR05 WERKS, I.LGORT, I.MATNR, ( MAX(LFIMG) - (SELECT NVL(SUM(QTSIWH) ,0)
                       FROM  STKKY S 
                       WHERE S.WAREKY = I.WAREKY 
                       AND   S.SKUKEY = I.MATNR 
                       AND   QTSIWH > 0) )   LFIMG, MAX(I.QTSHP)  QTSHP,
		I.MEINS, I.NETPR, I.NETWR, I.MWSBP,I.MWSDC,
		I.WAERK,I.BWTAR,I.VBELN  VGBEL,I.POSNR VGPOS,I.VGDAT,
		I.STKNUM,I.SDATBG,I.STATUS,I.TDATE,I.CDATE,
		I.IFFLG,I.RETRY,I.ERCOD,I.ERTXT,I.CUSRID,
		I.CUNAME,I.CPSTLZ,I.LAND1,I.TELF1,I.TELE2,
		I.SMTP_ADDR,I.KUKLA,I.VTEXT,I.ADDR,I.CNAME,
		I.CPHON,I.BNAME,I.BPHON,W2.WAREKY, I.SKUKEY,
		I.DESC01,I.DESC02,I.USRID1,I.WAREKY DEPTID1,I.USRID2,
		I.DEPTID2,I.USRID3,I.DEPTID3,I.USRID4,I.DEPTID4,
		I.CREDAT,I.CRETIM,I.LMODAT,I.LMOTIM,I.C00101,
		I.C00102,I.C00103,I.C00104,I.C00105,I.N00101,
		I.N00102,I.C00106,I.C00107,I.C00108,I.C00109,
		I.C00110,I.N00103,I.N00104,I.N00105
		FROM IFWMS113 I, WAHMA W, WAHMA W2 
		WHERE VBELN  =  #VBELN#
		AND I.WAREKY = #VWAREKY#
		AND I.WAREKY = W.WAREKY 
		AND W.REGN01 = W2.WAREKY 
		GROUP BY   I.MANDT, POSNR,
		 I.PSTYV, I.ZLIKP_ERDAT, I.ZLIKP_ERZET, I.ZLIKP_AEDAT,
		I.VSTEL,I.LFART,I.WADAT, I.WAREKY, I.WAREKY, 
		W2.ADDR05, I.LGORT, I.MATNR, 
		I.MEINS, I.NETPR, I.NETWR, I.MWSBP,I.MWSDC,
		I.WAERK,I.BWTAR,I.VBELN,I.POSNR,I.VGDAT,
		I.STKNUM,I.SDATBG,I.STATUS,I.TDATE,I.CDATE,
		I.IFFLG,I.RETRY,I.ERCOD,I.ERTXT,I.CUSRID,
		I.CUNAME,I.CPSTLZ,I.LAND1,I.TELF1,I.TELE2,
		I.SMTP_ADDR,I.KUKLA,I.VTEXT,I.ADDR,I.CNAME,
		I.CPHON,I.BNAME,I.BPHON,W2.WAREKY, I.SKUKEY,
		I.DESC01,I.DESC02,I.USRID1,I.WAREKY,I.USRID2,
		I.DEPTID2,I.USRID3,I.DEPTID3,I.USRID4,I.DEPTID4,
		I.CREDAT,I.CRETIM,I.LMODAT,I.LMOTIM,I.C00101,
		I.C00102,I.C00103,I.C00104,I.C00105,I.N00101,
		I.N00102,I.C00106,I.C00107,I.C00108,I.C00109,
		I.C00110,I.N00103,I.N00104,I.N00105
	HAVING ( MAX(LFIMG) - (SELECT NVL(SUM(QTSIWH) ,0)
                       FROM  STKKY S 
                       WHERE S.WAREKY = I.WAREKY 
                       AND   S.SKUKEY = I.MATNR 
                       AND   QTSIWH > 0) ) > 0
    </insert>
	<select id="WARETGval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		FROM BZPTN
		WHERE PTNRKY= #PTNRKY#
	</select>
	
	<select id="WARETGNAME_MAP" parameterClass="Map" resultClass="DataMap">
	    SELECT NAME01 AS NAME01
	    FROM BZPTN
	    WHERE 1 = 1 
	  	AND PTNRKY = #PTNRKY#
	  	AND ROWNUM = 1
	</select>
	
	<select id="SKUCODE_MAP" parameterClass="Map" resultClass="DataMap">
	    SELECT DESC01 AS DESC01 
	   		 , DUOMKY AS UOMKEY
	    FROM SKUMA 
	    WHERE 1 = 1 
	  	AND SKUKEY =#SKUKEY#
	  	AND ROWNUM = 1
	</select>
	<select id="SKUval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT COUNT(*)CNT
		  FROM SKUMA
		   WHERE SKUKEY = #SKUKEY#
	</select>

	<select id="DL19_LIST" parameterClass="Map" resultClass="DataMap">	
	SELECT 
		    SHPOKY,
		    SHPOIT,
		    WAREKY,
		    WAREKYNM,
		    SHPMTY,
		    SHPMTYNM,
		    STATDO,
		    STATDONM,
		    DOCDAT,
		    DOCCAT,
		    DOCCATNM,
		    PRORTY,
		    DOCUTY,
		    DOCUTYNM,
		    OWNRKY,
		    DRELIN,
		    RQSHPD,
		    RQARRD,
		    RQARRT,
		    LSHPCD,
		    DPTNKY,
		    DPTNKYNM,
		    PTRCVR,
		    PTRCVRNM,
		    PGRC01,
		    PGRC02,
		    PGRC03,
		    PGRC04,
		    PGRC05,
		    VEHINO,
		    DRIVER,
		    LOCADT,
		    LOCADK,
		    INDDCL,
		    RSNCOD,
		    RSNRET,
		    USRID1,
		    UNAME1,
		    DEPTID1,
		    DNAME1,
		    USRID2,
		    UNAME2,
		    DEPTID2,
		    DNAME2,
		    USRID3,
		    UNAME3,
		    DEPTID3,
		    DNAME3,
		    USRID4,
		    UNAME4,
		    DEPTID4,
		    DNAME4,
		    DOCTXT,
		    STATIT,
		    STATITNM,
		    SKUKEY,
		    QTYORG,
		    QTSHPO,
		    QTYREF,
		    QTAPPO,
		    QTALOC,
		    QTJCMP,
		    QTSHPD,
		    QTSHPC,
		    QTCOMP,
		    ZONENM,
		    QTYUOM,
		    MEASKY,
		    UOMKEY,
		    QTPUOM,
		    DUOMKY,
		    QTDUOM,
		    SASTKY,
		    ALSTKY,
		    TKFLKY,
		    ESHPKY,
		    ESHPIT,
		    OPURKY,
		    REFDKY,
		    REFDIT,
		    REFCAT,
		    REFDAT,
		    EXSUBS,
		    DESC01,
		    DESC02,
		    ASKU01,
		    ASKU02,
		    ASKU03,
		    ASKU04,
		    ASKU05,
		    EANCOD,
		    GTINCD,
		    SKUG01,
		    SKUG02,
		    SKUG03,
		    SKUG04,
		    SKUG05,
		    GRSWGT,
		    NETWGT,
		    WGTUNT,
		    LENGTH,
		    WIDTHW,
		    HEIGHT,
		    CUBICM,
		    CAPACT,
		    PROCHA,
		    AREAKY,
		    LOTA01,
		    LOTA02,
		    LOTA02NM,
		    LOTA03,
		    LOTA04,
		    LOTA05,
		    LOTA06,
		    LOTA07,
		    LOTA08,
		    LOTA09,
		    LOTA10,
		    LOTA11,
		    LOTA12,
		    LOTA13,
		    LOTA14,
		    LOTA15,
		    LOTA16,
		    LOTA17,
		    LOTA18,
		    LOTA19,
		    LOTA20,
		    AWMSNO,
		    SMANDT,
		    SEBELN,
		    SEBELP,
		    SZMBLNO,
		    SZMIPNO,
		    STRAID,
		    SVBELN,
		    SPOSNR,
		    STKNUM,
		    STPNUM,
		    SWERKS,
		    SLGORT,
		    SDATBG,
		    STDLNR,
		    SSORNU,
		    SSORIT,
		    SMBLNR,
		    SZEILE,
		    SMJAHR,
		    SXBLNR,
		    SAPSTS,
		    SAPSTSNM,
		    PTNRKY,
		    NAME01,
		    SLAND1,
		    SBKTXT,
		    CREDAT,
		    CRETIM,
		    CREUSR,
		    CUSRNM,
		    LMODAT,
		    LMOTIM,
		    LMOUSR,
		    LUSRNM
		FROM V_IMF_DL19_LIST 
 		WHERE WAREKY = #WAREKY#
  		AND DOCUTY NOT IN ('299')
  		<isNotEmpty property="AREA">
		    AND SZMBLNO = #AREA#
	    </isNotEmpty>
	    <isNotEmpty property="ZONE">
		    AND SZMIPNO = #ZONE#
	    </isNotEmpty>
  		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
 		ORDER BY SHPOKY, SHPOIT
	</select>
	
	<!-- 	
	<select id="DL19_LIST" parameterClass="Map" resultClass="DataMap">
	
		SELECT SH.SHPOKY AS SHPOKY,
		       SI.SHPOIT AS SHPOIT,
		       SH.WAREKY AS WAREKY,
		       NVL(WH.NAME01,' ') AS WAREKYNM,
		       SH.SHPMTY AS SHPMTY,
		       (SELECT SHORTX FROM DOCTM WHERE  DOCUTY = SH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       SH.STATDO AS STATDO,
		       NVL(STH.CDESC1,' ') AS STATDONM,
		       SH.DOCDAT AS DOCDAT,
		       SH.DOCCAT AS DOCCAT,
		       NVL(DC.SHORTX,' ') AS DOCCATNM,
		       SH.PRORTY AS PRORTY,
		       SH.DOCUTY AS DOCUTY,
		       NVL(DT.SHORTX,' ') AS DOCUTYNM,
		       SH.OWNRKY AS OWNRKY,
		       SH.DRELIN AS DRELIN,
		       SH.RQSHPD AS RQSHPD,
		       SH.RQARRD AS RQARRD,
		       SH.RQARRT AS RQARRT,
		       SH.LSHPCD AS LSHPCD,
		       SH.DPTNKY AS DPTNKY,
		       NVL(DECODE(SH.DOCUTY,'266',BW.NAME01,BZ.NAME01),' ') AS DPTNKYNM,
		       SH.PTRCVR AS PTRCVR,
		       NVL(PT.NAME01,' ') AS PTRCVRNM,
		       SH.PGRC01 AS PGRC01,
		       SH.PGRC02 AS PGRC02,
		       SH.PGRC03 AS PGRC03,
		       SH.PGRC04 AS PGRC04,
		       SH.PGRC05 AS PGRC05,
		       SH.VEHINO AS VEHINO,
		       SH.DRIVER AS DRIVER,
		       SH.LOCADT AS LOCADT,
		       SH.LOCADK AS LOCADK,
		       SH.INDDCL AS INDDCL,
		       SH.RSNCOD AS RSNCOD,
		       SH.RSNRET AS RSNRET,
		       SH.USRID1 AS USRID1,
		       SH.UNAME1 AS UNAME1,
		       SH.DEPTID1 AS DEPTID1,
		       SH.DNAME1 AS DNAME1,
		       SH.USRID2 AS USRID2,
		       SH.UNAME2 AS UNAME2,
		       SH.DEPTID2 AS DEPTID2,
		       SH.DNAME2 AS DNAME2,
		       SH.USRID3 AS USRID3,
		       SH.UNAME3 AS UNAME3,
		       SH.DEPTID3 AS DEPTID3,
		       SH.DNAME3 AS DNAME3,
		       SH.USRID4 AS USRID4,
		       SH.UNAME4 AS UNAME4,
		       SH.DEPTID4 AS DEPTID4,
		       SH.DNAME4 AS DNAME4,
		       SH.DOCTXT AS DOCTXT,
		       SI.STATIT AS STATIT,
		       NVL(STI.CDESC1,' ') AS STATITNM,
		       SI.SKUKEY AS SKUKEY,
		       SI.QTYORG AS QTYORG,
		       SI.QTSHPO AS QTSHPO,
		       SI.QTYREF AS QTYREF,
		       SI.QTAPPO AS QTAPPO,
		       SI.QTALOC AS QTALOC,
		       SI.QTJCMP AS QTJCMP,
		       SI.QTSHPD AS QTSHPD,
		       SI.QTSHPC AS QTSHPC,
		       TI.QTCOMP AS QTCOMP,
               TI.ZONENM AS ZONENM,
               TI.LOCASR AS ZONEKY,
		       SI.QTYUOM AS QTYUOM,
		       SI.MEASKY AS MEASKY,
		       SI.UOMKEY AS UOMKEY,
		       SI.QTPUOM AS QTPUOM,
		       SI.DUOMKY AS DUOMKY,
		       SI.QTDUOM AS QTDUOM,
		       SI.SASTKY AS SASTKY,
		       SI.ALSTKY AS ALSTKY,
		       SI.TKFLKY AS TKFLKY,
		       SI.ESHPKY AS ESHPKY,
		       SI.ESHPIT AS ESHPIT,
		       SI.OPURKY AS OPURKY,
		       SI.REFDKY AS REFDKY,
		       SI.REFDIT AS REFDIT,
		       SI.REFCAT AS REFCAT,
		       SI.REFDAT AS REFDAT,
		       SI.EXSUBS AS EXSUBS,
		       SI.DESC01 AS DESC01,
		       SI.DESC02 AS DESC02,
		       SI.ASKU01 AS ASKU01,
		       SI.ASKU02 AS ASKU02,
		       SI.ASKU03 AS ASKU03,
		       SI.ASKU04 AS ASKU04,
		       SI.ASKU05 AS ASKU05,
		       SI.EANCOD AS EANCOD,
		       SI.GTINCD AS GTINCD,
		       SI.SKUG01 AS SKUG01,
		       SI.SKUG02 AS SKUG02,
		       SI.SKUG03 AS SKUG03,
		       SI.SKUG04 AS SKUG04,
		       SI.SKUG05 AS SKUG05,
		       SI.GRSWGT AS GRSWGT,
		       SI.NETWGT AS NETWGT,
		       SI.WGTUNT AS WGTUNT,
		       SI.LENGTH AS LENGTH,
		       SI.WIDTHW AS WIDTHW,
		       SI.HEIGHT AS HEIGHT,
		       SI.CUBICM AS CUBICM,
		       SI.CAPACT AS CAPACT,
		       SI.PROCHA AS PROCHA,
		       SI.AREAKY AS AREAKY,
		       SI.LOTA01 AS LOTA01,
		       SI.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = SI.LOTA02) AS LOTA02NM,
		       SI.LOTA03 AS LOTA03,
		       SI.LOTA04 AS LOTA04,
		       SI.LOTA05 AS LOTA05,
		       SI.LOTA06 AS LOTA06,
		       SI.LOTA07 AS LOTA07,
		       SI.LOTA08 AS LOTA08,
		       SI.LOTA09 AS LOTA09,
		       SI.LOTA10 AS LOTA10,
		       SI.LOTA11 AS LOTA11,
		       SI.LOTA12 AS LOTA12,
		       SI.LOTA13 AS LOTA13,
		       SI.LOTA14 AS LOTA14,
		       SI.LOTA15 AS LOTA15,
		       SI.LOTA16 AS LOTA16,
		       SI.LOTA17 AS LOTA17,
		       SI.LOTA18 AS LOTA18,
		       SI.LOTA19 AS LOTA19,
		       SI.LOTA20 AS LOTA20,
		       SI.AWMSNO AS AWMSNO,
		       SI.SMANDT AS SMANDT,
		       SI.SEBELN AS SEBELN,
		       SI.SEBELP AS SEBELP,
		       SI.SZMBLNO AS SZMBLNO,
		       SI.SZMIPNO AS SZMIPNO,
		       SI.STRAID AS STRAID,
		       SI.SVBELN AS SVBELN,
		       SI.SPOSNR AS SPOSNR,
		       SI.STKNUM AS STKNUM,
		       SI.STPNUM AS STPNUM,
		       SI.SWERKS AS SWERKS,
		       SI.SLGORT AS SLGORT,
		       SI.SDATBG AS SDATBG,
		       SI.STDLNR AS STDLNR,
		       SI.SSORNU AS SSORNU,
		       SI.SSORIT AS SSORIT,
		       SI.SMBLNR AS SMBLNR,
		       SI.SZEILE AS SZEILE,
		       SI.SMJAHR AS SMJAHR,
		       SI.SXBLNR AS SXBLNR,
		       SI.SAPSTS AS SAPSTS,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SI.SAPSTS AND ROWNUM = 1) AS SAPSTSNM,
		       SI.PTNRKY AS PTNRKY,
		       SI.NAME01 AS NAME01,
		       SI.SLAND1 AS SLAND1,
		       SI.SBKTXT AS SBKTXT,
		       SI.CREDAT AS CREDAT,
		       SI.CRETIM AS CRETIM,
		       SI.CREUSR AS CREUSR,
		       NVL(CU.NMLAST,' ') AS CUSRNM,
		       SI.LMODAT AS LMODAT,
		       SI.LMOTIM AS LMOTIM,
		       SI.LMOUSR AS LMOUSR,
		       NVL(LU.NMLAST,' ') AS LUSRNM
  		FROM SHPDH SH
		       INNER JOIN SHPDI SI
		               ON SI.SHPOKY = SH.SHPOKY
		        LEFT OUTER JOIN 
                 (  SELECT TSI.SHPOKY , TSI.SHPOIT , TSI.SKUKEY , TSI.LOCASR ,
                              ( SELECT SHORTX FROM ZONMA WHERE ZONEKY IN ( SELECT ZONEKY FROM LOCMA WHERE LOCAKY = TSI.LOCASR AND ROWNUM =1 )) AS ZONENM ,                             
                               SUM(TSI.QTCOMP) AS QTCOMP FROM TASDI TSI  WHERE TSI.STATIT = 'FPC'
                    GROUP BY TSI.SHPOKY , TSI.SHPOIT , TSI.SKUKEY, TSI.LOCASR 
                    )  TI
                      ON  SI.SHPOKY = TI.SHPOKY AND SI.SHPOIT = TI.SHPOIT AND SI.SKUKEY = TI.SKUKEY             
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = SH.WAREKY
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = SH.DOCUTY
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = SH.DOCCAT
		       LEFT OUTER JOIN CMCDV STH
		               ON STH.CMCDKY = 'STATDO'
		              AND STH.CMCDVL = SH.STATDO
		       LEFT OUTER JOIN CMCDV STI
		               ON STI.CMCDKY = 'STATIT'
		              AND STI.CMCDVL = SI.STATIT
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = SH.DPTNKY
		              AND BZ.PTNRTY = 'CT'
		              AND BZ.OWNRKY = SH.OWNRKY
		       LEFT OUTER JOIN BZPTN PT
		               ON PT.PTNRKY = SH.DPTNKY
		              AND PT.PTNRTY = 'CT'
		              AND PT.OWNRKY = SH.OWNRKY
		       LEFT OUTER JOIN WAHMA BW
		               ON BW.WAREKY = SH.DPTNKY
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = SI.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = SI.LMOUSR
 		WHERE SH.WAREKY = #WAREKY#
  		AND SH.DOCUTY NOT IN ('299')
  		<isNotEmpty property="AREA">
		    AND SI.SZMBLNO = #AREA#
	    </isNotEmpty>
	    <isNotEmpty property="ZONE">
		    AND SI.SZMIPNO = #ZONE#
	    </isNotEmpty>
  		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
 		ORDER BY SH.SHPOKY, SI.SHPOIT
	</select>
	 -->
	
	<!-- <delete id="IFWMS113_DELETE" parameterClass="Map">
		DELETE FROM IFWMS113
		 WHERE MANDT = #MANDT#
		   AND SEQNO = #SEQNO#
		   AND VBELN = #KEY#
		   AND POSNR = #POSNR#
	</delete> -->
	
	<update id="IFWMS113_UPDATE" parameterClass="Map">
		UPDATE IFWMS113
		   SET IFFLG = 'Y',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS')
		 WHERE VBELN = #SVBELN#
		 <isNotEmpty property="SPOSNR">
		 AND POSNR = #SPOSNR#
		 </isNotEmpty>		 
		   AND IFFLG IN ('N','Y')
	</update>
	
	<select id="ALSTKYval_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT  COUNT(*) CNT
		FROM	ALSTH
		WHERE	1 = 1
		AND		WAREKY = #WAREKY#
		<!-- <isNotEmpty property="LOCAKY"> -->
		AND		ALSTKY = #ALSTKY#
		<!-- </isNotEmpty> -->
	</select>
	
	
	<select id="SEARCHITEM_LIST" parameterClass="Map" resultClass="DataMap">
		<!-- SELECT S.OWNRKY AS OWNRKY
		     , S.WAREKY AS WAREKY
		     , S.AREAKY AS AREAKY
		     , S.ZONEKY AS ZONEKY
		     , S.LOCAKY AS LOCAKY
		     , S.STOKKY AS STOKKY 
		     , S.SKUKEY AS SKUKEY 
		     , S.ASKU01 AS ASKU01 
		     , S.DESC01 AS DESC01 
		     , S.DESC02 AS DESC02 
		     , NVL(SUM(S.QTSIWH), 0) AS QTSIWH
		     , NVL(SUM(S.QTSALO), 0) AS QTSALO
		     , NVL(SUM(S.QTSALO), 0) AS QTINIT
		     , S.MEASKY AS MEASKY 
		     , S.UOMKEY AS UOMKEY 
		     , S.TRNUID AS TRNUID 
		     , S.LOTNUM as LOTNUM
		     , S.LOTA01 AS LOTA01
		     , S.LOTA02 AS LOTA02
		     , S.LOTA03 AS LOTA03
		     , S.LOTA04 AS LOTA04
		     , S.LOTA05 AS LOTA05
		     , S.LOTA06 AS LOTA06
		     , S.LOTA07 AS LOTA07
		     , S.LOTA08 AS LOTA08
		     , S.LOTA09 AS LOTA09
		     , S.LOTA10 AS LOTA10
		     , S.LOTA11 AS LOTA11
		     , S.LOTA12 AS LOTA12
		     , S.LOTA13 AS LOTA13
		     , S.LOTA14 AS LOTA14
		     , S.LOTA15 AS LOTA15
		     , S.LOTA16 AS LOTA16
		     , S.LOTA17 AS LOTA17
		     , S.LOTA18 AS LOTA18
		     , S.LOTA19 AS LOTA19
		     , S.LOTA20 AS LOTA20
		     , NVL(MAX(S.QTPUOM), 0) AS QTPUOM
		     , NVL(MAX(S.DUOMKY), ' ') AS DUOMKY
		     , NVL(MAX(S.QTDUOM), 0) AS QTDUOM
		     , NVL(MAX(S.PURCKY), ' ') AS PURCKY
		     , NVL(MAX(S.PURCIT), ' ') AS PURCIT
		     , NVL(MAX(S.ASNDKY), ' ') AS ASNDKY
		     , NVL(MAX(S.ASNDIT), ' ') AS ASNDIT
		     , NVL(MAX(S.RECVKY), ' ') AS RECVKY
		     , NVL(MAX(S.RECVIT), ' ') AS RECVIT
		     , NVL(MAX(S.GRPOKY), ' ') AS GRPOKY
		     , NVL(MAX(S.GRPOIT), ' ') AS GRPOIT
		     , NVL(MAX(S.SADJKY), ' ') AS SADJKY
		     , NVL(MAX(S.SADJIT), ' ') AS SADJIT
		     , NVL(MAX(S.SDIFKY), ' ') AS SDIFKY
		     , NVL(MAX(S.SDIFIT), ' ') AS SDIFIT
		     , NVL(MAX(S.PHYIKY), ' ') AS PHYIKY
		     , NVL(MAX(S.PHYIIT), ' ') AS PHYIIT
		     , NVL(MAX(S.ASKU02), ' ') AS ASKU02
		     , NVL(MAX(S.ASKU03), ' ') AS ASKU03
		     , NVL(MAX(S.ASKU04), ' ') AS ASKU04
		     , NVL(MAX(S.ASKU05), ' ') AS ASKU05
		     , NVL(MAX(S.EANCOD), ' ') AS EANCOD
		     , NVL(MAX(S.GTINCD), ' ') AS GTINCD
		     , NVL(MAX(S.SKUG01), ' ') AS SKUG01
		     , NVL(MAX(S.SKUG02), ' ') AS SKUG02
		     , NVL(MAX(S.SKUG03), ' ') AS SKUG03
		     , NVL(MAX(S.SKUG04), ' ') AS SKUG04
		     , NVL(MAX(S.SKUG05), ' ') AS SKUG05
		     , NVL(MAX(S.GRSWGT), 0) AS GRSWGT
		     , NVL(MAX(S.NETWGT), 0) AS NETWGT
		     , NVL(MAX(S.WGTUNT), ' ') AS WGTUNT
		     , NVL(MAX(S.LENGTH), 0) AS LENGTH
		     , NVL(MAX(S.WIDTHW), 0) AS WIDTHW
		     , NVL(MAX(S.HEIGHT), 0) AS HEIGHT
		     , NVL(MAX(S.CUBICM), 0) AS CUBICM
		     , NVL(MAX(S.CAPACT), 0) AS CAPACT   -->
		SELECT DISTINCT S.OWNRKY AS OWNRKY
		 , S.WAREKY AS WAREKY
		 , S.AREAKY AS AREAKY
		 , S.ZONEKY AS ZONEKY
		 , S.LOCAKY AS LOCAKY
		 , S.STOKKY AS STOKKY 
		 , S.SKUKEY AS SKUKEY 
		 , S.ASKU01 AS ASKU01 
		 , S.DESC01 AS DESC01 
		 , S.DESC02 AS DESC02 
         , S.SHPOKY
         , S.SHPOIT
         
		 , S.QTSIWH AS QTSIWH
		 , S.QTSALO AS QTSALO
		 , S.QTSALO AS QTINIT
         , S.MEASKY AS MEASKY 
		 , S.UOMKEY AS UOMKEY 
		 , S.TRNUID AS TRNUID 
		 , S.LOTNUM as LOTNUM
		 , S.LOTA01 AS LOTA01
		 , S.LOTA02 AS LOTA02
		 , S.LOTA03 AS LOTA03
		 , S.LOTA04 AS LOTA04
		 , S.LOTA05 AS LOTA05
		 , S.LOTA06 AS LOTA06
		 , S.LOTA07 AS LOTA07
		 , S.LOTA08 AS LOTA08
		 , S.LOTA09 AS LOTA09
		 , S.LOTA10 AS LOTA10
		 , S.LOTA11 AS LOTA11
		 , S.LOTA12 AS LOTA12
		 , S.LOTA13 AS LOTA13
		 , S.LOTA14 AS LOTA14
		 , S.LOTA15 AS LOTA15
		 , S.LOTA16 AS LOTA16
		 , S.LOTA17 AS LOTA17
		 , S.LOTA18 AS LOTA18
		 , S.LOTA19 AS LOTA19
		 , S.LOTA20 AS LOTA20
		 , S.QTPUOM AS QTPUOM
		 , S.DUOMKY AS DUOMKY
		 , S.QTDUOM AS QTDUOM
		 , S.PURCKY AS PURCKY
		 , S.PURCIT AS PURCIT
		 , S.ASNDKY AS ASNDKY
		 , S.ASNDIT AS ASNDIT
		 , S.RECVKY AS RECVKY
		 , S.RECVIT AS RECVIT
		 , S.GRPOKY AS GRPOKY
		 , S.GRPOIT AS GRPOIT
		 , S.SADJKY AS SADJKY
		 , S.SADJIT AS SADJIT
		 , S.SDIFKY AS SDIFKY
		 , S.SDIFIT AS SDIFIT
		 , S.PHYIKY AS PHYIKY
		 , S.PHYIIT AS PHYIIT
		 , S.ASKU02 AS ASKU02
		 , S.ASKU03 AS ASKU03
		 , S.ASKU04 AS ASKU04
		 , S.ASKU05 AS ASKU05
		 , S.EANCOD AS EANCOD
		 , S.GTINCD AS GTINCD
		 , S.SKUG01 AS SKUG01
		 , S.SKUG02 AS SKUG02
		 , S.SKUG03 AS SKUG03
		 , S.SKUG04 AS SKUG04
		 , S.SKUG05 AS SKUG05
		 , S.GRSWGT AS GRSWGT
		 , S.NETWGT AS NETWGT
		 , S.WGTUNT AS WGTUNT
		 , S.LENGTH AS LENGTH
		 , S.WIDTHW AS WIDTHW
		 , S.HEIGHT AS HEIGHT
		 , S.CUBICM AS CUBICM
		 , S.CAPACT AS CAPACT 
		 ,(SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'VD' AND PTNRKY = S.LOTA01) PTNRKY4
         ,S.SKUG04
		FROM   STKKY S 
		       INNER JOIN LOCMA L ON L.WAREKY = S.WAREKY
		                         AND L.LOCAKY = S.LOCAKY
				INNER JOIN SHPDI DI ON DI.SKUKEY = S.SKUKEY
		WHERE  S.WAREKY = #WAREKY#
		AND    S.OWNRKY = #OWNRKY#
		AND		S.SKUKEY = #SKUKEY#
		AND		S.AREAKY = #AREA#
		
		AND    ( 
					(S.QTSIWH > 0 AND    S.QTSALO = 0 AND    QTSPMO = 0 AND    QTSPMI = 0 AND    QTSBLK = 0)
		       OR   ( S.QTSIWH > 0 AND    S.QTSALO > 0 AND     S.SHPOKY = #SHPOKY# AND    S.SHPOIT = #SHPOIT#) )
		AND    L.INDUPK = 'V'
		
			AND    L.STATUS = '00'
<!-- 		AND    S.LOTA02 = #LOTA02# -->
<!-- 		AND    S.LOTA05 = #LOTA05# -->
		<isEqual property="DOCUTY" compareValue="203">	AND    S.LOTA06 = '10'	</isEqual>
		<isEqual property="DOCUTY" compareValue="204">	AND    S.LOTA06 = '10'	</isEqual>
		<isNotEqual property="DOCUTY" compareValue="203">
			<isNotEqual property="DOCUTY" compareValue="204">
			AND    S.LOTA06 = '00'
			</isNotEqual>
		</isNotEqual>
		<isEqual property="ASKU04" compareValue="S">
			AND		S.LOTA02 = #LOTA02#
		</isEqual>
		<!-- GROUP BY S.OWNRKY, S.WAREKY, S.AREAKY, S.ZONEKY, S.LOCAKY, S.SKUKEY, S.ASKU01, S.DESC01
		       , S.DESC02, S.MEASKY, S.UOMKEY, S.TRNUID, S.LOTNUM, S.LOTA01, S.LOTA02, S.LOTA03
		       , S.LOTA04, S.LOTA05, S.LOTA06, S.LOTA07, S.LOTA08, S.LOTA09, S.LOTA10, S.LOTA11
		       , S.LOTA12, S.LOTA13, S.LOTA14, S.LOTA15, S.LOTA16, S.LOTA17, S.LOTA18, S.LOTA19
		       , S.LOTA20, S.STOKKY
		ORDER BY  (CASE WHEN NVL(SUM(S.QTSALO), 0)  > 0 THEN 1 ELSE 0 END) DESC , S.LOCAKY -->
		ORDER BY (CASE WHEN S.QTSALO > 0 THEN 1 ELSE 0 END) DESC , S.LOCAKY 
	</select>
	
	<select id="SEARCHITEM_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT S.STOKKY  AS STOKKY  
		     , S.WAREKY  AS WAREKY  
		     , S.LOTNUM  AS LOTNUM  
		     , S.LOCAKY  AS LOCAKY  
		     , S.TRNUID  AS TRNUID  
		     , S.SECTID  AS SECTID  
		     , S.PACKID  AS PACKID  
		     , S.QTSIWH  AS QTSIWH  
		     , S.QTSALO  AS QTSALO  
		     , S.QTSPMO  AS QTSPMO  
		     , S.QTSPMI  AS QTSPMI  
		     , S.QTSBLK  AS QTSBLK  
		     , S.QTYUOM  AS QTYUOM  
		     , S.TRUNTY  AS TRUNTY  
		     , S.MEASKY  AS MEASKY  
		     , S.UOMKEY  AS UOMKEY  
		     , S.QTPUOM  AS QTPUOM  
		     , S.DUOMKY  AS DUOMKY  
		     , S.QTDUOM  AS QTDUOM  
		     , S.TKFLKY  AS TKFLKY  
		     , S.STEPNO  AS STEPNO  
		     , S.LSTTFL  AS LSTTFL  
		     , S.SRCSKY  AS SRCSKY  
		     , S.UOMDOC  AS UOMDOC  
		     , S.CNTBSK  AS CNTBSK  
		     , S.NUPDPS  AS NUPDPS  
		     , S.REFDKY  AS REFDKY  
		     , S.REFDIT  AS REFDIT  
		     , S.REFCAT  AS REFCAT  
		     , S.REFDAT  AS REFDAT  
		     , S.PURCKY  AS PURCKY  
		     , S.PURCIT  AS PURCIT  
		     , S.ASNDKY  AS ASNDKY  
		     , S.ASNDIT  AS ASNDIT  
		     , S.RECVKY  AS RECVKY  
		     , S.RECVIT  AS RECVIT  
		     , S.SHPOKY  AS SHPOKY  
		     , S.SHPOIT  AS SHPOIT  
		     , S.GRPOKY  AS GRPOKY  
		     , S.GRPOIT  AS GRPOIT  
		     , S.TASKKY  AS TASKKY  
		     , S.TASKIT  AS TASKIT  
		     , S.SADJKY  AS SADJKY  
		     , S.SADJIT  AS SADJIT  
		     , S.SDIFKY  AS SDIFKY  
		     , S.SDIFIT  AS SDIFIT  
		     , S.PHYIKY  AS PHYIKY  
		     , S.PHYIIT  AS PHYIIT  
		     , S.OWNRKY  AS OWNRKY  
		     , S.SKUKEY  AS SKUKEY  
		     , S.LOTA01  AS LOTA01  
		     , S.LOTA02  AS LOTA02  
		     , S.LOTA03  AS LOTA03  
		     , S.LOTA04  AS LOTA04  
		     , S.LOTA05  AS LOTA05  
		     , S.LOTA06  AS LOTA06  
		     , S.LOTA07  AS LOTA07  
		     , S.LOTA08  AS LOTA08  
		     , S.LOTA09  AS LOTA09  
		     , S.LOTA10  AS LOTA10  
		     , S.LOTA11  AS LOTA11  
		     , S.LOTA12  AS LOTA12  
		     , S.LOTA13  AS LOTA13  
		     , S.LOTA14  AS LOTA14  
		     , S.LOTA15  AS LOTA15  
		     , S.LOTA16  AS LOTA16  
		     , S.LOTA17  AS LOTA17  
		     , S.LOTA18  AS LOTA18  
		     , S.LOTA19  AS LOTA19  
		     , S.LOTA20  AS LOTA20  
		     , S.AWMSNO  AS AWMSNO  
		     , S.DESC01  AS DESC01  
		     , S.DESC02  AS DESC02  
		     , S.ASKU01  AS ASKU01  
		     , S.ASKU02  AS ASKU02  
		     , S.ASKU03  AS ASKU03  
		     , S.ASKU04  AS ASKU04  
		     , S.ASKU05  AS ASKU05  
		     , S.EANCOD  AS EANCOD  
		     , S.GTINCD  AS GTINCD  
		     , S.SKUG01  AS SKUG01  
		     , S.SKUG02  AS SKUG02  
		     , S.SKUG03  AS SKUG03  
		     , S.SKUG04  AS SKUG04  
		     , S.SKUG05  AS SKUG05  
		     , S.GRSWGT  AS GRSWGT  
		     , S.NETWGT  AS NETWGT  
		     , S.WGTUNT  AS WGTUNT  
		     , S.LENGTH  AS LENGTH  
		     , S.WIDTHW  AS WIDTHW  
		     , S.HEIGHT  AS HEIGHT  
		     , S.CUBICM  AS CUBICM  
		     , S.CAPACT  AS CAPACT  
		     , S.ZONEKY  AS ZONEKY  
		     , S.TKZONE  AS TKZONE  
		     , S.AREAKY  AS AREAKY  
		     , S.SMANDT  AS SMANDT  
		     , S.SEBELN  AS SEBELN  
		     , S.SEBELP  AS SEBELP  
		     , S.SZMBLNO AS SZMBLNO 
		     , S.SZMIPNO AS SZMIPNO 
		     , S.STRAID  AS STRAID  
		     , S.SVBELN  AS SVBELN  
		     , S.SPOSNR  AS SPOSNR  
		     , S.STKNUM  AS STKNUM  
		     , S.STPNUM  AS STPNUM  
		     , S.SWERKS  AS SWERKS  
		     , S.SLGORT  AS SLGORT  
		     , S.SDATBG  AS SDATBG  
		     , S.STDLNR  AS STDLNR  
		     , S.SSORNU  AS SSORNU  
		     , S.SSORIT  AS SSORIT  
		     , S.SMBLNR  AS SMBLNR  
		     , S.SZEILE  AS SZEILE  
		     , S.SMJAHR  AS SMJAHR  
		     , S.SXBLNR  AS SXBLNR  
		     , S.SAPSTS  AS SAPSTS  
		     , S.SBKTXT  AS SBKTXT  
		     , S.CREDAT  AS CREDAT  
		     , S.CRETIM  AS CRETIM  
		     , S.CREUSR  AS CREUSR  
		     , S.LMODAT  AS LMODAT  
		     , S.LMOTIM  AS LMOTIM  
		     , S.LMOUSR  AS LMOUSR  
		  FROM STKKY S
		       INNER JOIN ($APPENDQRY$) A
		               ON A.WAREKY = S.WAREKY
		              AND A.AREAKY = S.AREAKY
		              AND A.ZONEKY = S.ZONEKY
		              AND A.LOCAKY = S.LOCAKY
		              AND A.OWNRKY = S.OWNRKY
		              AND A.SKUKEY = S.SKUKEY
		              AND A.ASKU01 = S.ASKU01
		              AND A.MEASKY = S.MEASKY
		              AND A.UOMKEY = S.UOMKEY
		              AND A.TRNUID = S.TRNUID
		              AND A.LOTNUM = S.LOTNUM
		       INNER JOIN LOCMA L
		               ON L.WAREKY = S.WAREKY
		              AND L.LOCAKY = S.LOCAKY
		 WHERE S.WAREKY = #WAREKY#
		   AND S.OWNRKY = #OWNRKY#
		   AND S.SKUKEY = #SKUKEY#
		   AND ( 
		   		   (S.QTSIWH > 0 AND S.QTSALO = 0 AND S.QTSPMO = 0 AND S.QTSPMI = 0 AND S.QTSBLK = 0) 
		        OR (S.QTSIWH > 0 AND S.QTSALO > 0 AND S.SHPOKY = #SHPOKY# AND S.SHPOIT = #SHPOIT#)
		        )
		   AND S.QTSIWH > 0
		   AND S.QTSALO = 0
		   AND S.QTSPMO = 0
		   AND S.QTSPMI = 0
		   AND S.QTSBLK = 0
		   AND S.LOTA06 = '00'
		   AND L.INDUPK = 'V'
		 ORDER BY S.STOKKY
	</select>
	
	
	<select id="SEARCHSHPDH_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT S.SHPOKY AS SHPOKY
		     , S.WAREKY AS WAREKY
		     , S.SHPMTY AS SHPMTY
		     , S.ALSTKY AS ALSTKY
		     , S.STATDO AS STATDO
		     , S.DOCDAT AS DOCDAT
		     , S.DOCCAT AS DOCCAT
		     , S.DOCUTY AS DOCUTY
		     , S.OWNRKY AS OWNRKY
		     , S.DRELIN AS DRELIN
		     , S.RQSHPD AS RQSHPD
		     , S.RQARRD AS RQARRD
		     , S.RQARRT AS RQARRT
		     , S.LSHPCD AS LSHPCD
		     , S.DPTNKY AS DPTNKY 
		     , S.PTRCVR AS PTRCVR
		     , S.PGRC01 AS PGRC01
		     , S.PGRC02 AS PGRC02
		     , S.PGRC03 AS PGRC03
		     , S.PGRC04 AS PGRC04
		     , S.PGRC05 AS PGRC05
		     , S.VEHINO AS VEHINO
		     , S.DRIVER AS DRIVER
		     , S.ESHPKY AS ESHPKY
		     , S.OPURKY AS OPURKY
		     , S.LOCADT AS LOCADT
		     , S.LOCADK AS LOCADK
		     , S.INDDCL AS INDDCL
		     , S.RSNCOD AS RSNCOD
		     , S.RSNRET AS RSNRET
		     , S.KEEPTS AS KEEPTS
		     , S.USRID1 AS USRID1
		     , S.UNAME1 AS UNAME1
		     , S.DEPTID1 AS DEPTID1
		     , S.DNAME1 AS DNAME1
		     , S.USRID2 AS USRID2
		     , S.UNAME2 AS UNAME2
		     , S.DEPTID2 AS DEPTID2
		     , S.DNAME2 AS DNAME2
		     , S.USRID3 AS USRID3
		     , S.UNAME3 AS UNAME3
		     , S.DEPTID3 AS DEPTID3
		     , S.DNAME3 AS DNAME3
		     , S.USRID4 AS USRID4
		     , S.UNAME4 AS UNAME4
		     , S.DEPTID4 AS DEPTID4
		     , S.DNAME4 AS DNAME4
		     , S.DOCTXT AS DOCTXT
		     , S.CREDAT AS CREDAT
		     , S.CRETIM AS CRETIM
		     , S.CREUSR AS CREUSR
		     , S.LMODAT AS LMODAT
		     , S.LMOTIM AS LMOTIM
		     , S.LMOUSR AS LMOUSR
		     , S.INDBZL AS INDBZL
		     , S.INDARC AS INDARC
		     , S.UPDCHK AS UPDCHK
		FROM   SHPDH S
		WHERE  S.SHPOKY = #SHPOKY# 
	</select>
	
	
	<select id="SEARCHSHPDI_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT S.SHPOKY AS  SHPOKY 
		    ,  S.SHPOIT AS  SHPOIT 
		    ,  S.STATIT AS  STATIT 
		    ,  S.SKUKEY AS  SKUKEY 
		    ,  S.QTYORG AS  QTYORG 
		    ,  S.QTSHPO AS  QTSHPO 
		    ,  S.QTYREF AS  QTYREF 
		    ,  S.QTAPPO AS  QTAPPO 
		    ,  S.QTALOC AS  QTALOC 
		    ,  S.QTJCMP AS  QTJCMP 
		    ,  S.QTSHPD AS  QTSHPD 
		    ,  S.QTSHPC AS  QTSHPC 
		    ,  S.QTYUOM AS  QTYUOM 
		    ,  S.MEASKY AS  MEASKY 
		    ,  S.UOMKEY AS  UOMKEY 
		    ,  S.QTPUOM AS  QTPUOM 
		    ,  S.DUOMKY AS  DUOMKY 
		    ,  S.QTDUOM AS  QTDUOM 
		    ,  S.SASTKY AS  SASTKY 
		    ,  S.ALSTKY AS  ALSTKY 
		    ,  S.TKFLKY AS  TKFLKY 
		    ,  S.ESHPKY AS  ESHPKY 
		    ,  S.ESHPIT AS  ESHPIT 
		    ,  S.OPURKY AS  OPURKY 
		    ,  S.REFDKY AS  REFDKY 
		    ,  S.REFDIT AS  REFDIT 
		    ,  S.REFCAT AS  REFCAT 
		    ,  S.REFDAT AS  REFDAT 
		    ,  S.EXSUBS AS  EXSUBS 
		    ,  S.DESC01 AS  DESC01 
		    ,  S.DESC02 AS  DESC02 
		    ,  S.ASKU01 AS  ASKU01 
		    ,  S.ASKU02 AS  ASKU02 
		    ,  S.ASKU03 AS  ASKU03 
		    ,  S.ASKU04 AS  ASKU04 
		    ,  S.ASKU05 AS  ASKU05 
		    ,  S.EANCOD AS  EANCOD 
		    ,  S.GTINCD AS  GTINCD 
		    ,  S.SKUG01 AS  SKUG01 
		    ,  S.SKUG02 AS  SKUG02 
		    ,  S.SKUG03 AS  SKUG03 
		    ,  S.SKUG04 AS  SKUG04 
		    ,  S.SKUG05 AS  SKUG05 
		    ,  S.GRSWGT AS  GRSWGT 
		    ,  S.NETWGT AS  NETWGT 
		    ,  S.WGTUNT AS  WGTUNT 
		    ,  S.LENGTH AS  LENGTH 
		    ,  S.WIDTHW AS  WIDTHW 
		    ,  S.HEIGHT AS  HEIGHT 
		    ,  S.CUBICM AS  CUBICM 
		    ,  S.CAPACT AS  CAPACT 
		    ,  S.PROCHA AS  PROCHA 
		    ,  S.AREAKY AS  AREAKY 
		    ,  S.LOTA01 AS  LOTA01 
		    ,  S.LOTA02 AS  LOTA02 
		    ,  S.LOTA03 AS  LOTA03 
		    ,  S.LOTA04 AS  LOTA04 
		    ,  S.LOTA05 AS  LOTA05 
		    ,  S.LOTA06 AS  LOTA06 
		    ,  S.LOTA07 AS  LOTA07 
		    ,  S.LOTA08 AS  LOTA08 
		    ,  S.LOTA09 AS  LOTA09 
		    ,  S.LOTA10 AS  LOTA10 
		    ,  S.LOTA11 AS  LOTA11 
		    ,  S.LOTA12 AS  LOTA12 
		    ,  S.LOTA13 AS  LOTA13 
		    ,  S.LOTA14 AS  LOTA14 
		    ,  S.LOTA15 AS  LOTA15 
		    ,  S.LOTA16 AS  LOTA16 
		    ,  S.LOTA17 AS  LOTA17 
		    ,  S.LOTA18 AS  LOTA18 
		    ,  S.LOTA19 AS  LOTA19 
		    ,  S.LOTA20 AS  LOTA20 
		    ,  S.AWMSNO AS  AWMSNO 
		    ,  S.SMANDT AS  SMANDT 
		    ,  S.SEBELN AS  SEBELN 
		    ,  S.SEBELP AS  SEBELP 
		    ,  S.SVBELN AS  SVBELN 
		    ,  S.SPOSNR AS  SPOSNR 
		    ,  S.SMBLNR AS  SMBLNR 
		    ,  S.SMJAHR AS  SMJAHR 
		    ,  S.SZEILE AS  SZEILE 
		    ,  S.SZMBLNO AS SZMBLNO
		    ,  S.SZMIPNO AS SZMIPNO
		    ,  S.STKNUM AS  STKNUM 
		    ,  S.STPNUM AS  STPNUM 
		    ,  S.SLGORT AS  SLGORT 
		    ,  S.SDATBG AS  SDATBG 
		    ,  S.SWERKS AS  SWERKS 
		    ,  S.STDLNR AS  STDLNR 
		    ,  S.SXBLNR AS  SXBLNR 
		    ,  S.STRAID AS  STRAID 
		    ,  S.SSORNU AS  SSORNU 
		    ,  S.SSORIT AS  SSORIT 
		    ,  S.SAPSTS AS  SAPSTS 
		    ,  S.PTNRKY AS  PTNRKY 
		    ,  S.NAME01 AS  NAME01 
		    ,  S.SLAND1 AS  SLAND1 
		    ,  S.SBKTXT AS  SBKTXT 
		    ,  S.CREDAT AS  CREDAT 
		    ,  S.CRETIM AS  CRETIM 
		    ,  S.CREUSR AS  CREUSR 
		    ,  S.LMODAT AS  LMODAT 
		    ,  S.LMOTIM AS  LMOTIM 
		    ,  S.LMOUSR AS  LMOUSR 
		    ,  S.INDBZL AS  INDBZL 
		    ,  S.INDARC AS  INDARC 
		    ,  S.UPDCHK AS  UPDCHK 
		FROM   SHPDI S
		WHERE  S.SHPOKY= #SHPOKY#
		AND    S.SHPOIT= #SHPOIT# 
	</select>
	
	<select id="SEARCHTASDH_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT MAX(TH.TASKKY) AS TASKKY				
		     , TH.PTNRKY AS AREAKY				
		     , TH.STATDO AS STATDO				
		     , NVL((SELECT MAX(TASKIT) FROM TASDI TT WHERE TT.TASKKY = TH.TASKKY),0) AS QTTAOR			
		  FROM TASDH TH				
		       INNER JOIN TASDI TI				
		               ON TI.TASKKY = TH.TASKKY				
		 WHERE TI.SHPOKY = #SHPOKY#			
		 GROUP BY TH.TASKKY, TH.STATDO, TH.PTNRKY				
	</select>
	
	<delete id="DELTASKBYSHIP_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		 WHERE SHPOKY = #SHPOKY#
		   AND SHPOIT = #SHPOIT#
		   AND STATIT = 'NEW'
	</delete>
	
	<parameterMap class="java.util.Map" id="ProcMap">
		<parameter property="TASKKY" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="TASKIT" javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="ERRNUM" javaType="java.lang.Long" jdbcType="DECIMAL" mode="OUT"/>
		<parameter property="ERRMSG" javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	
	
	<procedure id="SZPINSTASDR_UPDATE" parameterMap="ProcMap">
	<![CDATA[
		 { call SZP_INS_TASDR( ?,?,?,?) }
		 ]]>
	</procedure>
	
	<select id="DL80_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.SHPOKY AS SHPOKY,										
		       SI.SVBELN AS SVBELN,										
		       SI.STKNUM AS STKNUM,										
		       SH.DOCDAT AS DOCDAT,										
		       SH.SHPMTY AS SHPMTY,										
		       NVL(DT.SHORTX,' ') AS SHPMTYNM,										
		       SH.STATDO AS STATDO,										
		       NVL(ST.CDESC1,' ') AS STATDONM,										
		       SH.DPTNKY AS DPTNKY,										
		       NVL(DECODE(SH.DOCUTY,'266',BW.NAME01,BZ.NAME01),' ') AS DPTNKYNM,										
		       SH.QTSHPO AS QTSHPO,										
		       CASE WHEN SH.STATDO IN ('PSH','FSH')										
		                 THEN 'LED01'										
		            WHEN SH.STATDO IN ('PPC','FPC')										
		                 THEN 'LED02'										
		            WHEN SH.STATDO IN ('PAL','FAL')										
		                 THEN 'LED03'										
		            ELSE 'LED04'										
		         END AS ICSTAT,										
		       SH.QTALOC AS QTALOC,										
		       CASE WHEN SH.STATDO IN ('PAL','FAL','PPC','FPC','PSH','FSH')										
		                 THEN 'APN12'										
		            ELSE ' '										
		         END AS ICALOC,										
		       SH.QTJCMP AS QTJCMP,										
		       CASE WHEN SH.STATDO IN ('PPC','FPC','PSH','FSH')										
		                 THEN 'TAN19'										
		            ELSE ' '										
		         END AS ICJCMP,										
		       SH.QTSHPD AS QTSHPD,										
		       CASE WHEN SH.STATDO IN ('PSH','FSH')										
		                 THEN 'DAP01'										
		            ELSE ' '										
		         END AS ICSHPD,										
		       CASE WHEN SH.DOCUTY != '266' OR (SH.DOCUTY = '266' AND SUBSTR(SH.SHPOKY,1,3) != 'WMS')										
		                 THEN NVL((SELECT MAX(ESHPKY) FROM IFWMS213 WHERE ZDOC_NO = SH.SHPOKY),' ')										
		            ELSE NVL((SELECT MAX(EDOCKY) FROM IFWMS301 WHERE ZDOC_NO = SH.SHPOKY),' ')										
		         END AS ESHPKY										
		  FROM SHPDH SH										
		       INNER JOIN SHPDI SI										
		               ON SI.SHPOKY = SH.SHPOKY										
		       LEFT OUTER JOIN DOCTM DT										
		               ON DT.DOCUTY = SH.DOCUTY										
		       LEFT OUTER JOIN CMCDV ST										
		               ON ST.CMCDKY = 'STATDO'										
		              AND ST.CMCDVL = SH.STATDO										
		       LEFT OUTER JOIN BZPTN BZ										
		               ON BZ.PTNRKY = SH.DPTNKY										
		              AND BZ.PTNRTY = 'CT'										
		              AND BZ.OWNRKY = SH.OWNRKY										
		       LEFT OUTER JOIN WAHMA BW										
		               ON BW.WAREKY = SH.DPTNKY										
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND SH.WAREKY = #WAREKY#
		</isNotEmpty>									
		<isNotEmpty property="OWNRKY">
		   AND SH.OWNRKY = #OWNRKY#										
		</isNotEmpty>									
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>	
		 GROUP BY SH.SHPOKY, SI.SVBELN, SI.STKNUM, SH.DOCDAT,										
		          SH.SHPMTY, NVL(DT.SHORTX,' '),										
		          SH.STATDO, NVL(ST.CDESC1,' '),										
		          SH.DPTNKY, NVL(DECODE(SH.SHPMTY,'266',BW.NAME01,BZ.NAME01),' '),										
		          SH.QTSHPO, SH.QTALOC, SH.QTJCMP, SH.QTSHPD										
		 ORDER BY SI.STKNUM, SH.SHPOKY										
	</select>
	
	<select id="BARCD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT B.REFDKY AS REFDKY,
		       B.BARCOD AS BARCOD,
		       B.WAREKY AS WAREKY,
		       B.SKUKEY AS SKUKEY,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.PRTDAT AS PRTDAT,
		       B.QTDUOM AS QTDUOM,
		       B.QTYRCV AS QTYRCV,
		       B.QTDBOX AS QTDBOX,
		       B.QTDREM AS QTDREM,
		       B.QTDPRT AS QTDPRT,
		       B.LOTA05 AS LOTA05,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       CU.NMLAST AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       LU.NMLAST AS LUSRNM,
		       B.TASKKY AS TASKKY,
		       B.SHPOKY AS SHPOKY,
		       B.LOTA02 AS LOTA02
		  FROM BARCD B 
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = B.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = B.CREUSR
		 WHERE B.WAREKY = #WAREKY# 
		 <isNotEmpty property="REFDKY">
		 	AND REFDKY = #REFDKY#
		 </isNotEmpty>
		 <isNotEmpty property="BARCOD">
		 	AND BARCOD = #BARCOD#
		 </isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<select id="BARCODREFDKY_OBJECT" parameterClass="Map" resultClass="Integer">
		SELECT SEQ_IMF_BARCD.NEXTVAL FROM DUAL
	</select>
	
	<insert id="BARCOD_INSERT" parameterClass="Map">
		<selectKey keyProperty="BARCOD" resultClass="String">
          SELECT 'VP'||SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),3,7)||LPAD(SEQ_IMF_VP_BARCODE.NEXTVAL,7,0) FROM DUAL 
       </selectKey>
	      INSERT INTO BARCD
	           (
	        	REFDKY
	           ,BARCOD
	           ,WAREKY
	           ,SKUKEY
	           ,DESC01
	           ,DESC02
	           ,PRTDAT
	           ,QTDUOM
	           ,QTYRCV
	           ,QTDBOX
	           ,QTDREM
	           ,QTDPRT
	           ,CREDAT
	           ,CRETIM
	           ,CREUSR
	           ,LMODAT
	           ,LMOTIM
	           ,LMOUSR
	           ,LOTA05
	           ,LOTA02
	           ,RECVKY
               ,SHPOKY
               ,TASKKY
               ,SADJKY
               ,UPDCHK
	     	 )
	        VALUES
	           (
	           #REFDKY#
	           ,#BARCOD#
	           ,#WAREKY#
	           ,#SKUKEY# 
	           ,#DESC01#
	           ,NVL(#DESC02#, ' ')
	           ,TO_CHAR(SYSDATE,'YYYYMMDD')
	           ,#QTDUOM#
	           ,#QTSHPO#
	           ,1
	           ,0
	           ,1
	           ,TO_CHAR(SYSDATE,'YYYYMMDD')
	           ,TO_CHAR(SYSDATE,'HH24MISS')
	           ,#SES_USER_ID#
	           ,TO_CHAR(SYSDATE,'YYYYMMDD')
	           ,TO_CHAR(SYSDATE,'HH24MISS')
	           ,#SES_USER_ID#
	           ,' '
	           ,' '
	           ,' '
	           ,#SHPOKY#
	           ,#TASKKY#
	           ,' '
	           ,0
	      )
	</insert>
	
	<select id="DL04_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.SHPOKY
		     , SI.SVBELN
		     , SH.WAREKY
		     , NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = SH.WAREKY),' ') AS WARENM
		     , SH.OWNRKY
		     , NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = SH.OWNRKY),' ') AS OWNRNM
		     , SH.DOCDAT
		     , SH.RQSHPD
		     , SH.INDDCL
		     , SH.PGRC04 AS AREAKY
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.WAREKY AND AREAKY = SH.PGRC04),' ') AS AREANM
		     , SH.PGRC05 AS AREATO
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.PTRCVR AND AREAKY = SH.PGRC05),' ') AS ARETNM
		     , SH.SHPMTY
		     , NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = SH.SHPMTY),' ') AS SHPMNM
		     , SH.STATDO
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = SH.STATDO),' ') AS STATNM
		     , SH.ALSTKY
		     , SH.PGRC01 AS DLTRRT
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'DLTRRT' AND CMCDVL = SH.PGRC01),' ') AS DLTRRTNM
		     , SH.PTRCVR
		     , NVL((CT.NAME01),' ') AS PTRCNM
		     , NVL((CT.PROCHA),'V') AS OBPROTCT
		     , SH.DPTNKY
		     , NVL((PT.NAME01),' ') AS DPTNNM
		     , NVL((PT.PROCHA),'V') AS OBPROTPT
		     , COUNT(*) AS ITMCNT
		     , SH.CREDAT
		     , MAX(SI.SEBELN) AS SEBELN
		     , SH.DOCTXT
		     , SI.LOTA04
		     , DECODE(TRIM(TI.DOORKY),NULL,' ','V') AS DOORKY
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN TASDI TI ON TI.SHPOKY = SH.SHPOKY
		                                  AND TI.SHPOIT  = SI.SHPOIT
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = SH.OWNRKY AND SM.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = SH.WAREKY AND SW.OWNRKY = SH.OWNRKY AND SW.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN BZPTN CT ON CT.OWNRKY = SH.OWNRKY AND CT.PTNRTY = 'CT' AND CT.PTNRKY  = SH.DPTNKY
		       LEFT OUTER JOIN BZPTN PT ON PT.OWNRKY = SH.OWNRKY AND PT.PTNRTY = 'CT' AND PT.PTNRKY  = SH.DPTNKY
		 WHERE SH.WAREKY = #WAREKY#
		   <isNotEmpty property="RQSHPD1">
		   	 AND SH.RQSHPD &gt;= #RQSHPD1# AND SH.RQSHPD &lt;= #RQSHPD2#
		   </isNotEmpty>
<!-- 		   AND SH.PGRC01 IN ('DUMMY' -->
<!-- 		                       <isEqual property="PGRC01" compareValue="V">, 'DLV'</isEqual> -->
<!-- 		                       <isEqual property="PGRC02" compareValue="V">, 'TRN'</isEqual> -->
<!-- 		                       <isEqual property="PGRC03" compareValue="V">, 'RTN'</isEqual> -->
<!-- 		                    ) -->
<!-- 		                       <isEqual property="DOORKY" compareValue="V">AND TRIM(DOORKY) IS NULL</isEqual> -->
		   AND SH.STATDO IN ('DUMMY'
		                       <isEqual property="STAT01" compareValue="V">, 'NEW'</isEqual>
		                       <isEqual property="STAT02" compareValue="V">, 'PAL', 'FAL'</isEqual>
		                       <isEqual property="STAT03" compareValue="V">, 'PPC', 'FPC'</isEqual>
		                       <isEqual property="STAT04" compareValue="V">, 'PSH', 'FSH'</isEqual>
		                       <isEqual property="STAT05" compareValue="V">, 'CLS'</isEqual>
		                    )
		   <isNotEmpty property="RANGE_SQL">
		   	$RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY SH.SHPOKY
		     , SI.SVBELN
		     , SH.WAREKY
		     , SH.OWNRKY
		     , SH.DOCDAT
		     , SH.RQSHPD
		     , SH.INDDCL
		     , SH.PGRC04
		     , SH.PGRC05
		     , SH.SHPMTY
		     , SH.STATDO
		     , SH.ALSTKY
		     , SH.PGRC01
		     , SH.PTRCVR
		     , NVL((CT.NAME01),' ')
		     , NVL((CT.PROCHA),'V')
		     , SH.DPTNKY
		     , NVL((PT.NAME01),' ')
		     , NVL((PT.PROCHA),'V')
		     , SH.CREDAT
		     , SI.SEBELN
		     , SH.DOCTXT
		     , SI.LOTA04
		     , TI.DOORKY
	     ORDER BY SH.SHPOKY DESC 	     
	</select>
	
	<select id="DL04Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.SHPOKY
		     , SI.SHPOIT
		     , SI.SVBELN
		     , SI.SPOSNR
		     , SI.STATIT
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATIT' AND CMCDVL = SI.STATIT),' ') AS STATNM
		     , SI.ALSTKY
		     , SI.SKUKEY
		     , NVL(SM.DESC01, 'None existent SKU') AS DESC01
		     , NVL(SM.DESC02, 'None existent SKU') AS DESC02
		     , NVL(SW.OBPROT,'V') AS OBPROT
		     , SI.QTYORG
		     , SI.QTSHPO
		     , SI.QTALOC
		     , SI.QTSHPO - SI.QTALOC AS QTUALO
		     , SI.QTSHPO - SI.QTJCMP AS QTABLE
		     , SI.QTJCMP
		     , SI.QTSHPD
		     , SI.UOMKEY
		     , SI.MEASKY
		     , NVL(TRIM(SI.LOTA13),'10000101') AS LOTA13
		     , SI.SEBELN
		     , SI.LOTA02
		     , SI.LOTA04
		     , SI.LOTA05
		     , SI.NAME01
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = SH.OWNRKY AND SM.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = SH.WAREKY AND SW.OWNRKY = SH.OWNRKY AND SW.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN BZPTN CT ON CT.OWNRKY = SH.OWNRKY AND CT.PTNRTY = 'CT' AND CT.PTNRKY = SH.DPTNKY
		       LEFT OUTER JOIN BZPTN PT ON PT.OWNRKY = SH.OWNRKY AND PT.PTNRTY = 'CT' AND PT.PTNRKY = SH.DPTNKY
		 WHERE SH.WAREKY = #WAREKY# 
		   AND SH.RQSHPD = #RQSHPD#
		   <!-- AND SH.PGRC04 = #AREAKY# -->
<!-- 		   AND SH.PGRC01 IN ('DUMMY', 'DLV', 'TRN', 'RTN') -->
		   AND SH.SHPOKY = #SHPOKY#
	</select>
	
	<update id="DL04_UPDATE" parameterClass="Map">
		UPDATE SHPDH SET 
			DOCDAT = #DOCDAT# ,
	 		ALSTKY = #ALSTKY#
 		WHERE 
			SHPOKY = #SHPOKY#
	</update>
	
	<update id="DL04Sub_UPDATE" parameterClass="Map">
		UPDATE SHPDI SET 
	 		ALSTKY = #ALSTKY# ,
			LOTA13 = #LOTA13#
		WHERE 
			SHPOKY = #SHPOKY# 
		AND SHPOIT = #SHPOIT# 
	</update>
	
	<update id="DL04HEAD_UPDATE" parameterClass="Map">
		UPDATE SHPDI
		   SET STKNUM = #STKNUM#
		 WHERE SHPOKY = #SHPOKY# 
	</update>
	
	<select id="DL06PROC_MAP" parameterClass="Map" resultClass="DataMap">
		{ call  P_PKLIST_BCD( #STKNUM#, #PRTSEQ#, #PRTTYP#) }
	</select>
	
	<select id="SEQPRTSEQ_OBJECT" parameterClass="Map" resultClass="Integer">
		SELECT SEQ_PRTSEQ.NEXTVAL FROM DUAL
	</select>
	
	<select id="SEQSTKNUM_OBJECT" parameterClass="Map" resultClass="Integer">
		SELECT SEQ_STKNUM.NEXTVAL FROM DUAL
	</select>
	
	<select id="SHPDPROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_TASK_COMPLETE_BY_SHPD(#SHPOKY#, #SES_USER_ID#) }
	</select>

	<select id="ALLOC_WH00_PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_BATCH_ALLOCATION_WH00(#STKNUM#, #SES_USER_ID#) }
	</select>

	<select id="ALLOC_PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_BATCH_ALLOCATION_STKNUM(#STKNUM#, #SES_USER_ID#) }
	</select>
	
	<delete id="DL04REMOVE_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		WHERE TASKTY = 'PK'
		  AND STATIT = 'NEW'
		  AND SHPOKY = #SHPOKY#
	</delete>
	
	<select id="DL04POPBAK_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.WAREKY
			 , NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = SH.WAREKY),' ') AS WARENM
		     , SH.OWNRKY
		     , NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = SH.OWNRKY),' ') AS OWNRNM
		     , SH.PGRC04 AS AREAKY
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.WAREKY AND AREAKY = SH.PGRC04),' ') AS AREANM
		     , SI.SKUKEY
		     , NVL(SM.DESC01, 'None existent SKU.') AS DESC01
		     , SH.DPTNKY
		     , NVL((SELECT NAME01 FROM BZPTN WHERE OWNRKY = SH.OWNRKY AND PTNRTY = SH.DPTNKY AND PTNRTY = 'CT'),' ') AS DPTNNM
		     , SH.PTRCVR
		     , NVL((SELECT NAME01 FROM BZPTN WHERE OWNRKY = SH.OWNRKY AND PTNRTY = SH.PTRCVR AND PTNRTY = 'CT'),' ') AS PTRCNM
		     , SH.SHPOKY
		     , SI.SHPOIT
		     , SI.SVBELN
		     , SI.SPOSNR
		     , SI.ALSTKY
		     , NVL(TRIM(SI.LOTA13),'10000101') AS LOTA13
		     , SI.QTSHPO
		     , SI.QTJCMP
		     , SI.QTSHPO - SI.QTJCMP AS QTABLE
		     , SI.QTALOC - SI.QTJCMP AS QTALOC
		     , SI.QTSHPO - SI.QTJCMP - SI.QTALOC AS QTUALO
		     , SI.UOMKEY
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = SH.OWNRKY AND SM.SKUKEY = SI.SKUKEY
		  WHERE SH.SHPOKY = #SHPOKY#
		    AND SI.SHPOIT = #SHPOIT#
	</select>
	
	<select id="DL04POP_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CASE WHEN NVL(SUM(S.QTSALO),0) > 0 THEN 'V' ELSE ' ' END AS CHECKROW,
		       S.OWNRKY AS OWNRKY,
		       S.WAREKY AS WAREKY,
		       S.AREAKY AS AREAKY,
		       S.ZONEKY AS ZONEKY,
		       S.LOCAKY AS LOCAKY,
		       S.TRNUID AS TRNUID,
		       S.SKUKEY AS SKUKEY,
		       S.ASKU01 AS ASKU01,
		       S.DESC01 AS DESC01,
		       S.DESC02 AS DESC02,
		       NVL(SUM(S.QTSIWH),0) AS QTSIWH,
		       NVL(SUM(S.QTSALO),0) AS QTSALO,
		       NVL(SUM(S.QTSALO),0) AS QTINIT,
		       S.MEASKY AS MEASKY,
		       S.UOMKEY AS UOMKEY,
		       S.TRNUID AS TRNUID,
		       S.LOTNUM AS LOTNUM,
		       S.LOTA01 AS LOTA01,
		       S.LOTA02 AS LOTA02,
		       S.LOTA03 AS LOTA03,
		       S.LOTA04 AS LOTA04,
		       S.LOTA05 AS LOTA05,
		       S.LOTA06 AS LOTA06,
		       S.LOTA07 AS LOTA07,
		       S.LOTA08 AS LOTA08,
		       S.LOTA09 AS LOTA09,
		       S.LOTA10 AS LOTA10,
		       S.LOTA11 AS LOTA11,
		       S.LOTA12 AS LOTA12,
		       S.LOTA13 AS LOTA13,
		       S.LOTA14 AS LOTA14,
		       S.LOTA15 AS LOTA15,
		       S.LOTA16 AS LOTA16,
		       S.LOTA17 AS LOTA17,
		       S.LOTA18 AS LOTA18,
		       S.LOTA19 AS LOTA19,
		       S.LOTA20 AS LOTA20
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI
               ON SI.SHPOKY = SH.SHPOKY
	       INNER JOIN STKKY S
	               ON S.WAREKY = SH.WAREKY
	              AND S.OWNRKY = SH.OWNRKY
	              AND S.SKUKEY = SI.SKUKEY
	       INNER JOIN AREMA A
	               ON A.WAREKY = S.WAREKY
	              AND A.AREAKY = S.AREAKY
	       INNER JOIN LOCMA L
	               ON L.WAREKY = S.WAREKY
	              AND L.LOCAKY = S.LOCAKY
		 WHERE SH.SHPOKY = #SHPOKY#
		   AND SI.SHPOIT = #SHPOIT#
		   AND (   (S.QTSIWH > 0 AND S.QTSALO = 0 AND QTSPMO = 0 AND QTSPMI = 0 AND QTSBLK = 0) 
		        OR (S.QTSIWH > 0 AND S.QTSALO > 0 AND S.SHPOKY = SH.SHPOKY AND S.SHPOIT = SI.SHPOIT) 
		       )
		   AND L.INDUPK = 'V'
		   AND L.STATUS = '00'
		   AND S.LOTA06 = '00'
		   AND A.AREATY IN ('RECV','STOR','TASK')
		   AND S.LOCAKY NOT LIKE 'SHP%'
		   AND S.LOCAKY NOT LIKE 'RTN%'
		   AND S.LOCAKY NOT LIKE 'SYS%'
		   AND 'V' = CASE WHEN (
                            L.AUTLOC = ' ' 
                         OR ( L.AUTLOC = 'V' AND S.SHPOKY  = #SHPOKY# AND S.SHPOIT  = #SHPOIT# ) -- 자동창고 로케이션 중 자기자신오더에 할당 걸린 재고 보이기
                         OR ( L.AUTLOC = 'V' AND S.SHPOKY != #SHPOKY# AND S.SHPOIT != #SHPOIT#   -- 자동창고 로케이션 중 다른 오더에 할당 걸린 재고가 존재하는 재고 안보이기
                                   AND NOT EXISTS (SELECT 1 FROM STKKY X WHERE X.WAREKY = S.WAREKY AND X.LOCAKY = S.LOCAKY AND X.QTSIWH > 0 AND X.QTSPMO > 0 AND X.SHPOKY != #SHPOKY# AND X.SHPOIT = #SHPOIT#) )
                       ) THEN 'V'
                  ELSE ' ' END
		 GROUP BY S.OWNRKY, S.WAREKY, S.AREAKY, S.ZONEKY, S.LOCAKY, S.TRNUID,
		          S.SKUKEY, S.ASKU01, S.DESC01, S.DESC02, S.MEASKY,
		          S.MEASKY, S.UOMKEY, S.TRNUID, S.LOTNUM,
		          S.LOTA01, S.LOTA02, S.LOTA03, S.LOTA04, S.LOTA05,
		          S.LOTA06, S.LOTA07, S.LOTA08, S.LOTA09, S.LOTA10,
		          S.LOTA11, S.LOTA12, S.LOTA13, S.LOTA14, S.LOTA15,
		          S.LOTA16, S.LOTA17, S.LOTA18, S.LOTA19, S.LOTA20
	</select>
	
	<delete id="DL04POPREMOVE_DELETE" parameterClass="Map">
		DELETE FROM TASDI 
		WHERE STATIT = 'NEW'
		  AND SHPOKY = #SHPOKY#
		  AND SHPOIT = #SHPOIT#
	</delete>
	
	<select id="GEN_TASKKY_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT SZF_GETDOCNUMBER(#TASOTY#) AS TASKKY FROM DUAL
	</select>
	
	<select id="MANUALALLOCATE_AVAILABLE_STOCK_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT S.STOKKY  AS "STOKKY",
		       S.WAREKY  AS "WAREKY",
		       S.LOTNUM  AS "LOTNUM",
		       S.LOCAKY  AS "LOCAKY",
		       S.TRNUID  AS "TRNUID",
		       S.SECTID  AS "SECTID",
		       S.PACKID  AS "PACKID",
		       S.QTSIWH  AS "QTSIWH",
		       S.QTSALO  AS "QTSALO",
		       S.QTSPMO  AS "QTSPMO",
		       S.QTSPMI  AS "QTSPMI",
		       S.QTSBLK  AS "QTSBLK",
		       S.QTYUOM  AS "QTYUOM",
		       S.TRUNTY  AS "TRUNTY",
		       S.MEASKY  AS "MEASKY",
		       S.UOMKEY  AS "UOMKEY",
		       S.QTPUOM  AS "QTPUOM",
		       S.DUOMKY  AS "DUOMKY",
		       S.QTDUOM  AS "QTDUOM",
		       S.TKFLKY  AS "TKFLKY",
		       S.STEPNO  AS "STEPNO",
		       S.LSTTFL  AS "LSTTFL",
		       S.SRCSKY  AS "SRCSKY",
		       S.UOMDOC  AS "UOMDOC",
		       S.CNTBSK  AS "CNTBSK",
		       S.NUPDPS  AS "NUPDPS",
		       S.REFDKY  AS "REFDKY",
		       S.REFDIT  AS "REFDIT",
		       S.REFCAT  AS "REFCAT",
		       S.REFDAT  AS "REFDAT",
		       S.PURCKY  AS "PURCKY",
		       S.PURCIT  AS "PURCIT",
		       S.ASNDKY  AS "ASNDKY",
		       S.ASNDIT  AS "ASNDIT",
		       S.RECVKY  AS "RECVKY",
		       S.RECVIT  AS "RECVIT",
		       S.SHPOKY  AS "SHPOKY",
		       S.SHPOIT  AS "SHPOIT",
		       S.GRPOKY  AS "GRPOKY",
		       S.GRPOIT  AS "GRPOIT",
		       S.TASKKY  AS "TASKKY",
		       S.TASKIT  AS "TASKIT",
		       S.SADJKY  AS "SADJKY",
		       S.SADJIT  AS "SADJIT",
		       S.SDIFKY  AS "SDIFKY",
		       S.SDIFIT  AS "SDIFIT",
		       S.PHYIKY  AS "PHYIKY",
		       S.PHYIIT  AS "PHYIIT",
		       S.OWNRKY  AS "OWNRKY",
		       S.SKUKEY  AS "SKUKEY",
		       S.LOTA01  AS "LOTA01",
		       S.LOTA02  AS "LOTA02",
		       S.LOTA03  AS "LOTA03",
		       S.LOTA04  AS "LOTA04",
		       S.LOTA05  AS "LOTA05",
		       S.LOTA06  AS "LOTA06",
		       S.LOTA07  AS "LOTA07",
		       S.LOTA08  AS "LOTA08",
		       S.LOTA09  AS "LOTA09",
		       S.LOTA10  AS "LOTA10",
		       S.LOTA11  AS "LOTA11",
		       S.LOTA12  AS "LOTA12",
		       S.LOTA13  AS "LOTA13",
		       S.LOTA14  AS "LOTA14",
		       S.LOTA15  AS "LOTA15",
		       S.LOTA16  AS "LOTA16",
		       S.LOTA17  AS "LOTA17",
		       S.LOTA18  AS "LOTA18",
		       S.LOTA19  AS "LOTA19",
		       S.LOTA20  AS "LOTA20",
		       S.AWMSNO  AS "AWMSNO",
		       S.DESC01  AS "DESC01",
		       S.DESC02  AS "DESC02",
		       S.ASKU01  AS "ASKU01",
		       S.ASKU02  AS "ASKU02",
		       S.ASKU03  AS "ASKU03",
		       S.ASKU04  AS "ASKU04",
		       S.ASKU05  AS "ASKU05",
		       S.EANCOD  AS "EANCOD",
		       S.GTINCD  AS "GTINCD",
		       S.SKUG01  AS "SKUG01",
		       S.SKUG02  AS "SKUG02",
		       S.SKUG03  AS "SKUG03",
		       S.SKUG04  AS "SKUG04",
		       S.SKUG05  AS "SKUG05",
		       S.GRSWGT  AS "GRSWGT",
		       S.NETWGT  AS "NETWGT",
		       S.WGTUNT  AS "WGTUNT",
		       S.LENGTH  AS "LENGTH",
		       S.WIDTHW  AS "WIDTHW",
		       S.HEIGHT  AS "HEIGHT",
		       S.CUBICM  AS "CUBICM",
		       S.CAPACT  AS "CAPACT",
		       S.ZONEKY  AS "ZONEKY",
		       S.TKZONE  AS "TKZONE",
		       S.AREAKY  AS "AREAKY",
		       S.SMANDT  AS "SMANDT",
		       S.SEBELN  AS "SEBELN",
		       S.SEBELP  AS "SEBELP",
		       S.SZMBLNO AS "SZMBLNO",
		       S.SZMIPNO AS "SZMIPNO",
		       S.STRAID  AS "STRAID",
		       S.SVBELN  AS "SVBELN",
		       S.SPOSNR  AS "SPOSNR",
		       S.STKNUM  AS "STKNUM",
		       S.STPNUM  AS "STPNUM",
		       S.SWERKS  AS "SWERKS",
		       S.SLGORT  AS "SLGORT",
		       S.SDATBG  AS "SDATBG",
		       S.STDLNR  AS "STDLNR",
		       S.SSORNU  AS "SSORNU",
		       S.SSORIT  AS "SSORIT",
		       S.SMBLNR  AS "SMBLNR",
		       S.SZEILE  AS "SZEILE",
		       S.SMJAHR  AS "SMJAHR",
		       S.SXBLNR  AS "SXBLNR",
		       S.SAPSTS  AS "SAPSTS",
		       S.SBKTXT  AS "SBKTXT",
		       S.CREDAT  AS "CREDAT",
		       S.CRETIM  AS "CRETIM",
		       S.CREUSR  AS "CREUSR",
		       S.LMODAT  AS "LMODAT",
		       S.LMOTIM  AS "LMOTIM",
		       S.LMOUSR  AS "LMOUSR",
		       NVL((SELECT SYSLOC FROM DOCTM WHERE DOCUTY = #SHPMTY#), ' ') AS "LOCATG"
		  FROM STKKY S
		       INNER JOIN LOCMA L
		               ON L.WAREKY = S.WAREKY
		              AND L.LOCAKY = S.LOCAKY
		 WHERE S.OWNRKY = #OWNRKY#
		   AND S.WAREKY = #WAREKY#
		   AND S.AREAKY = #AREAKY#
		   AND S.LOCAKY = #LOCAKY#
		   AND S.SKUKEY = #SKUKEY#
		   AND S.TRNUID = #TRNUID#
		   AND S.LOTNUM = #LOTNUM#		   
		   AND S.QTSIWH > 0
		   AND S.QTSALO = 0
		   AND S.QTSPMO = 0
		   AND S.QTSPMI = 0
		   AND S.QTSBLK = 0
		   AND S.LOTA06 = '00'
		   AND L.INDUPK = 'V'
		   AND S.LOCAKY NOT IN ('RTNLOC','RTSLOC','SETLOC','SCRLOC')
		   AND L.STATUS = '00'
		 ORDER BY S.STOKKY
	</select>
	
	<insert id="TASDI_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				NVL(#TASKKY#, ' '),
				NVL(#TASKIT#, ' '),
				#TASKTY#,
				NVL(#RSNCOD#, ' '),
				CASE WHEN TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)) = 0 THEN 'NEW'
				     ELSE CASE WHEN #QTTAOR# = #QTCOMP# THEN 'FPC' ELSE 'PPC' END
				 END,
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
				NVL(#SES_OWNER#, 'IMV'),
				NVL(#SKUKEY#, ' '),
				NVL(#LOTNUM#, ' '),
				CASE WHEN #STATIT# = 'NEW' THEN ' ' ELSE TO_CHAR(SYSDATE,'YYYYMMDD') END,
				CASE WHEN #STATIT# = 'NEW' THEN ' ' ELSE TO_CHAR(SYSDATE,'HH24MISS') END,
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				NVL(#TKFLKY#, ' '),
				NVL(#STEPNO#, ' '),
				NVL(#LSTTFL#, ' '),
				
				NVL(#LOCASR#, ' '),
				NVL(#SECTSR#, ' '),
				NVL(#PAIDSR#, ' '),
				NVL(#TRNUID#, ' '),
				NVL(#STRUTY#, ' '),
				NVL(#SMEAKY#, ' '),
				NVL(#SUOMKY#, ' '),
				NVL(#QTSPUM#, 1),
				NVL(#SDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSDUM#), 1)),
				
				NVL(#LOCATG#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUID#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#TMEAKY#, ' '),
				NVL(#TUOMKY#, ' '),
				NVL(#QTTPUM#, 1),
				NVL(#TDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTDUM#), 1)),
				
				NVL(#LOCAAC#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUID#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#AMEAKY#, ' '),
				NVL(#AUOMKY#, ' '),
				NVL(#QTAPUM#, 1),
				NVL(#ADUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTADUM#), 1)),
				
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#PURCKY#, ' '),
				NVL(#PURCIT#, ' '),
				NVL(#ASNDKY#, ' '),
				NVL(#ASNDIT#, ' '),
				NVL(#RECVKY#, ' '),
				NVL(#RECVIT#, ' '),
				NVL(#SHPOKY#, ' '),
				NVL(#SHPOIT#, ' '),
				NVL(#GRPOKY#, ' '),
				NVL(#GRPOIT#, ' '),
				NVL(#SADJKY#, ' '),
				NVL(#SADJIT#, ' '),
				NVL(#SDIFKY#, ' '),
				NVL(#SDIFIT#, ' '),
				NVL(#PHYIKY#, ' '),
				NVL(#PHYIIT#, ' '),
				NVL(#DROPID#, ' '),
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '), 
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(TRIM(#GRSWGT#), 0)),
				TO_NUMBER(NVL(TRIM(#NETWGT#), 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(TRIM(#LENGTH#), 0)),
				TO_NUMBER(NVL(TRIM(#WIDTHW#), 0)),
				TO_NUMBER(NVL(TRIM(#HEIGHT#), 0)),
				TO_NUMBER(NVL(TRIM(#CUBICM#), 0)),
				TO_NUMBER(NVL(TRIM(#CAPACT#), 0)),
				NVL(#WORKID#, ' '),
				NVL(#WORKNM#, ' '),
				NVL(#HHTTID#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				TO_NUMBER(NVL(TRIM(#LOTA16#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA17#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA18#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA19#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA20#), 0)),				
				NVL(#AWMSNO#, ' '),
				NVL(#AWMSTS#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#DOORKY#, ' '),
				NVL(#PTLT01#, ' '),
				NVL(#PTLT02#, ' '),
				NVL(#PTLT03#, ' '),
				NVL(#PTLT04#, ' '),
				NVL(#PTLT05#, ' '),
				NVL(#PTLT06#, ' '),
				NVL(#PTLT07#, ' '),
				NVL(#PTLT08#, ' '),
				NVL(#PTLT09#, ' '),
				NVL(#PTLT10#, ' '),
				NVL(#PTLT11#, ' '),
				NVL(#PTLT12#, ' '),
				NVL(#PTLT13#, ' '),
				NVL(#PTLT14#, ' '),
				NVL(#PTLT15#, ' '),
				TO_NUMBER(NVL(TRIM(#PTLT16#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT17#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT18#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT19#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT20#), 0)),				 
				NVL(#PASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#SBKTXT#, ' '),
				NVL(#TASRSN#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			)
	</insert>
	
	<select id="SEARCHTASDI_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT 
			T.TASKKY,
			T.TASKIT,
			T.TASKTY,
			T.RSNCOD,
			T.STATIT,
			T.QTTAOR,
			T.QTCOMP,
			T.OWNRKY,
			T.SKUKEY,
			T.LOTNUM,
			T.ACTCDT,
			T.ACTCTI,
			T.QTYUOM,
			T.TKFLKY,
			T.STEPNO,
			T.LSTTFL,
			T.LOCASR,
			T.SECTSR,
			T.PAIDSR,
			T.TRNUSR,
			T.STRUTY,
			T.SMEAKY,
			T.SUOMKY,
			T.QTSPUM,
			T.SDUOKY,
			T.QTSDUM,
			T.LOCATG,
			T.SECTTG,
			T.PAIDTG,
			T.TRNUTG,
			T.TTRUTY,
			T.TMEAKY,
			T.TUOMKY,
			T.QTTPUM,
			T.TDUOKY,
			T.QTTDUM,
			T.LOCAAC,
			T.SECTAC,
			T.PAIDAC,
			T.TRNUAC,
			T.ATRUTY,
			T.AMEAKY,
			T.AUOMKY,
			T.QTAPUM,
			T.ADUOKY,
			T.QTADUM,
			T.REFDKY,
			T.REFDIT,
			T.REFCAT,
			T.REFDAT,
			T.PURCKY,
			T.PURCIT,
			T.ASNDKY,
			T.ASNDIT,
			T.RECVKY,
			T.RECVIT,
			T.SHPOKY,
			T.SHPOIT,
			T.GRPOKY,
			T.GRPOIT,
			T.SADJKY,
			T.SADJIT,
			T.SDIFKY,
			T.SDIFIT,
			T.PHYIKY,
			T.PHYIIT,
			T.DROPID,
			T.DESC01,
			T.DESC02,
			T.ASKU01,
			T.ASKU02,
			T.ASKU03,
			T.ASKU04,
			T.ASKU05,
			T.EANCOD,
			T.GTINCD,
			T.SKUG01,
			T.SKUG02,
			T.SKUG03,
			T.SKUG04,
			T.SKUG05,
			T.GRSWGT,
			T.NETWGT,
			T.WGTUNT,
			T.LENGTH,
			T.WIDTHW,
			T.HEIGHT,
			T.CUBICM,
			T.CAPACT,
			T.WORKID,
			T.WORKNM,
			T.HHTTID,
			T.AREAKY,
			T.LOTA01,
			T.LOTA02,
			T.LOTA03,
			T.LOTA04,
			T.LOTA05,
			T.LOTA06,
			T.LOTA07,
			T.LOTA08,
			T.LOTA09,
			T.LOTA10,
			T.LOTA11,
			T.LOTA12,
			T.LOTA13,
			T.LOTA14,
			T.LOTA15,
			T.LOTA16,
			T.LOTA17,
			T.LOTA18,
			T.LOTA19,
			T.LOTA20,
			T.AWMSNO,
			T.AWMSTS,
			T.SMANDT,
			T.SEBELN,
			T.SEBELP,
			T.SZMBLNO,
			T.SZMIPNO,
			T.STRAID,
			T.SVBELN,
			T.SPOSNR,
			T.STKNUM,
			T.STPNUM,
			T.SWERKS,
			T.SLGORT,
			T.SDATBG,
			T.STDLNR,
			T.SSORNU,
			T.SSORIT,
			T.SMBLNR,
			T.SZEILE,
			T.SMJAHR,
			T.SXBLNR,
			T.SAPSTS,
			T.DOORKY,
			T.PTLT01,
			T.PTLT02,
			T.PTLT03,
			T.PTLT04,
			T.PTLT05,
			T.PTLT06,
			T.PTLT07,
			T.PTLT08,
			T.PTLT09,
			T.PTLT10,
			T.PTLT11,
			T.PTLT12,
			T.PTLT13,
			T.PTLT14,
			T.PTLT15,
			T.PTLT16,
			T.PTLT17,
			T.PTLT18,
			T.PTLT19,
			T.PTLT20,
			T.PASTKY,
			T.ALSTKY,
			T.SBKTXT,
			T.TASRSN,
			T.CREDAT,
			T.CRETIM,
			T.CREUSR,
			T.LMODAT,
			T.LMOTIM,
			T.LMOUSR,
			T.INDBZL,
			T.INDARC,
			T.UPDCHK
		FROM TASDI T
		WHERE T.TASKKY = #TASKKY#
		  AND T.TASKIT = #TASKIT#
	</select>
	
	<select id="SEARCHTASDR_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT 
			R.TASKKY,
			R.TASKIT,
			R.TASKIR,
			R.STOKKY,
			R.QTSTKM,
			R.QTSTKC,
			R.CREDAT,
			R.CRETIM,
			R.CREUSR,
			R.LMODAT,
			R.LMOTIM,
			R.LMOUSR,
			R.INDBZL,
			R.INDARC,
			R.UPDCHK
		FROM TASDR R
		WHERE R.TASKKY = #TASKKY# 
		  AND R.TASKIT = #TASKIT#
	</select>
	
	<select id="STKKYFIND_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.TASKIT AS TASKIT,
		       A.TASKIR AS TASKIR,
		       A.STOKKY AS STOKKY,
		       A.QTSTKM AS QTSTKM,
		       A.QTSTKC AS QTSTKC,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       B.STOKKY AS STOKKY,
		       B.QTSIWH AS QTSIWH,
		       B.QTSALO AS QTSALO,
		       B.QTSPMO AS QTSPMO,
		       B.QTSPMI AS QTSPMI,
		       B.QTSBLK AS QTSBLK,
		       B.SRCSKY AS SRCSKY
		FROM   TASDR A,
		       STKKY B
		WHERE  A.STOKKY = B.STOKKY
		AND    A.TASKKY = #TASKKY#
		AND    A.TASKIT = #TASKIT#
		ORDER BY A.TASKIR
	</select>
	
	<delete id="TASDIDEL_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		 WHERE TASKKY = #TASKKY#
		   AND TASKIT = #TASKIT#
	</delete>
	
	<insert id="TASDIEND_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				NVL(#TASKKY#, ' '),
				NVL(#TASKIT#, ' '),
				NVL(#TASKTY#, ' '),
				NVL(#RSNCOD#, ' '),
				NVL(#STATIT#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
				NVL(#OWNRKY#, ' '),
				NVL(#SKUKEY#, ' '),
				NVL(#LOTNUM#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				TO_NUMBER(NVL(TRIM(#QTYUOM#), 0)),
				NVL(#TKFLKY#, ' '),
				NVL(#STEPNO#, ' '),
				NVL(#LSTTFL#, ' '),
				NVL(#LOCASR#, ' '),
				NVL(#SECTSR#, ' '),
				NVL(#PAIDSR#, ' '),
				NVL(#TRNUSR#, ' '),
				NVL(#STRUTY#, ' '),
				NVL(#SMEAKY#, ' '),
				NVL(#SUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSPUM#), 0)),
				NVL(#SDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSDUM#), 0)),
				NVL(#LOCATG#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUTG#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#TMEAKY#, ' '),
				NVL(#TUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTPUM#), 0)),
				NVL(#TDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTDUM#), 0)),
				NVL(#LOCAAC#, ' '),
				NVL(#SECTAC#, ' '),
				NVL(#PAIDAC#, ' '),
				NVL(#TRNUAC#, ' '),
				NVL(#ATRUTY#, ' '),
				NVL(#AMEAKY#, ' '),
				NVL(#AUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTAPUM#), 0)),
				NVL(#ADUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTADUM#), 0)),
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#PURCKY#, ' '),
				NVL(#PURCIT#, ' '),
				NVL(#ASNDKY#, ' '),
				NVL(#ASNDIT#, ' '),
				NVL(#RECVKY#, ' '),
				NVL(#RECVIT#, ' '),
				NVL(#SHPOKY#, ' '),
				NVL(#SHPOIT#, ' '),
				NVL(#GRPOKY#, ' '),
				NVL(#GRPOIT#, ' '),
				NVL(#SADJKY#, ' '),
				NVL(#SADJIT#, ' '),
				NVL(#SDIFKY#, ' '),
				NVL(#SDIFIT#, ' '),
				NVL(#PHYIKY#, ' '),
				NVL(#PHYIIT#, ' '),
				NVL(#DROPID#, ' '),
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '),
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(TRIM(#GRSWGT#), 0)),
				TO_NUMBER(NVL(TRIM(#NETWGT#), 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(TRIM(#LENGTH#), 0)),
				TO_NUMBER(NVL(TRIM(#WIDTHW#), 0)),
				TO_NUMBER(NVL(TRIM(#HEIGHT#), 0)),
				TO_NUMBER(NVL(TRIM(#CUBICM#), 0)),
				TO_NUMBER(NVL(TRIM(#CAPACT#), 0)),
				NVL(#WORKID#, ' '),
				NVL(#WORKNM#, ' '),
				NVL(#HHTTID#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				TO_NUMBER(NVL(TRIM(#LOTA16#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA17#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA18#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA19#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA20#), 0)),
				NVL(#AWMSNO#, ' '),
				NVL(#AWMSTS#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#DOORKY#, ' '),
				NVL(#PTLT01#, ' '),
				NVL(#PTLT02#, ' '),
				NVL(#PTLT03#, ' '),
				NVL(#PTLT04#, ' '),
				NVL(#PTLT05#, ' '),
				NVL(#PTLT06#, ' '),
				NVL(#PTLT07#, ' '),
				NVL(#PTLT08#, ' '),
				NVL(#PTLT09#, ' '),
				NVL(#PTLT10#, ' '),
				NVL(#PTLT11#, ' '),
				NVL(#PTLT12#, ' '),
				NVL(#PTLT13#, ' '),
				NVL(#PTLT14#, ' '),
				NVL(#PTLT15#, ' '),
				TO_NUMBER(NVL(TRIM(#PTLT16#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT17#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT18#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT19#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT20#), 0)),
				NVL(#PASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#SBKTXT#, ' '),
				NVL(#TASRSN#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			)
	</insert>
	
	<insert id="TASDREND_INSERT" parameterClass="Map">
		INSERT INTO TASDR (      
		      TASKKY
		    , TASKIT
		    , TASKIR
		    , STOKKY
		    , QTSTKM
		    , QTSTKC
		    , CREDAT
		    , CRETIM
		    , CREUSR
		    , LMODAT
		    , LMOTIM
		    , LMOUSR    
		) VALUES (
		      #TASKKY#
		    , #TASKIT#
		    , NVL(#TASKIR#,'0001')
		    , #STOKKY#
		    , TO_NUMBER(#QTSTKM#)
		    , TO_NUMBER(#QTSTKC#)
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#   
		)
	</insert>
	
	<update id="DL08SHPDH_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET INDDCL = 'V',
		   	   DOCTXT = NVL(#DOCTXT#, ' '),
		       LSHPCD = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#
		 WHERE SHPOKY = #SHPOKY#
	</update>
	
	<update id="DL08SHPDI_UPDATE" parameterClass="Map">
		UPDATE SHPDI
		   SET QTSHPD = #QTJCMP#,
      		   STATIT = CASE WHEN QTSHPO = QTJCMP THEN 'FSH' ELSE 'PSH' END,
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       LMOUSR = #SES_USER_ID#,
		       NAME01 = NVL(#NAME01#, ' ')
		       <!-- SLAND1 = #SLAND1#,
		       NAME01 = #NAME01#,
		       SBKTXT = #SBKTXT# -->
		 WHERE SHPOKY = #SHPOKY#
		   AND SHPOIT = #SHPOIT#
	</update>
	
	<select id="CALL_SHIPMENTPROCESS_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_SHIPMENT_PROCESS(#SHPOKY#, #SES_USER_ID#) }
	</select>
	
	<select id="CALL_AIRWMS_DOCUMENT_PROCESS_MAP" parameterClass="Map" resultClass="DataMap">
		{ call P_AIRWMS_DOCUMENT_PROCESS(#DOCCAT#, #DOCUKY#, NVL(#DOCUIT#, ' '), NVL(#DOFLAG#, ' '), #SES_USER_ID#) }
	</select>
	
	<insert id="PRTLGPT01_INSERT" parameterClass="Map">
		INSERT
			INTO PRTLG
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
             , INDBZL, INDARC, UPDCHK)
			VALUES 
			(    #PRTSEQ#, 1, 'RECV', #WAREKY#, #AREAKY#, ' ', ' ', #OWNRKY#, ' ', ' '
				, ' ', #CREDAT#, ' ', ' ', NVL(#RQSHPD#,' '), ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', #RECVKY#
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
                , ' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#
                , ' ', ' ', 0 
			)
	</insert>
	
	<select id="DL08_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.SHPOKY
		     , SI.SVBELN
		     , SH.WAREKY
		     , NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = SH.WAREKY),' ') AS WARENM
		     , SH.OWNRKY
		     , NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = SH.OWNRKY),' ') AS OWNRNM
		     , SH.DOCDAT
		     , SH.DOCCAT AS DOCCAT
		     , SH.RQSHPD
		     , SH.INDDCL
		     , SH.PGRC04 AS AREAKY
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.WAREKY AND AREAKY = SH.PGRC04),' ') AS AREANM
		     , SH.PGRC05 AS AREATO
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.PTRCVR AND AREAKY = SH.PGRC05),' ') AS ARETNM
		     , SH.SHPMTY
		     , NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = SH.SHPMTY),' ') AS SHPMNM
		     , SH.STATDO
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = SH.STATDO),' ') AS STATNM
		     , SH.ALSTKY
		     , SH.PGRC01 AS DLTRRT
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'DLTRRT' AND CMCDVL = SH.PGRC01),' ') AS DLTRRTNM
		     , SH.PTRCVR
		     , NVL((CT.NAME01),' ') AS PTRCNM
		     , NVL((CT.PROCHA),'V') AS OBPROTCT
		     , SH.DPTNKY
		     , NVL((PT.NAME01),' ') AS DPTNNM
		     , NVL((PT.PROCHA),'V') AS OBPROTPT
		     , COUNT(*) AS ITMCNT
		     , SH.CREDAT
		     , SI.NAME01
	         , SI.SLAND1
	         , SI.SBKTXT
	         , SH.DOCTXT
	         , MAX(SI.SEBELN) AS SEBELN
	         , SI.LOTA04
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = SH.OWNRKY AND SM.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = SH.WAREKY AND SW.OWNRKY = SH.OWNRKY AND SW.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN BZPTN CT ON CT.OWNRKY = SH.OWNRKY AND CT.PTNRTY = 'CT' AND CT.PTNRKY  = SH.DPTNKY
		       LEFT OUTER JOIN BZPTN PT ON PT.OWNRKY = SH.OWNRKY AND PT.PTNRTY = 'CT' AND PT.PTNRKY  = SH.DPTNKY
		 WHERE 1 = 1 
		   AND SH.WAREKY = #WAREKY#
		   AND TRIM(SH.INDDCL) IS NULL
		   <isNotEmpty property="RQSHPD1">
		   AND SH.RQSHPD &gt;= #RQSHPD1# AND SH.RQSHPD &lt;= #RQSHPD2#
		   </isNotEmpty>
		   AND SH.PGRC01 IN ('DUMMY'
		                       <isEqual property="PGRC01" compareValue="V">, 'DLV'</isEqual>
		                       <isEqual property="PGRC02" compareValue="V">, 'TRN'</isEqual>
		                       <isEqual property="PGRC03" compareValue="V">, 'RTN'</isEqual>
		                    )
		   AND SH.STATDO IN ('DUMMY'
		                       <isEqual property="STAT01" compareValue="V">, 'NEW'</isEqual>
		                       <isEqual property="STAT02" compareValue="V">, 'PAL', 'FAL'</isEqual>
		                       <isEqual property="STAT03" compareValue="V">, 'PPC', 'FPC'</isEqual>
		                       <isEqual property="STAT04" compareValue="V">, 'PSH', 'FSH'</isEqual>
		                    )
		   <isNotEmpty property="RANGE_SQL">
		   	 $RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY SH.SHPOKY
		     , SI.SVBELN
		     , SH.WAREKY
		     , SH.OWNRKY
		     , SH.DOCDAT
		     , SH.RQSHPD
		     , SH.INDDCL
		     , SH.PGRC04
		     , SH.PGRC05
		     , SH.SHPMTY
		     , SH.STATDO
		     , SH.ALSTKY
		     , SH.PGRC01
		     , SH.PTRCVR
		     , NVL((CT.NAME01),' ')
		     , NVL((CT.PROCHA),'V')
		     , SH.DPTNKY
		     , NVL((PT.NAME01),' ')
		     , NVL((PT.PROCHA),'V')
		     , SH.CREDAT
		     , SI.NAME01
	         , SI.SLAND1
	         , SI.SBKTXT
	         , SH.DOCTXT
	         , SI.LOTA04
	         , SH.DOCCAT
	</select>
	
	<select id="DL09_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SH.SHPOKY
		     , SI.SVBELN
		     , SH.WAREKY
		     , NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = SH.WAREKY),' ') AS WARENM
		     , SH.OWNRKY
		     , NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = SH.OWNRKY),' ') AS OWNRNM
		     , SH.DOCDAT
		     , SH.DOCCAT AS DOCCAT
		     , SH.RQSHPD
		     , SH.INDDCL
		     , SH.PGRC04 AS AREAKY
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.WAREKY AND AREAKY = SH.PGRC04),' ') AS AREANM
		     , SH.PGRC05 AS AREATO
		     , NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = SH.PTRCVR AND AREAKY = SH.PGRC05),' ') AS ARETNM
		     , SH.SHPMTY
		     , NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = SH.SHPMTY),' ') AS SHPMNM
		     , SH.STATDO
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = SH.STATDO),' ') AS STATNM
		     , SH.ALSTKY
		     , SH.PGRC01 AS DLTRRT
		     , NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'DLTRRT' AND CMCDVL = SH.PGRC01),' ') AS DLTRRTNM
		     , SH.PTRCVR
		     , NVL((CT.NAME01),' ') AS PTRCNM
		     , NVL((CT.PROCHA),'V') AS OBPROTCT
		     , SH.DPTNKY
		     , NVL((PT.NAME01),' ') AS DPTNNM
		     , NVL((PT.PROCHA),'V') AS OBPROTPT
		     , COUNT(*) AS ITMCNT
		     , SH.CREDAT
	         , SH.DOCTXT
	         , MAX(SI.SEBELN) AS SEBELN
	         , SI.LOTA04
	         , (SELECT VEHITY FROM VEHMA VH WHERE VH.VEHIID = SH.DOCTXT) AS NAME01
	         , (SELECT VEHINO FROM VEHMA VH WHERE VH.VEHIID = SH.DOCTXT) AS SBKTXT
	         , (SELECT VEHIOW FROM VEHMA VH WHERE VH.VEHIID = SH.DOCTXT) AS SLAND1 
		  FROM SHPDH SH
		       INNER JOIN SHPDI SI ON SI.SHPOKY = SH.SHPOKY
		       LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = SH.OWNRKY AND SM.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = SH.WAREKY AND SW.OWNRKY = SH.OWNRKY AND SW.SKUKEY = SI.SKUKEY
		       LEFT OUTER JOIN BZPTN CT ON CT.OWNRKY = SH.OWNRKY AND CT.PTNRTY = 'CT' AND CT.PTNRKY  = SH.DPTNKY
		       LEFT OUTER JOIN BZPTN PT ON PT.OWNRKY = SH.OWNRKY AND PT.PTNRTY = 'CT' AND PT.PTNRKY  = SH.DPTNKY
		 WHERE SH.WAREKY = #WAREKY#
		   <isNotEmpty property="RQSHPD1">
		   AND SH.RQSHPD &gt;= #RQSHPD1# AND SH.RQSHPD &lt;= #RQSHPD2#
		   </isNotEmpty>
		   <!-- AND SH.PGRC04 = #AREAKY# --> 
		   AND SH.PGRC01 IN ('DUMMY'
		                       <isEqual property="PGRC01" compareValue="V">, 'DLV'</isEqual>
		                       <isEqual property="PGRC02" compareValue="V">, 'TRN'</isEqual>
		                       <isEqual property="PGRC03" compareValue="V">, 'RTN'</isEqual>
		                    )
		   AND SH.STATDO IN ('DUMMY'
		                       <isEqual property="STAT01" compareValue="V">, 'NEW'</isEqual>
		                       <isEqual property="STAT02" compareValue="V">, 'PAL', 'FAL'</isEqual>
		                       <isEqual property="STAT03" compareValue="V">, 'PPC', 'FPC'</isEqual>
		                       <isEqual property="STAT04" compareValue="V">, 'PSH', 'FSH'</isEqual>
		                    )
		   <isNotEmpty property="RANGE_SQL">
		   	$RANGE_SQL$
		   </isNotEmpty>
		 GROUP BY SH.SHPOKY
		     , SI.SVBELN
		     , SH.WAREKY
		     , SH.OWNRKY
		     , SH.DOCDAT
		     , SH.RQSHPD
		     , SH.INDDCL
		     , SH.PGRC04
		     , SH.PGRC05
		     , SH.SHPMTY
		     , SH.STATDO
		     , SH.ALSTKY
		     , SH.PGRC01
		     , SH.PTRCVR
		     , NVL((CT.NAME01),' ')
		     , NVL((CT.PROCHA),'V')
		     , SH.DPTNKY
		     , NVL((PT.NAME01),' ')
		     , NVL((PT.PROCHA),'V')
		     , SH.CREDAT
		     , SI.NAME01
	         , SI.SLAND1
	         , SI.SBKTXT
	         , SH.DOCTXT
	         , SI.LOTA04
	         , SH.DOCCAT
	     ORDER BY SH.SHPOKY DESC 	     
	</select>
	
	<select id="CLOSING_SHIPMENT_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		  FROM (
		         SELECT CASE WHEN SH.STATDO IN ('PAL','FAL')
		                          THEN 'OUT_M0155†' || STD.SHPOKY
		                     WHEN SH.STATDO IN ('PPC','FPC')
		                          THEN 'OUT_M0156†' || STD.SHPOKY
		                     WHEN SH.STATDO IN ('PSH','FSH')
		                          THEN 'OUT_M0157†' || STD.SHPOKY
		                     WHEN SH.STATDO IN ('CLS')
		                          THEN 'OUT_M0158†' || STD.SHPOKY
		                     ELSE 'OK'
		                  END AS RESULTMSG
		           FROM (
		                  $APPEND_QUERY$
		                ) STD
		                INNER JOIN SHPDH SH ON SH.SHPOKY = STD.SHPOKY
		       )
		 WHERE RESULTMSG != 'OK'
	</select>
	
	<update id="ClosingShipment_UPDATE" parameterClass="Map">
		UPDATE SHPDH
		   SET STATDO = 'CLS'
		     , LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD')
		     , LMOTIM = TO_CHAR(SYSDATE,'HH24MISS')
		     , LMOUSR = #SES_USER_ID# 
		 WHERE SHPOKY = #SHPOKY#
		   AND STATDO = 'NEW'
	</update>
	
	<select id="SHIPPING_CANCEL_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		  FROM (
		         SELECT CASE WHEN SH.INDDCL != 'V'
		                          THEN 'OUT_M0159†' || STD.SHPOKY
		                    <!--   WHEN SH.SHPMTY IN ('201','202') AND NVL((SELECT MENGE_R FROM IFWMS103
		                                                               WHERE WERKS   = SH.OWNRKY
		                                                                 AND USRID2  = SI.SVBELN
		                                                                 AND DEPTID2 = SI.SPOSNR
		                                                                 AND BWART   = (CASE WHEN SH.SHPMTY = '201' THEN '101' ELSE '102' END)
		                                                                 AND STATUS  IN ('A','C')
		                                                                 AND IFFLG   IN ('N','Y')),-1) = -1
		                          THEN 'OUT_M0160†' || STD.SHPOKY
		                     WHEN SH.SHPMTY IN ('201','202') AND NVL((SELECT MENGE_R FROM IFWMS103
		                                                               WHERE WERKS  = SH.OWNRKY
		                                                                 AND USRID2  = SI.SVBELN
		                                                                 AND DEPTID2 = SI.SPOSNR
		                                                                 AND BWART  = (CASE WHEN SH.SHPMTY = '201' THEN '101' ELSE '102' END)
		                                                                 AND STATUS IN ('A','C')
		                                                                 AND IFFLG  IN ('N','Y')),-1) &gt; 0
		                          THEN 'OUT_M0161†' || STD.SHPOKY
		                    WHEN SH.WAREKY = 'WH00' AND SH.SHPMTY IN ('200','201')
		                          AND (SELECT GLOUSR.FN_WMS_GI_CANCEL_CHECK(C00101, TRANS_DIV, GI_DLV_CNTR_CODE) FROM IFWMS113 WHERE MANDT = SI.SMANDT AND VBELN = SI.SVBELN AND POSNR = SI.SPOSNR AND STATUS IN ('A','C') AND IFFLG IN ('N','Y')) = '1'
		                          THEN 'OUT_M0171†' || STD.SHPOKY
		                     WHEN SH.WAREKY = 'WH00' AND SH.SHPMTY IN ('200','201')
		                          AND (SELECT GLOUSR.FN_WMS_GI_CANCEL_CHECK(C00101, TRANS_DIV, GI_DLV_CNTR_CODE) FROM IFWMS113 WHERE MANDT = SI.SMANDT AND VBELN = SI.SVBELN AND POSNR = SI.SPOSNR AND STATUS IN ('A','C') AND IFFLG IN ('N','Y')) = '2'
		                          THEN 'OUT_M0172†' || STD.SHPOKY
		                     WHEN SH.WAREKY = 'WH00' AND SH.SHPMTY IN ('200','201')
		                          AND (SELECT GLOUSR.FN_WMS_GI_CANCEL_CHECK(C00101, TRANS_DIV, GI_DLV_CNTR_CODE) FROM IFWMS113 WHERE MANDT = SI.SMANDT AND VBELN = SI.SVBELN AND POSNR = SI.SPOSNR AND STATUS IN ('A','C') AND IFFLG IN ('N','Y')) = '3'
		                          THEN 'OUT_M0173†' || STD.SHPOKY -->
		                     ELSE 'OK'
		                  END AS RESULTMSG
		           FROM (
		                  $APPEND_QUERY$
		                ) STD
		                INNER JOIN SHPDH SH ON SH.SHPOKY = STD.SHPOKY
		                INNER JOIN SHPDI SI ON SI.SHPOKY = STD.SHPOKY
		       )
		 WHERE RESULTMSG != 'OK'
	</select>
	
	<select id="CALL_SHIPPING_CANCEL_PROC_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_CANCEL_SHP( #SHPOKY#, #SES_USER_ID# ) }
	</select>
	
	<select id="ALLOCATION_VALID_MAP" parameterClass="Map" resultClass="DataMap">
		 SELECT SHPOKY, FLG
    FROM (
        SELECT AA.SHPOKY , MAX( DECODE(SIGN(QTSIWH - QTSHPO),-1,2,1))  FLG  
        FROM (
        SELECT  SHPDI.SHPOKY, SHPDI.SKUKEY, SHPDI.QTSHPO, ( SELECT NVL(SUM(STKKY.QTSIWH - STKKY.QTSPMO - STKKY.QTSBLK) ,0)
			                                                FROM STKKY , LOCMA 
			                                                WHERE STKKY.WAREKY = #SES_WAREKY#
			                                                AND STKKY.AREAKY = #AREAKY#
			                                                AND STKKY.LOTA07 = SHPDI.LOTA07
			                                                AND STKKY.SKUKEY = SHPDI.SKUKEY
			                                                AND STKKY.AREAKY NOT IN ('SHP','SYS') 
			                                                AND STKKY.LOCAKY NOT IN ('RTNLOC','RTSLOC','SETLOC','SCRLOC') 
			                                                AND STKKY.QTSIWH > 0
			                                                AND STKKY.QTSPMI = 0
			                                                AND STKKY.QTSIWH -  STKKY.QTSPMO - STKKY.QTSBLK > '0' 
			                                                AND STKKY.WAREKY = LOCMA.WAREKY
			                                                AND STKKY.LOCAKY = LOCMA.LOCAKY  
			                                                AND LOCMA.INDUPK = 'V' 
			                                                AND LOCMA.STATUS = '00')  QTSIWH 
         FROM SHPDI 
        WHERE SHPDI.SHPOKY  IN ( SELECT SHPOKY FROM SHPDI WHERE STKNUM = '$STKNUM$' ) ) AA 
        GROUP BY  AA.SHPOKY
        HAVING MAX( DECODE(SIGN(QTSIWH - QTSHPO),-1,2,1)) = 2
        ORDER BY 1)
      WHERE ROWNUM = 1
	</select>
	
	<select id="VEHINOVal_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT	
			VEHITY
		FROM	VEHMA
		WHERE	1 = 1
		AND		VEHINO = #VEHINO#
	</select>
	
	<select id="DL06PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_TASK_COMPLETE_BY_TASK( #TASKKY#, #SES_USER_ID# ) }
	</select>
	
	<select id="VEHINO_COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT VEHIID AS VALUE_COL
		    ,  VEHINO AS TEXT_COL
		FROM VEHMA
		ORDER BY VEHIID, VEHINO 
	</select>
	
	<select id="DL15HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY),' ') AS WARENM,
		       TASDH.TASOTY AS TASOTY,
		       NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY),' ') AS TASONM,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SHPDH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY,
		       MAX(TASDI.LOTA01) AS LOTA01,
		       MAX(TASDI.LOTA04) AS LOTA04,
		       MAX(IFWMS103.BUYER_NAME) AS BUNAME,
     		   MAX(IFWMS103.BUYER_PLANT_NAME) AS BUPLANT,
               MAX(IFWMS103.BUYER_CHRG_NAME) AS BUCHRG,  
               MAX(IFWMS103.TOV_CHRG_NAME) AS TOVCHRG
		  FROM TASDH
		       INNER JOIN TASDI
		               ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = TASDI.SHPOKY 
		               AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN IFWMS103
         			   ON SHPDI.SEBELN = IFWMS103.EBELN
                       AND SHPDI.SEBELP = IFWMS103.EBELP
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.DOCUTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		 WHERE TASDH.WAREKY = #WAREKY#
		   AND TASDI.STATIT = 'NEW'
		   AND SHPDH.DPTNKY IN ('WH01', '22001258')
		<isNotEmpty property="REFDAT1">
		   AND SHPDH.RQSHPD &gt;= #REFDAT1# AND SHPDH.RQSHPD &lt;= #REFDAT2#  
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
		          TASDH.KEEPTS, TASDH.WARETG, SHPDH.SHPMTY
		 ORDER BY TASDH.TASKKY
	</select>
	
	<select id="DL15_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       B.QTTAOR AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.LOCATG
		          ELSE B.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.SECTTG
		          ELSE B.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.PAIDTG
		          ELSE B.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.TRNUTG
		          ELSE B.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.TTRUTY
		          ELSE B.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND A.TASKKY = #TASKKY#
		   AND B.STATIT = 'NEW'
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
</sqlMap>