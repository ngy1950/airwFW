<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="WmsTask">
	<typeAlias alias="DataMap" type="com.common.bean.DataMap" />
	<typeAlias alias="StringMap" type="com.common.util.StringMap" />
	
	<select id="STKKYHEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			'' AS TASKKY,
			#WAREKY# AS WAREKY,
			'310' AS TASOTY,
			CONVERT(VARCHAR, GETDATE(),112) AS DOCDAT,
			'' AS DOCCAT,
			'' AS DRELIN,
			'' AS STATDO,
			'' AS QTTAOR,
			'' AS QTCOMP,
			'' AS TSPKEY,
			'' AS KEEPTS,
			#WAREKY# AS WARETG,
			'' AS USRID1,
			'' AS UNAME1,
			'' AS DEPTID1,
			'' AS DNAME1,
			'' AS USRID2,
			'' AS UNAME2,
			'' AS DEPTID2,
			'' AS DNAME2,
			'' AS USRID3,
			'' AS UNAME3,
			'' AS DEPTID3,
			'' AS DNAME3,
			'' AS USRID4,
			'' AS UNAME4,
			'' AS DEPTID4,
			'' AS DNAME4,
			'' AS DOCTXT,
			'' AS CREDAT,
			'' AS CRETIM,
			'' AS CREUSR,
			'' AS CUSRNM,
			'' AS LMODAT,
			'' AS LMOTIM,
			'' AS LMOUSR,
			'' AS LUSRNM
	</select>
	
	<select id="STKKY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
	       A.WAREKY,
	       A.STOKKY,
	       'PT' AS TASKTY,
	       'NEW' AS STATIT,
	
	       A.QTSIWH - (CASE WHEN A.QTSALO > A.QTSPMO THEN A.QTSALO ELSE A.QTSPMO END) - A.QTSBLK AS AVAILABLEQTY,
	       (A.QTSIWH - (CASE WHEN A.QTSALO > A.QTSPMO THEN A.QTSALO ELSE A.QTSPMO END) - A.QTSBLK) / A.QTPUOM AS QTSAVLB,
	       A.QTSIWH - (CASE WHEN A.QTSALO > A.QTSPMO THEN A.QTSALO ELSE A.QTSPMO END) - A.QTSBLK AS QTTAOR,
	       (A.QTSIWH - (CASE WHEN A.QTSALO > A.QTSPMO THEN A.QTSALO ELSE A.QTSPMO END) - A.QTSBLK) / A.QTPUOM AS QTYUOM,
	       '' AS QTCOMP,
	       '' AS LOCAAC,
	       '' AS TRNUAC,
	       '' AS ALSTKY,
	      '00000000' AS ACTCDT,
	      '000000' AS ACTCTI,
		   (SELECT QTPUOM FROM MEASI 
			WHERE  WAREKY = #WAREKY#
			AND MEASKY IN (SELECT MEASKY FROM SKUWC
			WHERE WAREKY = A.WAREKY
			AND SKUKEY = A.SKUKEY)
			AND UOMKEY = 'PL') AS QTPUOM,
		   
	       A.LOCAKY AS LOCASR,
	       A.SECTID AS SECTSR,
	       A.PACKID AS PAIDSR,
	       A.TRNUID AS TRNUSR,
	       A.TRUNTY AS STRUTY,
	       E.MEASKY AS SMEAKY,
	       A.UOMKEY AS SUOMKY,
	       A.QTPUOM AS QTSPUM,
	       A.DUOMKY AS SDUOKY,
	       A.QTDUOM AS QTSDUM,
	       '' AS LOCATG,
	       A.SECTID AS SECTTG,
	       A.PACKID AS PAIDTG,
	       A.TRNUID AS TRNUTG,
	       A.TRUNTY AS TTRUTY,
	       E.MEASKY AS TMEAKY,
	       E.UOMDTA AS TUOMKY,
	       A.QTPUOM AS QTTPUM,
	       A.DUOMKY AS TDUOKY,
	       A.QTDUOM AS QTTDUM,
	       A.OWNRKY,
	       A.SKUKEY,
	       A.LOTNUM,
	       A.REFDKY,
	       A.REFDIT,
	       A.REFCAT,
	       A.REFDAT,
	       A.PURCKY,
	       A.PURCIT,
	       A.ASNDKY,
	       A.ASNDIT,
	       A.RECVKY,
	       A.RECVIT,
	       A.SHPOKY,
	       A.SHPOIT,
	       A.GRPOKY,
	       A.GRPOIT,
	       A.SADJKY,
	       A.SADJIT,
	       A.SDIFKY,
	       A.SDIFIT,
	       A.PHYIKY,
	       A.PHYIIT,
	       A.DESC01,
	       A.DESC02,
	       A.ASKU01,
	       A.ASKU02,
	       A.ASKU03,
	       A.ASKU04,
	       A.ASKU05,
	       A.EANCOD,
	       A.GTINCD,
	       A.SKUG01,
	       A.SKUG02,
	       A.SKUG03,
	       A.SKUG04,
	       A.SKUG05,
	       A.GRSWGT,
	       A.NETWGT,
	       A.WGTUNT,
	       A.LENGTH,
	       A.WIDTHW,
	       A.HEIGHT,
	       A.CUBICM,
	       A.CAPACT,
	       A.AREAKY,
	       A.LOTA01,
	       A.LOTA02,
	       A.LOTA03,
	       A.LOTA04,
	       A.LOTA05,
	       A.LOTA06,
	       A.LOTA07,
	       A.LOTA08,
	       A.LOTA09,
	       A.LOTA10,
	       A.LOTA11,
	       A.LOTA12,
	       A.LOTA13,
	       A.LOTA14,
	       A.LOTA15,
	       A.LOTA16,
	       A.LOTA17,
	       A.LOTA18,
	       A.LOTA19,
	       A.LOTA20,
	       A.AWMSNO,
	       A.SMANDT,
	       A.SEBELN,
	       A.SEBELP,
	       A.SVBELN,
	       A.SMBLNR,
	       A.SMJAHR,
	       A.SZEILE,
	       A.SZMIPNO,
	       A.SPOSNR,
	       A.STKNUM,
	       A.STPNUM,
	       A.SLGORT,
	       A.SWERKS,
	       A.STDLNR,
	       A.STRAID,
	       A.SSORNU,
	       A.SSORIT,
	       A.SXBLNR,
	       A.LOTA01 AS PTLT01,
	       A.LOTA02 AS PTLT02,
	       A.LOTA03 AS PTLT03,
	       A.LOTA04 AS PTLT04,
	       A.LOTA05 AS PTLT05,
	       A.LOTA06 AS PTLT06,
	       A.LOTA07 AS PTLT07,
	       A.LOTA08 AS PTLT08,
	       A.LOTA09 AS PTLT09,
	       A.LOTA10 AS PTLT10,
	       A.LOTA11 AS PTLT11,
	       A.LOTA12 AS PTLT12,
	       A.LOTA13 AS PTLT13,
	       A.LOTA14 AS PTLT14,
	       A.LOTA15 AS PTLT15,
	       A.LOTA16 AS PTLT16,
	       A.LOTA17 AS PTLT17,
	       A.LOTA18 AS PTLT18,
	       A.LOTA19 AS PTLT19,
	       A.LOTA20 AS PTLT20,
	       E.PASTKY,
	       A.SZMBLNO,
	       A.SDATBG,
	       '' AS TASKIT,
	       '' AS TASKKY
	 FROM STKKY A, AREMA D, SKUWC E
	 WHERE A.WAREKY = D.WAREKY
	   AND A.AREAKY = D.AREAKY
	   AND A.OWNRKY = E.OWNRKY
	   AND A.SKUKEY = E.SKUKEY
	   AND A.WAREKY = E.WAREKY
	   AND A.QTSIWH - (CASE WHEN A.QTSALO > A.QTSPMO THEN A.QTSALO ELSE A.QTSPMO END) - A.QTSBLK > 0
	   AND A.AREAKY NOT IN ('SHP','SYS')
	   AND A.LOCAKY NOT IN ('SYSSHP')
	   AND A.LOTA06 IN ('00','10')
	   AND A.WAREKY = #WAREKY#
	   AND A.LOCAKY = 'RCVLOC'
	    <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<select id="TASDH_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY,
		       TASDH.WAREKY,
		       TASDH.TASOTY,
		       TASDH.DOCDAT,
		       TASDH.DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN,
		       TASDH.STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       TASDH.QTTAOR,
		       TASDH.QTCOMP,
		       TASDH.TSPKEY,
		       TASDH.DOORKY,
		       CASE WHEN TASDH.WARETG = ' ' THEN TASDH.WAREKY ELSE TASDH.WARETG END AS WARETG,
		       TASDH.PTNRKY,
		       TASDH.CREDAT,
		       TASDH.CRETIM,
		       TASDH.CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT,
		       TASDH.LMOTIM,
		       TASDH.LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL,
		       TASDH.INDARC,
		       TASDH.UPDCHK,
		       TASDH.KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(CASE WHEN TASDI.ACTCDT = '00000000' THEN 1 
							WHEN TASDI.ACTCDT = ' ' THEN 1 ELSE 0 END)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY
		  FROM TASDH
		       INNER JOIN TASDI ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI ON SHPDI.SHPOKY = TASDI.SHPOKY AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV ON SHPDH.STATDO = CMCDV.CMCDVL AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN ON SHPDH.DPTNKY = BZPTN.PTNRKY AND BZPTN.PTNRTY = 'CT'
			       AND BZPTN.PTNL05 IN (SELECT TOP 1 ADDR05 FROM WAHMA WHERE WAREKY = TASDH.WAREKY GROUP BY ADDR05) 
		 WHERE TASDH.WAREKY = #WAREKY#
		 <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		 </isNotEmpty>
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
			  TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
			  TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
			  TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
			  TASDH.KEEPTS, TASDH.WARETG
		 ORDER BY TASDH.TASKKY
	</select>
	
	<select id="TASDI_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRIM(#RNUM#) + B.TASKIT AS ROWSEQUENCE,
		       (CASE WHEN D.ROWCK IS NULL THEN ' ' ELSE D.ROWCK END) AS ROWCK,
		       A.WAREKY,
		       B.TASKKY,
		       B.TASKIT,
		       B.TASKTY,
		       D.RSNCOD,
		       D.TASRSN,
		       B.STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR,
		<isEqual property="QTY_COPY" compareValue="N">
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTCOMP
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN TO_NUMBER(D.QTCOMP) 
		          ELSE TO_NUMBER(D.QTCOMP)  END) AS QTCOMP,
		</isEqual>
		<isEqual property="QTY_COPY" compareValue="Y">
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN TO_NUMBER(D.QTCOMP) 
		          ELSE TO_NUMBER(D.QTCOMP)  END) AS QTCOMP,
		</isEqual>
		       B.OWNRKY,
		       B.SKUKEY,
		       B.LOTNUM,
		       B.ACTCDT,
		       B.ACTCTI,
		       B.QTYUOM,
		       B.TKFLKY,
		       B.STEPNO,
		       B.LSTTFL,
		       B.LOCASR,
		       B.SECTSR,
		       B.PAIDSR,
		       B.TRNUSR,
		       B.STRUTY,
		       B.SMEAKY,
		       B.SUOMKY,
		       B.QTSPUM,
		       B.SDUOKY,
		       B.QTSDUM,
		       B.LOCATG,
		       B.SECTTG,
		       B.PAIDTG,
		       B.TRNUTG,
		       B.TTRUTY,
		       B.TMEAKY,
		       B.TUOMKY,
		       B.QTTPUM,
		       B.TDUOKY,
		       B.QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TMEAKY ELSE B.AMEAKY END) AS AMEAKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN (CASE WHEN B.TASKTY = 'PT' THEN B.SUOMKY ELSE B.TUOMKY END) ELSE B.AUOMKY) AS AUOMKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTPUM ELSE B.QTAPUM END) AS QTAPUM,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TDUOKY ELSE B.ADUOKY END) AS ADUOKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTDUM ELSE B.QTADUM END) AS QTADUM,
		       B.REFDKY,
		       B.REFDIT,
		       B.REFCAT,
		       B.REFDAT,
		       B.PURCKY,
		       B.PURCIT,
		       B.ASNDKY,
		       B.ASNDIT,
		       B.RECVKY,
		       B.RECVIT,
		       B.SHPOKY,
		       B.SHPOIT,
		       B.GRPOKY,
		       B.GRPOIT,
		       B.SADJKY,
		       B.SADJIT,
		       B.SDIFKY,
		       B.SDIFIT,
		       B.PHYIKY,
		       B.PHYIIT,
		       B.DROPID,
		       B.DESC01,
		       B.DESC02,
		       B.ASKU01,
		       B.ASKU02,
		       B.ASKU03,
		       B.ASKU04,
		       B.ASKU05,
		       B.EANCOD,
		       B.GTINCD,
		       B.SKUG01,
		       B.SKUG02,
		       B.SKUG03,
		       B.SKUG04,
		       B.SKUG05,
		       B.GRSWGT,
		       B.NETWGT,
		       B.WGTUNT,
		       B.LENGTH,
		       B.WIDTHW,
		       B.HEIGHT,
		       B.CUBICM,
		       B.CAPACT,
		       B.WORKID,
		       B.WORKNM,
		       B.HHTTID,
		       B.AREAKY,
		       B.LOTA01,
		       B.LOTA02,
		       B.LOTA03,
		       B.LOTA04,
		       B.LOTA05,
		       B.LOTA06,
		       B.LOTA07,
		       B.LOTA08,
		       B.LOTA09,
		       B.LOTA10,
		       B.LOTA11,
		       B.LOTA12,
		       B.LOTA13,
		       B.LOTA14,
		       B.LOTA15,
		       B.LOTA16,
		       B.LOTA17,
		       B.LOTA18,
		       B.LOTA19,
		       B.LOTA20,
		       B.AWMSNO,
		       B.AWMSTS,
		       B.SMANDT,
		       B.SEBELN,
		       B.SEBELP,
		       B.SZMBLNO,
		       B.SZMIPNO,
		       B.STRAID,
		       B.SVBELN,
		       B.SPOSNR,
		       B.STKNUM,
		       B.STPNUM,
		       B.SWERKS,
		       B.SLGORT,
		       B.SDATBG,
		       B.STDLNR,
		       B.SSORNU,
		       B.SSORIT,
		       B.SMBLNR,
		       B.SZEILE,
		       B.SMJAHR,
		       B.SXBLNR,
		       B.SAPSTS,
		       B.DOORKY,
		       B.PTLT01,
		       B.PTLT02,
		       B.PTLT03,
		       B.PTLT04,
		       B.PTLT05,
		       B.PTLT06,
		       B.PTLT07,
		       B.PTLT08,
		       B.PTLT09,
		       B.PTLT10,
		       B.PTLT11,
		       B.PTLT12,
		       B.PTLT13,
		       B.PTLT14,
		       B.PTLT15,
		       B.PTLT16,
		       B.PTLT17,
		       B.PTLT18,
		       B.PTLT19,
		       B.PTLT20,
		       C.AUTLOC,
		       B.CREDAT,
		       B.CRETIM,
		       B.CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT,
		       B.LMOTIM,
		       B.LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL,
		       B.INDARC,
		       B.UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (
		       <isEqual property="QTY_COPY" compareValue="N">
					SELECT '' AS ROWSEQ
						, '' AS ROWCK
						, '' AS TASKKY
						, '' AS TASKIT
						, '' AS QTCOMP
						, '' AS LOCAAC
						, '' AS SECTAC
						, '' AS PAIDAC
						, '' AS TRNUAC
						, '' AS RSNCOD
						, '' AS TASRSN
						, '' AS ATRUTY 
				</isEqual>
				<isEqual property="QTY_COPY" compareValue="Y">
					SELECT '' AS ROWSEQ
						, '' AS ROWCK
						, '' AS TASKKY
						, '' AS TASKIT
						, '' AS QTCOMP
						, '' AS LOCAAC
						, '' AS SECTAC
						, '' AS PAIDAC
						, '' AS TRNUAC
						, '' AS RSNCOD
						, '' AS TASRSN
						, '' AS ATRUTY 
				</isEqual>
		       ) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		   AND A.TASKKY = #TASKKY# 
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="PT01STOCKSUB_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT ROW_NUMBER() OVER(ORDER BY B.TASKIT) AS NUM,
		       '0' AS USED,
		       A.WAREKY AS WAREKY,
		       B.QTTAOR AS AVAILABLEQTY,              
		       B.QTYUOM AS AVAILABLEQTYUOM,       
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.STATIT AS STATIT,
		       B.QTTAOR AS QTTAOR,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.QTTAOR ELSE B.QTCOMP END AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.LOCATG ELSE B.LOCAAC END AS LOCAAC,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.SECTTG ELSE B.SECTAC END AS SECTAC,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.PAIDTG ELSE B.PAIDAC END AS PAIDAC,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.TRNUTG ELSE B.TRNUAC END AS TRNUAC,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.TTRUTY ELSE B.ATRUTY END AS ATRUTY,
		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.TMEAKY ELSE B.AMEAKY END AS AMEAKY,
		       B.AUOMKY AS AUOMKY,
		       B.QTAPUM AS QTAPUM,
		       B.ADUOKY AS ADUOKY,
		       B.QTADUM AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.STRAID AS STRAID,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SMJAHR AS SMJAHR,
		       B.SZEILE AS SZEILE,
		       B.SXBLNR AS SXBLNR,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       B.PASTKY AS PASTKY,
		       B.ALSTKY AS ALSTKY,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		FROM   TASDH A,
		       TASDI B
		WHERE  A.TASKKY = B.TASKKY
		  AND  A.TASKKY = #TASKKY#
	</select>
	
	<select id="STKKYPUTFIND_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.TASKIT AS TASKIT,
		       A.TASKIR AS TASKIR,
		       A.STOKKY AS STOKKY,
		       A.QTSTKM AS QTSTKM,
		       A.QTSTKC AS QTSTKC,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       B.STOKKY AS STOKKY,
		       B.QTSIWH AS QTSIWH,
		       B.QTSALO AS QTSALO,
		       B.QTSPMO AS QTSPMO,
		       B.QTSPMI AS QTSPMI,
		       B.QTSBLK AS QTSBLK,
		       B.SRCSKY AS SRCSKY
		FROM   TASDR A,
		       STKKY B
		WHERE  A.STOKKY = B.STOKKY
		AND    A.TASKKY = #TASKKY#
		AND    A.TASKIT = #TASKIT#
		ORDER BY A.TASKIR
	</select>
	
	<select id="PT01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       TASDH.TASOTY AS TASOTY,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS TASOTYNM,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       (CASE WHEN TASDH.WARETG = ' ' THEN TASDH.WAREKY ELSE TASDH.WARETG END) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.DOCTXT AS DOCTXT,
		       TASDH.USRID1 AS USRID1,
			   TASDH.UNAME1 AS UNAME1,
			   TASDH.DEPTID1 AS DEPTID1,
			   TASDH.DNAME1 AS DNAME1,
			   TASDH.USRID2 AS USRID2,
			   TASDH.UNAME2 AS UNAME2,
			   TASDH.DEPTID2 AS DEPTID2,
			   TASDH.DNAME2 AS DNAME2,
			   TASDH.USRID3 AS USRID3,
			   TASDH.UNAME3 AS UNAME3,
			   TASDH.DEPTID3 AS DEPTID3,
			   TASDH.DNAME3 AS DNAME3,
			   TASDH.USRID4 AS USRID4,
			   TASDH.UNAME4 AS UNAME4,
			   TASDH.DEPTID4 AS DEPTID4,
			   TASDH.DNAME4 AS DNAME4,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       ISNULL(SUM((CASE WHEN TASDI.ACTCDT = '00000000' THEN 1 WHEN TASDI.ACTCDT = ' ' THEN 1 ELSE 0 END)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY
		  FROM TASDH
		       INNER JOIN TASDI
			       ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
			       ON SHPDI.SHPOKY = TASDI.SHPOKY 
			       AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
			       ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
			       ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
			       ON SHPDH.STATDO = CMCDV.CMCDVL 
			       AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
			       ON SHPDH.DPTNKY = BZPTN.PTNRKY
			       AND BZPTN.PTNRTY = 'CT'
			       AND BZPTN.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = TASDH.WAREKY) 
		 WHERE TASDH.TASKKY = #TASKKY#
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
			  TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
			  TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
			  TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
			  TASDH.KEEPTS, TASDH.WARETG, TASDH.DOCTXT, TASDH.USRID1, TASDH.UNAME1, TASDH.DEPTID1, TASDH.DNAME1,
			  TASDH.USRID2, TASDH.UNAME2, TASDH.DEPTID2, TASDH.DNAME2, TASDH.USRID3, TASDH.UNAME3, TASDH.DEPTID3,
			  TASDH.DNAME3, TASDH.USRID4, TASDH.UNAME4, TASDH.DEPTID4, TASDH.DNAME4
		 ORDER BY TASDH.TASKKY
	</select>
	
	<select id="SHPDHDRELIN_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT DRELIN
		FROM SHPDH
		WHERE SHPOKY = ISNULL((SELECT TOP 1 SHPOKY FROM TASDI WHERE TASKKY = #TASKKY#),' ')
	</select>
	
	<select id="PT01SUB_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT (CASE
		          WHEN D.ROWCK IS NULL THEN ' '
		          ELSE D.ROWCK END) AS ROWCK,
		       A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN D.QTCOMP 
		          ELSE D.QTCOMP END) AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.QTYUOM AS AVAILABLEQTY,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.LOCASR AS LOCAKY,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TMEAKY ELSE B.AMEAKY END) AS AMEAKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN (CASE WHEN B.TASKTY = 'PT' THEN B.SUOMKY ELSE B.TUOMKY END) ELSE B.AUOMKY END) AS AUOMKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTPUM ELSE B.QTAPUM END) AS QTAPUM,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TDUOKY ELSE B.ADUOKY END) AS ADUOKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTDUM ELSE B.QTADUM END) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK,
		       B.PASTKY AS PASTKY,
		       B.ALSTKY AS ALSTKY
		  FROM TASDH A INNER JOIN TASDI B ON (A.TASKKY = B.TASKKY)
		  			   INNER JOIN LOCMA C ON (A.WAREKY = C.WAREKY AND B.LOCASR = C.LOCAKY)
		  			   LEFT OUTER JOIN 
				       (
				     		SELECT '' AS ROWSEQ
								, '' AS ROWCK
								, '' AS TASKKY
								, '' AS TASKIT
								, '' AS QTCOMP
								, '' AS LOCAAC
								, '' AS SECTAC
								, '' AS PAIDAC
								, '' AS TRNUAC
								, '' AS RSNCOD
								, '' AS TASRSN
								, '' AS ATRUTY
					   ) D ON (B.TASKKY = D.TASKKY AND B.TASKIT = D.TASKIT)
		 WHERE A.TASKKY = #TASKKY#
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="TASDI_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT A.*,
		       B.LOCAKY,
		       B.AUTLOC,
		       C.SKUKEY AS SKUWC_SKUKEY,
		       D.PASTKY AS PASTH_PASTKY
		  FROM ( $VALIDATION_SQL$ ) A
		       LEFT OUTER JOIN LOCMA B
		               ON B.WAREKY = A.WAREKY
		              AND B.LOCAKY = A.LOCATG
		       LEFT OUTER JOIN SKUWC C
		               ON C.OWNRKY = A.OWNRKY
		              AND C.SKUKEY = A.SKUKEY
		              AND C.WAREKY = A.WAREKY
		       LEFT OUTER JOIN PASTH D
		               ON D.WAREKY = A.WAREKY
		              AND D.PASTKY = A.PASTKY
	</select>
	
	<insert id="TASDH_INSERT" parameterClass="Map">
		INSERT INTO TASDH(
					TASKKY,
					WAREKY,
					TASOTY,
					DOCDAT,
					DOCCAT,
					DRELIN,
					STATDO,
					QTTAOR,
					QTCOMP,
					TSPKEY,
					DOORKY,
					WARETG,
					PTNRKY,
					PTNRTY,
					PTNRNM,
					USRID1,
					UNAME1,
					DEPTID1,
					DNAME1,
					USRID2,
					UNAME2,
					DEPTID2,
					DNAME2,
					USRID3,
					UNAME3,
					DEPTID3,
					DNAME3,
					USRID4,
					UNAME4,
					DEPTID4,
					DNAME4,
					DOCTXT,
					CREDAT,
					CRETIM,
					CREUSR,
					LMODAT,
					LMOTIM,
					LMOUSR,
					INDBZL,
					INDARC,
					KEEPTS
				)VALUES(
					#TASKKY#,
					#WAREKY#,
					#TASOTY#,
					CONVERT(VARCHAR,GETDATE(),112),
					'300',
					ISNULL(#DRELIN#, ' '),
					ISNULL(#STATDO#, ' '),
					CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTTAOR# = ' ' THEN '0'
						  	  WHEN #QTTAOR# = '' THEN '0'
						  	  WHEN #QTTAOR# IS NULL THEN '0'
						  	  ELSE #QTTAOR# END)),
					CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTCOMP# = ' ' THEN '0'
						  	  WHEN #QTCOMP# = '' THEN '0'
						  	  WHEN #QTCOMP# IS NULL THEN '0'
						  	  ELSE #QTCOMP# END)),
					ISNULL(#TSPKEY#, ' '),
					ISNULL(#DOORKY#, ' '),
					ISNULL(#WARETG#, ' '),
					ISNULL(#PTNRKY#, ' '),
					ISNULL(#PTNRTY#, ' '),
					ISNULL(#PTNRNM#, ' '),
					ISNULL(#USRID1#, ' '),
					ISNULL(#UNAME1#, ' '),
					ISNULL(#DEPTID1#, ' '),
					ISNULL(#DNAME1#, ' '),
					ISNULL(#USRID2#, ' '),
					ISNULL(#UNAME2#, ' '),
					ISNULL(#DEPTID2#, ' '),
					ISNULL(#DNAME2#, ' '),
					ISNULL(#USRID3#, ' '),
					ISNULL(#UNAME3#, ' '),
					ISNULL(#DEPTID3#, ' '),
					ISNULL(#DNAME3#, ' '),
					ISNULL(#USRID4#, ' '),
					ISNULL(#UNAME4#, ' '),
					ISNULL(#DEPTID4#, ' '),
					ISNULL(#DNAME4#, ' '),
					ISNULL(#DOCTXT#, ' '),
					CONVERT(VARCHAR,GETDATE(),112),
					REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
					#SES_USER_ID#,
					CONVERT(VARCHAR,GETDATE(),112),
					REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
					#SES_USER_ID#,
					ISNULL(#INDBZL#, ' '),
					ISNULL(#INDARC#, ' '),
					ISNULL(#KEEPTS#, ' ')
				)
	</insert>
	
	<insert id="TASDI_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC
			)VALUES(
				ISNULL(#TASKKY#, ' '),
				ISNULL(#TASKIT#, ' '),
				ISNULL(#TASKTY#, ' '),
				ISNULL(#RSNCOD#, ' '),
				ISNULL(#STATIT#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTTAOR# = ' ' THEN '0'
						  	  WHEN #QTTAOR# = '' THEN '0'
						  	  WHEN #QTTAOR# IS NULL THEN '0'
						  	  ELSE #QTTAOR# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTCOMP# = ' ' THEN '0'
						  	  WHEN #QTCOMP# = '' THEN '0'
						  	  WHEN #QTCOMP# IS NULL THEN '0'
						  	  ELSE #QTCOMP# END)),
				ISNULL(#OWNRKY#, ' '),
				ISNULL(#SKUKEY#, ' '),
				ISNULL(#LOTNUM#, ' '),
				ISNULL(#ACTCDT#, ' '),
				ISNULL(#ACTCTI#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTYUOM# = ' ' THEN '0'
						  	  WHEN #QTYUOM# = '' THEN '0'
						  	  WHEN #QTYUOM# IS NULL THEN '0'
						  	  ELSE #QTYUOM# END)),
				ISNULL(#TKFLKY#, ' '),
				ISNULL(#STEPNO#, ' '),
				ISNULL(#LSTTFL#, ' '),
				ISNULL(#LOCASR#, ' '),
				ISNULL(#SECTSR#, ' '),
				ISNULL(#PAIDSR#, ' '),
				ISNULL(#TRNUSR#, ' '),
				ISNULL(#STRUTY#, ' '),
				ISNULL(#SMEAKY#, ' '),
				ISNULL(#SUOMKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTSPUM# = ' ' THEN '0'
						  	  WHEN #QTSPUM# = '' THEN '0'
						  	  WHEN #QTSPUM# IS NULL THEN '0'
						  	  ELSE #QTSPUM# END)),
				ISNULL(#SDUOKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTSDUM# = ' ' THEN '0'
						  	  WHEN #QTSDUM# = '' THEN '0'
						  	  WHEN #QTSDUM# IS NULL THEN '0'
						  	  ELSE #QTSDUM# END)),
				ISNULL(#LOCATG#, ' '),
				ISNULL(#SECTTG#, ' '),
				ISNULL(#PAIDTG#, ' '),
				ISNULL(#TRNUTG#, ' '),
				ISNULL(#TTRUTY#, ' '),
				ISNULL(#TMEAKY#, ' '),
				ISNULL(#TUOMKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTTPUM# = ' ' THEN '0'
						  	  WHEN #QTTPUM# = '' THEN '0'
						  	  WHEN #QTTPUM# IS NULL THEN '0'
						  	  ELSE #QTTPUM# END)),
				ISNULL(#TDUOKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTTDUM# = ' ' THEN '0'
						  	  WHEN #QTTDUM# = '' THEN '0'
						  	  WHEN #QTTDUM# IS NULL THEN '0'
						  	  ELSE #QTTDUM# END)),
				ISNULL(#LOCAAC#, ' '),
				ISNULL(#SECTAC#, ' '),
				ISNULL(#PAIDAC#, ' '),
				ISNULL(#TRNUAC#, ' '),
				ISNULL(#ATRUTY#, ' '),
				ISNULL(#AMEAKY#, ' '),
				ISNULL(#AUOMKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTAPUM# = ' ' THEN '0'
						  	  WHEN #QTAPUM# = '' THEN '0'
						  	  WHEN #QTAPUM# IS NULL THEN '0'
						  	  ELSE #QTAPUM# END)),
				ISNULL(#ADUOKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #QTADUM# = ' ' THEN '0'
						  	  WHEN #QTADUM# = '' THEN '0'
						  	  WHEN #QTADUM# IS NULL THEN '0'
						  	  ELSE #QTADUM# END)),
				ISNULL(#REFDKY#, ' '),
				ISNULL(#REFDIT#, ' '),
				ISNULL(#REFCAT#, ' '),
				ISNULL(#REFDAT#, ' '),
				ISNULL(#PURCKY#, ' '),
				ISNULL(#PURCIT#, ' '),
				ISNULL(#ASNDKY#, ' '),
				ISNULL(#ASNDIT#, ' '),
				ISNULL(#RECVKY#, ' '),
				ISNULL(#RECVIT#, ' '),
				ISNULL(#SHPOKY#, ' '),
				ISNULL(#SHPOIT#, ' '),
				ISNULL(#GRPOKY#, ' '),
				ISNULL(#GRPOIT#, ' '),
				ISNULL(#SADJKY#, ' '),
				ISNULL(#SADJIT#, ' '),
				ISNULL(#SDIFKY#, ' '),
				ISNULL(#SDIFIT#, ' '),
				ISNULL(#PHYIKY#, ' '),
				ISNULL(#PHYIIT#, ' '),
				ISNULL(#DROPID#, ' '),
				ISNULL(#DESC01#, ' '),
				ISNULL(#DESC02#, ' '),
				ISNULL(#ASKU01#, ' '),
				ISNULL(#ASKU02#, ' '),
				ISNULL(#ASKU03#, ' '),
				ISNULL(#ASKU04#, ' '),
				ISNULL(#ASKU05#, ' '),
				ISNULL(#EANCOD#, ' '),
				ISNULL(#GTINCD#, ' '),
				ISNULL(#SKUG01#, ' '),
				ISNULL(#SKUG02#, ' '),
				ISNULL(#SKUG03#, ' '),
				ISNULL(#SKUG04#, ' '),
				ISNULL(#SKUG05#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #GRSWGT# = ' ' THEN '0'
						  	  WHEN #GRSWGT# = '' THEN '0'
						  	  WHEN #GRSWGT# IS NULL THEN '0'
						  	  ELSE #GRSWGT# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #NETWGT# = ' ' THEN '0'
						  	  WHEN #NETWGT# = '' THEN '0'
						  	  WHEN #NETWGT# IS NULL THEN '0'
						  	  ELSE #NETWGT# END)),
				ISNULL(#WGTUNT#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #LENGTH# = ' ' THEN '0'
						  	  WHEN #LENGTH# = '' THEN '0'
						  	  WHEN #LENGTH# IS NULL THEN '0'
						  	  ELSE #LENGTH# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #WIDTHW# = ' ' THEN '0'
						  	  WHEN #WIDTHW# = '' THEN '0'
						  	  WHEN #WIDTHW# IS NULL THEN '0'
						  	  ELSE #WIDTHW# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #HEIGHT# = ' ' THEN '0'
						  	  WHEN #HEIGHT# = '' THEN '0'
						  	  WHEN #HEIGHT# IS NULL THEN '0'
						  	  ELSE #HEIGHT# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #CUBICM# = ' ' THEN '0'
						  	  WHEN #CUBICM# = '' THEN '0'
						  	  WHEN #CUBICM# IS NULL THEN '0'
						  	  ELSE #CUBICM# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #CAPACT# = ' ' THEN '0'
						  	  WHEN #CAPACT# = '' THEN '0'
						  	  WHEN #CAPACT# IS NULL THEN '0'
						  	  ELSE #CAPACT# END)),
				ISNULL(#WORKID#, ' '),
				ISNULL(#WORKNM#, ' '),
				ISNULL(#HHTTID#, ' '),
				ISNULL(#AREAKY#, ' '),
				ISNULL(#LOTA01#, ' '),
				ISNULL(#LOTA02#, ' '),
				ISNULL(#LOTA03#, ' '),
				ISNULL(#LOTA04#, ' '),
				ISNULL(#LOTA05#, ' '),
				ISNULL(#LOTA06#, ' '),
				ISNULL(#LOTA07#, ' '),
				ISNULL(#LOTA08#, ' '),
				ISNULL(#LOTA09#, ' '),
				ISNULL(#LOTA10#, ' '),
				ISNULL(#LOTA11#, ' '),
				ISNULL(#LOTA12#, ' '),
				ISNULL(#LOTA13#, ' '),
				ISNULL(#LOTA14#, ' '),
				ISNULL(#LOTA15#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #LOTA16# = ' ' THEN '0'
						  	  WHEN #LOTA16# = '' THEN '0'
						  	  WHEN #LOTA16# IS NULL THEN '0'
						  	  ELSE #LOTA16# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #LOTA17# = ' ' THEN '0'
						  	  WHEN #LOTA17# = '' THEN '0'
						  	  WHEN #LOTA17# IS NULL THEN '0'
						  	  ELSE #LOTA17# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #LOTA18# = ' ' THEN '0'
						  	  WHEN #LOTA18# = '' THEN '0'
						  	  WHEN #LOTA18# IS NULL THEN '0'
						  	  ELSE #LOTA18# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #LOTA19# = ' ' THEN '0'
						  	  WHEN #LOTA19# = '' THEN '0'
						  	  WHEN #LOTA19# IS NULL THEN '0'
						  	  ELSE #LOTA19# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #LOTA20# = ' ' THEN '0'
						  	  WHEN #LOTA20# = '' THEN '0'
						  	  WHEN #LOTA20# IS NULL THEN '0'
						  	  ELSE #LOTA20# END)),
				ISNULL(#AWMSNO#, ' '),
				ISNULL(#AWMSTS#, ' '),
				ISNULL(#SMANDT#, ' '),
				ISNULL(#SEBELN#, ' '),
				ISNULL(#SEBELP#, ' '),
				ISNULL(#SZMBLNO#, ' '),
				ISNULL(#SZMIPNO#, ' '),
				ISNULL(#STRAID#, ' '),
				ISNULL(#SVBELN#, ' '),
				ISNULL(#SPOSNR#, ' '),
				ISNULL(#STKNUM#, ' '),
				ISNULL(#STPNUM#, ' '),
				ISNULL(#SWERKS#, ' '),
				ISNULL(#SLGORT#, ' '),
				ISNULL(#SDATBG#, ' '),
				ISNULL(#STDLNR#, ' '),
				ISNULL(#SSORNU#, ' '),
				ISNULL(#SSORIT#, ' '),
				ISNULL(#SMBLNR#, ' '),
				ISNULL(#SZEILE#, ' '),
				ISNULL(#SMJAHR#, ' '),
				ISNULL(#SXBLNR#, ' '),
				ISNULL(#SAPSTS#, ' '),
				ISNULL(#DOORKY#, ' '),
				ISNULL(#PTLT01#, ' '),
				ISNULL(#PTLT02#, ' '),
				ISNULL(#PTLT03#, ' '),
				ISNULL(#PTLT04#, ' '),
				ISNULL(#PTLT05#, ' '),
				ISNULL(#PTLT06#, ' '),
				ISNULL(#PTLT07#, ' '),
				ISNULL(#PTLT08#, ' '),
				ISNULL(#PTLT09#, ' '),
				ISNULL(#PTLT10#, ' '),
				ISNULL(#PTLT11#, ' '),
				ISNULL(#PTLT12#, ' '),
				ISNULL(#PTLT13#, ' '),
				ISNULL(#PTLT14#, ' '),
				ISNULL(#PTLT15#, ' '),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #PTLT16# = ' ' THEN '0'
						  	  WHEN #PTLT16# = '' THEN '0'
						  	  WHEN #PTLT16# IS NULL THEN '0'
						  	  ELSE #PTLT16# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #PTLT17# = ' ' THEN '0'
						  	  WHEN #PTLT17# = '' THEN '0'
						  	  WHEN #PTLT17# IS NULL THEN '0'
						  	  ELSE #PTLT17# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #PTLT18# = ' ' THEN '0'
						  	  WHEN #PTLT18# = '' THEN '0'
						  	  WHEN #PTLT18# IS NULL THEN '0'
						  	  ELSE #PTLT18# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #PTLT19# = ' ' THEN '0'
						  	  WHEN #PTLT19# = '' THEN '0'
						  	  WHEN #PTLT19# IS NULL THEN '0'
						  	  ELSE #PTLT19# END)),
				CONVERT(NUMERIC(20,3), 
						(CASE WHEN #PTLT20# = ' ' THEN '0'
						  	  WHEN #PTLT20# = '' THEN '0'
						  	  WHEN #PTLT20# IS NULL THEN '0'
						  	  ELSE #PTLT20# END)),
				ISNULL(#PASTKY#, ' '),
				ISNULL(#ALSTKY#, ' '),
				ISNULL(#SBKTXT#, ' '),
				ISNULL(#TASRSN#, ' '),
				CONVERT(VARCHAR,GETDATE(),112),
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				ISNULL(#SES_USER_ID#, ' '),
				CONVERT(VARCHAR,GETDATE(),112),
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				ISNULL(#SES_USER_ID#, ' '),
				ISNULL(#INDBZL#, ' '),
				ISNULL(#INDARC#, ' ')
			)
	</insert>
	
	<insert id="TASDR_INSERT" parameterClass="Map">
		INSERT INTO TASDR (      
		      TASKKY
		    , TASKIT
		    , TASKIR
		    , STOKKY
		    , QTSTKM
		    , QTSTKC
		    , CREDAT
		    , CRETIM
		    , CREUSR
		    , LMODAT
		    , LMOTIM
		    , LMOUSR    
		) VALUES (
		      #TASKKY#
		    , #TASKIT#
		    , '0001'
		    , #STOKKY#
		    , CONVERT(NUMERIC, 
						(CASE WHEN #QTTAOR# = ' ' THEN '0'
						  	  WHEN #QTTAOR# = '' THEN '0'
						  	  WHEN #QTTAOR# IS NULL THEN '0'
						  	  ELSE #QTTAOR# END))
		    , 0
		    , CONVERT(VARCHAR,GETDATE(),112)
		    , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
		    , #SES_USER_ID#
		    , CONVERT(VARCHAR,GETDATE(),112)
		    , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
		    , #SES_USER_ID#   
		)
	</insert>
	
	<insert id="TASDIEND_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC
			)VALUES(
				ISNULL(#TASKKY#, ' '),
				ISNULL(#TASKIT#, ' '),
				ISNULL(#TASKTY#, ' '),
				ISNULL(#RSNCOD#, ' '),
				ISNULL(#STATIT#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTTAOR# = ' ' THEN '0'
							   WHEN #QTTAOR# = '' THEN '0'
							   WHEN #QTTAOR# IS NULL THEN '0'
							   ELSE #QTTAOR# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTCOMP# = ' ' THEN '0'
							   WHEN #QTCOMP# = '' THEN '0'
							   WHEN #QTCOMP# IS NULL THEN '0'
							   ELSE #QTCOMP# END)),
				ISNULL(#OWNRKY#, ' '),
				ISNULL(#SKUKEY#, ' '),
				ISNULL(#LOTNUM#, ' '),
				CONVERT(VARCHAR,GETDATE(),112),
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTYUOM# = ' ' THEN '0'
							   WHEN #QTYUOM# = '' THEN '0'
							   WHEN #QTYUOM# IS NULL THEN '0'
							   ELSE #QTYUOM# END)),
				ISNULL(#TKFLKY#, ' '),
				ISNULL(#STEPNO#, ' '),
				ISNULL(#LSTTFL#, ' '),
				ISNULL(#LOCASR#, ' '),
				ISNULL(#SECTSR#, ' '),
				ISNULL(#PAIDSR#, ' '),
				ISNULL(#TRNUSR#, ' '),
				ISNULL(#STRUTY#, ' '),
				ISNULL(#SMEAKY#, ' '),
				ISNULL(#SUOMKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTSPUM# = ' ' THEN '0'
							   WHEN #QTSPUM# = '' THEN '0'
							   WHEN #QTSPUM# IS NULL THEN '0'
							   ELSE #QTSPUM# END)),
				ISNULL(#SDUOKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTSDUM# = ' ' THEN '0'
							   WHEN #QTSDUM# = '' THEN '0'
							   WHEN #QTSDUM# IS NULL THEN '0'
							   ELSE #QTSDUM# END)),
				ISNULL(#LOCATG#, ' '),
				ISNULL(#SECTTG#, ' '),
				ISNULL(#PAIDTG#, ' '),
				ISNULL(#TRNUTG#, ' '),
				ISNULL(#TTRUTY#, ' '),
				ISNULL(#TMEAKY#, ' '),
				ISNULL(#TUOMKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTTPUM# = ' ' THEN '0'
							   WHEN #QTTPUM# = '' THEN '0'
							   WHEN #QTTPUM# IS NULL THEN '0'
							   ELSE #QTTPUM# END)),
				ISNULL(#TDUOKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTTDUM# = ' ' THEN '0'
							   WHEN #QTTDUM# = '' THEN '0'
							   WHEN #QTTDUM# IS NULL THEN '0'
							   ELSE #QTTDUM# END)),
				ISNULL(#LOCAAC#, ' '),
				ISNULL(#SECTAC#, ' '),
				ISNULL(#PAIDAC#, ' '),
				ISNULL(#TRNUAC#, ' '),
				ISNULL(#ATRUTY#, ' '),
				ISNULL(#AMEAKY#, ' '),
				ISNULL(#AUOMKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTAPUM# = ' ' THEN '0'
							   WHEN #QTAPUM# = '' THEN '0'
							   WHEN #QTAPUM# IS NULL THEN '0'
							   ELSE #QTAPUM# END)),
				ISNULL(#ADUOKY#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #QTADUM# = ' ' THEN '0'
							   WHEN #QTADUM# = '' THEN '0'
							   WHEN #QTADUM# IS NULL THEN '0'
							   ELSE #QTADUM# END)),
				ISNULL(#REFDKY#, ' '),
				ISNULL(#REFDIT#, ' '),
				ISNULL(#REFCAT#, ' '),
				ISNULL(#REFDAT#, ' '),
				ISNULL(#PURCKY#, ' '),
				ISNULL(#PURCIT#, ' '),
				ISNULL(#ASNDKY#, ' '),
				ISNULL(#ASNDIT#, ' '),
				ISNULL(#RECVKY#, ' '),
				ISNULL(#RECVIT#, ' '),
				ISNULL(#SHPOKY#, ' '),
				ISNULL(#SHPOIT#, ' '),
				ISNULL(#GRPOKY#, ' '),
				ISNULL(#GRPOIT#, ' '),
				ISNULL(#SADJKY#, ' '),
				ISNULL(#SADJIT#, ' '),
				ISNULL(#SDIFKY#, ' '),
				ISNULL(#SDIFIT#, ' '),
				ISNULL(#PHYIKY#, ' '),
				ISNULL(#PHYIIT#, ' '),
				ISNULL(#DROPID#, ' '),
				ISNULL(#DESC01#, ' '),
				ISNULL(#DESC02#, ' '),
				ISNULL(#ASKU01#, ' '),
				ISNULL(#ASKU02#, ' '),
				ISNULL(#ASKU03#, ' '),
				ISNULL(#ASKU04#, ' '),
				ISNULL(#ASKU05#, ' '),
				ISNULL(#EANCOD#, ' '),
				ISNULL(#GTINCD#, ' '),
				ISNULL(#SKUG01#, ' '),
				ISNULL(#SKUG02#, ' '),
				ISNULL(#SKUG03#, ' '),
				ISNULL(#SKUG04#, ' '),
				ISNULL(#SKUG05#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #GRSWGT# = ' ' THEN '0'
							   WHEN #GRSWGT# = '' THEN '0'
							   WHEN #GRSWGT# IS NULL THEN '0'
							   ELSE #GRSWGT# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #NETWGT# = ' ' THEN '0'
							   WHEN #NETWGT# = '' THEN '0'
							   WHEN #NETWGT# IS NULL THEN '0'
							   ELSE #NETWGT# END)),
				ISNULL(#WGTUNT#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LENGTH# = ' ' THEN '0'
							   WHEN #LENGTH# = '' THEN '0'
							   WHEN #LENGTH# IS NULL THEN '0'
							   ELSE #LENGTH# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #WIDTHW# = ' ' THEN '0'
							   WHEN #WIDTHW# = '' THEN '0'
							   WHEN #WIDTHW# IS NULL THEN '0'
							   ELSE #WIDTHW# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #HEIGHT# = ' ' THEN '0'
							   WHEN #HEIGHT# = '' THEN '0'
							   WHEN #HEIGHT# IS NULL THEN '0'
							   ELSE #HEIGHT# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #CUBICM# = ' ' THEN '0'
							   WHEN #CUBICM# = '' THEN '0'
							   WHEN #CUBICM# IS NULL THEN '0'
							   ELSE #CUBICM# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #CAPACT# = ' ' THEN '0'
							   WHEN #CAPACT# = '' THEN '0'
							   WHEN #CAPACT# IS NULL THEN '0'
							   ELSE #CAPACT# END)),
				ISNULL(#WORKID#, ' '),
				ISNULL(#WORKNM#, ' '),
				ISNULL(#HHTTID#, ' '),
				ISNULL(#AREAKY#, ' '),
				ISNULL(#LOTA01#, ' '),
				ISNULL(#LOTA02#, ' '),
				ISNULL(#LOTA03#, ' '),
				ISNULL(#LOTA04#, ' '),
				ISNULL(#LOTA05#, ' '),
				ISNULL(#LOTA06#, ' '),
				ISNULL(#LOTA07#, ' '),
				ISNULL(#LOTA08#, ' '),
				ISNULL(#LOTA09#, ' '),
				ISNULL(#LOTA10#, ' '),
				ISNULL(#LOTA11#, ' '),
				ISNULL(#LOTA12#, ' '),
				ISNULL(#LOTA13#, ' '),
				ISNULL(#LOTA14#, ' '),
				ISNULL(#LOTA15#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LOTA16# = ' ' THEN '0'
							   WHEN #LOTA16# = '' THEN '0'
							   WHEN #LOTA16# IS NULL THEN '0'
							   ELSE #LOTA16# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LOTA17# = ' ' THEN '0'
							   WHEN #LOTA17# = '' THEN '0'
							   WHEN #LOTA17# IS NULL THEN '0'
							   ELSE #LOTA17# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LOTA18# = ' ' THEN '0'
							   WHEN #LOTA18# = '' THEN '0'
							   WHEN #LOTA18# IS NULL THEN '0'
							   ELSE #LOTA18# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LOTA19# = ' ' THEN '0'
							   WHEN #LOTA19# = '' THEN '0'
							   WHEN #LOTA19# IS NULL THEN '0'
							   ELSE #LOTA19# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #LOTA20# = ' ' THEN '0'
							   WHEN #LOTA20# = '' THEN '0'
							   WHEN #LOTA20# IS NULL THEN '0'
							   ELSE #LOTA20# END)),
				ISNULL(#AWMSNO#, ' '),
				ISNULL(#AWMSTS#, ' '),
				ISNULL(#SMANDT#, ' '),
				ISNULL(#SEBELN#, ' '),
				ISNULL(#SEBELP#, ' '),
				ISNULL(#SZMBLNO#, ' '),
				ISNULL(#SZMIPNO#, ' '),
				ISNULL(#STRAID#, ' '),
				ISNULL(#SVBELN#, ' '),
				ISNULL(#SPOSNR#, ' '),
				ISNULL(#STKNUM#, ' '),
				ISNULL(#STPNUM#, ' '),
				ISNULL(#SWERKS#, ' '),
				ISNULL(#SLGORT#, ' '),
				ISNULL(#SDATBG#, ' '),
				ISNULL(#STDLNR#, ' '),
				ISNULL(#SSORNU#, ' '),
				ISNULL(#SSORIT#, ' '),
				ISNULL(#SMBLNR#, ' '),
				ISNULL(#SZEILE#, ' '),
				ISNULL(#SMJAHR#, ' '),
				ISNULL(#SXBLNR#, ' '),
				ISNULL(#SAPSTS#, ' '),
				ISNULL(#DOORKY#, ' '),
				ISNULL(#PTLT01#, ' '),
				ISNULL(#PTLT02#, ' '),
				ISNULL(#PTLT03#, ' '),
				ISNULL(#PTLT04#, ' '),
				ISNULL(#PTLT05#, ' '),
				ISNULL(#PTLT06#, ' '),
				ISNULL(#PTLT07#, ' '),
				ISNULL(#PTLT08#, ' '),
				ISNULL(#PTLT09#, ' '),
				ISNULL(#PTLT10#, ' '),
				ISNULL(#PTLT11#, ' '),
				ISNULL(#PTLT12#, ' '),
				ISNULL(#PTLT13#, ' '),
				ISNULL(#PTLT14#, ' '),
				ISNULL(#PTLT15#, ' '),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #PTLT16# = ' ' THEN '0'
							   WHEN #PTLT16# = '' THEN '0'
							   WHEN #PTLT16# IS NULL THEN '0'
							   ELSE #PTLT16# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #PTLT17# = ' ' THEN '0'
							   WHEN #PTLT17# = '' THEN '0'
							   WHEN #PTLT17# IS NULL THEN '0'
							   ELSE #PTLT17# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #PTLT18# = ' ' THEN '0'
							   WHEN #PTLT18# = '' THEN '0'
							   WHEN #PTLT18# IS NULL THEN '0'
							   ELSE #PTLT18# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #PTLT19# = ' ' THEN '0'
							   WHEN #PTLT19# = '' THEN '0'
							   WHEN #PTLT19# IS NULL THEN '0'
							   ELSE #PTLT19# END)),
				CONVERT(NUMERIC(20,3), 
						 (CASE WHEN #PTLT20# = ' ' THEN '0'
							   WHEN #PTLT20# = '' THEN '0'
							   WHEN #PTLT20# IS NULL THEN '0'
							   ELSE #PTLT20# END)),
				ISNULL(#PASTKY#, ' '),
				ISNULL(#ALSTKY#, ' '),
				ISNULL(#SBKTXT#, ' '),
				ISNULL(#TASRSN#, ' '),
				CONVERT(VARCHAR,GETDATE(),112),
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				ISNULL(#SES_USER_ID#, ' '),
				CONVERT(VARCHAR,GETDATE(),112),
				REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
				ISNULL(#SES_USER_ID#, ' '),
				ISNULL(#INDBZL#, ' '),
				ISNULL(#INDARC#, ' ')
			)
	</insert>
	
	<insert id="TASDREND_INSERT" parameterClass="Map">
		INSERT INTO TASDR (      
		      TASKKY
		    , TASKIT
		    , TASKIR
		    , STOKKY
		    , QTSTKM
		    , QTSTKC
		    , CREDAT
		    , CRETIM
		    , CREUSR
		    , LMODAT
		    , LMOTIM
		    , LMOUSR    
		) VALUES (
		      #TASKKY#
		    , #TASKIT#
		    , '0001'
		    , #STOKKY#
		    , CONVERT(NUMERIC(20,3), #QTSTKM#)
		    , CONVERT(NUMERIC(20,3), #QTSTKC#)
		    , CONVERT(VARCHAR,GETDATE(),112)
		    , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
		    , #SES_USER_ID#
		    , CONVERT(VARCHAR,GETDATE(),112)
		    , REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
		    , #SES_USER_ID#   
		)
	</insert>
	
	<update id="TASDIUPD_UPDATE" parameterClass="Map">
		UPDATE TASDI
			SET TRNUAC  =  #TRNUTG#,
				ATRUTY  =  #TTRUTY#,
				AMEAKY  =  #TMEAKY#,
				AUOMKY  =  #TUOMKY#,
				QTAPUM  =  #QTTPUM#,
				ADUOKY  =  #TDUOKY#,
				QTADUM  =  #QTTDUM#,
		       	LMODAT = CONVERT(VARCHAR,GETDATE(),112),
               	LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
		AND		TASKIT = #RECVIT#
	</update>
	
	<update id="TASDI_UPDATE" parameterClass="Map">
		UPDATE TASDI
			SET QTCOMP  =  #QTCOMP#,
				TRNUTG  =  #TRNUTG#,
				LOCAAC  =  #LOCAAC#,
				PTLT01  =  #PTLT01#,
				PTLT11  =  #PTLT11#,
		       	LMODAT = CONVERT(VARCHAR,GETDATE(),112),
               	LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
		AND		TASKIT = #RECVIT#
	</update>
	
	<update id="TASDH_UPDATE" parameterClass="Map">
		UPDATE TASDH
			SET DOCDAT  =  #DOCDAT#,
		       	LMODAT = CONVERT(VARCHAR,GETDATE(),112),
               	LMOTIM = REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
	</update>
	
	<!-- TO08 : 조회/리스트 발행 -->
	
	<select id="TO08_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY  AS TASKKY,
		       TASDH.WAREKY  AS WAREKY,
		       WH.NAME01     AS WAREKYNM,
		       TASDH.TASOTY  AS TASOTY,
		       DT.SHORTX     AS TASOTYNM,
		       TASDH.DOCDAT  AS DOCDAT,
		       TASDH.DOCCAT  AS DOCCAT,
		       DC.SHORTX     AS DOCCATNM,
		       TASDH.DRELIN  AS DRELIN,
		       TASDH.STATDO  AS STATDO,
		       ST.CDESC1     AS STATDONM,
		       TASDH.QTTAOR  AS QTTAOR,
		       TASDH.QTCOMP  AS QTCOMP,
		       TASDH.TSPKEY  AS TSPKEY,
		       TASDH.DOORKY  AS DOORKY,
		       TASDH.WARETG  AS WARETG,
		       WT.NAME01     AS WARETGNM,
		       TASDH.PTNRKY  AS PTNRKY,
		       BZ.NAME01     AS PTNRKYNM,
		       TASDH.PTNRTY  AS PTNRTY,
		       TASDH.PTNRNM  AS PTNRNM,
		       TASDH.USRID1  AS USRID1,
		       TASDH.UNAME1  AS UNAME1,
		       TASDH.DEPTID1 AS DEPTID1,
		       TASDH.DNAME1  AS DNAME1,
		       TASDH.USRID2  AS USRID2,
		       TASDH.UNAME2  AS UNAME2,
		       TASDH.DEPTID2 AS DEPTID2,
		       TASDH.DNAME2  AS DNAME2,
		       TASDH.USRID3  AS USRID3,
		       TASDH.UNAME3  AS UNAME3,
		       TASDH.DEPTID3 AS DEPTID3,
		       TASDH.DNAME3  AS DNAME3,
		       TASDH.USRID4  AS USRID4,
		       TASDH.UNAME4  AS UNAME4,
		       TASDH.DEPTID4 AS DEPTID4,
		       TASDH.DNAME4  AS DNAME4,
		       TASDH.DOCTXT  AS DOCTXT,
		       TASDH.CREDAT  AS CREDAT,
		       TASDH.CRETIM  AS CRETIM,
		       TASDH.CREUSR  AS CREUSR,
		       CU.NMLAST     AS CUSRNM,
		       TASDH.LMODAT  AS LMODAT,
		       TASDH.LMOTIM  AS LMOTIM,
		       TASDH.LMOUSR  AS LMOUSR,
		       LU.NMLAST     AS LUSRNM,
		       ISNULL((SELECT COUNT(*) FROM TASDI WHERE TASDI.TASKKY = TASDH.TASKKY AND TASDI.STATIT = 'NEW'), 0)AS COMPLETECNT
		  FROM TASDH
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = TASDH.WAREKY
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = TASDH.WARETG
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = TASDH.TASOTY
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = TASDH.DOCCAT
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = TASDH.STATDO
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = TASDH.PTNRKY
		              AND BZ.PTNRTY IN ('VD','CT','TM')
		              AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = 'WCD1')
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = TASDH.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = TASDH.LMOUSR
		 WHERE TASDH.WAREKY = 'WCD1'
		   AND TASDH.QTTAOR > 0
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<!-- PT09 : 적치리스트 발행 -->
	<select id="PT09H_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       TASDH.TASOTY AS TASOTY,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       (CASE WHEN TASDH.WARETG = ' ' THEN TASDH.WAREKY ELSE TASDH.WARETG END) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY
		  FROM TASDH
		       INNER JOIN TASDI
		               ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = TASDI.SHPOKY 
		               AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		               AND BZPTN.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = TASDH.WAREKY) 
		 WHERE TASDH.WAREKY = 'WCD1'
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
		          TASDH.KEEPTS, TASDH.WARETG
		 ORDER BY TASDH.TASKKY
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<select id="PT09I_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TMEAKY ELSE B.AMEAKY END) AS AMEAKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN (CASE WHEN B.TASKTY = 'PT' THEN B.SUOMKY ELSE B.TUOMKY END) ELSE B.AUOMKY END) AS AUOMKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTPUM ELSE B.QTAPUM END) AS QTAPUM,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TDUOKY ELSE B.ADUOKY END) AS ADUOKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTDUM ELSE B.QTADUM END) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (  SELECT 0 AS ROWSEQ, 
		       			' ' AS ROWCK, 
						' ' AS TASKKY, 
						' ' AS TASKIT, 
						0 AS QTCOMP, 
						' ' AS LOCAAC, 
						' ' AS SECTAC,
						' ' AS PAIDAC,
						' ' AS TRNUAC,
						' ' AS RSNCOD,
						' ' AS TASRSN,
						' ' AS ATRUTY ) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		<isNotEmpty property="TASKKY">
			AND A.TASKKY = #TASKKY#
		</isNotEmpty>
		 ORDER BY B.TASKKY, B.TASKIT
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<delete id="TASDIDEL_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		WHERE TASKKY = #TASKKY#
		AND   TASKIT = #TASKIT#
	</delete>
	
	<delete id="TASDH_DELETE" parameterClass="Map">
		DELETE FROM TASDH
		WHERE TASKKY = #TASKKY#
	</delete>
	
	<delete id="TASDI_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		WHERE TASKKY = #TASKKY#
		AND   ACTCDT = '00000000'
	</delete>
	
	<!-- 재고 이동 : MV01 -->
	<select id="AREACOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			AREAKY AS VALUE_COL,
		    SHORTX AS TEXT_COL,
		    WAREKY AS GROUP_COL
		FROM AREMA 
		WHERE 1 = 1
		AND   WAREKY = 'WCD1'
		AND   AREATY IN ('STOR','RECV')
	</select>
	
	<select id="DOCTCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
		     , SHORTX AS TEXT_COL
		     , DOCUTY AS GROUP_COL
		FROM DOCTM
		WHERE 1 =1
		AND   DOCCAT = '300'
		AND   DOCUTY = '320'
		ORDER BY DOCUTY
	</select>
	
	<select id="MV01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
		       ' ' AS TASKKY,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       DT.DOCUTY AS TASOTY,
		       DT.SHORTX AS TASOTYNM,
		       CONVERT(VARCHAR,GETDATE(),112) AS DOCDAT,
		       DC.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS DRELIN,
		       ST.CMCDVL AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       0 AS QTTAOR,
		       0 AS QTCOMP,
		       ' ' AS TSPKEY,
		       ' ' AS DOORKY,
		       WT.WAREKY AS WARETG,
		       WT.NAME01 AS WARETGNM,
		       BZ.PTNRKY AS PTNRKY,
		       BZ.PTNRTY AS PTNRTY,
		       BZ.NAME01 AS PTNRNM,
		       UM.ERPUSR AS USRID1,
		       UM.ERPNAM AS UNAME1,
		       UM.DEPTID AS DEPTID1,
		       UM.DPNAME AS DNAME1,
		       EU.ERPUS2 AS USRID2,
		       EU.USNAM2 AS UNAME2,
		       EU.DEPID2 AS DEPTID2,
		       EU.DPNAM2 AS DNAME2,
		       EU.ERPUS3 AS USRID3,
		       EU.USNAM3 AS UNAME3,
		       EU.DEPID3 AS DEPTID3,
		       EU.DPNAM3 AS DNAME3,
		       EU.ERPUS4 AS USRID4,
		       EU.USNAM4 AS UNAME4,
		       EU.DEPID4 AS DEPTID4,
		       EU.DPNAM4 AS DNAME4,
		       ' ' AS DOCTXT,
		       CONVERT(VARCHAR,GETDATE(),112) AS CREDAT,
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS CRETIM,
			   '' AS CREUSR,
			   '' AS CUSRNM,
			   CONVERT(VARCHAR,GETDATE(),112) AS LMODAT,
			   REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','') AS LMOTIM,
				'' AS LMOUSR,
				'' AS LUSRNM
		  FROM (SELECT 1 AS AA) D
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #WAREKY#
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = #WAREKY#
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '300'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = 'NEW'
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = #PTNRKY#
		              AND BZ.PTNRTY IN ('VD')
		              AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP UM
		               ON UM.OWNRKY = #OWNRKY#
		              AND UM.USERID = #USERID#
		       LEFT OUTER JOIN VUSER_WAREDOCUSER EU
		               ON EU.WAREKY = #WAREKY#
		              AND EU.DOCUTY = #TASOTY#
			GROUP BY WH.WAREKY, WH.NAME01, DT.DOCUTY, DT.SHORTX, DC.DOCCAT, DC.SHORTX, ST.CMCDVL, ST.CDESC1, WT.WAREKY,
					 WT.NAME01, BZ.PTNRKY, BZ.PTNRTY, BZ.NAME01, UM.ERPUSR, UM.ERPNAM, UM.DEPTID, UM.DPNAME, EU.ERPUS2,
					 EU.USNAM2, EU.DEPID2, EU.DPNAM2, EU.ERPUS3, EU.USNAM3, EU.DEPID3, EU.DPNAM3, EU.ERPUS4, EU.USNAM4,
					 EU.DEPID4, EU.DPNAM4
		</select>
		
		<select id="MV01BODY_LIST" parameterClass="Map" resultClass="DataMap">
			SELECT ' ' AS TASKKY,
		       ' ' AS TASKIT,
			<isNotEqual property="TASOTY" compareValue="320">
			<isNotEqual property="TASOTY" compareValue="391">
			<isNotEqual property="TASOTY" compareValue="392">
			       ' ' AS CONFIRM,
			</isNotEqual>
			</isNotEqual>
			</isNotEqual>
			<isEqual property="TASOTY" compareValue="320">'V' AS CONFIRM,</isEqual>
			<isEqual property="TASOTY" compareValue="391">'V' AS CONFIRM,</isEqual>
			<isEqual property="TASOTY" compareValue="392">'V' AS CONFIRM,</isEqual>
		       STKKY.STOKKY AS STOKKY,
		       'MV' AS TASKTY,
		       ' ' AS RSNCOD,
		       'NEW' AS STATIT,
		       STKKY.QTSIWH AS AVAILABLEQTY,
		       STKKY.QTSIWH AS QTTAOR,
		       0 AS QTCOMP,
		       STKKY.OWNRKY AS OWNRKY,
		       STKKY.SKUKEY AS SKUKEY,
		       STKKY.LOTNUM AS LOTNUM,
		       '00000000' AS ACTCDT,
		       '000000' AS ACTCTI,
		       STKKY.QTYUOM AS QTYUOM,
		       ' ' AS TKFLKY,
		       ' ' AS STEPNO,
		       ' ' AS LSTTFL,
		       STKKY.LOCAKY AS LOCASR,
		       STKKY.LOCAKY AS LOCAKY,
		       STKKY.SECTID AS SECTSR,
		       STKKY.PACKID AS PAIDSR,
		       STKKY.TRNUID AS TRNUSR,
		       ' ' AS STRUTY,
		       STKKY.MEASKY AS SMEAKY,
		       STKKY.UOMKEY AS SUOMKY,
		       STKKY.QTPUOM AS QTSPUM,
		       STKKY.DUOMKY AS SDUOKY,
		       STKKY.QTDUOM AS QTSDUM,
		       DT.SYSLOC AS LOCATG,
		       STKKY.SECTID AS SECTTG,
		       STKKY.PACKID AS PAIDTG,
		       STKKY.TRNUID AS TRNUTG,
		       ' ' AS TTRUTY,
		       STKKY.MEASKY AS TMEAKY,
		       STKKY.UOMKEY AS TUOMKY,
		       STKKY.QTPUOM AS QTTPUM,
		       STKKY.DUOMKY AS TDUOKY,
		       STKKY.QTDUOM AS QTTDUM,
		       ' ' AS LOCAAC,
		       ' ' AS SECTAC,
		       ' ' AS PAIDAC,
		       ' ' AS TRNUAC,
		       ' ' AS ATRUTY,
		       ' ' AS AMEAKY,
		       ' ' AS AUOMKY,
		       0 AS QTAPUM,
		       ' ' AS ADUOKY,
		       0 AS QTADUM,
		       ' ' AS REFDKY,
		       ' ' AS REFDIT,
		       ' ' AS REFCAT,
		       ' ' AS REFDAT,
		       STKKY.PURCKY AS PURCKY,
		       STKKY.PURCIT AS PURCIT,
		       STKKY.ASNDKY AS ASNDKY,
		       STKKY.ASNDIT AS ASNDIT,
		       STKKY.RECVKY AS RECVKY,
		       STKKY.RECVIT AS RECVIT,
		       STKKY.SHPOKY AS SHPOKY,
		       STKKY.SHPOIT AS SHPOIT,
		       STKKY.GRPOKY AS GRPOKY,
		       STKKY.GRPOIT AS GRPOIT,
		       STKKY.SADJKY AS SADJKY,
		       STKKY.SADJIT AS SADJIT,
		       STKKY.SDIFKY AS SDIFKY,
		       STKKY.SDIFIT AS SDIFIT,
		       STKKY.PHYIKY AS PHYIKY,
		       STKKY.PHYIIT AS PHYIIT,
		       ' ' AS DROPID,
		       STKKY.DESC01 AS DESC01,
		       STKKY.DESC02 AS DESC02,
		       STKKY.ASKU01 AS ASKU01,
		       STKKY.ASKU02 AS ASKU02,
		       STKKY.ASKU03 AS ASKU03,
		       STKKY.ASKU04 AS ASKU04,
		       STKKY.ASKU05 AS ASKU05,
		       STKKY.EANCOD AS EANCOD,
		       STKKY.GTINCD AS GTINCD,
		       STKKY.SKUG01 AS SKUG01,
		       STKKY.SKUG02 AS SKUG02,
		       STKKY.SKUG03 AS SKUG03,
		       STKKY.SKUG04 AS SKUG04,
		       STKKY.SKUG05 AS SKUG05,
		       STKKY.GRSWGT AS GRSWGT,
		       STKKY.NETWGT AS NETWGT,
		       STKKY.WGTUNT AS WGTUNT,
		       STKKY.LENGTH AS LENGTH,
		       STKKY.WIDTHW AS WIDTHW,
		       STKKY.HEIGHT AS HEIGHT,
		       STKKY.CUBICM AS CUBICM,
		       STKKY.CAPACT AS CAPACT,
		       ' ' AS WORKID,
		       ' ' AS WORKNM,
		       ' ' AS HHTTID,
		       STKKY.AREAKY AS AREAKY,
		       STKKY.LOTA01 AS LOTA01,
		       STKKY.LOTA02 AS LOTA02,
		       STKKY.LOTA03 AS LOTA03,
		       STKKY.LOTA04 AS LOTA04,
		       STKKY.LOTA05 AS LOTA05,
		       STKKY.LOTA06 AS LOTA06,
		       STKKY.LOTA07 AS LOTA07,
		       STKKY.LOTA08 AS LOTA08,
		       STKKY.LOTA09 AS LOTA09,
		       STKKY.LOTA10 AS LOTA10,
		       STKKY.LOTA11 AS LOTA11,
		       STKKY.LOTA12 AS LOTA12,
		       STKKY.LOTA13 AS LOTA13,
		       STKKY.LOTA14 AS LOTA14,
		       STKKY.LOTA15 AS LOTA15,
		       STKKY.LOTA16 AS LOTA16,
		       STKKY.LOTA17 AS LOTA17,
		       STKKY.LOTA18 AS LOTA18,
		       STKKY.LOTA19 AS LOTA19,
		       STKKY.LOTA20 AS LOTA20,
		       STKKY.AWMSNO AS AWMSNO,
		       ' ' AS AWMSTS,
		       STKKY.SMANDT AS SMANDT,
		       STKKY.SEBELN AS SEBELN,
		       STKKY.SEBELP AS SEBELP,
		       STKKY.SZMBLNO AS SZMBLNO,
		       STKKY.SZMIPNO AS SZMIPNO,
		       STKKY.STRAID AS STRAID,
			<isEqual property="TASOTY" compareValue="332">
			   <isNotEmpty property="svbeln">
			       #SVBELN# AS SVBELN,
			   </isNotEmpty>
			   <isEmpty property="SVBELN">
			      <isNotEmpty property="SHPOKY">
			       ISNULL((SELECT TOP 1 SVBELN FROM SHPDI WHERE SHPOKY = #SHPOKY# GROUP BY SVBELN),' ') AS SVBELN,
			      </isNotEmpty>
			      <isEmpty property="SHPOKY">
			       ' ' AS SVBELN,
			      </isEmpty>
			   </isEmpty>
			</isEqual>
			<isNotEqual property="TASOTY" compareValue="332">STKKY.SVBELN AS SVBELN,</isNotEqual>
			       STKKY.SPOSNR AS SPOSNR,
			       STKKY.STKNUM AS STKNUM,
			       STKKY.STPNUM AS STPNUM,
			       STKKY.SWERKS AS SWERKS,
			       STKKY.SLGORT AS SLGORT,
			       STKKY.SDATBG AS SDATBG,
			       STKKY.STDLNR AS STDLNR,
			       STKKY.SSORNU AS SSORNU,
			       STKKY.SSORIT AS SSORIT,
			       STKKY.SMBLNR AS SMBLNR,
			       STKKY.SZEILE AS SZEILE,
			       STKKY.SMJAHR AS SMJAHR,
			       STKKY.SXBLNR AS SXBLNR,
			       STKKY.SAPSTS AS SAPSTS,
			       ' ' AS DOORKY,
			       STKKY.LOTA01 AS PTLT01,
			       STKKY.LOTA02 AS PTLT02,
			       STKKY.LOTA03 AS PTLT03,
			       STKKY.LOTA04 AS PTLT04,
			       STKKY.LOTA05 AS PTLT05,
			       STKKY.LOTA06 AS PTLT06,
			       STKKY.LOTA07 AS PTLT07,
			       STKKY.LOTA08 AS PTLT08,
			       STKKY.LOTA09 AS PTLT09,
			       STKKY.LOTA10 AS PTLT10,
			       STKKY.LOTA11 AS PTLT11,
			       STKKY.LOTA12 AS PTLT12,
			       STKKY.LOTA13 AS PTLT13,
			       STKKY.LOTA14 AS PTLT14,
			       STKKY.LOTA15 AS PTLT15,
			       STKKY.LOTA16 AS PTLT16,
			       STKKY.LOTA17 AS PTLT17,
			       STKKY.LOTA18 AS PTLT18,
			       STKKY.LOTA19 AS PTLT19,
			       STKKY.LOTA20 AS PTLT20,
			       ' ' AS PASTKY,
			       ' ' AS ALSTKY,
			       ' ' AS SBKTXT,
			       ' ' AS TASRSN
			  FROM STKKY
			       INNER JOIN AREMA A
			               ON A.WAREKY = STKKY.WAREKY
			              AND A.AREAKY = STKKY.AREAKY
			       INNER JOIN LOCMA M
			               ON M.WAREKY = STKKY.WAREKY
			              AND M.LOCAKY = STKKY.LOCAKY
			              AND M.STATUS = '00'
			       INNER JOIN DOCTM DT
			               ON DT.DOCUTY = #TASOTY#
			 WHERE STKKY.WAREKY = #WAREKY#
			<isNotEmpty property="AREAKY">
			   AND STKKY.AREAKY = #AREAKY#
			</isNotEmpty>
			<isEqual property="TASOTY" compareValue="332">
			   <isNotEmpty property="SVBELN">
			   AND STKKY.SKUKEY IN (SELECT SKUKEY FROM IFWMS113 WHERE VBELN = #SVBELN#)
			   </isNotEmpty>
			   <isEmpty property="SVBELN">
			   <isNotEmpty property="SHPOKY">
			   AND STKKY.SKUKEY IN (SELECT SKUKEY FROM SHPDI WHERE SHPOKY = #SHPOKY#)
			   </isNotEmpty>
			   </isEmpty>
			</isEqual>
			<isNotEmpty property="RECVKY">
			   AND STKKY.RECVKY = #RECVKY#
			</isNotEmpty>
			
			<isEqual property="TASOTY" compareValue="320">   AND STKKY.LOCAKY NOT IN ('SCRLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="331">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="380">   AND STKKY.LOCAKY NOT IN (' ') </isEqual>	
			<isEqual property="TASOTY" compareValue="382">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>
			<isEqual property="TASOTY" compareValue="383">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="384">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="385">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="386">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="387">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="388">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="389">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="390">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="391">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="392">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="393">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="394">   AND STKKY.LOCAKY IN ('RTNLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="395">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="396">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="397">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="398">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="399">   AND STKKY.LOCAKY IN ('SETLOC') </isEqual>	
		
			   AND STKKY.LOCAKY != 'SHPLOC'
			   AND STKKY.LOTA06 IN ('00')
			   AND STKKY.AREAKY NOT IN ('SYS','SHP')
			   AND STKKY.QTSIWH <![CDATA[>]]> 0
			   AND STKKY.QTSALO = 0
			   AND STKKY.QTSPMO = 0
			   AND STKKY.QTSPMI = 0
			   AND STKKY.QTSBLK = 0
			<isNotEmpty property="RANGE_SQL">
			   $RANGE_SQL$
			</isNotEmpty>
	</select>
	
	<select id="MV09HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       TASDH.TASOTY AS TASOTY,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS TASSTX,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       (CASE WHEN TASDH.WARETG = ' ' THEN TASDH.WAREKY ELSE TASDH.WARETG END) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       ISNULL(SUM((CASE WHEN TASDI.ACTCDT = '00000000' THEN 1 WHEN TASDI.ACTCDT = ' ' THEN 1 ELSE 0 END)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY
		  FROM TASDH
		       INNER JOIN TASDI
		               ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = TASDI.SHPOKY 
		               AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		               AND BZPTN.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = TASDH.WAREKY) 
		 WHERE TASDH.WAREKY = #WAREKY#
		
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
		          TASDH.KEEPTS, TASDH.WARETG
		 ORDER BY TASDH.TASKKY
	</select>
	
	<select id="MV09BODY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT (CASE
		          WHEN D.ROWCK IS NULL THEN ' '
		          ELSE D.ROWCK END) AS ROWCK,
		       A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN D.QTCOMP
		          ELSE D.QTCOMP END) AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TMEAKY ELSE B.AMEAKY END) AS AMEAKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN (CASE WHEN B.TASKTY = 'PT' THEN B.SUOMKY ELSE B.TUOMKY END ) ELSE B.AUOMKY END) AS AUOMKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTPUM ELSE B.QTAPUM END) AS QTAPUM,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.TDUOKY ELSE B.ADUOKY END) AS ADUOKY,
		       (CASE WHEN B.ACTCDT = '00000000' THEN B.QTTDUM ELSE B.QTADUM END) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (SELECT 0 AS ROWSEQ,
				' ' AS ROWCK,
				' ' AS TASKKY,
				' ' AS TASKIT,
				0 AS QTCOMP,
				' ' AS LOCAAC,
				' ' AS SECTAC,
				' ' AS PAIDAC,
				' ' AS TRNUAC,
				' ' AS RSNCOD,
				' ' AS TASRSN,
				' ' AS ATRUTY ) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		   AND A.TASKKY = #TASKKY#
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<!-- 검사파손샘플이동 -->
	<select id="TASOTYCD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM DOCTM
		WHERE 1 =1
		AND DOCCAT = '300'
		<isEqual property="TASOTY" compareValue="TO01">
			AND DOCUTY IN ('382','386','389','390','393','394','395','396','399')
		</isEqual>
		<isEqual property="TASOTY" compareValue="TO02">
			AND DOCUTY IN ('397')
		</isEqual>
		<isEqual property="TASOTY" compareValue="TO06">
			AND DOCUTY IN ('391','392')
		</isEqual>
	</select>
	
	<select id="WHERCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT AREAKY AS VALUE_COL
		     , SHORTX AS TEXT_COL
		FROM AREMA
		WHERE WAREKY = 'WCD1'
		AND AREATY IN ('STOR', 'RECV')
	</select>
	
	<select id="TO01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT
		       ' ' AS TASKKY,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       DT.DOCUTY AS TASOTY,
		       DT.SHORTX AS TASOTYNM,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       DC.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS DRELIN,
		       ST.CMCDVL AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       0 AS QTTAOR,
		       0 AS QTCOMP,
		       ' ' AS TSPKEY,
		       ' ' AS DOORKY,
		       ' ' AS AREATG,
		       ' ' AS AREATGNM,
		       WT.WAREKY AS WARETG,
		       WT.NAME01 AS WARETGNM,
		       BZ.PTNRKY AS PTNRKY,
		       BZ.PTNRTY AS PTNRTY,
		       BZ.NAME01 AS PTNRNM,
		       UM.ERPUSR AS USRID1,
		       UM.ERPNAM AS UNAME1,
		       UM.DEPTID AS DEPTID1,
		       UM.DPNAME AS DNAME1,
		       EU.ERPUS2 AS USRID2,
		       EU.USNAM2 AS UNAME2,
		       EU.DEPID2 AS DEPTID2,
		       EU.DPNAM2 AS DNAME2,
		       EU.ERPUS3 AS USRID3,
		       EU.USNAM3 AS UNAME3,
		       EU.DEPID3 AS DEPTID3,
		       EU.DPNAM3 AS DNAME3,
		       EU.ERPUS4 AS USRID4,
		       EU.USNAM4 AS UNAME4,
		       EU.DEPID4 AS DEPTID4,
		       EU.DPNAM4 AS DNAME4,
		       CONVERT(CHAR(10),GETDATE(),112) AS CREDAT,
		       TO_CHAR(SYSDATE, 'HH:MM:SS') AS CRETIM,
		       #SES_USER_ID# AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = #SES_USER_ID#) AS CUSRNM,
		       ' ' AS DOCTXT 
		  FROM (SELECT 1 ) D
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #WAREKY#
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = (CASE WHEN #PROGID# = 'TO02' THEN #WARETG#
		               						ELSE #WAREKY# END)
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '300'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = #STATDO#
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = #PTNRKY#
		              AND BZ.PTNRTY IN ('VD')
		              AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP UM
		               ON UM.OWNRKY = #OWNRKY#
		              AND UM.USERID = #USERID#
		       LEFT OUTER JOIN VUSER_WAREDOCUSER EU
		               ON EU.WAREKY = #WAREKY#
		              AND EU.DOCUTY = #TASOTY#
	</select>
	
	<select id="TO01BODY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT ' ' AS TASKKY,
		       ' ' AS TASKIT,
		       'V' AS CONFIRM, <!-- 기존 2step, 테스트용으로 1step로 구성 -->
		       STKKY.STOKKY AS STOKKY,
		       'MV' AS TASKTY,
		       ' ' AS RSNCOD,
		       'NEW' AS STATIT,
		       STKKY.QTSIWH AS AVAILABLEQTY,
		       STKKY.QTSIWH AS QTSAVLB,
		       STKKY.QTSIWH AS QTTAOR,
		       0 AS QTCOMP,
		       STKKY.OWNRKY AS OWNRKY,
		       STKKY.SKUKEY AS SKUKEY,
		       STKKY.LOTNUM AS LOTNUM,
		       '00000000' AS ACTCDT,
		       '000000' AS ACTCTI,
		       STKKY.QTYUOM AS QTYUOM,
		       ' ' AS TKFLKY,
		       ' ' AS STEPNO,
		       ' ' AS LSTTFL,
		       STKKY.LOCAKY AS LOCASR,
		       STKKY.SECTID AS SECTSR,
		       STKKY.PACKID AS PAIDSR,
		       STKKY.TRNUID AS TRNUSR,
		       ' ' AS STRUTY,
		       STKKY.MEASKY AS SMEAKY,
		       STKKY.UOMKEY AS SUOMKY,
		       STKKY.QTPUOM AS QTSPUM,
		       STKKY.DUOMKY AS SDUOKY,
		       STKKY.QTDUOM AS QTSDUM,
		       DT.SYSLOC AS LOCATG,
		       DT.SYSLOC AS WARETG,
		       STKKY.SECTID AS SECTTG,
		       STKKY.PACKID AS PAIDTG,
		       STKKY.TRNUID AS TRNUTG,
		       ' ' AS TTRUTY,
		       STKKY.MEASKY AS TMEAKY,
		       STKKY.UOMKEY AS TUOMKY,
		       STKKY.QTPUOM AS QTTPUM,
		       STKKY.DUOMKY AS TDUOKY,
		       STKKY.QTDUOM AS QTTDUM,
		       ' ' AS LOCAAC,
		       ' ' AS SECTAC,
		       ' ' AS PAIDAC,
		       ' ' AS TRNUAC,
		       ' ' AS ATRUTY,
		       ' ' AS AMEAKY,
		       ' ' AS AUOMKY,
		       0 AS QTAPUM,
		       ' ' AS ADUOKY,
		       0 AS QTADUM,
		       ' ' AS REFDKY,
		       ' ' AS REFDIT,
		       ' ' AS REFCAT,
		       ' ' AS REFDAT,
		       STKKY.PURCKY AS PURCKY,
		       STKKY.PURCIT AS PURCIT,
		       STKKY.ASNDKY AS ASNDKY,
		       STKKY.ASNDIT AS ASNDIT,
		       STKKY.RECVKY AS RECVKY,
		       STKKY.RECVIT AS RECVIT,
		       STKKY.SHPOKY AS SHPOKY,
		       STKKY.SHPOIT AS SHPOIT,
		       STKKY.GRPOKY AS GRPOKY,
		       STKKY.GRPOIT AS GRPOIT,
		       STKKY.SADJKY AS SADJKY,
		       STKKY.SADJIT AS SADJIT,
		       STKKY.SDIFKY AS SDIFKY,
		       STKKY.SDIFIT AS SDIFIT,
		       STKKY.PHYIKY AS PHYIKY,
		       STKKY.PHYIIT AS PHYIIT,
		       ' ' AS DROPID,
		       STKKY.DESC01 AS DESC01,
		       STKKY.DESC02 AS DESC02,
		       STKKY.ASKU01 AS ASKU01,
		       STKKY.ASKU02 AS ASKU02,
		       STKKY.ASKU03 AS ASKU03,
		       STKKY.ASKU04 AS ASKU04,
		       STKKY.ASKU05 AS ASKU05,
		       STKKY.EANCOD AS EANCOD,
		       STKKY.GTINCD AS GTINCD,
		       STKKY.SKUG01 AS SKUG01,
		       STKKY.SKUG02 AS SKUG02,
		       STKKY.SKUG03 AS SKUG03,
		       STKKY.SKUG04 AS SKUG04,
		       STKKY.SKUG05 AS SKUG05,
		       STKKY.GRSWGT AS GRSWGT,
		       STKKY.NETWGT AS NETWGT,
		       STKKY.WGTUNT AS WGTUNT,
		       STKKY.LENGTH AS LENGTH,
		       STKKY.WIDTHW AS WIDTHW,
		       STKKY.HEIGHT AS HEIGHT,
		       STKKY.CUBICM AS CUBICM,
		       STKKY.CAPACT AS CAPACT,
		       ' ' AS WORKID,
		       ' ' AS WORKNM,
		       ' ' AS HHTTID,
		       STKKY.AREAKY AS AREAKY,
		       STKKY.LOTA01 AS LOTA01,
		       STKKY.LOTA02 AS LOTA02,
		       STKKY.LOTA03 AS LOTA03,
		       STKKY.LOTA04 AS LOTA04,
		       STKKY.LOTA05 AS LOTA05,
		       STKKY.LOTA06 AS LOTA06,
		       STKKY.LOTA07 AS LOTA07,
		       STKKY.LOTA08 AS LOTA08,
		       STKKY.LOTA09 AS LOTA09,
		       STKKY.LOTA10 AS LOTA10,
		       STKKY.LOTA11 AS LOTA11,
		       STKKY.LOTA12 AS LOTA12,
		       STKKY.LOTA13 AS LOTA13,
		       STKKY.LOTA14 AS LOTA14,
		       STKKY.LOTA15 AS LOTA15,
		       STKKY.LOTA16 AS LOTA16,
		       STKKY.LOTA17 AS LOTA17,
		       STKKY.LOTA18 AS LOTA18,
		       STKKY.LOTA19 AS LOTA19,
		       STKKY.LOTA20 AS LOTA20,
		       STKKY.AWMSNO AS AWMSNO,
		       ' ' AS AWMSTS,
		       STKKY.SMANDT AS SMANDT,
		       STKKY.SEBELN AS SEBELN,
		       STKKY.SEBELP AS SEBELP,
		       STKKY.SZMBLNO AS SZMBLNO,
		       STKKY.SZMIPNO AS SZMIPNO,
		       STKKY.STRAID AS STRAID,
			   STKKY.SVBELN AS SVBELN,
		       STKKY.SPOSNR AS SPOSNR,
		       STKKY.STKNUM AS STKNUM,
		       STKKY.STPNUM AS STPNUM,
		       STKKY.SWERKS AS SWERKS,
		       STKKY.SLGORT AS SLGORT,
		       STKKY.SDATBG AS SDATBG,
		       STKKY.STDLNR AS STDLNR,
		       STKKY.SSORNU AS SSORNU,
		       STKKY.SSORIT AS SSORIT,
		       STKKY.SMBLNR AS SMBLNR,
		       STKKY.SZEILE AS SZEILE,
		       STKKY.SMJAHR AS SMJAHR,
		       STKKY.SXBLNR AS SXBLNR,
		       STKKY.SAPSTS AS SAPSTS,
		       ' ' AS DOORKY,
		       STKKY.LOTA01 AS PTLT01,
		       STKKY.LOTA02 AS PTLT02,
		       STKKY.LOTA03 AS PTLT03,
		       STKKY.LOTA04 AS PTLT04,
		       STKKY.LOTA05 AS PTLT05,
		       STKKY.LOTA06 AS PTLT06,
		       STKKY.LOTA07 AS PTLT07,
		       STKKY.LOTA08 AS PTLT08,
		       STKKY.LOTA09 AS PTLT09,
		       STKKY.LOTA10 AS PTLT10,
		       STKKY.LOTA11 AS PTLT11,
		       STKKY.LOTA12 AS PTLT12,
		       STKKY.LOTA13 AS PTLT13,
		       STKKY.LOTA14 AS PTLT14,
		       STKKY.LOTA15 AS PTLT15,
		       STKKY.LOTA16 AS PTLT16,
		       STKKY.LOTA17 AS PTLT17,
		       STKKY.LOTA18 AS PTLT18,
		       STKKY.LOTA19 AS PTLT19,
		       STKKY.LOTA20 AS PTLT20,
		       ' ' AS PASTKY,
		       ' ' AS ALSTKY,
		       ' ' AS SBKTXT,
		       ' ' AS TASRSN
		  FROM STKKY
		       INNER JOIN AREMA A
		               ON A.WAREKY = STKKY.WAREKY
		              AND A.AREAKY = STKKY.AREAKY
		       INNER JOIN LOCMA M
		               ON M.WAREKY = STKKY.WAREKY
		              AND M.LOCAKY = STKKY.LOCAKY
		              AND M.STATUS = '00'
		       INNER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		 WHERE STKKY.WAREKY = #WAREKY#
		<isNotEmpty property="AREAKY">
		   AND STKKY.AREAKY = #AREAKY#
		</isNotEmpty>
		<isNotEmpty property="RECVKY">
		   AND STKKY.RECVKY = #RECVKY#
		</isNotEmpty>
		
		<isEqual property="TASOTY" compareValue="320">   AND STKKY.LOCAKY NOT IN ('SCRLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="331">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="380">   AND STKKY.LOCAKY NOT IN (' ') </isEqual>	
		<isEqual property="TASOTY" compareValue="382">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>
		<isEqual property="TASOTY" compareValue="383">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="384">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="385">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="386">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="387">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="388">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="389">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="390">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="391">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="392">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="393">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="394">   AND STKKY.LOCAKY IN ('RTNLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="395">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="396">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="397">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="398">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="399">   AND STKKY.LOCAKY IN ('SETLOC') </isEqual>	
		
		   AND STKKY.LOCAKY != 'SHPLOC'
		   AND STKKY.LOTA06 IN ('00')
		   AND STKKY.AREAKY NOT IN ('SYS','SHP')
		   AND STKKY.QTSIWH > 0
		   AND STKKY.QTSALO = 0
		   AND STKKY.QTSPMO = 0
		   AND STKKY.QTSPMI = 0
		   AND STKKY.QTSBLK = 0
		   <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
		   </isNotEmpty>
	</select>
	
	<!-- 창간이동 -->
	<select id="WARETGCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT W.WAREKY AS VALUE_COL,
		       W.NAME01 AS TEXT_COL
		  FROM WAHMA W
		       INNER JOIN COMMA C
		               ON C.COMPKY = W.COMPKY
		       INNER JOIN OWNER O
		               ON O.COMPKY = C.COMPKY
		 WHERE O.OWNRKY = (SELECT DISTINCT ADDR05 FROM WAHMA WHERE WAREKY = 'WCD1' AND ROWNUM = 1)
	</select>
	
	<select id="BZPTNCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PTNRKY AS VALUE_COL
		     , NAME01 AS TEXT_COL
		FROM BZPTN
		WHERE 1=1
		<isEqual property="MENUID" compareValue="TK32"> AND PTNRTY IN ('PD') </isEqual>
		<isEqual property="MENUID" compareValue="TK30"> AND PTNRTY IN ('ST') </isEqual>
		<isEqual property="MENUID" compareValue="TK31"> AND PTNRTY IN ('ST') </isEqual>
		
		AND PTNRKY NOT IN (SELECT USERG2 FROM USRMA WHERE USERID=#SES_USER_ID#)
	</select>	
</sqlMap>