<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL MAP 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="WmsTask">
	<typeAlias alias="DataMap" type="com.common.bean.DataMap" />
	<typeAlias alias="StringMap" type="com.common.util.StringMap" />
	
	<select id="STKKYHEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			'' AS TASKKY,
			#SES_WAREKY# AS WAREKY,
			(SELECT NAME01 FROM WAHMA WHERE WAREKY = #SES_WAREKY#) AS WAREKYNM,
			<isNotEmpty property="AREA">
			#AREA# AS AREAKY,
			(SELECT SHORTX FROM AREMA WHERE WAREKY = #SES_WAREKY# AND AREAKY =  #AREA#) AS AREAKYNM,
			</isNotEmpty>
			'310' AS TASOTY,
			(SELECT SHORTX FROM DOCTM WHERE DOCUTY = '310' AND DOCCAT = '300') AS TASOTYNM,
			TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS DOCDAT,
			'300' AS DOCCAT,
			'' AS DRELIN,
			'NEW' AS STATDO,
			'' AS QTTAOR,
			'' AS QTCOMP,
			'' AS TSPKEY,
			'' AS KEEPTS,
			#SES_WAREKY# AS WARETG,
			'' AS USRID1,
			'' AS UNAME1,
			'' AS DEPTID1,
			'' AS DNAME1,
			'' AS USRID2,
			'' AS UNAME2,
			'' AS DEPTID2,
			'' AS DNAME2,
			'' AS USRID3,
			'' AS UNAME3,
			'' AS DEPTID3,
			'' AS DNAME3,
			'' AS USRID4,
			'' AS UNAME4,
			'' AS DEPTID4,
			'' AS DNAME4,
			'' AS DOCTXT,
			TO_CHAR(SYSDATE, 'YYYYMMDD') AS CREDAT,
			TO_CHAR(SYSDATE, 'HH24MISS') AS CRETIM,
			#SES_USER_ID# AS CREUSR,
			(SELECT NMLAST FROM USRMA WHERE USERID = #SES_USER_ID#) AS CUSRNM,
			TO_CHAR(SYSDATE, 'YYYYMMDD') AS LMODAT,
			TO_CHAR(SYSDATE, 'HH24MISS') AS LMOTIM,
			#SES_USER_ID# AS LMOUSR,
			(SELECT NMLAST FROM USRMA WHERE USERID = #SES_USER_ID#) AS LUSRNM
		FROM DUAL
	</select>
	
	<select id="STKKY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT ROW_NUMBER() OVER(ORDER BY A.STOKKY) AS NUM,
	       A.WAREKY AS WAREKY,
	       NVL((SELECT NAME01 FROM WAHMA X WHERE X.WAREKY = A.WAREKY ), ' ') AS WAREKYNM,
	       A.STOKKY AS STOKKY,
	       'PT' AS TASKTY,
	       'NEW' AS STATIT,
	
	       A.QTSIWH - A.QTSPMO - A.QTSBLK AS AVAILABLEQTY,
	      (A.QTSIWH - A.QTSPMO - A.QTSBLK) / A.QTPUOM AS QTSAVLB,
	       A.QTSIWH - A.QTSPMO - A.QTSBLK AS QTTAOR,
	       (A.QTSIWH - A.QTSPMO - A.QTSBLK) / A.QTPUOM AS QTYUOM,
	       '0' AS QTCOMP,
	       '' AS LOCAAC,
	       '' AS TRNUAC,
	       '' AS ALSTKY,
	      '00000000' AS ACTCDT,
	      '000000' AS ACTCTI,
		  NVL((SELECT QTPUOM FROM MEASI 
			WHERE  WAREKY = #SES_WAREKY#
			AND MEASKY IN (SELECT MEASKY FROM SKUWC
			WHERE WAREKY = A.WAREKY
			AND SKUKEY = A.SKUKEY)
			AND UOMKEY = 'PL'),9999999999) AS QTPUOM,
	       A.LOCAKY AS LOCASR,
	       A.SECTID AS SECTSR,
	       A.PACKID AS PAIDSR,
	       A.TRNUID AS TRNUSR,
	       A.TRUNTY AS STRUTY,
	       E.MEASKY AS SMEAKY,
	       A.UOMKEY AS SUOMKY,
	       A.QTPUOM AS QTSPUM,
	       A.DUOMKY AS SDUOKY,
	       A.QTDUOM AS QTSDUM,
	       '' AS LOCATG,
	       A.SECTID AS SECTTG,
	       A.PACKID AS PAIDTG,
	       A.TRNUID AS TRNUTG,
	       A.TRUNTY AS TTRUTY,
	       E.MEASKY AS TMEAKY,
	       E.UOMDTA AS TUOMKY,
	       A.QTPUOM AS QTTPUM,
	       A.DUOMKY AS TDUOKY,
	       A.QTDUOM AS QTTDUM,
	       A.OWNRKY AS OWNRKY,
	       A.SKUKEY AS SKUKEY,
	       A.LOTNUM AS LOTNUM,
	       A.REFDKY AS REFDKY,
	       A.REFDIT AS REFDIT,
	       A.REFCAT AS REFCAT,
	       A.REFDAT AS REFDAT,
	       A.PURCKY AS PURCKY,
	       A.PURCIT AS PURCIT,
	       A.ASNDKY AS ASNDKY,
	       A.ASNDIT AS ASNDIT,
	       A.RECVKY AS RECVKY,
	       A.RECVIT AS RECVIT,
	       A.SHPOKY AS SHPOKY,
	       A.SHPOIT AS SHPOIT,
	       A.GRPOKY AS GRPOKY,
	       A.GRPOIT AS GRPOIT,
	       A.SADJKY AS SADJKY,
	       A.SADJIT AS SADJIT,
	       A.SDIFKY AS SDIFKY,
	       A.SDIFIT AS SDIFIT,
	       A.PHYIKY AS PHYIKY,
	       A.PHYIIT AS PHYIIT,
	       A.DESC01 AS DESC01,
	       A.DESC02 AS DESC02,
	       A.ASKU01 AS ASKU01,
	       A.ASKU02 AS ASKU02,
	       A.ASKU03 AS ASKU03,
	       A.ASKU04 AS ASKU04,
	       A.ASKU05 AS ASKU05,
	       A.EANCOD AS EANCOD,
	       A.GTINCD AS GTINCD,
	       A.SKUG01 AS SKUG01,
	       A.SKUG02 AS SKUG02,
	       A.SKUG03 AS SKUG03,
	       A.SKUG04 AS SKUG04,
	       A.SKUG05 AS SKUG05,
	       A.GRSWGT AS GRSWGT,
	       A.NETWGT AS NETWGT,
	       A.WGTUNT AS WGTUNT,
	       A.LENGTH AS LENGTH,
	       A.WIDTHW AS WIDTHW,
	       A.HEIGHT AS HEIGHT,
	       A.CUBICM AS CUBICM,
	       A.CAPACT AS CAPACT,
	       A.AREAKY AS AREAKY,
	       NVL((SELECT SHORTX FROM AREMA X WHERE X.WAREKY = A.WAREKY AND X.AREAKY =  A.AREAKY),' ') AS AREAKYNM,
	       A.LOTA01 AS LOTA01,
	       A.LOTA02 AS LOTA02,
	       ' ' AS LOTA02NM,
	       A.LOTA03 AS LOTA03,
	       A.LOTA04 AS LOTA04,
	       A.LOTA05 AS LOTA05,
	       A.LOTA06 AS LOTA06,
	       A.LOTA07 AS LOTA07,
	       A.LOTA08 AS LOTA08,
	       A.LOTA09 AS LOTA09,
	       A.LOTA10 AS LOTA10,
	       A.LOTA11 AS LOTA11,
	       A.LOTA12 AS LOTA12,
	       A.LOTA13 AS LOTA13,
	       A.LOTA14 AS LOTA14,
	       A.LOTA15 AS LOTA15,
	       A.LOTA16 AS LOTA16,
	       A.LOTA17 AS LOTA17,
	       A.LOTA18 AS LOTA18,
	       A.LOTA19 AS LOTA19,
	       A.LOTA20 AS LOTA20,
	       A.AWMSNO AS AWMSNO,
	       A.SMANDT AS SMANDT,
	       A.SEBELN AS SEBELN,
	       A.SEBELP AS SEBELP,
	       A.SVBELN AS SVBELN,
	       A.SMBLNR AS SMBLNR,
	       A.SMJAHR AS SMJAHR,
	       A.SZEILE AS SZEILE,
	       A.SZMIPNO AS SZMIPNO,
	       A.SPOSNR AS SPOSNR,
	       A.STKNUM AS STKNUM,
	       A.STPNUM AS STPNUM,
	       A.SLGORT AS SLGORT,
	       A.SWERKS AS SWERKS,
	       A.STDLNR AS STDLNR,
	       A.STRAID AS STRAID,
	       A.SSORNU AS SSORNU,
	       A.SSORIT AS SSORIT,
	       A.SXBLNR AS SXBLNR,
	       A.LOTA01 AS PTLT01,
	       A.LOTA02 AS PTLT02,
	       A.LOTA03 AS PTLT03,
	       A.LOTA04 AS PTLT04,
	       A.LOTA05 AS PTLT05,
	       A.LOTA06 AS PTLT06,
	       A.LOTA07 AS PTLT07,
	       A.LOTA08 AS PTLT08,
	       A.LOTA09 AS PTLT09,
	       A.LOTA10 AS PTLT10,
	       A.LOTA11 AS PTLT11,
	       A.LOTA12 AS PTLT12,
	       A.LOTA13 AS PTLT13,
	       A.LOTA14 AS PTLT14,
	       A.LOTA15 AS PTLT15,
	       A.LOTA16 AS PTLT16,
	       A.LOTA17 AS PTLT17,
	       A.LOTA18 AS PTLT18,
	       A.LOTA19 AS PTLT19,
	       A.LOTA20 AS PTLT20,
	       E.PASTKY AS PASTKY,
	       A.SZMBLNO AS SZMBLNO,
	       A.SDATBG AS SDATBG,
	       '' AS TASKIT,
	       '' AS TASKKY
	 FROM STKKY A, AREMA D, SKUWC E
	 WHERE A.WAREKY = D.WAREKY
	   AND A.AREAKY = D.AREAKY
	   AND A.OWNRKY = E.OWNRKY
	   AND A.SKUKEY = E.SKUKEY
	   AND A.WAREKY = E.WAREKY
	   AND A.QTSIWH - A.QTSPMO - A.QTSBLK > 0
	   AND A.AREAKY NOT IN ('SHP','SYS')
	   AND A.LOCAKY NOT IN ('SYSSHP')
<!-- 	   AND A.LOTA06 IN ('00','10') -->
	   AND A.WAREKY = #WAREKY#
		<isNotEmpty property="ZONE">
			AND A.ZONEKY = #ZONE#
		  </isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty> 
	ORDER BY A.RECVKY, A.SKUKEY DESC
	</select>
	
	<select id="TASDH_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.WAREKY AS WAREKY,
		       A.TASOTY AS TASOTY,
		       A.DOCDAT AS DOCDAT,
		       A.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = A.DOCCAT) AS DOCCATNM,
		       A.DRELIN AS DRELIN,
		       A.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = A.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = A.TASOTY) AS ADJDSC,
		       A.QTTAOR AS QTTAOR,
		       A.QTCOMP AS QTCOMP,
		       A.TSPKEY AS TSPKEY,
		       A.DOORKY AS DOORKY,
		       DECODE(A.WARETG, ' ', A.WAREKY, A.WARETG) AS WARETG,
		       A.PTNRKY AS PTNRKY,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = A.CREUSR) AS CUSRNM,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = A.LMOUSR) AS LUSRNM,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       A.KEEPTS AS KEEPTS,
		       MAX(B.RECVKY) AS RECVKY,
		       MAX(B.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		
		       MAX(B.SEBELN) AS SEBELN,
		       MAX(B.SZMBLNO) AS SZMBLNO,
		       MAX(B.SZMIPNO) AS SZMIPNO,
		       MAX(B.STRAID) AS STRAID,
		       MAX(B.SVBELN) AS SVBELN,
		       MAX(B.STKNUM) AS STKNUM,
		       MAX(B.STDLNR) AS STDLNR,
		       MAX(B.SSORNU) AS SSORNU,
		       MAX(B.SMBLNR) AS SMBLNR,
		       MAX(B.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(B.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(B.AREAKY) AS AREAKY,
		       B.LOCATG AS LOCAAC,
               B.TRNUTG AS TRNUAC
		  FROM TASDH A
		       INNER JOIN TASDI B
			       ON A.TASKKY = B.TASKKY
		       LEFT OUTER JOIN SHPDI
			       ON SHPDI.SHPOKY = B.SHPOKY 
			       AND SHPDI.SHPOIT = B.SHPOIT
		       LEFT OUTER JOIN SHPDH 
			       ON SHPDH.SHPOKY = B.SHPOKY
		       LEFT OUTER JOIN DOCTM
			       ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
			       ON SHPDH.STATDO = CMCDV.CMCDVL 
			       AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
			       ON SHPDH.DPTNKY = BZPTN.PTNRKY
			       AND BZPTN.PTNRTY = 'CT'
			      <!--  AND BZPTN.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = A.WAREKY)  -->
		 WHERE A.WAREKY = #SES_WAREKY#
		  <isNotEmpty property="OPT">
			AND A.QTTAOR > 0
		 </isNotEmpty>
		 <isNotEmpty property="AREA">
		   AND B.AREAKY = #AREA#
		 </isNotEmpty>
		 <isNotEmpty property="ZONE">
			AND B.SZMIPNO = #ZONE#
		 </isNotEmpty>
		 <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		 </isNotEmpty>
		 GROUP BY A.TASKKY, A.WAREKY, A.TASOTY, A.DOCDAT, A.DOCCAT,
			  A.DRELIN, A.STATDO, A.QTTAOR, A.QTCOMP, A.TSPKEY,
			  A.DOORKY, A.PTNRKY, A.CREDAT, A.CRETIM, A.CREUSR, A.LMODAT,
			  A.LMOTIM, A.LMOUSR, A.INDBZL, A.INDARC, A.UPDCHK,
			  A.KEEPTS, A.WARETG, B.LOCATG, B.TRNUTG
		 ORDER BY A.DOCDAT DESC
	</select>
	
	<select id="TASDI_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRIM(#RNUM#)||B.TASKIT AS ROWSEQUENCE,
		       (CASE
		          WHEN D.ROWCK IS NULL THEN ' '
		          ELSE D.ROWCK END) AS ROWCK,
		       A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       D.RSNCOD AS RSNCOD,
		       D.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		<isEmpty property="QTY_COPY">
		       B.QTTAOR AS QTCOMP,
		</isEmpty>
		<isEqual property="QTY_COPY" compareValue="N">
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTCOMP
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN TO_NUMBER(D.QTCOMP) 
		          ELSE TO_NUMBER(B.QTCOMP)  END) AS QTCOMP,
		</isEqual>
		<isEqual property="QTY_COPY" compareValue="Y">
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN TO_NUMBER(D.QTCOMP) 
		          ELSE TO_NUMBER(D.QTCOMP)  END) AS QTCOMP,
		</isEqual>
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       B.LOCATG AS LOCAAC,
		       B.SECTTG AS SECTAC,
		       B.PAIDTG AS PAIDAC,
		       B.TRNUTG AS TRNUAC,
		       B.TTRUTY AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = B.LOTA02) AS LOTA02NM,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (
		       <isEqual property="QTY_COPY" compareValue="N">
					SELECT '' AS ROWSEQ
						, '' AS ROWCK
						, '' AS TASKKY
						, '' AS TASKIT
						, '' AS QTCOMP
						, '' AS LOCAAC
						, '' AS SECTAC
						, '' AS PAIDAC
						, '' AS TRNUAC
						, '' AS RSNCOD
						, '' AS TASRSN
						, '' AS ATRUTY
					FROM DUAL
				</isEqual>
				<isEqual property="QTY_COPY" compareValue="Y">
					SELECT '' AS ROWSEQ
						, '' AS ROWCK
						, '' AS TASKKY
						, '' AS TASKIT
						, '' AS QTCOMP
						, '' AS LOCAAC
						, '' AS SECTAC
						, '' AS PAIDAC
						, '' AS TRNUAC
						, '' AS RSNCOD
						, '' AS TASRSN
						, '' AS ATRUTY
					FROM DUAL
				</isEqual>
		       ) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		   AND A.TASKKY = #TASKKY#
		
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="PT01STOCKSUB_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT ROW_NUMBER() OVER(ORDER BY B.TASKIT) AS NUM,
		       '0' AS USED,
		       A.WAREKY AS WAREKY,
		       B.QTTAOR AS AVAILABLEQTY,              
		       B.QTYUOM AS AVAILABLEQTYUOM,       
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.STATIT AS STATIT,
		       B.QTTAOR AS QTTAOR,
		       B.QTTAOR AS QTCOMP,
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.QTTAOR ELSE B.QTCOMP END AS QTCOMP, -->
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       B.LOCATG AS LOCAAC,
               B.TRNUTG AS TRNUAC,
               B.SECTTG AS SECTAC,
               B.PAIDTG AS PAIDAC,
               B.TTRUTY AS ATRUTY,
               B.TMEAKY AS AMEAKY,
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.LOCATG ELSE B.LOCAAC END AS LOCAAC, -->
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.TRNUTG ELSE B.TRNUAC END AS TRNUAC, -->
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.SECTTG ELSE B.SECTAC END AS SECTAC, -->
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.PAIDTG ELSE B.PAIDAC END AS PAIDAC, -->
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.TTRUTY ELSE B.ATRUTY END AS ATRUTY, -->
<!-- 		       CASE WHEN B.ACTCDT = '00000000' OR B.ACTCDT IS NULL THEN B.TMEAKY ELSE B.AMEAKY END AS AMEAKY, -->
		       B.AUOMKY AS AUOMKY,
		       B.QTAPUM AS QTAPUM,
		       B.ADUOKY AS ADUOKY,
		       B.QTADUM AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.STRAID AS STRAID,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SMJAHR AS SMJAHR,
		       B.SZEILE AS SZEILE,
		       B.SXBLNR AS SXBLNR,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       B.PASTKY AS PASTKY,
		       B.ALSTKY AS ALSTKY,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK,
<!-- 		       NVL((SELECT MAX(STOKKY) FROM TASDR WHERE TASKKY = A.TASKKY AND TASKIT = B.TASKIT  ), ' ') AS SRCSKY, -->
<!--   			   NVL((SELECT SUM(QTSTKC) FROM TASDR WHERE TASKKY = A.TASKKY AND TASKIT = B.TASKIT  ), 0) AS QTSTKC, -->
<!-- 			   NVL((SELECT SUM(QTSTKM) FROM TASDR WHERE TASKKY = A.TASKKY AND TASKIT = B.TASKIT  ), 0) AS QTSTKM, -->
<!-- 			   NVL((SELECT SUM(QTSPMO) FROM STKKY WHERE STOKKY IN (SELECT STOKKY FROM TASDR WHERE TASKKY = A.TASKKY AND TASKIT = B.TASKIT) ), 0) AS QTSPMO -->
			   NVL( (SELECT MIN(SRCSKY) FROM STKKY WHERE STOKKY IN (SELECT STOKKY FROM TASDR 
								                                      WHERE TASKKY = A.TASKKY 
								                                      AND TASKIT = B.TASKIT 
								                                      AND ROWNUM =1) ), ' ') AS SRCSKY,
  			   B.QTTAOR AS QTSTKC,
			   B.QTTAOR AS QTSTKM,
			   B.QTTAOR AS QTSPMO
		FROM   TASDH A,
		       TASDI B
		WHERE  A.TASKKY = B.TASKKY
		  AND  A.TASKKY = #TASKKY#
<!-- 		  <isNotEmpty property="TASKIT"> -->
<!-- 			AND B.TASKIT IN ( $TASKIT$ ) -->
<!-- 		  </isNotEmpty> -->
	</select>
	
	<select id="STKKYPUTFIND_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.TASKIT AS TASKIT,
		       A.TASKIR AS TASKIR,
		       A.STOKKY AS STOKKY,
		       A.QTSTKM AS QTSTKM,
		       A.QTSTKC AS QTSTKC,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       B.STOKKY AS STOKKY,
		       B.QTSIWH AS QTSIWH,
		       B.QTSALO AS QTSALO,
		       B.QTSPMO AS QTSPMO,
		       B.QTSPMI AS QTSPMI,
		       B.QTSBLK AS QTSBLK,
		       B.SRCSKY AS SRCSKY
		FROM   TASDR A,
		       STKKY B
		WHERE  A.STOKKY = B.STOKKY
		AND    A.TASKKY = #TASKKY#
		AND    A.TASKIT = #TASKIT#
		ORDER BY A.TASKIR
	</select>
	
	<select id="STKKYPUTFIND_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.TASKIT AS TASKIT,
		       A.TASKIR AS TASKIR,
		       A.STOKKY AS STOKKY,
		       A.QTSTKM AS QTSTKM,
		       A.QTSTKC AS QTSTKC,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       B.STOKKY AS STOKKY,
		       B.QTSIWH AS QTSIWH,
		       B.QTSALO AS QTSALO,
		       B.QTSPMO AS QTSPMO,
		       B.QTSPMI AS QTSPMI,
		       B.QTSBLK AS QTSBLK,
		       B.SRCSKY AS SRCSKY
		FROM   TASDR A,
		       STKKY B
		WHERE  A.STOKKY = B.STOKKY
		AND    A.TASKKY = #TASKKY#
		AND    A.TASKIT = #TASKIT#
		ORDER BY A.TASKIR
	</select>
	
	<select id="PT01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       (SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY AND ROWNUM = 1) AS WAREKYNM,
		       TASDH.TASOTY AS TASOTY,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS TASOTYNM,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.WARETG) AS WARETGNM,
		       ' ' AS PTNRKYNM,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.PTNRNM AS PTNRNM,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.DOCTXT AS DOCTXT,
		       TASDH.USRID1 AS USRID1,
			   TASDH.UNAME1 AS UNAME1,
			   TASDH.DEPTID1 AS DEPTID1,
			   TASDH.DNAME1 AS DNAME1,
			   TASDH.USRID2 AS USRID2,
			   TASDH.UNAME2 AS UNAME2,
			   TASDH.DEPTID2 AS DEPTID2,
			   TASDH.DNAME2 AS DNAME2,
			   TASDH.USRID3 AS USRID3,
			   TASDH.UNAME3 AS UNAME3,
			   TASDH.DEPTID3 AS DEPTID3,
			   TASDH.DNAME3 AS DNAME3,
			   TASDH.USRID4 AS USRID4,
			   TASDH.UNAME4 AS UNAME4,
			   TASDH.DEPTID4 AS DEPTID4,
			   TASDH.DNAME4 AS DNAME4,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY,
		       NVL((SELECT X.SHORTX FROM AREMA X WHERE X.WAREKY = TASDH.WAREKY AND X.AREAKY = TASDI.AREAKY), ' ') AS AREAKYNM,
		       ' ' AS AREATG,
		       ' ' AS AREATGNM
		  FROM TASDH
		       INNER JOIN TASDI
			       ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
			       ON SHPDI.SHPOKY = TASDI.SHPOKY 
			       AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
			       ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
			       ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
			       ON SHPDH.STATDO = CMCDV.CMCDVL 
			       AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
			       ON SHPDH.DPTNKY = BZPTN.PTNRKY
			       AND BZPTN.PTNRTY = 'CT'
			       AND BZPTN.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = TASDH.WAREKY) 
		 WHERE TASDH.TASKKY = #TASKKY#
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
			  TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
			  TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
			  TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
			  TASDH.KEEPTS, TASDH.WARETG, TASDH.DOCTXT, TASDH.USRID1, TASDH.UNAME1, TASDH.DEPTID1, TASDH.DNAME1,
			  TASDH.USRID2, TASDH.UNAME2, TASDH.DEPTID2, TASDH.DNAME2, TASDH.USRID3, TASDH.UNAME3, TASDH.DEPTID3,
			  TASDH.DNAME3, TASDH.USRID4, TASDH.UNAME4, TASDH.DEPTID4, TASDH.DNAME4, TASDH.PTNRNM, TASDI.AREAKY
		 ORDER BY TASDH.TASKKY
	</select>
	
	<select id="SHPDHDRELIN_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT DRELIN
		FROM SHPDH
		WHERE SHPOKY = NVL((SELECT SHPOKY FROM TASDI WHERE TASKKY = #TASKKY# AND ROWNUM = 1),' ')
	</select>
	
	<select id="PT01SUB_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRIM(ROWNUM)||B.TASKIT AS ROWSEQUENCE,
		       (CASE
		          WHEN D.ROWCK IS NULL THEN ' '
		          ELSE D.ROWCK END) AS ROWCK,
		      (CASE WHEN A.TASOTY = '320' THEN 'V'
			   		WHEN A.TASOTY = '391' THEN 'V'
			   		WHEN A.TASOTY = '392' THEN 'V'
			   		ELSE ' ' END) AS CONFIRM,
			   (SELECT DISTINCT STOKKY FROM STKKY WHERE TASKKY = B.TASKKY AND TASKIT = B.TASKIT AND ROWNUM = 1) AS STOKKY,
		       A.WAREKY AS WAREKY,
		       ' ' AS AREATG,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTCOMP
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN D.QTCOMP = '' THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN TO_NUMBER(D.QTCOMP) 
		          ELSE TO_NUMBER(D.QTCOMP)  END) AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.QTYUOM AS AVAILABLEQTY,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.LOCASR AS LOCAKY,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = B.LOTA02) AS LOTA02NM,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK,
		       B.PASTKY AS PASTKY,
		       B.ALSTKY AS ALSTKY
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (
		     		SELECT '' AS ROWSEQ
						, '' AS ROWCK
						, '' AS TASKKY
						, '' AS TASKIT
						, '' AS QTCOMP
						, '' AS LOCAAC
						, '' AS SECTAC
						, '' AS PAIDAC
						, '' AS TRNUAC
						, '' AS RSNCOD
						, '' AS TASRSN
						, '' AS ATRUTY
					FROM DUAL
			   ) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		   AND A.TASKKY = #TASKKY#
		
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="TASDI_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT A.*,
		       B.LOCAKY,
		       B.AUTLOC,
		       C.SKUKEY AS SKUWC_SKUKEY,
		       D.PASTKY AS PASTH_PASTKY
		  FROM ( $VALIDATION_SQL$ ) A
		       LEFT OUTER JOIN LOCMA B
		               ON B.WAREKY = A.WAREKY
		              AND B.LOCAKY = A.LOCATG
		       LEFT OUTER JOIN SKUWC C
		               ON C.OWNRKY = A.OWNRKY
		              AND C.SKUKEY = A.SKUKEY
		              AND C.WAREKY = A.WAREKY
		       LEFT OUTER JOIN PASTH D
		               ON D.WAREKY = A.WAREKY
		              AND D.PASTKY = A.PASTKY
	</select>
	
	<select id="TASDI_STOCK_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT * 
		FROM (
	    SELECT CASE WHEN  NOT EXISTS ( SELECT SUM(QTSIWH-QTSPMO-QTSBLK) 
	    							   FROM STKKY 
	    							   WHERE WAREKY = STD.WAREKY 
	    							   AND LOTNUM = STD.LOTNUM 
	    							   AND LOCAKY = STD.LOCASR   
	    							   AND TRNUID =  STD.TRNUSR
	    							   AND STOKKY LIKE STD.STOKKY      <!--   적치 BY Record:Stock key, By Sum:% -->
	                                   HAVING NVL(SUM(QTSIWH-QTSPMO-QTSBLK),0) >= STD.QTTAOR )
	                THEN 'IN_M0131†' || STD.LOTNUM || '/' || STD.LOCASR|| '/' || STD.TRNUSR || '/' || TO_CHAR(STD.QTTAOR)|| '/' 
	                				 || ( SELECT TO_CHAR(NVL(SUM(QTSIWH-QTSPMO-QTSBLK) ,0))
			    						  FROM STKKY 
			    						  WHERE WAREKY = STD.WAREKY 
			    						  AND LOTNUM = STD.LOTNUM 
			    						  AND LOCAKY = STD.LOCASR   
			    						  AND TRNUID =  STD.TRNUSR
			    						  AND STOKKY LIKE STD.STOKKY  )
	                ELSE 'OK'
			        END AS RESULTMSG                                      
	     FROM ( $APPEND_QUERY$ ) STD
		)
		 WHERE RESULTMSG != 'OK'
		 AND ROWNUM = 1
	</select>
	
	
	<select id="PT01CONF_MASTER_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		 FROM (
		        SELECT CASE WHEN  NOT EXISTS ( SELECT '1' FROM LOCMA 
		        							   WHERE WAREKY = STD.WAREKY 
		        							   AND LOCAKY = STD.LOCAAC )
		                    THEN 'TASK_M0064†' || STD.TASKIT || '/' || STD.LOCAAC
		                    ELSE 'OK'
		                END AS RESULTMSG  
		        FROM ( $APPEND_QUERY$ ) STD
		      )
		 WHERE RESULTMSG != 'OK'
		 AND ROWNUM = 1
	</select>
	
	
	
	<insert id="TASDH_INSERT" parameterClass="Map">
		INSERT INTO TASDH(
					TASKKY,
					WAREKY,
					TASOTY,
					DOCDAT,
					DOCCAT,
					DRELIN,
					STATDO,
					QTTAOR,
					QTCOMP,
					TSPKEY,
					DOORKY,
					WARETG,
					PTNRKY,
					PTNRTY,
					PTNRNM,
					USRID1,
					UNAME1,
					DEPTID1,
					DNAME1,
					USRID2,
					UNAME2,
					DEPTID2,
					DNAME2,
					USRID3,
					UNAME3,
					DEPTID3,
					DNAME3,
					USRID4,
					UNAME4,
					DEPTID4,
					DNAME4,
					DOCTXT,
					CREDAT,
					CRETIM,
					CREUSR,
					LMODAT,
					LMOTIM,
					LMOUSR,
					INDBZL,
					INDARC,
					UPDCHK,
					KEEPTS
				)VALUES(
					#TASKKY#,
					NVL(#WAREKY#, ' '),
					NVL(#TASOTY#, ' '),
					NVL(REPLACE(#DOCDAT#,'-',''), TO_CHAR(SYSDATE, 'YYYYMMDD')),
					NVL(#DOCCAT#, '300'),
					' ',
					NVL(#STATDO#, ' '),
					TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
					TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
					NVL(#TSPKEY#, ' '),
					NVL(#AREATG#, ' '),
					NVL(#WARETG#, ' '),
					NVL(#PTNRKY#, ' '),
					NVL(#PTNRTY#, ' '),
					NVL(#PTNRNM#, ' '),
					NVL(#USRID1#, ' '),
					NVL(#UNAME1#, ' '),
					NVL(#DEPTID1#, ' '),
					NVL(#DNAME1#, ' '),
					NVL(#USRID2#, ' '),
					NVL(#UNAME2#, ' '),
					NVL(#DEPTID2#, ' '),
					NVL(#DNAME2#, ' '),
					NVL(#USRID3#, ' '),
					NVL(#UNAME3#, ' '),
					NVL(#DEPTID3#, ' '),
					NVL(#DNAME3#, ' '),
					NVL(#USRID4#, ' '),
					NVL(#UNAME4#, ' '),
					NVL(#DEPTID4#, ' '),
					NVL(#DNAME4#, ' '),
					NVL(#DOCTXT#, ' '),
					TO_CHAR(SYSDATE, 'YYYYMMDD'),
					TO_CHAR(SYSDATE, 'HH24MISS'),
					#SES_USER_ID#,
					TO_CHAR(SYSDATE, 'YYYYMMDD'),
					TO_CHAR(SYSDATE, 'HH24MISS'),
					#SES_USER_ID#,
					NVL(#INDBZL#, ' '),
					NVL(#INDARC#, ' '),
					TO_NUMBER(NVL(TRIM(#UPDCHK#), 0)),
					NVL(#KEEPTS#, ' ')
				)
	</insert>
	
	<insert id="PT01_TASDI_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				NVL(#TASKKY#, ' '),
				NVL(#TASKIT#, ' '),
				#TASKTY#,
				NVL(#RSNCOD#, ' '),
				#STATIT#,
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
				NVL(#OWNRKY#, ' '),
				NVL(#SKUKEY#, ' '),
				NVL(#LOTNUM#, ' '),
				CASE WHEN #STATIT# = 'NEW' THEN ' ' ELSE TO_CHAR(SYSDATE,'YYYYMMDD') END,
				CASE WHEN #STATIT# = 'NEW' THEN ' ' ELSE TO_CHAR(SYSDATE,'HH24MISS') END,
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				NVL(#TKFLKY#, ' '),
				NVL(#STEPNO#, ' '),
				NVL(#LSTTFL#, ' '),
				
				NVL(#LOCASR#, ' '),
				NVL(#SECTSR#, ' '),
				NVL(#PAIDSR#, ' '),
				NVL(#TRNUSR#, ' '),
				NVL(#STRUTY#, ' '),
				NVL(#SMEAKY#, ' '),
				NVL(#SUOMKY#, ' '),
				NVL(#QTSPUM#, 1),
				NVL(#SDUOKY#, ' '),
				NVL(#QTSDUM#, 1),
				
				NVL(#LOCATG#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUTG#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#TMEAKY#, ' '),
				NVL(#TUOMKY#, ' '),
				NVL(#QTTPUM#, 1),
				NVL(#TDUOKY#, ' '),
				NVL(#QTTDUM#, 1),
				
				NVL(#LOCAAC#, ' '),
				NVL(#SECTAC#, ' '),
				NVL(#PAIDAC#, ' '),
				NVL(#TRNUAC#, ' '),
				NVL(#ATRUTY#, ' '),
				NVL(#AMEAKY#, ' '),
				NVL(#AUOMKY#, ' '),
				NVL(#QTAPUM#, 1),
				NVL(#ADUOKY#, ' '),
				NVL(#QTADUM#, 1),
				
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#PURCKY#, ' '),
				NVL(#PURCIT#, ' '),
				NVL(#ASNDKY#, ' '),
				NVL(#ASNDIT#, ' '),
				
				NVL(#RECVKY#, ' '),
				NVL(#RECVIT#, ' '),
				NVL(#SHPOKY#, ' '),
				NVL(#SHPOIT#, ' '),
				
				NVL(#GRPOKY#, ' '),
				NVL(#GRPOIT#, ' '),
				
				NVL(#SADJKY#, ' '),
				NVL(#SADJIT#, ' '),
				NVL(#SDIFKY#, ' '),
				NVL(#SDIFIT#, ' '),
				NVL(#PHYIKY#, ' '),
				NVL(#PHYIIT#, ' '),
<!-- 				NVL(#DROPID#, ' '), -->
				'V',
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '), 
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(TRIM(#GRSWGT#), 0)),
				TO_NUMBER(NVL(TRIM(#NETWGT#), 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(TRIM(#LENGTH#), 0)),
				TO_NUMBER(NVL(TRIM(#WIDTHW#), 0)),
				TO_NUMBER(NVL(TRIM(#HEIGHT#), 0)),
				TO_NUMBER(NVL(TRIM(#CUBICM#), 0)),
				TO_NUMBER(NVL(TRIM(#CAPACT#), 0)),
				NVL(#WORKID#, ' '),
				NVL(#WORKNM#, ' '),
				NVL(#HHTTID#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				NVL(#LOTA16#, ' '),
				NVL(#LOTA17#, ' '),
				NVL(#LOTA18#, ' '),
				NVL(#LOTA19#, ' '),
				NVL(#LOTA20#, ' '),
				NVL(#AWMSNO#, ' '),
				NVL(#AWMSTS#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#DOORKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				NVL(#LOTA16#, ' '), 
				NVL(#LOTA17#, ' '), 
				NVL(#LOTA18#, ' '), 
				NVL(#LOTA19#, ' '), 
				NVL(#LOTA20#, ' '), 
				NVL(#PASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#SBKTXT#, ' '),
				NVL(#TASRSN#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			)
	</insert>
	
	<insert id="TASDI_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				NVL(#TASKKY#, ' '),
				NVL(#TASKIT#, ' '),
				#TASKTY#,
				NVL(#RSNCOD#, ' '),
				#STATIT#,
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
				NVL(#OWNRKY#, ' '),
				NVL(#SKUKEY#, ' '),
				NVL(#LOTNUM#, ' '),
				CASE WHEN #STATIT# = 'NEW' THEN ' ' ELSE TO_CHAR(SYSDATE,'YYYYMMDD') END,
				CASE WHEN #STATIT# = 'NEW' THEN ' ' ELSE TO_CHAR(SYSDATE,'HH24MISS') END,
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				NVL(#TKFLKY#, ' '),
				NVL(#STEPNO#, ' '),
				NVL(#LSTTFL#, ' '),
				
				NVL(#LOCASR#, ' '),
				NVL(#SECTSR#, ' '),
				NVL(#PAIDSR#, ' '),
				NVL(#TRNUID#, ' '),
				NVL(#STRUTY#, ' '),
				NVL(#MEASKY#, ' '),
				NVL(#UOMKEY#, ' '),
				1,
				NVL(#UOMKEY#, ' '),
				1,
				
				NVL(#LOCATG#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUID#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#MEASKY#, ' '),
				NVL(#UOMKEY#, ' '),
				1,
				NVL(#UOMKEY#, ' '),
				1,
				
				NVL(#LOCAAC#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUID#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#MEASKY#, ' '),
				NVL(#UOMKEY#, ' '),
				1,
				NVL(#UOMKEY#, ' '),
				1,
				
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#PURCKY#, ' '),
				NVL(#PURCIT#, ' '),
				NVL(#ASNDKY#, ' '),
				NVL(#ASNDIT#, ' '),
				
				NVL(#RECVKY#, ' '),
				NVL(#RECVIT#, ' '),
				NVL(#SHPOKY#, ' '),
				NVL(#SHPOIT#, ' '),
				
				NVL(#GRPOKY#, ' '),
				NVL(#GRPOIT#, ' '),
				
				NVL(#SADJKY#, ' '),
				NVL(#SADJIT#, ' '),
				NVL(#SDIFKY#, ' '),
				NVL(#SDIFIT#, ' '),
				NVL(#PHYIKY#, ' '),
				NVL(#PHYIIT#, ' '),
				NVL(#DROPID#, ' '),
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '), 
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(TRIM(#GRSWGT#), 0)),
				TO_NUMBER(NVL(TRIM(#NETWGT#), 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(TRIM(#LENGTH#), 0)),
				TO_NUMBER(NVL(TRIM(#WIDTHW#), 0)),
				TO_NUMBER(NVL(TRIM(#HEIGHT#), 0)),
				TO_NUMBER(NVL(TRIM(#CUBICM#), 0)),
				TO_NUMBER(NVL(TRIM(#CAPACT#), 0)),
				NVL(#WORKID#, ' '),
				NVL(#COSTCT#, ' '),
				NVL(#HHTTID#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				NVL(#LOTA16#, ' '),
				NVL(#LOTA17#, ' '),
				NVL(#LOTA18#, ' '),
				NVL(#LOTA19#, ' '),
				NVL(#LOTA20#, ' '),
				NVL(#AWMSNO#, ' '),
				NVL(#AWMSTS#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#DOORKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				NVL(#LOTA16#, ' '), 
				NVL(#LOTA17#, ' '), 
				NVL(#LOTA18#, ' '), 
				NVL(#LOTA19#, ' '), 
				NVL(#LOTA20#, ' '), 
				NVL(#PASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#SBKTXT#, ' '),
				NVL(#TASRSN#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			)
	</insert>
	
	<insert id="TASDR_INSERT" parameterClass="Map">
		INSERT INTO TASDR (      
		      TASKKY
		    , TASKIT
		    , TASKIR
		    , STOKKY
		    , QTSTKM
		    , QTSTKC
		    , CREDAT
		    , CRETIM
		    , CREUSR
		    , LMODAT
		    , LMOTIM
		    , LMOUSR    
		) VALUES (
		      #TASKKY#
		    , #TASKIT#
		    , '0001'
		    , #STOKKY#
		    , TO_NUMBER(NVL(TRIM(#QTTAOR#), 0))
		    , TO_NUMBER(NVL(TRIM(#QTSTKC#), 0))
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#   
		)
	</insert>
	
	<select id="DBMSPROC_SZP_INSTASDR_MAP" parameterClass="Map" resultClass="DataMap">
		{ call SZP_INSTASDR(#TASKKY#, #TASKIT#, #STOKKY#, #QTTAOR#, #QTCOMP#) }
	</select>
	
	<insert id="TASDIEND_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				NVL(#TASKKY#, ' '),
				NVL(#TASKIT#, ' '),
				NVL(#TASKTY#, ' '),
				NVL(#RSNCOD#, ' '),
				NVL(#STATIT#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
				NVL(#OWNRKY#, ' '),
				NVL(#SKUKEY#, ' '),
				NVL(#LOTNUM#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				TO_NUMBER(NVL(TRIM(#QTYUOM#), 0)),
				NVL(#TKFLKY#, ' '),
				NVL(#STEPNO#, ' '),
				NVL(#LSTTFL#, ' '),
				NVL(#LOCASR#, ' '),
				NVL(#SECTSR#, ' '),
				NVL(#PAIDSR#, ' '),
				NVL(#TRNUSR#, ' '),
				NVL(#STRUTY#, ' '),
				NVL(#SMEAKY#, ' '),
				NVL(#SUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSPUM#), 0)),
				NVL(#SDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSDUM#), 0)),
				NVL(#LOCATG#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUTG#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#TMEAKY#, ' '),
				NVL(#TUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTPUM#), 0)),
				NVL(#TDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTDUM#), 0)),
				NVL(#LOCAAC#, ' '),
				NVL(#SECTAC#, ' '),
				NVL(#PAIDAC#, ' '),
				NVL(#TRNUAC#, ' '),
				NVL(#ATRUTY#, ' '),
				NVL(#AMEAKY#, ' '),
				NVL(#AUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTAPUM#), 0)),
				NVL(#ADUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTADUM#), 0)),
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#PURCKY#, ' '),
				NVL(#PURCIT#, ' '),
				NVL(#ASNDKY#, ' '),
				NVL(#ASNDIT#, ' '),
				NVL(#RECVKY#, ' '),
				NVL(#RECVIT#, ' '),
				NVL(#SHPOKY#, ' '),
				NVL(#SHPOIT#, ' '),
				NVL(#GRPOKY#, ' '),
				NVL(#GRPOIT#, ' '),
				NVL(#SADJKY#, ' '),
				NVL(#SADJIT#, ' '),
				NVL(#SDIFKY#, ' '),
				NVL(#SDIFIT#, ' '),
				NVL(#PHYIKY#, ' '),
				NVL(#PHYIIT#, ' '),
				NVL(#DROPID#, ' '),
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '),
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(TRIM(#GRSWGT#), 0)),
				TO_NUMBER(NVL(TRIM(#NETWGT#), 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(TRIM(#LENGTH#), 0)),
				TO_NUMBER(NVL(TRIM(#WIDTHW#), 0)),
				TO_NUMBER(NVL(TRIM(#HEIGHT#), 0)),
				TO_NUMBER(NVL(TRIM(#CUBICM#), 0)),
				TO_NUMBER(NVL(TRIM(#CAPACT#), 0)),
				NVL(#WORKID#, ' '),
				NVL(#WORKNM#, ' '),
				NVL(#HHTTID#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				TO_NUMBER(NVL(TRIM(#LOTA16#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA17#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA18#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA19#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA20#), 0)),
				NVL(#AWMSNO#, ' '),
				NVL(#AWMSTS#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#DOORKY#, ' '),
				NVL(#PTLT01#, ' '),
				NVL(#PTLT02#, ' '),
				NVL(#PTLT03#, ' '),
				NVL(#PTLT04#, ' '),
				NVL(#PTLT05#, ' '),
				NVL(#PTLT06#, ' '),
				NVL(#PTLT07#, ' '),
				NVL(#PTLT08#, ' '),
				NVL(#PTLT09#, ' '),
				NVL(#PTLT10#, ' '),
				NVL(#PTLT11#, ' '),
				NVL(#PTLT12#, ' '),
				NVL(#PTLT13#, ' '),
				NVL(#PTLT14#, ' '),
				NVL(#PTLT15#, ' '),
				TO_NUMBER(NVL(TRIM(#PTLT16#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT17#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT18#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT19#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT20#), 0)),
				NVL(#PASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#SBKTXT#, ' '),
				NVL(#TASRSN#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			)
	</insert>
	
	<insert id="TASDREND_INSERT" parameterClass="Map">
		INSERT INTO TASDR (      
		      TASKKY
		    , TASKIT
		    , TASKIR
		    , STOKKY
		    , QTSTKM
		    , QTSTKC
		    , CREDAT
		    , CRETIM
		    , CREUSR
		    , LMODAT
		    , LMOTIM
		    , LMOUSR    
		) VALUES (
		      #TASKKY#
		    , #TASKIT#
		    , NVL(#TASKIR#,'0001')
		    , #STOKKY#
		    , TO_NUMBER(#QTSTKM#)
		    , TO_NUMBER(#QTSTKC#)
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#   
		)
	</insert>
	
	<update id="TASDIUPD_UPDATE" parameterClass="Map">
		UPDATE TASDI
			SET TRNUAC  =  #TRNUTG#,
				ATRUTY  =  #TTRUTY#,
				AMEAKY  =  #TMEAKY#,
				AUOMKY  =  #TUOMKY#,
				QTAPUM  =  #QTTPUM#,
				ADUOKY  =  #TDUOKY#,
				QTADUM  =  #QTTDUM#,
		       	LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               	LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
		AND		TASKIT = #RECVIT#
	</update>
	
	<update id="TASDI_UPDATE" parameterClass="Map">
		UPDATE TASDI
			SET QTCOMP  =  #QTCOMP#,
				TRNUTG  =  #TRNUTG#,
				LOCAAC  =  #LOCAAC#,
				PTLT01  =  #PTLT01#,
				PTLT11  =  #PTLT11#,
		       	LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               	LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
		AND		TASKIT = #RECVIT#
	</update>
	
	<update id="TASDH_UPDATE" parameterClass="Map">
		UPDATE TASDH
			SET DOCDAT  =  #DOCDAT#,
		       	LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               	LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
	</update>
	
	<update id="TASDHCOMP_UPDATE" parameterClass="Map">
		UPDATE TASDH
			SET DOCDAT  =  #DOCDAT#,
				QTCOMP  =  #QTCOMP#,
		       	LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
               	LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
               	LMOUSR = #SES_USER_ID#
		WHERE  	TASKKY = #TASKKY#
	</update>
	
	<!-- TO08 : 조회/리스트 발행 -->
	
	<select id="TO08_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY  AS TASKKY,
		       TASDH.WAREKY  AS WAREKY,
		       WH.NAME01     AS WAREKYNM,
		       TASDH.TASOTY  AS TASOTY,
		       DT.SHORTX     AS TASOTYNM,
		       TASDH.DOCDAT  AS DOCDAT,
		       TASDH.DOCCAT  AS DOCCAT,
		       DC.SHORTX     AS DOCCATNM,
		       TASDH.DRELIN  AS DRELIN,
		       TASDH.STATDO  AS STATDO,
		       ST.CDESC1     AS STATDONM,
		       TASDH.QTTAOR  AS QTTAOR,
		       TASDH.QTCOMP  AS QTCOMP,
		       TASDH.TSPKEY  AS TSPKEY,
		       TASDH.DOORKY  AS DOORKY,
		       TASDH.WARETG  AS WARETG,
		       WT.NAME01     AS WARETGNM,
		       TASDH.PTNRKY  AS PTNRKY,
		       BZ.NAME01     AS PTNRKYNM,
		       TASDH.PTNRTY  AS PTNRTY,
		       TASDH.PTNRNM  AS PTNRNM,
		       TASDH.USRID1  AS USRID1,
		       TASDH.UNAME1  AS UNAME1,
		       TASDH.DEPTID1 AS DEPTID1,
		       TASDH.DNAME1  AS DNAME1,
		       TASDH.USRID2  AS USRID2,
		       TASDH.UNAME2  AS UNAME2,
		       TASDH.DEPTID2 AS DEPTID2,
		       TASDH.DNAME2  AS DNAME2,
		       TASDH.USRID3  AS USRID3,
		       TASDH.UNAME3  AS UNAME3,
		       TASDH.DEPTID3 AS DEPTID3,
		       TASDH.DNAME3  AS DNAME3,
		       TASDH.USRID4  AS USRID4,
		       TASDH.UNAME4  AS UNAME4,
		       TASDH.DEPTID4 AS DEPTID4,
		       TASDH.DNAME4  AS DNAME4,
		       TASDH.DOCTXT  AS DOCTXT,
		       TASDH.CREDAT  AS CREDAT,
		       TASDH.CRETIM  AS CRETIM,
		       TASDH.CREUSR  AS CREUSR,
		       CU.NMLAST     AS CUSRNM,
		       TASDH.LMODAT  AS LMODAT,
		       TASDH.LMOTIM  AS LMOTIM,
		       TASDH.LMOUSR  AS LMOUSR,
		       LU.NMLAST     AS LUSRNM,
		       NVL((SELECT COUNT(*) FROM TASDI WHERE TASDI.TASKKY = TASDH.TASKKY AND TASDI.STATIT = 'NEW'), 0)AS COMPLETECNT
		  FROM TASDH
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = TASDH.WAREKY
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = TASDH.WARETG
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = TASDH.TASOTY
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = TASDH.DOCCAT
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = TASDH.STATDO
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = TASDH.PTNRKY
		              AND BZ.PTNRTY IN ('VD','CT')
		       LEFT OUTER JOIN USRMA CU
		               ON CU.USERID = TASDH.CREUSR
		       LEFT OUTER JOIN USRMA LU
		               ON LU.USERID = TASDH.LMOUSR
		 WHERE TASDH.WAREKY = #SES_WAREKY# 
		   AND TASDH.QTTAOR > 0
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<!-- PT09 : 적치리스트 발행 -->
	<select id="PT09_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.WAREKY AS WAREKY,
		       A.TASOTY AS TASOTY,
		       A.DOCDAT AS DOCDAT,
		       A.DOCCAT AS DOCCAT,
		       B.OWNRKY AS OWNRKY,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = A.DOCCAT) AS DOCCATNM,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = A.TASOTY) AS TASSTX,
		       A.DRELIN AS DRELIN,
		       A.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = A.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = A.TASOTY) AS ADJDSC,
		       A.QTTAOR AS QTTAOR,
		       A.QTCOMP AS QTCOMP,
		       A.TSPKEY AS TSPKEY,
		       A.DOORKY AS DOORKY,
		       DECODE(A.WARETG, ' ', A.WAREKY, A.WARETG) AS WARETG,
		       A.PTNRKY AS PTNRKY,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = A.CREUSR) AS CUSRNM,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = A.LMOUSR) AS LUSRNM,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       A.KEEPTS AS KEEPTS,
		       MAX(B.RECVKY) AS RECVKY,
		       MAX(B.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       MAX(DOCTM.SHORTX) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		       MAX(B.SEBELN) AS SEBELN,
		       MAX(B.SZMBLNO) AS SZMBLNO,
		       MAX(B.SZMIPNO) AS SZMIPNO,
		       MAX(B.STRAID) AS STRAID,
		       MAX(B.SVBELN) AS SVBELN,
		       MAX(B.STKNUM) AS STKNUM,
		       MAX(B.STDLNR) AS STDLNR,
		       MAX(B.SSORNU) AS SSORNU,
		       MAX(B.SMBLNR) AS SMBLNR,
		       MAX(B.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(B.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(B.AREAKY) AS AREAKY,
		       ' ' AS DOCTXT,
		       ' ' AS AREATG
		  FROM TASDH A
		       INNER JOIN TASDI B
		               ON A.TASKKY = B.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = B.SHPOKY 
		               AND SHPDI.SHPOIT = B.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = B.SHPOKY
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.SHPMTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		 WHERE ((A.TASOTY = '310' OR A.TASOTY = '311'))
		 	AND A.QTTAOR > 0
		 	AND B.OWNRKY = #OWNRKY#
		 <isNotEmpty property="WAREKY">			
			AND A.WAREKY = #SES_WAREKY# 
		  </isNotEmpty>
		  <isNotEmpty property="AREA">
		   AND B.AREAKY = #AREA#
		</isNotEmpty>
		  <isNotEmpty property="ZONE">
		   AND B.SZMIPNO = #ZONE#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 GROUP BY A.TASKKY, A.WAREKY, A.TASOTY, A.DOCDAT, A.DOCCAT,
		          B.OWNRKY, A.DRELIN, A.STATDO, A.QTTAOR, A.QTCOMP, A.TSPKEY,
		          A.DOORKY, A.PTNRKY, A.CREDAT, A.CRETIM, A.CREUSR, A.LMODAT,
		          A.LMOTIM, A.LMOUSR, A.INDBZL, A.INDARC, A.UPDCHK,
		          A.KEEPTS, A.WARETG
		 ORDER BY A.TASKKY
	</select>
	
	<select id="PT09Sub_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
				TRIM('')||B.TASKIT AS ROWSEQUENCE,
       (CASE
          WHEN D.ROWCK IS NULL THEN ' '
          ELSE D.ROWCK END) AS ROWCK,
       A.WAREKY AS WAREKY,
       B.TASKKY AS TASKKY,
       B.TASKIT AS TASKIT,
       B.TASKTY AS TASKTY,
       CASE WHEN 'PT09' IN ('GP51','SO96','MV03') THEN B.RSNCOD
            ELSE D.RSNCOD END AS RSNCOD,
       CASE WHEN 'PT09' IN ('GP51','SO96','MV03') THEN B.TASRSN
            ELSE D.TASRSN END AS TASRSN,
       B.STATIT AS STATIT,
       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
       B.QTTAOR AS QTTAOR,

 
       (CASE
          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
          WHEN B.QTCOMP = D.QTCOMP THEN D.QTCOMP
          ELSE D.QTCOMP END) AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (  SELECT 0 AS ROWSEQ, 
		       			' ' AS ROWCK, 
						' ' AS TASKKY, 
						' ' AS TASKIT, 
						0 AS QTCOMP, 
						' ' AS LOCAAC, 
						' ' AS SECTAC,
						' ' AS PAIDAC,
						' ' AS TRNUAC,
						' ' AS RSNCOD,
						' ' AS TASRSN,
						' ' AS ATRUTY
						 FROM DUAL) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		<isNotEmpty property="TASKKY">
			AND A.TASKKY = #TASKKY#
		</isNotEmpty>
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="SEQPRTSEQ_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT SEQ_PRTSEQ.NEXTVAL AS PRTSEQ FROM DUAL
	</select>
	
	<insert id="PRTLGPUTA_INSERT" parameterClass="Map">
		INSERT
			INTO PRTLG
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
             , INDBZL, INDARC, UPDCHK)
			VALUES 
			(    #PRTSEQ#, 1, 'PUTA', #WAREKY#, #AREAKY#, ' ', ' ', #OWNRKY#, ' ', ' '
				,' ', #CREDAT#, ' ', ' ', NVL(#RQSHPD#,' '), ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', #SHPOKY#, ' ', ' ', ' ', #TASKKY#, ' ', ' ', ' ', ' '
                ,' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#,' '
                ,' ', 0 
			)
	</insert>
	
	<delete id="TASDIDEL_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		WHERE TASKKY = #TASKKY#
		AND   TASKIT = #TASKIT#
	</delete>
	
	<update id="TASDIDEL_UPDATE" parameterClass="Map">
		UPDATE	TASDI
		SET		DROPID = 'V'
		WHERE	TASKKY = #TASKKY#
		AND		TASKIT = #TASKIT#
	</update>
	
	<delete id="TASDH_DELETE" parameterClass="Map">
		DELETE FROM TASDH
		WHERE TASKKY = #TASKKY#
	</delete>
	
	<delete id="TASDI_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		WHERE TASKKY = #TASKKY#
		AND   ACTCDT in (' ', '00000000')
	</delete>
	
	
	
	<!-- 피킹 완료 : DL06 -->
	

	<select id="DL06HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY),' ') AS WARENM,
		       TASDH.TASOTY AS TASOTY,
		       NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY),' ') AS TASONM,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SHPDH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY,
		       MAX(TASDI.LOTA01) AS LOTA01,
		       MAX(TASDI.LOTA04) AS LOTA04,
		       ' ' AS BUNAME,
     		   ' ' AS BUPLANT,
               ' ' AS BUCHRG,  
               ' ' AS TOVCHRG
		  FROM TASDH
		       INNER JOIN TASDI
		               ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = TASDI.SHPOKY 
		               AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.DOCUTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		 WHERE TASDH.WAREKY = #WAREKY#
		   AND TASDI.STATIT = 'NEW'
		<isNotEmpty property="REFDAT1">
		   AND SHPDH.RQSHPD &gt;= #REFDAT1# AND SHPDH.RQSHPD &lt;= #REFDAT2#  
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
		          TASDH.KEEPTS, TASDH.WARETG, SHPDH.SHPMTY
		 ORDER BY TASDH.TASKKY
	</select>
		

	<select id="DL06_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
	           (SELECT S.QTSHPO - (SELECT NVL(SUM(T.QTTAOR) ,0)
		                         FROM TASDI T
		                         WHERE T.SHPOKY = B.SHPOKY
		                         AND   T.SHPOIT = B.SHPOIT
		                         AND   T.TASKKY != B.TASKKY)
	            FROM SHPDI S
	            WHERE S.SHPOKY = B.SHPOKY
	            AND   S.SHPOIT = B.SHPOIT) AS QTABLE,
		       B.QTTAOR AS QTTAOR,
		       B.QTTAOR AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.LOCATG
		          ELSE B.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.SECTTG
		          ELSE B.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.PAIDTG
		          ELSE B.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.TRNUTG
		          ELSE B.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN B.ACTCDT = '00000000' THEN B.TTRUTY
		          ELSE B.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND A.TASKKY = #TASKKY#
		   AND B.STATIT = 'NEW'
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	

	<select id="DL06STOCKCHECK_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		 FROM (
		        SELECT CASE WHEN  NOT EXISTS ( SELECT '1' FROM LOCMA 
												WHERE WAREKY =  STD.WAREKY  
												AND   LOCAKY =  STD.LOCASR
												     )
		                    THEN 'TASK_M0067†' || STD.TASKIT || '/' || STD.LOCASR 
		        			WHEN  NOT EXISTS ( SELECT '1' FROM STKKY 
												WHERE WAREKY =  STD.WAREKY  
												AND   LOTNUM =  STD.LOTNUM 
												AND   LOCAKY =  STD.LOCASR
												AND   TRNUID =  STD.TRNUSR
												AND ( (QTSIWH >0 AND QTSPMO = 0) OR  
												      (TASKKY = STD.TASKKY AND QTSPMO > 0) 
												     )
												HAVING  NVL(SUM(QTSIWH),0) >= STD.QTCOMP  )
		                    THEN 'TASK_M0068†' || STD.SKUKEY || '/' || STD.LOTNUM || '/' || STD.LOCASR || '/' || STD.TRNUSR || '/' 
		                    				   || TO_CHAR(STD.QTCOMP) || '/' || (SELECT  TO_CHAR(NVL(SUM(QTSIWH),0)) FROM STKKY 
																			  	 WHERE WAREKY =  STD.WAREKY  
																				 AND   LOTNUM =  STD.LOTNUM 
																				 AND   LOCAKY =  STD.LOCASR
																				 AND   TRNUID =  STD.TRNUSR
																				 AND ( (QTSIWH >0 AND QTSPMO = 0) OR  
																				       (TASKKY = STD.TASKKY  AND QTSPMO > 0) 
																				 	    ) )
		                    ELSE 'OK'
		                END AS RESULTMSG  
		        FROM  ( SELECT WAREKY, SKUKEY , LOTNUM, LOCASR, TRNUSR, SUM(QTCOMP) AS QTCOMP, MIN(TASKKY) AS TASKKY, MIN(TASKIT) AS TASKIT 
		        		FROM ( $APPEND_QUERY$ ) AQ 
		        		GROUP BY WAREKY,SKUKEY , LOTNUM, LOCASR, TRNUSR  ) STD 
		      )
		 WHERE RESULTMSG != 'OK'
		 AND ROWNUM = 1
	</select>
	

	<select id="DL06POP_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT 
		S.WAREKY AS WAREKY,
		S.OWNRKY AS OWNRKY,
		S.SKUKEY AS SKUKEY,
		S.DESC01 AS DESC01,
		S.DESC02 AS DESC02,
		S.AREAKY AS AREAKY,
		S.ZONEKY AS ZONEKY,
		S.LOCAKY AS LOCAKY,
		S.TRNUID AS TRNUID,
		S.LOTNUM AS LOTNUM,
		DECODE(SIGN(NVL(SUM(S.QTSIWH),0) - NVL(MAX(STD.QTSWRK),0)),-1,0,(NVL(SUM(S.QTSIWH),0) - NVL(MAX(STD.QTSWRK),0)))  AS QTSAVB,
		NVL(SUM(S.QTSIWH),0) AS QTSIWH,
        NVL(MAX(STD.QTSWRK),0) AS QTSWRK, 		
		S.UOMKEY AS UOMKEY,
        S.LOTA01 AS LOTA01,
        S.LOTA02 AS LOTA02,
        S.LOTA03 AS LOTA03,
        S.LOTA04 AS LOTA04,
        S.LOTA05 AS LOTA05,
        S.LOTA06 AS LOTA06,
        S.LOTA07 AS LOTA07,
        S.LOTA08 AS LOTA08,
        S.LOTA09 AS LOTA09,
        S.LOTA10 AS LOTA10,
        S.LOTA11 AS LOTA11,
        S.LOTA12 AS LOTA12,
        S.LOTA13 AS LOTA13,
        S.LOTA14 AS LOTA14,
        S.LOTA15 AS LOTA15,
        S.LOTA16 AS LOTA16,
        S.LOTA17 AS LOTA17,
        S.LOTA18 AS LOTA18,
        S.LOTA19 AS LOTA19,
        S.LOTA20 AS LOTA20
	FROM  STKKY S, LOCMA L ,( $APPEND_QUERY$ ) STD 
	WHERE S.WAREKY = #WAREKY#
	AND	  S.OWNRKY = #OWNRKY#
	AND   S.SKUKEY = #SKUKEY#
	AND   S.WAREKY = L.WAREKY 
	AND   S.LOCAKY = L.LOCAKY
	AND   S.AREAKY NOT IN ('SYS','SHP')
	AND   L.INDUPK = 'V'
	AND  ( (S.QTSIWH > 0 AND S.QTSPMO = 0) OR
	       (S.TASKKY = #TASKKY# AND S.QTSPMO > 0 ) )
    AND   S.LOTNUM = STD.LOTNUM(+)
    AND   S.LOCAKY = STD.LOCAKY(+)
    AND   S.TRNUID = STD.TRNUID(+)	       
	GROUP BY S.WAREKY, S.OWNRKY, S.SKUKEY, S.DESC01, S.DESC02, S.AREAKY, S.ZONEKY, S.LOCAKY, S.TRNUID, 
	       	 S.LOTNUM, S.UOMKEY, S.LOTA01, S.LOTA02, S.LOTA03, S.LOTA04, S.LOTA05, S.LOTA06, S.LOTA07, 
	         S.LOTA08, S.LOTA09, S.LOTA10, S.LOTA11, S.LOTA12, S.LOTA13, S.LOTA14, S.LOTA15, S.LOTA16,  
	         S.LOTA17, S.LOTA18, S.LOTA19, S.LOTA20	
	ORDER BY S.LOCAKY, S.TRNUID         
	</select>



	<!-- 재고 이동 : MV01 -->
	<select id="AREACOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			AREAKY AS VALUE_COL,
		    SHORTX AS TEXT_COL,
		    WAREKY AS GROUP_COL
		FROM AREMA 
		WHERE 1 = 1
		AND   WAREKY = #SES_WAREKY#
		AND   AREATY IN ('STOR','RECV')
	</select>
		<select id="AREACOMBO2_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
			AREAKY AS VALUE_COL,
		    SHORTX AS TEXT_COL,
		    WAREKY AS GROUP_COL
		FROM AREMA 
		WHERE 1 = 1
		<isNotEmpty property="WAREKY">
			AND WAREKY = #SES_WAREKY#
		</isNotEmpty>
		AND   AREATY IN ('STOR','RECV')
	</select>
	
	<select id="DOCTCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
		     , SHORTX AS TEXT_COL
		     , DOCUTY AS GROUP_COL
		FROM DOCTM
		WHERE 1 =1
		AND   DOCCAT = '300'
		AND   DOCUTY = '320'
		ORDER BY DOCUTY
	</select>

	
	<select id="MV01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT
		       ' ' AS TASKKY,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       DT.DOCUTY AS TASOTY,
		       DT.SHORTX AS TASOTYNM,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       DC.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS DRELIN,
		       ST.CMCDVL AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       0 AS QTTAOR,
		       0 AS QTCOMP,
		       ' ' AS TSPKEY,
		       ' ' AS DOORKY,
		       ' ' AS KEEPTS,
		       WT.WAREKY AS WARETG,
		       WT.NAME01 AS WARETGNM,
		       BZ.PTNRKY AS PTNRKY,
		       BZ.PTNRTY AS PTNRTY,
		       BZ.NAME01 AS PTNRKYNM,
		       ' ' AS DOCTXT,
		       TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS CREDAT,
			   TO_CHAR(SYSDATE, 'HH:MI:SS') AS CRETIM,
			   ' ' AS CREUSR,
			   ' ' AS CUSRNM,
			   TO_CHAR(SYSDATE, 'YYYY-MM-DD') AS LMODAT,
			   TO_CHAR(SYSDATE, 'HH:MI:SS') AS LMOTIM,
				' ' AS LMOUSR,
				' ' AS LUSRNM
		  FROM (SELECT 1
		          FROM DUAL) D
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #SES_WAREKY#
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = #SES_WAREKY#
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '300'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = 'NEW'
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = #PTNRKY#
		              AND BZ.PTNRTY IN ('VD')
		              AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #SES_WAREKY#)
		</select>
		
		<select id="MV01BODY_LIST" parameterClass="Map" resultClass="DataMap">
			SELECT ' ' AS TASKKY,
		       ' ' AS TASKIT,
			<isNotEqual property="TASOTY" compareValue="320">
			<isNotEqual property="TASOTY" compareValue="391">
			<isNotEqual property="TASOTY" compareValue="392">
			       ' ' AS CONFIRM,
			</isNotEqual>
			</isNotEqual>
			</isNotEqual>
			<isEqual property="TASOTY" compareValue="320">'V' AS CONFIRM,</isEqual>
			<isEqual property="TASOTY" compareValue="391">'V' AS CONFIRM,</isEqual>
			<isEqual property="TASOTY" compareValue="392">'V' AS CONFIRM,</isEqual>
		       STKKY.STOKKY AS STOKKY,
		       'MV' AS TASKTY,
		       ' ' AS RSNCOD,
		       'NEW' AS STATIT,
		       STKKY.WAREKY AS WAREKY,
		       STKKY.QTSIWH AS AVAILABLEQTY,
		       STKKY.QTSIWH AS QTSIWH,
		       STKKY.QTSIWH AS QTTAOR,
		       STKKY.QTSALO AS QTSALO,
		       STKKY.QTSPMO AS QTSPMO,
		       STKKY.QTSPMI AS QTSPMI,
		       STKKY.QTSBLK AS QTSBLK,
		       0 AS QTCOMP,
		       STKKY.OWNRKY AS OWNRKY,
		       STKKY.SKUKEY AS SKUKEY,
		       STKKY.LOTNUM AS LOTNUM,
		       '00000000' AS ACTCDT,
		       '000000' AS ACTCTI,
		       STKKY.QTYUOM AS QTYUOM,
		       ' ' AS TKFLKY,
		       ' ' AS STEPNO,
		       ' ' AS LSTTFL,
		       (SELECT DISTINCT NAME01 FROM WAHMA WHERE WAREKY = STKKY.WAREKY) AS WAREKYNM,
		       STKKY.LOCAKY AS LOCASR,
		       STKKY.LOCAKY AS LOCAKY,
		       STKKY.SECTID AS SECTSR,
		       STKKY.PACKID AS PAIDSR,
		       STKKY.TRNUID AS TRNUSR,
		       ' ' AS STRUTY,
		       STKKY.MEASKY AS SMEAKY,
		       STKKY.UOMKEY AS SUOMKY,
		       STKKY.QTPUOM AS QTSPUM,
		       STKKY.DUOMKY AS SDUOKY,
		       STKKY.QTDUOM AS QTSDUM,
		       DT.SYSLOC AS LOCATG,
		       STKKY.SECTID AS SECTTG,
		       STKKY.PACKID AS PAIDTG,
		       STKKY.TRNUID AS TRNUTG,
		       STKKY.AREAKY AS AREATG,
		       ' ' AS TTRUTY,
		       STKKY.MEASKY AS TMEAKY,
		       STKKY.UOMKEY AS TUOMKY,
		       STKKY.QTPUOM AS QTTPUM,
		       STKKY.DUOMKY AS TDUOKY,
		       STKKY.QTDUOM AS QTTDUM,
		       ' ' AS LOCAAC,
		       ' ' AS SECTAC,
		       ' ' AS PAIDAC,
		       ' ' AS TRNUAC,
		       ' ' AS ATRUTY,
		       ' ' AS AMEAKY,
		       ' ' AS AUOMKY,
		       0 AS QTAPUM,
		       ' ' AS ADUOKY,
		       0 AS QTADUM,
		       ' ' AS REFDKY,
		       ' ' AS REFDIT,
		       ' ' AS REFCAT,
		       ' ' AS REFDAT,
		       STKKY.PURCKY AS PURCKY,
		       STKKY.PURCIT AS PURCIT,
		       STKKY.ASNDKY AS ASNDKY,
		       STKKY.ASNDIT AS ASNDIT,
		       STKKY.RECVKY AS RECVKY,
		       STKKY.RECVIT AS RECVIT,
		       STKKY.SHPOKY AS SHPOKY,
		       STKKY.SHPOIT AS SHPOIT,
		       STKKY.GRPOKY AS GRPOKY,
		       STKKY.GRPOIT AS GRPOIT,
		       STKKY.SADJKY AS SADJKY,
		       STKKY.SADJIT AS SADJIT,
		       STKKY.SDIFKY AS SDIFKY,
		       STKKY.SDIFIT AS SDIFIT,
		       STKKY.PHYIKY AS PHYIKY,
		       STKKY.PHYIIT AS PHYIIT,
		       ' ' AS DROPID,
		       STKKY.DESC01 AS DESC01,
		       STKKY.DESC02 AS DESC02,
		       STKKY.ASKU01 AS ASKU01,
		       STKKY.ASKU02 AS ASKU02,
		       STKKY.ASKU03 AS ASKU03,
		       STKKY.ASKU04 AS ASKU04,
		       STKKY.ASKU05 AS ASKU05,
		       STKKY.EANCOD AS EANCOD,
		       STKKY.GTINCD AS GTINCD,
		       STKKY.SKUG01 AS SKUG01,
		       STKKY.SKUG02 AS SKUG02,
		       STKKY.SKUG03 AS SKUG03,
		       STKKY.SKUG04 AS SKUG04,
		       STKKY.SKUG05 AS SKUG05,
		       STKKY.GRSWGT AS GRSWGT,
		       STKKY.NETWGT AS NETWGT,
		       STKKY.WGTUNT AS WGTUNT,
		       STKKY.LENGTH AS LENGTH,
		       STKKY.WIDTHW AS WIDTHW,
		       STKKY.HEIGHT AS HEIGHT,
		       STKKY.CUBICM AS CUBICM,
		       STKKY.CAPACT AS CAPACT,
		       ' ' AS WORKID,
		       ' ' AS WORKNM,
		       ' ' AS HHTTID,
		       STKKY.AREAKY AS AREAKY,
		       STKKY.LOTA01 AS LOTA01,
		       STKKY.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = STKKY.LOTA02) AS LOTA02NM,
		       STKKY.LOTA03 AS LOTA03,
		       STKKY.LOTA04 AS LOTA04,
		       STKKY.LOTA05 AS LOTA05,
		       STKKY.LOTA06 AS LOTA06,
		       STKKY.LOTA07 AS LOTA07,
		       STKKY.LOTA08 AS LOTA08,
		       STKKY.LOTA09 AS LOTA09,
		       STKKY.LOTA10 AS LOTA10,
		       STKKY.LOTA11 AS LOTA11,
		       STKKY.LOTA12 AS LOTA12,
		       STKKY.LOTA13 AS LOTA13,
		       STKKY.LOTA14 AS LOTA14,
		       STKKY.LOTA15 AS LOTA15,
		       STKKY.LOTA16 AS LOTA16,
		       STKKY.LOTA17 AS LOTA17,
		       STKKY.LOTA18 AS LOTA18,
		       STKKY.LOTA19 AS LOTA19,
		       STKKY.LOTA20 AS LOTA20,
		       STKKY.AWMSNO AS AWMSNO,
		       ' ' AS AWMSTS,
		       STKKY.SMANDT AS SMANDT,
		       STKKY.SEBELN AS SEBELN,
		       STKKY.SEBELP AS SEBELP,
		       STKKY.SZMBLNO AS SZMBLNO,
		       STKKY.SZMIPNO AS SZMIPNO,
		       STKKY.STRAID AS STRAID,
			<isEqual property="TASOTY" compareValue="332">
			   <isNotEmpty property="svbeln">
			       #SVBELN# AS SVBELN,
			   </isNotEmpty>
			   <isEmpty property="SVBELN">
			      <isNotEmpty property="SHPOKY">
			       NVL((SELECT SVBELN FROM SHPDI WHERE SHPOKY = #SHPOKY# AND ROWNUM = 1),' ') AS SVBELN,
			      </isNotEmpty>
			      <isEmpty property="SHPOKY">
			       ' ' AS SVBELN,
			      </isEmpty>
			   </isEmpty>
			</isEqual>
			<isNotEqual property="TASOTY" compareValue="332">STKKY.SVBELN AS SVBELN,</isNotEqual>
			       STKKY.SPOSNR AS SPOSNR,
			       STKKY.STKNUM AS STKNUM,
			       STKKY.STPNUM AS STPNUM,
			       STKKY.SWERKS AS SWERKS,
			       STKKY.SLGORT AS SLGORT,
			       STKKY.SDATBG AS SDATBG,
			       STKKY.STDLNR AS STDLNR,
			       STKKY.SSORNU AS SSORNU,
			       STKKY.SSORIT AS SSORIT,
			       STKKY.SMBLNR AS SMBLNR,
			       STKKY.SZEILE AS SZEILE,
			       STKKY.SMJAHR AS SMJAHR,
			       STKKY.SXBLNR AS SXBLNR,
			       STKKY.SAPSTS AS SAPSTS,
			       ' ' AS DOORKY,
			       STKKY.LOTA01 AS PTLT01,
			       STKKY.LOTA02 AS PTLT02,
			       STKKY.LOTA03 AS PTLT03,
			       STKKY.LOTA04 AS PTLT04,
			       STKKY.LOTA05 AS PTLT05,
			       STKKY.LOTA06 AS PTLT06,
			       STKKY.LOTA07 AS PTLT07,
			       STKKY.LOTA08 AS PTLT08,
			       STKKY.LOTA09 AS PTLT09,
			       STKKY.LOTA10 AS PTLT10,
			       STKKY.LOTA11 AS PTLT11,
			       STKKY.LOTA12 AS PTLT12,
			       STKKY.LOTA13 AS PTLT13,
			       STKKY.LOTA14 AS PTLT14,
			       STKKY.LOTA15 AS PTLT15,
			       STKKY.LOTA16 AS PTLT16,
			       STKKY.LOTA17 AS PTLT17,
			       STKKY.LOTA18 AS PTLT18,
			       STKKY.LOTA19 AS PTLT19,
			       STKKY.LOTA20 AS PTLT20,
			       ' ' AS PASTKY,
			       ' ' AS ALSTKY,
			       ' ' AS SBKTXT,
			       ' ' AS TASRSN
			  FROM STKKY
			       INNER JOIN AREMA A
			               ON A.WAREKY = STKKY.WAREKY
			              AND A.AREAKY = STKKY.AREAKY
			       INNER JOIN LOCMA M
			               ON M.WAREKY = STKKY.WAREKY
			              AND M.LOCAKY = STKKY.LOCAKY
			              AND M.STATUS = '00'
			       INNER JOIN DOCTM DT
			               ON DT.DOCUTY = #TASOTY#
			 WHERE STKKY.WAREKY = #WAREKY#
			 AND STKKY.OWNRKY = #OWNRKY#
			<isNotEmpty property="AREA">
			   AND STKKY.AREAKY = #AREA#
			</isNotEmpty>
			<isNotEmpty property="ZONE">
			   AND STKKY.ZONEKY = #ZONE#
			</isNotEmpty>
			<isNotEmpty property="DEPART">
			   AND STKKY.LOTA02 = #DEPART#
			</isNotEmpty>
			<isEqual property="TASOTY" compareValue="332">
			   <isNotEmpty property="SVBELN">
			   AND STKKY.SKUKEY IN (SELECT SKUKEY FROM IFWMS113 WHERE VBELN = #SVBELN#)
			   </isNotEmpty>
			   <isEmpty property="SVBELN">
			   <isNotEmpty property="SHPOKY">
			   AND STKKY.SKUKEY IN (SELECT SKUKEY FROM SHPDI WHERE SHPOKY = #SHPOKY#)
			   </isNotEmpty>
			   </isEmpty>
			</isEqual>
			<isNotEmpty property="RECVKY">
			   AND STKKY.RECVKY = #RECVKY#
			</isNotEmpty>
			
			<isEqual property="TASOTY" compareValue="320">   AND STKKY.LOCAKY NOT IN ('SCRLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="331">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="380">   AND STKKY.LOCAKY NOT IN (' ') </isEqual>	
			<isEqual property="TASOTY" compareValue="382">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>
			<isEqual property="TASOTY" compareValue="383">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="384">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="385">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="386">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="387">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="388">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
			<isEqual property="TASOTY" compareValue="389">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="390">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="391">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="392">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="393">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="394">   AND STKKY.LOCAKY IN ('RTNLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="395">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="396">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="397">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="398">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
			<isEqual property="TASOTY" compareValue="399">   AND STKKY.LOCAKY IN ('SETLOC') </isEqual>	
		
			   AND STKKY.LOCAKY != 'SHPLOC'
			   AND STKKY.LOTA06 IN ('00')
			   AND STKKY.AREAKY NOT IN ('SYS','SHP')
			   AND STKKY.QTSIWH <![CDATA[>]]> 0
			   AND STKKY.QTSALO = 0
			   AND STKKY.QTSPMO = 0
			   AND STKKY.QTSPMI = 0
			   AND STKKY.QTSBLK = 0
			<isNotEmpty property="RANGE_SQL">
			   $RANGE_SQL$
			</isNotEmpty>
	</select>
	
	<select id="MV09HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		  SELECT 
		  		 A.TASKKY AS TASKKY,
                 A.WAREKY AS WAREKY,
                 A.TASOTY AS TASOTY,
                 A.DOCDAT AS DOCDAT,
                 A.DOCCAT AS DOCCAT,
                 (SELECT SHORTX FROM DOCCM WHERE DOCCAT = A.DOCCAT) AS DOCCATNM,
                 A.DRELIN AS DRELIN,
                 A.STATDO AS STATDO,
                 (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = A.STATDO) AS STATDONM,
                 (SELECT SHORTX FROM DOCTM WHERE DOCUTY = A.TASOTY) AS ADJDSC,
                 (SELECT SHORTX FROM DOCTM WHERE DOCUTY = A.TASOTY) AS TASSTX,
                 A.QTTAOR AS QTTAOR,
                 A.QTCOMP AS QTCOMP,
                 A.TSPKEY AS TSPKEY,
                 A.DOORKY AS DOORKY,
                 DECODE(A.WARETG, ' ', A.WAREKY, A.WARETG) AS WARETG,
                 A.PTNRKY AS PTNRKY,
                 A.CREDAT AS CREDAT,
                 A.CRETIM AS CRETIM,
                 A.CREUSR AS CREUSR,
                 (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = A.CREUSR) AS CUSRNM,
                 A.LMODAT AS LMODAT,
                 A.LMOTIM AS LMOTIM,
                 A.LMOUSR AS LMOUSR,
                 (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = A.LMOUSR) AS LUSRNM,
                 A.INDBZL AS INDBZL,
                 A.INDARC AS INDARC,
                 A.UPDCHK AS UPDCHK,
                 A.KEEPTS AS KEEPTS,                
                 ' ' AS RECVKY,
                 ' ' AS SHPOKY,                
                 ' ' AS SHPMTY,
                 ' ' AS SHPMTYNM,
                 ' ' AS SHSTATDO,
                 ' ' AS SHSTATDONM,
                 ' ' AS DPTNKY,
                 ' ' AS DPTNKYNM,                
                 MAX(B.SEBELN) AS SEBELN,
                 MAX(B.SZMBLNO) AS SZMBLNO,
                 MAX(B.SZMIPNO) AS SZMIPNO,
                 MAX(B.STRAID) AS STRAID,
                 MAX(B.SVBELN) AS SVBELN,
                 MAX(B.STKNUM) AS STKNUM,
                 MAX(B.STDLNR) AS STDLNR,
                 MAX(B.SSORNU) AS SSORNU,
                 MAX(B.SMBLNR) AS SMBLNR,
                 MAX(B.SXBLNR) AS SXBLNR,
                 NVL(SUM(DECODE(B.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
                 MAX(B.AREAKY) AS AREAKY,
                 A.DOCTXT AS DOCTXT
         FROM TASDH A 
          INNER JOIN TASDI B
                 ON A.TASKKY = B.TASKKY AND  A.TASOTY = '320'
         WHERE A.WAREKY = #WAREKY#
         AND B.OWNRKY = #OWNRKY#
		 <isNotEmpty property="RANGE_SQL">
		 	$RANGE_SQL$
		 </isNotEmpty>
          GROUP BY A.TASKKY, A.WAREKY, A.TASOTY, A.DOCDAT, A.DOCCAT,
                   A.DRELIN, A.STATDO, A.QTTAOR, A.QTCOMP, A.TSPKEY,
                   A.DOORKY, A.PTNRKY, A.CREDAT, A.CRETIM, A.CREUSR, A.LMODAT,
                   A.LMOTIM, A.LMOUSR, A.INDBZL, A.INDARC, A.UPDCHK,
                   A.KEEPTS, A.WARETG, A.DOCTXT
          ORDER BY A.TASKKY
	</select>
	
	<select id="MV01_VALIDATION" parameterClass="Map" resultClass="DataMap"> 
		SELECT
		       CASE
		         WHEN L.LOCAKY IS NULL THEN 'VALID_M0204' || ' ' || P.LOCATG
		         ELSE 'OK'
		       END AS MSG
		FROM   (
				$VALIDATION_SQL$
		        ) P 
		LEFT OUTER JOIN LOCMA L ON L.WAREKY = P.WAREKY AND L.LOCAKY = P.LOCATG 
		WHERE  1=1
		OR     L.LOCAKY IS NULL		
	</select>
	
	<select id="MV09BODY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRIM(ROWNUM)||B.TASKIT AS ROWSEQUENCE,
		       (CASE
		          WHEN D.ROWCK IS NULL THEN ' '
		          ELSE D.ROWCK END) AS ROWCK,
		       A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN D.QTCOMP
		          ELSE D.QTCOMP END) AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = B.LOTA02) AS LOTA02NM,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       C.ZONEKY AS ZONEKY,
		       B.PASTKY AS PASTKY,
		       B.ALSTKY AS ALSTKY,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (SELECT 0 AS ROWSEQ,
				' ' AS ROWCK,
				' ' AS TASKKY,
				' ' AS TASKIT,
				0 AS QTCOMP,
				' ' AS LOCAAC,
				' ' AS SECTAC,
				' ' AS PAIDAC,
				' ' AS TRNUAC,
				' ' AS RSNCOD,
				' ' AS TASRSN,
				' ' AS ATRUTY
			 FROM DUAL) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		   AND A.TASKKY = #TASKKY#
		<isNotEmpty property="RANGE_SQL">
			   $RANGE_SQL$
		</isNotEmpty>
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="MV19_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TRIM(ROWNUM)||B.TASKIT AS ROWSEQUENCE,
		       (CASE
		          WHEN D.ROWCK IS NULL THEN ' '
		          ELSE D.ROWCK END) AS ROWCK,
		       A.WAREKY AS WAREKY,
		       (SELECT NAME01 FROM WAHMA X WHERE X.WAREKY = A.WAREKY ) AS WAREKYNM,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN TASRSN,
               A.STATDO AS STATDO,
 			   (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = A.STATDO) AS STATDONM,  		       
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       (CASE
		          WHEN D.QTCOMP IS NULL AND B.ACTCDT = '00000000' THEN B.QTTAOR
		          WHEN D.QTCOMP IS NULL THEN B.QTCOMP
		          WHEN B.QTCOMP = D.QTCOMP THEN D.QTCOMP
		          ELSE D.QTCOMP END) AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       (CASE
		          WHEN D.LOCAAC IS NULL AND B.ACTCDT = '00000000' THEN B.LOCATG
		          WHEN D.LOCAAC IS NULL THEN B.LOCAAC
		          WHEN B.LOCAAC = D.LOCAAC  THEN D.LOCAAC
		          ELSE D.LOCAAC END) AS LOCAAC,
		       (CASE
		          WHEN D.SECTAC IS NULL AND B.ACTCDT = '00000000' THEN B.SECTTG
		          WHEN D.SECTAC IS NULL THEN B.SECTAC
		          WHEN B.SECTAC = D.SECTAC THEN D.SECTAC
		          ELSE D.SECTAC END) AS SECTAC,
		       (CASE
		          WHEN D.PAIDAC IS NULL AND B.ACTCDT = '00000000' THEN B.PAIDTG
		          WHEN D.PAIDAC IS NULL THEN B.PAIDAC
		          WHEN B.PAIDAC = D.PAIDAC THEN D.PAIDAC
		          ELSE D.PAIDAC END) AS PAIDAC,
		       (CASE
		          WHEN D.TRNUAC IS NULL AND B.ACTCDT = '00000000' THEN B.TRNUTG
		          WHEN D.TRNUAC IS NULL THEN B.TRNUAC
		          WHEN B.TRNUAC = D.TRNUAC THEN D.TRNUAC
		          ELSE D.TRNUAC END) AS TRNUAC,
		       (CASE
		          WHEN D.ATRUTY IS NULL AND B.ACTCDT = '00000000' THEN B.TTRUTY
		          WHEN D.ATRUTY IS NULL THEN B.ATRUTY
		          WHEN B.ATRUTY = D.ATRUTY THEN D.ATRUTY
		          ELSE D.ATRUTY END) AS ATRUTY,
		       DECODE(B.ACTCDT, '00000000', B.TMEAKY, B.AMEAKY) AS AMEAKY,
		       DECODE(B.ACTCDT, '00000000', DECODE(B.TASKTY, 'PT', B.SUOMKY, B.TUOMKY), B.AUOMKY) AS AUOMKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTPUM, B.QTAPUM) AS QTAPUM,
		       DECODE(B.ACTCDT, '00000000', B.TDUOKY, B.ADUOKY) AS ADUOKY,
		       DECODE(B.ACTCDT, '00000000', B.QTTDUM, B.QTADUM) AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = B.LOTA02) AS LOTA02NM,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       C.ZONEKY AS ZONEKY,
		       B.PASTKY AS PASTKY,
		       B.ALSTKY AS ALSTKY,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C,
		       (SELECT 0 AS ROWSEQ,
				' ' AS ROWCK,
				' ' AS TASKKY,
				' ' AS TASKIT,
				0 AS QTCOMP,
				' ' AS LOCAAC,
				' ' AS SECTAC,
				' ' AS PAIDAC,
				' ' AS TRNUAC,
				' ' AS RSNCOD,
				' ' AS TASRSN,
				' ' AS ATRUTY
			 FROM DUAL) D
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND B.TASKKY = D.TASKKY(+)
		   AND B.TASKIT = D.TASKIT(+)
		   AND A.TASOTY = '320'
           AND A.WAREKY = #SES_WAREKY#
           AND B.AREAKY = #AREA#
          <isNotEmpty property="ZONE">
	        	AND B.SZMIPNO = #ZONE#
	      </isNotEmpty>
	      <isNotEmpty property="DEPART">
	        	AND B.LOTA02 = #DEPART# 
	      </isNotEmpty>
		 <isNotEmpty property="RANGE_SQL">
		 	$RANGE_SQL$
		 </isNotEmpty>		   
		 ORDER BY B.TASKKY, B.TASKIT
	</select>		
	
	<!-- 검사파손샘플이동 -->
	<select id="TASOTYCD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM DOCTM
		WHERE 1 =1
		AND DOCCAT = '300'
		<isEqual property="MENUID" compareValue="TO20">
			AND DOCUTY IN ('380')
		</isEqual>
		<isEqual property="MENUID" compareValue="TK32">
			AND DOCUTY IN ('331')
		</isEqual>
		<isEqual property="MENUID" compareValue="TK31">
			AND DOCUTY IN ('361')
		</isEqual>
		<isEqual property="MENUID" compareValue="TK30">
			AND DOCUTY IN ('360')
		</isEqual>
		<isEqual property="MENUID" compareValue="TK36">
			AND DOCUTY IN ('399', '398', '396', '397')
		</isEqual>
		<isEqual property="MENUID" compareValue="TK39">
			AND DOCUTY IN ('380')
		</isEqual>
	</select>
	
	<select id="DOCUTY332COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCUTY = '332'
	</select>
	
	<select id="DOCUTY331COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCUTY = '331'
	</select>
	
	<select id="TO30Combo_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT AREAKY AS VALUE_COL
		     , SHORTX AS TEXT_COL
		FROM AREMA
		WHERE WAREKY = #SES_WAREKY# 
        AND AREAKY = 'PV'		
        AND AREATY IN ('STOR', 'RECV')
	</select>
	
	<select id="TK310DOCUTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCUTY = '310'
	</select>
	
	<select id="WHERCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT AREAKY AS VALUE_COL
		     , SHORTX AS TEXT_COL
		FROM AREMA
		WHERE WAREKY = #SES_WAREKY#
		<isEqual property="MENUID" compareValue="TK30"> AND AREATY IN ('STOR', 'RECV')</isEqual>
		<isEqual property="MENUID" compareValue="TK32"> AND AREAKY IN ('PV') </isEqual>
		<isEqual property="MENUID" compareValue="TK31"> AND AREAKY IN ('PV') </isEqual>
		<isEqual property="MENUID" compareValue="TK36"> AND AREATY IN ('STOR', 'RECV') </isEqual>
		AND PTNRKY NOT IN (SELECT USERG1 FROM USRMA WHERE USERID=#SES_USER_ID#)
	</select>
	
	<select id="RSNCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
		    RSNCOD AS VALUE_COL,
		    SHORTX AS TEXT_COL
		FROM RSNCD 
		WHERE 1=1
		<isEqual property="MENUID" compareValue="TK30">
			AND DOCUTY = '360'
		</isEqual>
		<isEqual property="MENUID" compareValue="TK31">
			AND DOCUTY = '361'
		</isEqual>
		<isEqual property="MENUID" compareValue="TK32">
			AND DOCUTY = '380'
		</isEqual>
		<isEqual property="MENUID" compareValue="TK33">
			AND DOCUTY IN ('380')
		</isEqual>
		<isEqual property="MENUID" compareValue="TK34">
			AND DOCUTY = '380'
		</isEqual>
			AND OWNRKY = 'IMV'
	</select>
	
	<select id="BZPTNCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT PTNRKY AS VALUE_COL
		     , NAME01 AS TEXT_COL
		FROM BZPTN
		WHERE 1=1
		<isEqual property="MENUID" compareValue="TK32"> AND PTNRTY IN ('PD') </isEqual>
		<isEqual property="MENUID" compareValue="TK30"> AND PTNRTY IN ('ST') </isEqual>
		<isEqual property="MENUID" compareValue="TK31"> AND PTNRTY IN ('ST') </isEqual>
		
		AND PTNRKY NOT IN (SELECT USERG2 FROM USRMA WHERE USERID=#SES_USER_ID#)
	</select>
	
	<select id="TK30HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT
		       ' ' AS TASKKY,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       DT.DOCUTY AS TASOTY,
		       DT.SHORTX AS TASOTYNM,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       DC.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS DRELIN,
		       ST.CMCDVL AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       0 AS QTTAOR,
		       0 AS QTCOMP,
		       ' ' AS TSPKEY,
		       ' ' AS DOORKY,
		       ' ' AS AREATG,
		       ' ' AS PTNRKYNM,
		       ' ' AS AREATGNM,
		       WT.WAREKY AS WARETG,
		       WT.NAME01 AS WARETGNM,
		       BZ.PTNRKY AS PTNRKY,
		       BZ.PTNRTY AS PTNRTY,
		       BZ.NAME01 AS PTNRNM,
		       UM.ERPUSR AS USRID1,
		       UM.ERPNAM AS UNAME1,
		       UM.DEPTID AS DEPTID1,
		       UM.DPNAME AS DNAME1,
		       EU.ERPUS2 AS USRID2,
		       EU.USNAM2 AS UNAME2,
		       EU.DEPID2 AS DEPTID2,
		       EU.DPNAM2 AS DNAME2,
		       EU.ERPUS3 AS USRID3,
		       EU.USNAM3 AS UNAME3,
		       EU.DEPID3 AS DEPTID3,
		       EU.DPNAM3 AS DNAME3,
		       EU.ERPUS4 AS USRID4,
		       EU.USNAM4 AS UNAME4,
		       EU.DEPID4 AS DEPTID4,
		       EU.DPNAM4 AS DNAME4,
		       TO_CHAR(SYSDATE, 'YYYYMMDD') AS CREDAT,
		       TO_CHAR(SYSDATE, 'HH:MM:SS') AS CRETIM,
		       #SES_USER_ID# AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = #SES_USER_ID#) AS CUSRNM,
		        TO_CHAR(SYSDATE, 'YYYYMMDD') AS LMODAT,
		       TO_CHAR(SYSDATE, 'HH:MM:SS') AS LMOTIM,
		       #SES_USER_ID# AS LMOUSR,
		       ' ' AS LUSRNM,
		       ' ' AS DOCTXT 
		  FROM (SELECT 1
		          FROM DUAL) D
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #WAREKY#
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = #WAREKY#
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '300'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = 'NEW'
		       LEFT OUTER JOIN BZPTN BZ
		       			ON 1=1
		       <isEqual property="TASOTY" compareValue="380">	AND BZ.PTNRKY = ' '			</isEqual>			
		       <isEqual property="TASOTY" compareValue="399">	AND BZ.PTNRKY = ' '			</isEqual>
		       <isEqual property="TASOTY" compareValue="398">	AND BZ.PTNRKY = ' '			</isEqual>
		       <isEqual property="TASOTY" compareValue="331">	AND BZ.PTNRKY = #PTNRKY#	</isEqual>
		       <isEqual property="TASOTY" compareValue="360">	AND BZ.PTNRKY = #PTNRKY#	</isEqual>
		       <isEqual property="TASOTY" compareValue="361">	AND BZ.PTNRKY = #PTNRKY#	</isEqual>
		              AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #SES_WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP UM
		               ON UM.OWNRKY = #SES_OWNER#
		              AND UM.USERID = #SES_USER_ID#
		       LEFT OUTER JOIN VUSER_WAREDOCUSER EU
		               ON EU.WAREKY = #SES_WAREKY#
		              AND EU.DOCUTY = #TASOTY#
	</select>
	
	<select id="TK30BODY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			   STKKY.WAREKY AS WAREKY,
			   ' ' AS TASKKY,
		       ' ' AS TASKIT,
		       'V' AS CONFIRM, <!-- 기존 2step, 테스트용으로 1step로 구성 -->
		       STKKY.STOKKY AS STOKKY,
		       'MV' AS TASKTY,
		       ' ' AS RSNCOD,
		       'NEW' AS STATIT,
		       STKKY.QTSIWH AS AVAILABLEQTY,
		       STKKY.QTSIWH AS QTSAVLB,
		       STKKY.QTSIWH AS QTTAOR,
		       0 AS QTCOMP,
		       STKKY.OWNRKY AS OWNRKY,
		       STKKY.SKUKEY AS SKUKEY,
		       STKKY.LOTNUM AS LOTNUM,
		       '00000000' AS ACTCDT,
		       '000000' AS ACTCTI,
		       STKKY.QTYUOM AS QTYUOM,
		       ' ' AS TKFLKY,
		       ' ' AS STEPNO,
		       ' ' AS LSTTFL,
		       STKKY.LOCAKY AS LOCASR,
		       STKKY.SECTID AS SECTSR,
		       STKKY.PACKID AS PAIDSR,
		       STKKY.TRNUID AS TRNUSR,
		       ' ' AS STRUTY,
		       STKKY.MEASKY AS SMEAKY,
		       STKKY.UOMKEY AS SUOMKY,
		       STKKY.QTPUOM AS QTSPUM,
		       STKKY.DUOMKY AS SDUOKY,
		       STKKY.QTDUOM AS QTSDUM,
		       DT.SYSLOC AS LOCATG,
		       ' ' AS AREATG,
		       DT.SYSLOC AS WARETG,
		       STKKY.SECTID AS SECTTG,
		       STKKY.PACKID AS PAIDTG,
		       STKKY.TRNUID AS TRNUTG,
		       ' ' AS TTRUTY,
		       STKKY.MEASKY AS TMEAKY,
		       STKKY.UOMKEY AS TUOMKY,
		       STKKY.QTPUOM AS QTTPUM,
		       STKKY.DUOMKY AS TDUOKY,
		       STKKY.QTDUOM AS QTTDUM,
		       ' ' AS LOCAAC,
		       ' ' AS SECTAC,
		       ' ' AS PAIDAC,
		       ' ' AS TRNUAC,
		       ' ' AS ATRUTY,
		       ' ' AS AMEAKY,
		       ' ' AS AUOMKY,
		       0 AS QTAPUM,
		       ' ' AS ADUOKY,
		       0 AS QTADUM,
		       ' ' AS REFDKY,
		       ' ' AS REFDIT,
		       ' ' AS REFCAT,
		       ' ' AS REFDAT,
		       STKKY.PURCKY AS PURCKY,
		       STKKY.PURCIT AS PURCIT,
		       STKKY.ASNDKY AS ASNDKY,
		       STKKY.ASNDIT AS ASNDIT,
		       STKKY.RECVKY AS RECVKY,
		       STKKY.RECVIT AS RECVIT,
		       STKKY.SHPOKY AS SHPOKY,
		       STKKY.SHPOIT AS SHPOIT,
		       STKKY.GRPOKY AS GRPOKY,
		       STKKY.GRPOIT AS GRPOIT,
		       STKKY.SADJKY AS SADJKY,
		       STKKY.SADJIT AS SADJIT,
		       STKKY.SDIFKY AS SDIFKY,
		       STKKY.SDIFIT AS SDIFIT,
		       STKKY.PHYIKY AS PHYIKY,
		       STKKY.PHYIIT AS PHYIIT,
		       ' ' AS DROPID,
		       STKKY.DESC01 AS DESC01,
		       STKKY.DESC02 AS DESC02,
		       STKKY.ASKU01 AS ASKU01,
		       STKKY.ASKU02 AS ASKU02,
		       STKKY.ASKU03 AS ASKU03,
		       STKKY.ASKU04 AS ASKU04,
		       STKKY.ASKU05 AS ASKU05,
		       STKKY.EANCOD AS EANCOD,
		       STKKY.GTINCD AS GTINCD,
		       STKKY.SKUG01 AS SKUG01,
		       STKKY.SKUG02 AS SKUG02,
		       STKKY.SKUG03 AS SKUG03,
		       STKKY.SKUG04 AS SKUG04,
		       STKKY.SKUG05 AS SKUG05,
		       STKKY.GRSWGT AS GRSWGT,
		       STKKY.NETWGT AS NETWGT,
		       STKKY.WGTUNT AS WGTUNT,
		       STKKY.LENGTH AS LENGTH,
		       STKKY.WIDTHW AS WIDTHW,
		       STKKY.HEIGHT AS HEIGHT,
		       STKKY.CUBICM AS CUBICM,
		       STKKY.CAPACT AS CAPACT,
		       ' ' AS WORKID,
		       ' ' AS WORKNM,
		       ' ' AS HHTTID,
		       STKKY.AREAKY AS AREAKY,
		       STKKY.LOTA01 AS LOTA01,
		       STKKY.LOTA02 AS LOTA02,
		       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = STKKY.LOTA02) AS LOTA02NM,
		       STKKY.LOTA03 AS LOTA03,
		       STKKY.LOTA04 AS LOTA04,
		       STKKY.LOTA05 AS LOTA05,
		       STKKY.LOTA06 AS LOTA06,
		       STKKY.LOTA07 AS LOTA07,
		       STKKY.LOTA08 AS LOTA08,
		       STKKY.LOTA09 AS LOTA09,
		       STKKY.LOTA10 AS LOTA10,
		       STKKY.LOTA11 AS LOTA11,
		       STKKY.LOTA12 AS LOTA12,
		       STKKY.LOTA13 AS LOTA13,
		       STKKY.LOTA14 AS LOTA14,
		       STKKY.LOTA15 AS LOTA15,
		       STKKY.LOTA16 AS LOTA16,
		       STKKY.LOTA17 AS LOTA17,
		       STKKY.LOTA18 AS LOTA18,
		       STKKY.LOTA19 AS LOTA19,
		       STKKY.LOTA20 AS LOTA20,
		       STKKY.AWMSNO AS AWMSNO,
		       ' ' AS AWMSTS,
		       STKKY.SMANDT AS SMANDT,
		       STKKY.SEBELN AS SEBELN,
		       STKKY.SEBELP AS SEBELP,
		       STKKY.SZMBLNO AS SZMBLNO,
		       STKKY.SZMIPNO AS SZMIPNO,
		       STKKY.STRAID AS STRAID,
			   STKKY.SVBELN AS SVBELN,
		       STKKY.SPOSNR AS SPOSNR,
		       STKKY.STKNUM AS STKNUM,
		       STKKY.STPNUM AS STPNUM,
		       STKKY.SWERKS AS SWERKS,
		       STKKY.SLGORT AS SLGORT,
		       STKKY.SDATBG AS SDATBG,
		       STKKY.STDLNR AS STDLNR,
		       STKKY.SSORNU AS SSORNU,
		       STKKY.SSORIT AS SSORIT,
		       STKKY.SMBLNR AS SMBLNR,
		       STKKY.SZEILE AS SZEILE,
		       STKKY.SMJAHR AS SMJAHR,
		       STKKY.SXBLNR AS SXBLNR,
		       STKKY.SAPSTS AS SAPSTS,
		       ' ' AS DOORKY,
		       STKKY.LOTA01 AS PTLT01,
		       STKKY.LOTA02 AS PTLT02,
		       STKKY.LOTA03 AS PTLT03,
		       STKKY.LOTA04 AS PTLT04,
		       STKKY.LOTA05 AS PTLT05,
		       STKKY.LOTA06 AS PTLT06,
		       STKKY.LOTA07 AS PTLT07,
		       STKKY.LOTA08 AS PTLT08,
		       STKKY.LOTA09 AS PTLT09,
		       STKKY.LOTA10 AS PTLT10,
		       STKKY.LOTA11 AS PTLT11,
		       STKKY.LOTA12 AS PTLT12,
		       STKKY.LOTA13 AS PTLT13,
		       STKKY.LOTA14 AS PTLT14,
		       STKKY.LOTA15 AS PTLT15,
		       STKKY.LOTA16 AS PTLT16,
		       STKKY.LOTA17 AS PTLT17,
		       STKKY.LOTA18 AS PTLT18,
		       STKKY.LOTA19 AS PTLT19,
		       STKKY.LOTA20 AS PTLT20,
		       ' ' AS PASTKY,
		       ' ' AS ALSTKY,
		       ' ' AS SBKTXT,
		       ' ' AS TASRSN
		  FROM STKKY
		       INNER JOIN AREMA A
		               ON A.WAREKY = STKKY.WAREKY
		              AND A.AREAKY = STKKY.AREAKY 
					<isNotEmpty property="AREA">
						AND A.AREAKY = #AREA#
					</isNotEmpty>
					<!-- <isEmpty property="PV">
						AND A.AREAKY != 'PV' 
					</isEmpty> -->
		       INNER JOIN LOCMA M
		               ON M.WAREKY = STKKY.WAREKY
		              AND M.LOCAKY = STKKY.LOCAKY
		              AND M.STATUS = '00'
		       INNER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		 WHERE STKKY.WAREKY = #SES_WAREKY#
		<isNotEmpty property="AREA">
		   AND STKKY.AREAKY = #AREA#
		</isNotEmpty>
		<isEqual property="AREA" compareValue="PV">
		   AND STKKY.ZONEKY = #ZONE#
		</isEqual>
		<isNotEmpty property="LOCA">
		   AND STKKY.LOCAKY = #LOCA#
		</isNotEmpty>
		<isNotEmpty property="RECVKY">
		   AND STKKY.RECVKY = #RECVKY#
		</isNotEmpty>
		<!-- 
		<isEqual property="TASOTY" compareValue="320">   AND STKKY.LOCAKY NOT IN ('SCRLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="331">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="380">   AND STKKY.LOCAKY NOT IN (' ') </isEqual>	
		<isEqual property="TASOTY" compareValue="382">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>
		<isEqual property="TASOTY" compareValue="383">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="384">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="385">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="386">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="387">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="388">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="389">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="390">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="391">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="392">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="393">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="394">   AND STKKY.LOCAKY IN ('RTNLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="395">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="396">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="397">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="398">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="399">   AND STKKY.LOCAKY IN ('SETLOC') </isEqual>	
		 -->
		   AND STKKY.LOCAKY != 'SHPLOC'
		   <isEqual property="TASOTY" compareValue="399">
		   		AND STKKY.LOCAKY = 'REP$AREA$%'
		   </isEqual> <!-- 폐기 -->
		   <isEqual property="TASOTY" compareValue="398">
		   		AND STKKY.LOCAKY = 'REP$AREA$%'
		   </isEqual> <!-- 폐기 -->
		   <isEqual property="TASOTY" compareValue="331">	AND STKKY.LOTA06 IN ('00')	</isEqual> <!-- 부속 => 현장 출고 -->
		   AND STKKY.AREAKY NOT IN ('SYS','SHP')
		   AND STKKY.QTSIWH > 0
		   AND STKKY.QTSALO = 0
		   AND STKKY.QTSPMO = 0
		   AND STKKY.QTSPMI = 0
		   AND STKKY.QTSBLK = 0
		   <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
		   </isNotEmpty>
	</select>
	
	<select id="TO01HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DISTINCT
		       ' ' AS TASKKY,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       DT.DOCUTY AS TASOTY,
		       DT.SHORTX AS TASOTYNM,
		       TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		       DC.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       ' ' AS DRELIN,
		       ST.CMCDVL AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       0 AS QTTAOR,
		       0 AS QTCOMP,
		       ' ' AS TSPKEY,
		       ' ' AS DOORKY,
		       ' ' AS AREATG,
		       ' ' AS PTNRKYNM,
		       ' ' AS AREATGNM,
		       WT.WAREKY AS WARETG,
		       WT.NAME01 AS WARETGNM,
		       BZ.PTNRKY AS PTNRKY,
		       BZ.PTNRTY AS PTNRTY,
		       BZ.NAME01 AS PTNRNM,
		       UM.ERPUSR AS USRID1,
		       UM.ERPNAM AS UNAME1,
		       UM.DEPTID AS DEPTID1,
		       UM.DPNAME AS DNAME1,
		       EU.ERPUS2 AS USRID2,
		       EU.USNAM2 AS UNAME2,
		       EU.DEPID2 AS DEPTID2,
		       EU.DPNAM2 AS DNAME2,
		       EU.ERPUS3 AS USRID3,
		       EU.USNAM3 AS UNAME3,
		       EU.DEPID3 AS DEPTID3,
		       EU.DPNAM3 AS DNAME3,
		       EU.ERPUS4 AS USRID4,
		       EU.USNAM4 AS UNAME4,
		       EU.DEPID4 AS DEPTID4,
		       EU.DPNAM4 AS DNAME4,
		       TO_CHAR(SYSDATE, 'YYYYMMDD') AS CREDAT,
		       TO_CHAR(SYSDATE, 'HH:MM:SS') AS CRETIM,
		       #SES_USER_ID# AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = #SES_USER_ID#) AS CUSRNM,
		        TO_CHAR(SYSDATE, 'YYYYMMDD') AS LMODAT,
		       TO_CHAR(SYSDATE, 'HH:MM:SS') AS LMOTIM,
		       #SES_USER_ID# AS LMOUSR,
		       ' ' AS LUSRNM,
		       ' ' AS DOCTXT 
		  FROM (SELECT 1
		          FROM DUAL) D
		       LEFT OUTER JOIN WAHMA WH
		               ON WH.WAREKY = #SES_WAREKY#
		       LEFT OUTER JOIN WAHMA WT
		               ON WT.WAREKY = (CASE WHEN #PROGID# = 'TO02' THEN #WARETG#
		               						ELSE #SES_WAREKY# END)
		       LEFT OUTER JOIN DOCCM DC
		               ON DC.DOCCAT = '300'
		       LEFT OUTER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		       LEFT OUTER JOIN CMCDV ST
		               ON ST.CMCDKY = 'STATDO'
		              AND ST.CMCDVL = #STATDO#
		       LEFT OUTER JOIN BZPTN BZ
		               ON BZ.PTNRKY = #PTNRKY#
		              AND BZ.PTNRTY IN ('VD', 'ST', 'PV', 'PD')
		              AND BZ.PTNL05 IN (SELECT ADDR05 FROM WAHMA WHERE WAREKY = #SES_WAREKY#)
		       LEFT OUTER JOIN VUSER_WMSERP UM
		               ON UM.OWNRKY = #OWNRKY#
		              AND UM.USERID = #USERID#
		       LEFT OUTER JOIN VUSER_WAREDOCUSER EU
		               ON EU.WAREKY = #SES_WAREKY#
		              AND EU.DOCUTY = #TASOTY#
	</select>
	
	<select id="TO01BODY_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			   STKKY.WAREKY AS WAREKY,
			   ' ' AS TASKKY,
		       ' ' AS TASKIT,
		       'V' AS CONFIRM, <!-- 기존 2step, 테스트용으로 1step로 구성 -->
		       STKKY.STOKKY AS STOKKY,
		       'MV' AS TASKTY,
		       ' ' AS RSNCOD,
		       'NEW' AS STATIT,
		       STKKY.QTSIWH AS AVAILABLEQTY,
		       STKKY.QTSIWH AS QTSAVLB,
		       STKKY.QTSIWH AS QTTAOR,
		       0 AS QTCOMP,
		       STKKY.OWNRKY AS OWNRKY,
		       STKKY.SKUKEY AS SKUKEY,
		       STKKY.LOTNUM AS LOTNUM,
		       '00000000' AS ACTCDT,
		       '000000' AS ACTCTI,
		       STKKY.QTYUOM AS QTYUOM,
		       ' ' AS TKFLKY,
		       ' ' AS STEPNO,
		       ' ' AS LSTTFL,
		       STKKY.LOCAKY AS LOCASR,
		       STKKY.SECTID AS SECTSR,
		       STKKY.PACKID AS PAIDSR,
		       STKKY.TRNUID AS TRNUSR,
		       ' ' AS STRUTY,
		       STKKY.MEASKY AS SMEAKY,
		       STKKY.UOMKEY AS SUOMKY,
		       STKKY.QTPUOM AS QTSPUM,
		       STKKY.DUOMKY AS SDUOKY,
		       STKKY.QTDUOM AS QTSDUM,
		       DT.SYSLOC AS LOCATG,
		       ' ' AS AREATG,
		       DT.SYSLOC AS WARETG,
		       STKKY.SECTID AS SECTTG,
		       STKKY.PACKID AS PAIDTG,
		       STKKY.TRNUID AS TRNUTG,
		       ' ' AS TTRUTY,
		       STKKY.MEASKY AS TMEAKY,
		       STKKY.UOMKEY AS TUOMKY,
		       STKKY.QTPUOM AS QTTPUM,
		       STKKY.DUOMKY AS TDUOKY,
		       STKKY.QTDUOM AS QTTDUM,
		       ' ' AS LOCAAC,
		       ' ' AS SECTAC,
		       ' ' AS PAIDAC,
		       ' ' AS TRNUAC,
		       ' ' AS ATRUTY,
		       ' ' AS AMEAKY,
		       ' ' AS AUOMKY,
		       0 AS QTAPUM,
		       ' ' AS ADUOKY,
		       0 AS QTADUM,
		       ' ' AS REFDKY,
		       ' ' AS REFDIT,
		       ' ' AS REFCAT,
		       ' ' AS REFDAT,
		       STKKY.PURCKY AS PURCKY,
		       STKKY.PURCIT AS PURCIT,
		       STKKY.ASNDKY AS ASNDKY,
		       STKKY.ASNDIT AS ASNDIT,
		       STKKY.RECVKY AS RECVKY,
		       STKKY.RECVIT AS RECVIT,
		       STKKY.SHPOKY AS SHPOKY,
		       STKKY.SHPOIT AS SHPOIT,
		       STKKY.GRPOKY AS GRPOKY,
		       STKKY.GRPOIT AS GRPOIT,
		       STKKY.SADJKY AS SADJKY,
		       STKKY.SADJIT AS SADJIT,
		       STKKY.SDIFKY AS SDIFKY,
		       STKKY.SDIFIT AS SDIFIT,
		       STKKY.PHYIKY AS PHYIKY,
		       STKKY.PHYIIT AS PHYIIT,
		       ' ' AS DROPID,
		       STKKY.DESC01 AS DESC01,
		       STKKY.DESC02 AS DESC02,
		       STKKY.ASKU01 AS ASKU01,
		       STKKY.ASKU02 AS ASKU02,
		       STKKY.ASKU03 AS ASKU03,
		       STKKY.ASKU04 AS ASKU04,
		       STKKY.ASKU05 AS ASKU05,
		       STKKY.EANCOD AS EANCOD,
		       STKKY.GTINCD AS GTINCD,
		       STKKY.SKUG01 AS SKUG01,
		       STKKY.SKUG02 AS SKUG02,
		       STKKY.SKUG03 AS SKUG03,
		       STKKY.SKUG04 AS SKUG04,
		       STKKY.SKUG05 AS SKUG05,
		       STKKY.GRSWGT AS GRSWGT,
		       STKKY.NETWGT AS NETWGT,
		       STKKY.WGTUNT AS WGTUNT,
		       STKKY.LENGTH AS LENGTH,
		       STKKY.WIDTHW AS WIDTHW,
		       STKKY.HEIGHT AS HEIGHT,
		       STKKY.CUBICM AS CUBICM,
		       STKKY.CAPACT AS CAPACT,
		       ' ' AS WORKID,
		       ' ' AS WORKNM,
		       ' ' AS HHTTID,
		       STKKY.AREAKY AS AREAKY,
		       STKKY.LOTA01 AS LOTA01,
		       STKKY.LOTA02 AS LOTA02,
		       STKKY.LOTA03 AS LOTA03,
		       STKKY.LOTA04 AS LOTA04,
		       STKKY.LOTA05 AS LOTA05,
		       STKKY.LOTA06 AS LOTA06,
		       STKKY.LOTA07 AS LOTA07,
		       STKKY.LOTA08 AS LOTA08,
		       STKKY.LOTA09 AS LOTA09,
		       STKKY.LOTA10 AS LOTA10,
		       STKKY.LOTA11 AS LOTA11,
		       STKKY.LOTA12 AS LOTA12,
		       STKKY.LOTA13 AS LOTA13,
		       STKKY.LOTA14 AS LOTA14,
		       STKKY.LOTA15 AS LOTA15,
		       STKKY.LOTA16 AS LOTA16,
		       STKKY.LOTA17 AS LOTA17,
		       STKKY.LOTA18 AS LOTA18,
		       STKKY.LOTA19 AS LOTA19,
		       STKKY.LOTA20 AS LOTA20,
		       STKKY.AWMSNO AS AWMSNO,
		       ' ' AS AWMSTS,
		       STKKY.SMANDT AS SMANDT,
		       STKKY.SEBELN AS SEBELN,
		       STKKY.SEBELP AS SEBELP,
		       STKKY.SZMBLNO AS SZMBLNO,
		       STKKY.SZMIPNO AS SZMIPNO,
		       STKKY.STRAID AS STRAID,
			   STKKY.SVBELN AS SVBELN,
		       STKKY.SPOSNR AS SPOSNR,
		       STKKY.STKNUM AS STKNUM,
		       STKKY.STPNUM AS STPNUM,
		       STKKY.SWERKS AS SWERKS,
		       STKKY.SLGORT AS SLGORT,
		       STKKY.SDATBG AS SDATBG,
		       STKKY.STDLNR AS STDLNR,
		       STKKY.SSORNU AS SSORNU,
		       STKKY.SSORIT AS SSORIT,
		       STKKY.SMBLNR AS SMBLNR,
		       STKKY.SZEILE AS SZEILE,
		       STKKY.SMJAHR AS SMJAHR,
		       STKKY.SXBLNR AS SXBLNR,
		       STKKY.SAPSTS AS SAPSTS,
		       ' ' AS DOORKY,
		       STKKY.LOTA01 AS PTLT01,
		       STKKY.LOTA02 AS PTLT02,
		       STKKY.LOTA03 AS PTLT03,
		       STKKY.LOTA04 AS PTLT04,
		       STKKY.LOTA05 AS PTLT05,
		       STKKY.LOTA06 AS PTLT06,
		       STKKY.LOTA07 AS PTLT07,
		       STKKY.LOTA08 AS PTLT08,
		       STKKY.LOTA09 AS PTLT09,
		       STKKY.LOTA10 AS PTLT10,
		       STKKY.LOTA11 AS PTLT11,
		       STKKY.LOTA12 AS PTLT12,
		       STKKY.LOTA13 AS PTLT13,
		       STKKY.LOTA14 AS PTLT14,
		       STKKY.LOTA15 AS PTLT15,
		       STKKY.LOTA16 AS PTLT16,
		       STKKY.LOTA17 AS PTLT17,
		       STKKY.LOTA18 AS PTLT18,
		       STKKY.LOTA19 AS PTLT19,
		       STKKY.LOTA20 AS PTLT20,
		       ' ' AS PASTKY,
		       ' ' AS ALSTKY,
		       ' ' AS SBKTXT,
		       ' ' AS TASRSN
		  FROM STKKY
		       INNER JOIN AREMA A
		               ON A.WAREKY = STKKY.WAREKY
		              AND A.AREAKY = STKKY.AREAKY 
					<isNotEmpty property="PV">
						AND A.AREAKY = 'PV' 
					</isNotEmpty>
					<isEmpty property="PV">
						AND A.AREAKY != 'PV' 
					</isEmpty>
		       INNER JOIN LOCMA M
		               ON M.WAREKY = STKKY.WAREKY
		              AND M.LOCAKY = STKKY.LOCAKY
		              AND M.STATUS = '00'
		       INNER JOIN DOCTM DT
		               ON DT.DOCUTY = #TASOTY#
		 WHERE STKKY.WAREKY = #SES_WAREKY#
		<isNotEmpty property="AREAKY">
		   AND STKKY.AREAKY = #AREAKY#
		</isNotEmpty>
		<isNotEmpty property="RECVKY">
		   AND STKKY.RECVKY = #RECVKY#
		</isNotEmpty>
		
		<isEqual property="TASOTY" compareValue="320">   AND STKKY.LOCAKY NOT IN ('SCRLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="331">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="380">   AND STKKY.LOCAKY NOT IN (' ') </isEqual>	
		<isEqual property="TASOTY" compareValue="382">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>
		<isEqual property="TASOTY" compareValue="383">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="384">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="385">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="386">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="387">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="388">   AND STKKY.LOCAKY IN ('RTNLOC')</isEqual>	
		<isEqual property="TASOTY" compareValue="389">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="390">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="391">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="392">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="393">   AND STKKY.LOCAKY IN ('SCRLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="394">   AND STKKY.LOCAKY IN ('RTNLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="395">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="396">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="397">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="398">   AND STKKY.LOCAKY NOT IN ('SCRLOC','SETLOC','RTNLOC','RTSLOC') </isEqual>	
		<isEqual property="TASOTY" compareValue="399">   AND STKKY.LOCAKY IN ('SETLOC') </isEqual>	
		
		   AND STKKY.LOCAKY != 'SHPLOC'
		   AND STKKY.LOTA06 IN ('00')
		   AND STKKY.AREAKY NOT IN ('SYS','SHP')
		   AND STKKY.QTSIWH > 0
		   AND STKKY.QTSALO = 0
		   AND STKKY.QTSPMO = 0
		   AND STKKY.QTSPMI = 0
		   AND STKKY.QTSBLK = 0
		   <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
		   </isNotEmpty>
	</select>
	
	<!-- 창간이동 -->
	<select id="WARETGCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT W.WAREKY AS VALUE_COL,
		       W.NAME01 AS TEXT_COL
		  FROM WAHMA W
		       INNER JOIN COMMA C
		               ON C.COMPKY = W.COMPKY
		       INNER JOIN OWNER O
		               ON O.COMPKY = C.COMPKY
		 WHERE O.OWNRKY = (SELECT DISTINCT ADDR05 FROM WAHMA WHERE WAREKY = #SES_OWNER# AND ROWNUM = 1)
	</select>
	
	<select id="TO08HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       WH.NAME01 AS WAREKYNM,
		       TASDH.TASOTY AS TASOTY,
		       DT.SHORTX AS TASOTYNM,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       DC.SHORTX AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       ST.CDESC1 AS STATDONM,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       TASDH.WARETG AS WARETG,
		       WT.NAME01 AS WARETGNM,
		       TASDH.PTNRKY AS PTNRKY,
		       BZ.NAME01 AS PTNRKYNM,
		       TASDH.PTNRTY AS PTNRTY,
		       TASDH.PTNRNM AS PTNRNM,
		       TASDH.DOCTXT AS DOCTXT,
			   TASDH.CREDAT,
			   TASDH.CRETIM,
			   TASDH.CREUSR,
			   ' ' AS CUSRNM,
		       TASDH.LMODAT,
			   TASDH.LMOTIM,
			   TASDH.LMOUSR,
			   ' ' AS LUSRNM,
			   ' ' AS AREATG,
			   ' ' AS AREATGNM,
		       NVL((SELECT COUNT(*)
        FROM   TASDI
        WHERE  TASDI.TASKKY = TASDH.TASKKY
        AND    TASDI.STATIT = 'NEW'), 0)AS COMPLETECNT
		FROM   TASDH LEFT OUTER JOIN WAHMA WH ON WH.WAREKY = TASDH.WAREKY LEFT OUTER JOIN WAHMA WT ON WT.WAREKY = TASDH.WARETG LEFT OUTER JOIN DOCTM DT ON DT.DOCUTY = TASDH.TASOTY LEFT OUTER JOIN DOCCM DC ON DC.DOCCAT = TASDH.DOCCAT LEFT OUTER JOIN CMCDV ST ON ST.CMCDKY = 'STATDO'
		AND    ST.CMCDVL = TASDH.STATDO LEFT OUTER JOIN BZPTN BZ ON BZ.PTNRKY = TASDH.PTNRKY
        AND    BZ.PTNRTY IN ('VD','CT', 'TM')
		LEFT OUTER JOIN USRMA CU ON CU.USERID = TASDH.CREUSR LEFT OUTER JOIN USRMA LU ON LU.USERID = TASDH.LMOUSR
		WHERE  TASDH.WAREKY = #SES_WAREKY#
		AND    TASDH.QTTAOR > 0
		<isNotEmpty property="AREA">
		   AND CU.USERG1 = #AREA#
		</isNotEmpty>
		<isNotEmpty property="ZONE">
			AND CU.USERG2 = #ZONE#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		ORDER BY TASDH.DOCDAT DESC, TASDH.TASKKY
		 <!--AND    ((TASDH.TASOTY = '330'
                OR     TASDH.TASOTY = '331'
                OR     TASDH.TASOTY = '332'
                OR     TASDH.TASOTY = '380'
                OR     TASDH.TASOTY = '382'
                OR     TASDH.TASOTY = '383'
                OR     TASDH.TASOTY = '384'
                OR     TASDH.TASOTY = '385'
                OR     TASDH.TASOTY = '386'
                OR     TASDH.TASOTY = '387'
                OR     TASDH.TASOTY = '388'
                OR     TASDH.TASOTY = '389'
                OR     TASDH.TASOTY = '390'
                OR     TASDH.TASOTY = '391'
                OR     TASDH.TASOTY = '392'
                OR     TASDH.TASOTY = '393'
                OR     TASDH.TASOTY = '394'
                OR     TASDH.TASOTY = '395'
                OR     TASDH.TASOTY = '396'
                OR     TASDH.TASOTY = '397'
                OR     TASDH.TASOTY = '398'
                OR     TASDH.TASOTY = '399'))
                 -->
	</select>
	<!-- TO08 -->
	<select id="TO08SUB_LIST" parameterClass="Map" resultClass="DataMap">
	SELECT TASDI.TASKKY AS TASKKY,
	       TASDI.TASKIT AS TASKIT,
	       TASDI.TASKTY AS TASKTY,
	       TASDI.RSNCOD AS RSNCOD,
	       TASDI.STATIT AS STATIT,
	       TASDI.QTTAOR AS QTTAOR,
			<isEqual property="progid" compareValue="TO07">
			       DECODE(TASDI.STATIT, 'NEW', TASDI.QTTAOR, TASDI.QTCOMP) AS QTCOMP,
			</isEqual>
			 <!-- <isEqual property="progid" compareValue="TO08">
			       TASDI.QTCOMP AS QTCOMP,
			</isEqual> -->
		   TASDI.QTTAOR AS QTCOMP,
		   '0' AS QTSEND,
	       TASDI.OWNRKY AS OWNRKY,
	       TASDI.SKUKEY AS SKUKEY,
	       TASDI.LOTNUM AS LOTNUM,
	       TASDI.ACTCDT AS ACTCDT,
	       TASDI.ACTCTI AS ACTCTI,
	       TASDI.QTYUOM AS QTYUOM,
	       TASDI.TKFLKY AS TKFLKY,
	       TASDI.STEPNO AS STEPNO,
	       TASDI.LSTTFL AS LSTTFL,
	       TASDI.LOCASR AS LOCASR,
	       TASDI.SECTSR AS SECTSR,
	       TASDI.PAIDSR AS PAIDSR,
	       TASDI.TRNUSR AS TRNUSR,
	       TASDI.STRUTY AS STRUTY,
	       TASDI.SMEAKY AS SMEAKY,
	       TASDI.SUOMKY AS SUOMKY,
	       TASDI.QTSPUM AS QTSPUM,
	       TASDI.SDUOKY AS SDUOKY,
	       TASDI.QTSDUM AS QTSDUM,
	       TASDI.LOCATG AS LOCATG,
	       TASDI.SECTTG AS SECTTG,
	       TASDI.PAIDTG AS PAIDTG,
	       TASDI.TRNUTG AS TRNUTG,
	       TASDI.TTRUTY AS TTRUTY,
	       TASDI.TMEAKY AS TMEAKY,
	       TASDI.TUOMKY AS TUOMKY,
	       TASDI.QTTPUM AS QTTPUM,
	       TASDI.TDUOKY AS TDUOKY,
	       TASDI.QTTDUM AS QTTDUM,
	       TASDI.LOCAAC AS LOCAAC,
	       TASDI.SECTAC AS SECTAC,
	       TASDI.PAIDAC AS PAIDAC,
	       TASDI.TRNUAC AS TRNUAC,
	       TASDI.ATRUTY AS ATRUTY,
	       TASDI.AMEAKY AS AMEAKY,
	       TASDI.AUOMKY AS AUOMKY,
	       TASDI.QTAPUM AS QTAPUM,
	       TASDI.ADUOKY AS ADUOKY,
	       TASDI.QTADUM AS QTADUM,
	       TASDI.REFDKY AS REFDKY,
	       TASDI.REFDIT AS REFDIT,
	       TASDI.REFCAT AS REFCAT,
	       TASDI.REFDAT AS REFDAT,
	       TASDI.PURCKY AS PURCKY,
	       TASDI.PURCIT AS PURCIT,
	       TASDI.ASNDKY AS ASNDKY,
	       TASDI.ASNDIT AS ASNDIT,
	       TASDI.RECVKY AS RECVKY,
	       TASDI.RECVIT AS RECVIT,
	       TASDI.SHPOKY AS SHPOKY,
	       TASDI.SHPOIT AS SHPOIT,
	       TASDI.GRPOKY AS GRPOKY,
	       TASDI.GRPOIT AS GRPOIT,
	       TASDI.SADJKY AS SADJKY,
	       TASDI.SADJIT AS SADJIT,
	       TASDI.SDIFKY AS SDIFKY,
	       TASDI.SDIFIT AS SDIFIT,
	       TASDI.PHYIKY AS PHYIKY,
	       TASDI.PHYIIT AS PHYIIT,
	       TASDI.DROPID AS DROPID,
	       TASDI.DESC01 AS DESC01,
	       TASDI.DESC02 AS DESC02,
	       TASDI.ASKU01 AS ASKU01,
	       TASDI.ASKU02 AS ASKU02,
	       TASDI.ASKU03 AS ASKU03,
	       TASDI.ASKU04 AS ASKU04,
	       TASDI.ASKU05 AS ASKU05,
	       TASDI.EANCOD AS EANCOD,
	       TASDI.GTINCD AS GTINCD,
	       TASDI.SKUG01 AS SKUG01,
	       TASDI.SKUG02 AS SKUG02,
	       TASDI.SKUG03 AS SKUG03,
	       TASDI.SKUG04 AS SKUG04,
	       TASDI.SKUG05 AS SKUG05,
	       TASDI.GRSWGT AS GRSWGT,
	       TASDI.NETWGT AS NETWGT,
	       TASDI.WGTUNT AS WGTUNT,
	       TASDI.LENGTH AS LENGTH,
	       TASDI.WIDTHW AS WIDTHW,
	       TASDI.HEIGHT AS HEIGHT,
	       TASDI.CUBICM AS CUBICM,
	       TASDI.CAPACT AS CAPACT,
	       TASDI.WORKID AS WORKID,
	       TASDI.WORKNM AS WORKNM,
	       TASDI.HHTTID AS HHTTID,
	       TASDI.AREAKY AS AREAKY,
	       TASDI.LOTA01 AS LOTA01,
	       TASDI.LOTA02 AS LOTA02,
	       (SELECT NAME01 FROM BZPTN WHERE PTNRTY = 'DP' AND PTNRKY = TASDI.LOTA02) AS LOTA02NM,
	       TASDI.LOTA03 AS LOTA03,
	       TASDI.LOTA04 AS LOTA04,
	       TASDI.LOTA05 AS LOTA05,
	       TASDI.LOTA06 AS LOTA06,
	       TASDI.LOTA07 AS LOTA07,
	       TASDI.LOTA08 AS LOTA08,
	       TASDI.LOTA09 AS LOTA09,
	       TASDI.LOTA10 AS LOTA10,
	       TASDI.LOTA11 AS LOTA11,
	       TASDI.LOTA12 AS LOTA12,
	       TASDI.LOTA13 AS LOTA13,
	       TASDI.LOTA14 AS LOTA14,
	       TASDI.LOTA15 AS LOTA15,
	       TASDI.LOTA16 AS LOTA16,
	       TASDI.LOTA17 AS LOTA17,
	       TASDI.LOTA18 AS LOTA18,
	       TASDI.LOTA19 AS LOTA19,
	       TASDI.LOTA20 AS LOTA20,
	       TASDI.AWMSNO AS AWMSNO,
	       TASDI.AWMSTS AS AWMSTS,
	       TASDI.SMANDT AS SMANDT,
	       TASDI.SEBELN AS SEBELN,
	       TASDI.SEBELP AS SEBELP,
	       TASDI.SZMBLNO AS SZMBLNO,
	       TASDI.SZMIPNO AS SZMIPNO,
	       TASDI.STRAID AS STRAID,
	       TASDI.SVBELN AS SVBELN,
	       TASDI.SPOSNR AS SPOSNR,
	       TASDI.STKNUM AS STKNUM,
	       TASDI.STPNUM AS STPNUM,
	       TASDI.SWERKS AS SWERKS,
	       TASDI.SLGORT AS SLGORT,
	       TASDI.SDATBG AS SDATBG,
	       TASDI.STDLNR AS STDLNR,
	       TASDI.SSORNU AS SSORNU,
	       TASDI.SSORIT AS SSORIT,
	       TASDI.SMBLNR AS SMBLNR,
	       TASDI.SZEILE AS SZEILE,
	       TASDI.SMJAHR AS SMJAHR,
	       TASDI.SXBLNR AS SXBLNR,
	       TASDI.SAPSTS AS SAPSTS,
	       TASDI.DOORKY AS DOORKY,
	       TASDI.PTLT01 AS PTLT01,
	       TASDI.PTLT02 AS PTLT02,
	       TASDI.PTLT03 AS PTLT03,
	       TASDI.PTLT04 AS PTLT04,
	       TASDI.PTLT05 AS PTLT05,
	       TASDI.PTLT06 AS PTLT06,
	       TASDI.PTLT07 AS PTLT07,
	       TASDI.PTLT08 AS PTLT08,
	       TASDI.PTLT09 AS PTLT09,
	       TASDI.PTLT10 AS PTLT10,
	       TASDI.PTLT11 AS PTLT11,
	       TASDI.PTLT12 AS PTLT12,
	       TASDI.PTLT13 AS PTLT13,
	       TASDI.PTLT14 AS PTLT14,
	       TASDI.PTLT15 AS PTLT15,
	       TASDI.PTLT16 AS PTLT16,
	       TASDI.PTLT17 AS PTLT17,
	       TASDI.PTLT18 AS PTLT18,
	       TASDI.PTLT19 AS PTLT19,
	       TASDI.PTLT20 AS PTLT20,
	       TASDI.PASTKY AS PASTKY,
	       TASDI.ALSTKY AS ALSTKY,
	       TASDI.SBKTXT AS SBKTXT,
	       TASDI.TASRSN AS TASRSN
	  FROM TASDH
	       INNER JOIN TASDI
	               ON TASDI.TASKKY = TASDH.TASKKY
	 WHERE TASDH.WAREKY = #SES_WAREKY#
	   AND TASDI.QTTAOR > 0
	   <!-- <isNotEmpty property="taskkys">
	   AND TASDH.TASKKY IN ('3099194186','3099194200','3099194145','3099194157','3099194201','3099194202','3099194146','3099194147','3000155901','3000155612','3000155614','3000155615','3000155617','3000155568','3000152094','3000152075','3000153263','3000153279','3000153170','3000152188','3000152435','3000155507','3000155510','3000155512','3000152148','3000152445','3000152442','3000156050','3000156052','3000152108','3000152127','3000156053','3000156055','3000154021','3000162889','3000162997','3000162123','3000162847','3000162840','3000157915','3000157917','3000157918','3000157920','3000162335','3000167809','3000167810','3000166841','3000167811','3000166406','3000166848','3000166340','3000166850','3000166851','3000166853','3000167048','3000166379','3000167044','3000168932','3000166422','3000167364','3000166366','3000166530','3000167298','3000167300','3000167301','3000167303','3000167403','3000166587','3000167855','3000167433','3000167789','3000164116','3000164055','3000164428','3000164090','3000164452','3000166266','3000166268','3000166269','3000166271','3000164468','3000166282','3000163922','3000164037','3000163918','3000163919','3000163920','3000171594','3000171881','3000171558','3000171377','3000170182','3000170635','3000170665','3000173255','3000173313','3000173345','3000168566','3000168574','3000171363','3000171380','3000168903','3000168905','3000168906','3000168908','3000169054','3000168572','3000173196','3000169049','3000182437','3000182439','3000169883','3000170621','3000176570','3000176572','3000176573','3000176575','3000176642','3000176715','3000176519','3000176774','3000176522','3000176007','3000176154','3000176627','3000176714','3000175735','3000176063','3000182794','3000181638','3000182856','3000182940','3000181357','3000181640','3000181903','3000185348','3000181929','3000182769','3000182841','3000182691','3000182480','3000182817','3000182852','3000181067','3000182656','3000183409','3000182845','3000180615','3000181084','3000181765','3000179230','3000179371','3000177997','3000186480','3000187440','3000186182','3000185905','3000185889','3000187522','3000187550','3000187552','3000190289','3000187553','3000187555','3000187582','3000187585','3000187587','3000185301','3000185303','3000186145','3000186508','3000186097','3000186099','3000186217','3000185386','3000185388','3000187106','3000187500','3000183845','3000184853','3000185482','3000193914','3000193969','3000194616','3000193928','3000194107','3000193897','3000192186','3000190279','3000191854','3000191703','3000192124','3000190303','3000190877','3000200077','3000199373','3000198525','3000199751','3000199995','3000199996','3000199997','3000199999','3000198119','3000198135','3000198165','3000198176','3000198196','3000200474','3000198517','3000198181','3000198148','3000198159','3000204326','3000204330','3000204329','3000204534','3000204485','3000204486','3000201244','3000209822','3000209531','3000209216',
	   '3000209162','3000204052','3099194156','3000205290','3000205908','3000205911','3000207639','3000207641','3000207642','3099194148','3099194153')
	   </isNotEmpty> -->
	   <isNotEmpty property="TASKKY">
			AND TASDH.TASKKY=  #TASKKY#
	   </isNotEmpty>
	    <isNotEmpty property="RANGE_SQL">
				$RANGE_SQL$
	    </isNotEmpty>
	</select>
	<!-- COMBOBOX -->
	  <select id="RSNCODCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
	  SELECT RSNCOD AS VALUE_COL,
      		 SHORTX AS TEXT_COL
 	  FROM 
 	  	 RSNCD
	  WHERE OWNRKY = #OWNRKY#
	  AND DOCCAT = '300'
	  AND DOCUTY = #DOCUTY#
	  AND DOCUTY IN ('210')
	  AND RSNCOD = #RSNCOD#
	  </select>
	  <select id="LOTA05COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT SUBSTR(CMCDVL,1,2) AS VALUE_COL,
		       CDESC1 AS TEXT_COL
		FROM CMCDV
		WHERE CMCDKY = 'LOTA05'
		AND 'WSH1' LIKE USARG1
	</select>
	<select id="LOTA02COMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT CMCDVL AS VALUE_COL,
		       CDESC1 AS TEXT_COL
		FROM CMCDV
		WHERE CMCDKY = 'LOTA02'
	</select>
	<select id="TO80TAB1_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			   TH.TASKKY AS TASKKY,		
		       TH.DOCDAT AS DOCDAT,		
		       TH.TASOTY AS TASOTY,		
		       NVL(DT.SHORTX,' ') AS TASOTYNM,		
		       TH.STATDO AS STATDO,		
		       NVL(ST.CDESC1,' ') AS STATDONM,		
		       TH.DRELIN AS DRELIN,		
			   TH.QTTAOR AS QTTAOR,		
		       CASE WHEN TH.STATDO IN ('PPC','FPC') AND TH.DRELIN = 'V'		
		                 THEN 'LED01'		
		            WHEN TH.STATDO IN ('PPC','FPC') AND TH.DRELIN = ' '		
		                 THEN 'LED02'		
		            ELSE 'LED04'		
		         END AS ICSTAT,		
			   TH.QTCOMP AS QTCOMP,		
		       CASE WHEN TH.STATDO IN ('PPC','FPC')		
		                 THEN 'TAN19'		
		            ELSE ' '		
		         END AS ICCOMP,		
				
		       CASE WHEN TH.STATDO IN ('PPC','FPC') AND TH.DRELIN = 'V'		
		                 THEN NVL(SUM(IF.MENGE),0)		
		            ELSE 0		
		         END AS QTSEND,		
		       CASE WHEN TH.STATDO IN ('PPC','FPC') AND TH.DRELIN = 'V'		
		                 THEN 'DAP01'		
		            ELSE ' '		
		         END AS ICSEND,		
				
		       CASE WHEN TH.STATDO IN ('PPC','FPC') AND TH.DRELIN = 'V'		
		                 THEN NVL(MAX(IF.EDOCKY),' ')		
		            ELSE ' '		
		         END AS EDOCKY		
		  FROM TASDH TH		
		       INNER JOIN TASDI TI		
		               ON TI.TASKKY = TH.TASKKY		
		       LEFT OUTER JOIN DOCTM DT		
		               ON DT.DOCUTY = TH.TASOTY		
		       LEFT OUTER JOIN CMCDV ST		
		               ON ST.CMCDKY = 'STATDO'		
		              AND ST.CMCDVL = TH.STATDO		
		       LEFT OUTER JOIN IFWMS301 IF		
		               ON IF.ZDOC_NO = TH.TASKKY		
		              AND IF.ZDOC_ITEM = TI.TASKIT		
		 WHERE 1 = 1
		 <isNotEmpty property="WAREKY">
		   AND  TH.WAREKY = #SES_WAREKY#		
		 </isNotEmpty>	
		   AND TH.TASOTY IN (SELECT DOCUTY FROM DOCTM		
		                      WHERE DOCCAT='300'		
		                        AND DOCUTY NOT IN ('207','208','210','310','320','903') AND CDOCTY=' ')		
	    <isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		 </isNotEmpty>		
		 GROUP BY TH.TASKKY, TH.DOCDAT, TH.DRELIN, TH.WAREKY,		
		          TH.TASOTY, NVL(DT.SHORTX,' '),		
		          TH.STATDO, NVL(ST.CDESC1,' '),		
		          TH.QTTAOR, TH.QTCOMP		
		 ORDER BY TH.TASKKY		
	</select>
	
	<select id="IFWMS301PROC_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_AIRWMS_IFWMS301( #TASOTY#, #TASKKY#, #ERPWHF#, #ERPWHT# )}
	</select>
	
	<select id="TK32_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			  ' ' AS TASKKY
			, #WAREKY# AS WAREKY
			, NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = #WAREKY#),' ') AS WARENM
			, TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT
			, #TASOTY# AS TASOTY
			, NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = #TASOTY#),' ') AS DOCTNM
			, 'NEW' AS STATDO
			, NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATNM
			, ' ' AS DOCTXT
			, ' ' AS PTNRKY
			, ' ' AS DPTNNM
		FROM DUAL
	</select>
	
	<select id="TK32SUB_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			  ST.STOKKY AS STOKKY
			, ST.SKUKEY AS SKUKEY
			, SM.DESC01 AS DESC01
			, SM.DESC02 AS DESC02
			, ST.LOCAKY AS LOCAKY
			, ST.TRNUID AS TRNUID
			, ST.QTSIWH AS QTSIWH
			, ST.UOMKEY AS UOMKEY
			, ST.MEASKY AS MEASKY
			, ST.QTSIWH AS QTTAOR
			, ST.LOTA01 AS LOTA01
			, ST.LOTA02 AS LOTA02
			, ST.LOTA03 AS LOTA03
			, ST.LOTA04 AS LOTA04
			, ST.LOTA05 AS LOTA05
			, ST.LOTA06 AS LOTA06
			, ( SELECT CDESC1 FROM CMCDV CV  WHERE CV.CMCDKY = 'LOTA06' AND  CV.CMCDVL = ST.LOTA06) AS LOTA06NM
			, ST.LOTA07 AS LOTA07
			, ST.LOTA08 AS LOTA08
			, ST.LOTA09 AS LOTA09
			, ST.LOTA10 AS LOTA10
			, ST.LOTA11 AS LOTA11
			, ST.LOTA12 AS LOTA12
			, ST.LOTA13 AS LOTA13
			, ST.LOTA14 AS LOTA14
			, ST.LOTA15 AS LOTA15
			, ST.LOTA16 AS LOTA16
			, ST.LOTA17 AS LOTA17
			, ST.LOTA18 AS LOTA18
			, ST.LOTA19 AS LOTA19
			, ST.LOTA20 AS LOTA20
			, ' ' AS TASRSN
			, SM.ASKU01 AS ASKU01
			, SM.ASKU02 AS ASKU02
			, SM.ASKU03 AS ASKU03
			, SM.ASKU04 AS ASKU04
			, SM.ASKU05 AS ASKU05
			, SM.EANCOD AS EANCOD
			, SM.GTINCD AS GTINCD
			, SM.SKUG01 AS SKUG01
			, SM.SKUG02 AS SKUG02
			, SM.SKUG03 AS SKUG03
			, SM.SKUG04 AS SKUG04
			, SM.SKUG05 AS SKUG05
			, SM.GRSWGT AS GRSWGT
			, SM.NETWGT AS NETWGT
			, SM.WGTUNT AS WGTUNT
			, SM.LENGTH AS LENGTH
			, SM.WIDTHW AS WIDTHW
			, SM.HEIGHT AS HEIGHT
			, SM.CUBICM AS CUBICM
			, SM.CAPACT AS CAPACT
			, ST.LOTNUM AS LOTNUM
			, ' ' AS RSNCOD
			, 'SHPLOC' AS LOCATG
            , 'SHPLOC' AS LOCAAC 
            , 'MV' AS TASKTY 
			, 'SHPLOC' AS LOCATG
            , 'SHPLOC' AS LOCAAC 
            , 'MV' AS TASKTY
            ,  ' ' AS COSTCT
            , ST.OWNRKY AS OWNRKY
		FROM STKKY ST
		INNER JOIN SKUMA SM 
			ON SM.OWNRKY = ST.OWNRKY 
			AND SM.SKUKEY = ST.SKUKEY
		WHERE 1 = 1
			AND ST.QTSIWH > 0
			AND ST.QTSIWH - GREATEST(QTSALO,QTSPMO) - QTSBLK > 0
		<isNotEmpty property="WAREKY">
		   AND  ST.WAREKY = #WAREKY#		
		</isNotEmpty>
		<isNotEmpty property="OWNRKY">
		   AND  ST.OWNRKY = #OWNRKY#		
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		 </isNotEmpty>
	</select>
	
	<select id="TK32DOCUTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCGRP = 'ETC'
	</select>
	
	<select id="TK33DOCUTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCGRP = 'SCR'
	</select>
	
	<select id="TK34DOCUTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCGRP = 'RTN'
	</select>
	
	<select id="TK33RSNCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT
		    RSNCOD AS VALUE_COL,
		    SHORTX AS TEXT_COL
		FROM RSNCD 
		WHERE 1=1
			AND DOCUTY IN ('398','399')
			AND OWNRKY = #SES_OWNER#
	</select>
	
	<select id="TK31_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			  ' ' AS TASKKY
			, #SES_WAREKY# AS WAREKY
			, NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = #SES_WAREKY#),' ') AS WARENM
			, TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT
			, #AREAKY# AS AREAKY
			, NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = #SES_WAREKY# AND AREAKY = #AREAKY#),' ') AS AREANM
			, #AREATG# AS AREATG
			, NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = #SES_WAREKY# AND AREAKY = #AREATG#),' ') AS AREATGNM
			, #TASOTY# AS TASOTY
			, NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = #TASOTY#),' ') AS DOCTNM
			, 'NEW' AS STATDO
			, NVL((SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'STATDO' AND CMCDVL = 'NEW'),' ') AS STATNM
			, ' ' AS DOCTXT
		FROM DUAL
	</select>
	
	<select id="TK31DOCUTYCOMBO_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT DOCUTY AS VALUE_COL
			 , SHORTX AS TEXT_COL
		FROM	DOCTM
		WHERE	1 =1
		AND 	DOCCAT = '300'
		AND		DOCUTY = '311'
	</select>
	
	<select id="TK90_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT 
			  TI.OWNRKY
			, NVL((SELECT NAME01 FROM OWNER WHERE OWNRKY = TI.OWNRKY),' ') AS OWNRNM
			, TH.WAREKY
			, NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TH.WAREKY),' ') AS WARENM
			, TH.TSPKEY AS AREAKY
			, NVL((SELECT SHORTX FROM AREMA WHERE WAREKY = TH.WAREKY AND AREAKY = TH.TSPKEY),' ') AS AREANM
			, TH.WARETG AS WARETO
			, NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TH.WARETG),' ') AS WARETONM
			, TH.TASKKY
			, TH.DOCDAT
			, TH.TASOTY
			, NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = TH.TASOTY),' ') AS TASONM
			, TI.SKUKEY
			, SM.DESC01
			, SM.DESC02
			, TI.QTTAOR
			, TI.QTCOMP
			, TI.SUOMKY AS UOMKEY
			, TI.LOCASR AS LOCAKY
			<!-- , (SELECT RSNCOD FROM RSNCD WHERE TI.RSNCOD = RSNCOD AND DOCCAT = '300' AND DOCUTY = TH.TASOTY) AS RSNCOD
            , (SELECT SHORTX FROM RSNCD WHERE TI.RSNCOD = RSNCOD AND DOCCAT = '300' AND DOCUTY = TH.TASOTY) AS RSNCODNM  -->
            , TI.RSNCOD AS RSNCOD
            , NVL((SELECT SHORTX FROM RSNCD WHERE OWNRKY = TI.OWNRKY AND DOCCAT = '300' AND DOCUTY = TH.TASOTY AND RSNCOD = TI.RSNCOD),' ') AS RSNCODNM
            , TI.TASRSN
			, TI.LOTA01, TI.LOTA02, TI.LOTA03, TI.LOTA04, TI.LOTA05
			, ( SELECT CDESC1 FROM CMCDV CV  WHERE CV.CMCDKY = 'LOTA06' AND  CV.CMCDVL = TI.LOTA06) AS LOTA06
			, TI.LOTA07, TI.LOTA08, TI.LOTA09, TI.LOTA10
			, TI.LOTA11, TI.LOTA12, TI.LOTA13, TI.LOTA14, TI.LOTA15
			, TI.LOTA16, TI.LOTA17, TI.LOTA18, TI.LOTA19, TI.LOTA20, TI.WORKNM
			,(SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'COSTCT' AND X.CMCDVL = TI.WORKNM) AS WORKNAME
			, TI.CREDAT, TI.CRETIM, TI.CREUSR, NVL((SELECT NMLAST FROM USRMA WHERE USERID = TI.CREUSR),' ') AS CUSRNM
			, TI.LMODAT, TI.LMOTIM, TI.LMOUSR, NVL((SELECT NMLAST FROM USRMA WHERE USERID = TI.LMOUSR),' ') AS LUSRNM, TH.DOCTXT
		FROM TASDH TH
			INNER JOIN TASDI TI ON TI.TASKKY = TH.TASKKY	
			INNER JOIN SKUMA SM ON SM.OWNRKY = TI.OWNRKY AND SM.SKUKEY = TI.SKUKEY
		WHERE 1 = 1
			AND TH.TASOTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT = '300' AND DOCGRP IN ('ETC', 'SCR', 'RTN'))
		<isNotEmpty property="OWNRKY">
			AND TI.OWNRKY = #OWNRKY#
		</isNotEmpty>
		<isNotEmpty property="WAREKY">
			AND TH.WAREKY = #WAREKY#
		</isNotEmpty>
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
	</select>
	
	<select id="DEPTNM_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT 
			NAME01
		FROM BZPTN
		WHERE 1 = 1
 	       AND PTNRTY = 'VD'
 	       AND PTNRKY = #PTNRKY# 
   </select>
	
	<insert id="PRTLGTK90_INSERT" parameterClass="Map">
		INSERT
			INTO PRTLG
			  (PRTSEQ, QTYPRT, PRTTYP, WAREKY, AREAKY, LOCAKY, TRNUID, OWNRKY, SKUKEY, PTNRKY
			 , PTNRTY, DOCDAT, ASNDAT, RCVDAT, RQSHPD, SHPDAT, QTSIWH, QTYORG, QTYASN, QTYRCV
			 , QTSHPO, QTYALO, QTYCMP, QTYSHP, QTYBLK, QTYADJ, QTYPHY, MEASKY, UOMKEY, QTDUOM
			 , QTYBOX, QTYREM, LOTA01, LOTA02, LOTA03, LOTA04, LOTA05, LOTA06, LOTA07, LOTA08
             , LOTA09, LOTA10, LOTA11, LOTA12, LOTA13, LOTA14, LOTA15, LOTA16, LOTA17, LOTA18
             , LOTA19, LOTA20, DOCKEY, DOCITM, DOCUTY, PURCKY, PURCIT, ASNDKY, ASNDIT, RECVKY
             , RECVIT, SHPOKY, SHPOIT, SHPGKY, SHPGIT, TASKKY, TASKIT, STKNUM, SADJKY, SADJIT
             , INVBKY, INVBIT, PHYIKY, PHYIIT, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
             , INDBZL, INDARC, UPDCHK)
			VALUES 
			(    #PRTSEQ#, 1, 'TK90', #WAREKY#, #AREAKY#, ' ', ' ', #OWNRKY#, ' ', ' '
				,' ', #CREDAT#, ' ', ' ', NVL(#DOCDAT#,' '), ' ', 0, 0, 0, 0
				, 0, 0, 0, 0, 0, 0, 0, ' ', ' ', 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', ' ', ' ', ' ', ' ', ' ', ' ', 0, 0, 0
				, 0, 0, ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '
				, ' ', NVL(#SHPOKY#,' '), ' ', ' ', ' ', #TASKKY#, ' ', ' ', ' ', ' '
                ,' ', ' ', ' ', ' ', TO_CHAR(SYSDATE, 'YYYYMMDD'), TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#, TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'), #SES_USER_ID#,' '
                ,' ', 0 
			)
	</insert>
	
	<select id="PT02HEAD_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT TASDH.TASKKY AS TASKKY,
		       TASDH.WAREKY AS WAREKY,
		       NVL((SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY),' ') AS WARENM,
		       TASDH.TASOTY AS TASOTY,
		       NVL((SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY),' ') AS TASONM,
		       TASDH.DOCDAT AS DOCDAT,
		       TASDH.DOCCAT AS DOCCAT,
		       (SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
		       TASDH.DRELIN AS DRELIN,
		       TASDH.STATDO AS STATDO,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
		       (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
		       TASDH.QTTAOR AS QTTAOR,
		       TASDH.QTCOMP AS QTCOMP,
		       TASDH.TSPKEY AS TSPKEY,
		       TASDH.DOORKY AS DOORKY,
		       DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG,
		       TASDH.PTNRKY AS PTNRKY,
		       TASDH.CREDAT AS CREDAT,
		       TASDH.CRETIM AS CRETIM,
		       TASDH.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
		       TASDH.LMODAT AS LMODAT,
		       TASDH.LMOTIM AS LMOTIM,
		       TASDH.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
		       TASDH.INDBZL AS INDBZL,
		       TASDH.INDARC AS INDARC,
		       TASDH.UPDCHK AS UPDCHK,
		       TASDH.KEEPTS AS KEEPTS,
		       MAX(TASDI.RECVKY) AS RECVKY,
		       MAX(TASDI.SHPOKY) AS SHPOKY,
		       MAX(SHPDH.SHPMTY) AS SHPMTY,
		       (SELECT CDESC1 FROM CMCDV WHERE CMCDKY = 'SHPMTY' AND CMCDVL = SHPDH.SHPMTY AND ROWNUM = 1) AS SHPMTYNM,
		       MAX(SHPDH.STATDO) AS SHSTATDO,
		       MAX(CMCDV.CDESC1) AS SHSTATDONM,
		       MAX(SHPDH.DPTNKY) AS DPTNKY,
		       MAX(BZPTN.NAME01) AS DPTNKYNM,
		       MAX(TASDI.SEBELN) AS SEBELN,
		       MAX(TASDI.SZMBLNO) AS SZMBLNO,
		       MAX(TASDI.SZMIPNO) AS SZMIPNO,
		       MAX(TASDI.STRAID) AS STRAID,
		       MAX(TASDI.SVBELN) AS SVBELN,
		       MAX(TASDI.STKNUM) AS STKNUM,
		       MAX(TASDI.STDLNR) AS STDLNR,
		       MAX(TASDI.SSORNU) AS SSORNU,
		       MAX(TASDI.SMBLNR) AS SMBLNR,
		       MAX(TASDI.SXBLNR) AS SXBLNR,
		       NVL(SUM(DECODE(TASDI.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
		       MAX(TASDI.AREAKY) AS AREAKY,
		       MAX(TASDI.LOTA01) AS LOTA01,
         	   SHPDH.RQSHPD AS REFDAT
		  FROM TASDH
		       INNER JOIN TASDI
		               ON TASDH.TASKKY = TASDI.TASKKY
		       LEFT OUTER JOIN SHPDI
		               ON SHPDI.SHPOKY = TASDI.SHPOKY 
		               AND SHPDI.SHPOIT = TASDI.SHPOIT
		       LEFT OUTER JOIN SHPDH 
		               ON SHPDH.SHPOKY = TASDI.SHPOKY
		       LEFT OUTER JOIN DOCTM
		               ON SHPDH.DOCUTY = DOCTM.DOCUTY
		       LEFT OUTER JOIN CMCDV
		               ON SHPDH.STATDO = CMCDV.CMCDVL 
		               AND CMCDKY = 'STATDO'
		       LEFT OUTER JOIN BZPTN
		               ON SHPDH.DPTNKY = BZPTN.PTNRKY
		               AND BZPTN.PTNRTY = 'CT'
		 WHERE TASDH.WAREKY = #WAREKY#
<!-- 		   AND TASDI.OWNRKY = #OWNRKY# -->
		   AND TASDI.STATIT = 'NEW'
		   <isNotEmpty property="DOCDAT1">
		   	 AND TASDH.DOCDAT &gt;= #DOCDAT1# AND TASDH.DOCDAT &lt;= #DOCDAT2#
		   </isNotEmpty>
<!-- 		<isNotEmpty property="REFDAT"> -->
<!-- 		   AND SHPDH.RQSHPD = #REFDAT# -->
<!-- 		</isNotEmpty> -->
		<isNotEmpty property="RANGE_SQL">
			$RANGE_SQL$
		</isNotEmpty>
		 GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
		          TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
		          TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
		          TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
		          TASDH.KEEPTS, TASDH.WARETG, SHPDH.SHPMTY, SHPDH.RQSHPD
		 ORDER BY TASDH.TASKKY
	</select>
	
	
	<select id="PT02_SAVE_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       B.QTTAOR AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       B.LOCATG AS LOCAAC,
		       B.SECTTG AS SECTAC,
		       B.PAIDTG AS PAIDAC,
		       B.TRNUTG AS TRNUAC,
		       B.TTRUTY AS ATRUTY,
		       B.TMEAKY AS AMEAKY,
		       B.TUOMKY AS AUOMKY,
		       B.QTTPUM AS QTAPUM,
		       B.TDUOKY AS ADUOKY,
		       B.QTTDUM AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND A.TASKKY = #TASKKY#
		   AND B.STATIT = 'NEW'
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="PT02_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       B.QTTAOR AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       B.LOCATG AS LOCAAC,
		       B.SECTTG AS SECTAC,
		       B.PAIDTG AS PAIDAC,
		       B.TRNUTG AS TRNUAC,
		       B.TTRUTY AS ATRUTY,
		       B.TMEAKY AS AMEAKY,
		       B.TUOMKY AS AUOMKY,
		       B.QTTPUM AS QTAPUM,
		       B.TDUOKY AS ADUOKY,
		       B.QTTDUM AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND A.TASKKY = #TASKKY#
		   AND B.STATIT = 'NEW'
		 ORDER BY B.TASKKY, B.TASKIT
	</select>
	
	<select id="PT02SEARCHTASDI_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT 
			T.TASKKY,
			T.TASKIT,
			T.TASKTY,
			T.RSNCOD,
			T.STATIT,
			T.QTTAOR,
			T.QTCOMP,
			T.OWNRKY,
			T.SKUKEY,
			T.LOTNUM,
			T.ACTCDT,
			T.ACTCTI,
			T.QTYUOM,
			T.TKFLKY,
			T.STEPNO,
			T.LSTTFL,
			T.LOCASR,
			T.SECTSR,
			T.PAIDSR,
			T.TRNUSR,
			T.STRUTY,
			T.SMEAKY,
			T.SUOMKY,
			T.QTSPUM,
			T.SDUOKY,
			T.QTSDUM,
			T.LOCATG,
			T.SECTTG,
			T.PAIDTG,
			T.TRNUTG,
			T.TTRUTY,
			T.TMEAKY,
			T.TUOMKY,
			T.QTTPUM,
			T.TDUOKY,
			T.QTTDUM,
			T.LOCAAC,
			T.SECTAC,
			T.PAIDAC,
			T.TRNUAC,
			T.ATRUTY,
			T.AMEAKY,
			T.AUOMKY,
			T.QTAPUM,
			T.ADUOKY,
			T.QTADUM,
			T.REFDKY,
			T.REFDIT,
			T.REFCAT,
			T.REFDAT,
			T.PURCKY,
			T.PURCIT,
			T.ASNDKY,
			T.ASNDIT,
			T.RECVKY,
			T.RECVIT,
			T.SHPOKY,
			T.SHPOIT,
			T.GRPOKY,
			T.GRPOIT,
			T.SADJKY,
			T.SADJIT,
			T.SDIFKY,
			T.SDIFIT,
			T.PHYIKY,
			T.PHYIIT,
			T.DROPID,
			T.DESC01,
			T.DESC02,
			T.ASKU01,
			T.ASKU02,
			T.ASKU03,
			T.ASKU04,
			T.ASKU05,
			T.EANCOD,
			T.GTINCD,
			T.SKUG01,
			T.SKUG02,
			T.SKUG03,
			T.SKUG04,
			T.SKUG05,
			T.GRSWGT,
			T.NETWGT,
			T.WGTUNT,
			T.LENGTH,
			T.WIDTHW,
			T.HEIGHT,
			T.CUBICM,
			T.CAPACT,
			T.WORKID,
			T.WORKNM,
			T.HHTTID,
			T.AREAKY,
			T.LOTA01,
			T.LOTA02,
			T.LOTA03,
			T.LOTA04,
			T.LOTA05,
			T.LOTA06,
			T.LOTA07,
			T.LOTA08,
			T.LOTA09,
			T.LOTA10,
			T.LOTA11,
			T.LOTA12,
			T.LOTA13,
			T.LOTA14,
			T.LOTA15,
			T.LOTA16,
			T.LOTA17,
			T.LOTA18,
			T.LOTA19,
			T.LOTA20,
			T.AWMSNO,
			T.AWMSTS,
			T.SMANDT,
			T.SEBELN,
			T.SEBELP,
			T.SZMBLNO,
			T.SZMIPNO,
			T.STRAID,
			T.SVBELN,
			T.SPOSNR,
			T.STKNUM,
			T.STPNUM,
			T.SWERKS,
			T.SLGORT,
			T.SDATBG,
			T.STDLNR,
			T.SSORNU,
			T.SSORIT,
			T.SMBLNR,
			T.SZEILE,
			T.SMJAHR,
			T.SXBLNR,
			T.SAPSTS,
			T.DOORKY,
			T.PTLT01,
			T.PTLT02,
			T.PTLT03,
			T.PTLT04,
			T.PTLT05,
			T.PTLT06,
			T.PTLT07,
			T.PTLT08,
			T.PTLT09,
			T.PTLT10,
			T.PTLT11,
			T.PTLT12,
			T.PTLT13,
			T.PTLT14,
			T.PTLT15,
			T.PTLT16,
			T.PTLT17,
			T.PTLT18,
			T.PTLT19,
			T.PTLT20,
			T.PASTKY,
			T.ALSTKY,
			T.SBKTXT,
			T.TASRSN,
			T.CREDAT,
			T.CRETIM,
			T.CREUSR,
			T.LMODAT,
			T.LMOTIM,
			T.LMOUSR,
			T.INDBZL,
			T.INDARC,
			T.UPDCHK
		FROM TASDI T
		WHERE T.TASKKY = #TASKKY#
		  AND T.TASKIT = #TASKIT#
	</select>
	
	<select id="PT02SEARCHTASDR_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT 
			R.TASKKY,
			R.TASKIT,
			R.TASKIR,
			R.STOKKY,
			R.QTSTKM,
			R.QTSTKC,
			R.CREDAT,
			R.CRETIM,
			R.CREUSR,
			R.LMODAT,
			R.LMOTIM,
			R.LMOUSR,
			R.INDBZL,
			R.INDARC,
			R.UPDCHK
		FROM TASDR R
		WHERE R.TASKKY = #TASKKY# 
		  AND R.TASKIT = #TASKIT#
	</select>
	
	<select id="PT02STKKYFIND_MAP" parameterClass="Map" resultClass="DataMap">
		SELECT A.TASKKY AS TASKKY,
		       A.TASKIT AS TASKIT,
		       A.TASKIR AS TASKIR,
		       A.STOKKY AS STOKKY,
		       A.QTSTKM AS QTSTKM,
		       A.QTSTKC AS QTSTKC,
		       A.CREDAT AS CREDAT,
		       A.CRETIM AS CRETIM,
		       A.CREUSR AS CREUSR,
		       A.LMODAT AS LMODAT,
		       A.LMOTIM AS LMOTIM,
		       A.LMOUSR AS LMOUSR,
		       A.INDBZL AS INDBZL,
		       A.INDARC AS INDARC,
		       A.UPDCHK AS UPDCHK,
		       B.STOKKY AS STOKKY,
		       B.QTSIWH AS QTSIWH,
		       B.QTSALO AS QTSALO,
		       B.QTSPMO AS QTSPMO,
		       B.QTSPMI AS QTSPMI,
		       B.QTSBLK AS QTSBLK,
		       B.SRCSKY AS SRCSKY
		FROM   TASDR A,
		       STKKY B
		WHERE  A.STOKKY = B.STOKKY
		AND    A.TASKKY = #TASKKY#
		AND    A.TASKIT = #TASKIT#
		ORDER BY A.TASKIR
	</select>
	
	<delete id="PT02TASDIDEL_DELETE" parameterClass="Map">
		DELETE FROM TASDI
		 WHERE TASKKY = #TASKKY#
		   AND TASKIT = #TASKIT#
	</delete>
	
	<update id="PT02TASDIDEL_UPDATE" parameterClass="Map">
		UPDATE	TASDI
		SET		DROPID = 'V'
		WHERE	TASKKY = #TASKKY#
		AND		TASKIT = #TASKIT#
	</update>
	
	<insert id="PT02TASDIEND_INSERT" parameterClass="Map">
		INSERT INTO TASDI(
				TASKKY,
				TASKIT,
				TASKTY,
				RSNCOD,
				STATIT,
				QTTAOR,
				QTCOMP,
				OWNRKY,
				SKUKEY,
				LOTNUM,
				ACTCDT,
				ACTCTI,
				QTYUOM,
				TKFLKY,
				STEPNO,
				LSTTFL,
				LOCASR,
				SECTSR,
				PAIDSR,
				TRNUSR,
				STRUTY,
				SMEAKY,
				SUOMKY,
				QTSPUM,
				SDUOKY,
				QTSDUM,
				LOCATG,
				SECTTG,
				PAIDTG,
				TRNUTG,
				TTRUTY,
				TMEAKY,
				TUOMKY,
				QTTPUM,
				TDUOKY,
				QTTDUM,
				LOCAAC,
				SECTAC,
				PAIDAC,
				TRNUAC,
				ATRUTY,
				AMEAKY,
				AUOMKY,
				QTAPUM,
				ADUOKY,
				QTADUM,
				REFDKY,
				REFDIT,
				REFCAT,
				REFDAT,
				PURCKY,
				PURCIT,
				ASNDKY,
				ASNDIT,
				RECVKY,
				RECVIT,
				SHPOKY,
				SHPOIT,
				GRPOKY,
				GRPOIT,
				SADJKY,
				SADJIT,
				SDIFKY,
				SDIFIT,
				PHYIKY,
				PHYIIT,
				DROPID,
				DESC01,
				DESC02,
				ASKU01,
				ASKU02,
				ASKU03,
				ASKU04,
				ASKU05,
				EANCOD,
				GTINCD,
				SKUG01,
				SKUG02,
				SKUG03,
				SKUG04,
				SKUG05,
				GRSWGT,
				NETWGT,
				WGTUNT,
				LENGTH,
				WIDTHW,
				HEIGHT,
				CUBICM,
				CAPACT,
				WORKID,
				WORKNM,
				HHTTID,
				AREAKY,
				LOTA01,
				LOTA02,
				LOTA03,
				LOTA04,
				LOTA05,
				LOTA06,
				LOTA07,
				LOTA08,
				LOTA09,
				LOTA10,
				LOTA11,
				LOTA12,
				LOTA13,
				LOTA14,
				LOTA15,
				LOTA16,
				LOTA17,
				LOTA18,
				LOTA19,
				LOTA20,
				AWMSNO,
				AWMSTS,
				SMANDT,
				SEBELN,
				SEBELP,
				SZMBLNO,
				SZMIPNO,
				STRAID,
				SVBELN,
				SPOSNR,
				STKNUM,
				STPNUM,
				SWERKS,
				SLGORT,
				SDATBG,
				STDLNR,
				SSORNU,
				SSORIT,
				SMBLNR,
				SZEILE,
				SMJAHR,
				SXBLNR,
				SAPSTS,
				DOORKY,
				PTLT01,
				PTLT02,
				PTLT03,
				PTLT04,
				PTLT05,
				PTLT06,
				PTLT07,
				PTLT08,
				PTLT09,
				PTLT10,
				PTLT11,
				PTLT12,
				PTLT13,
				PTLT14,
				PTLT15,
				PTLT16,
				PTLT17,
				PTLT18,
				PTLT19,
				PTLT20,
				PASTKY,
				ALSTKY,
				SBKTXT,
				TASRSN,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR,
				INDBZL,
				INDARC,
				UPDCHK
			)VALUES(
				NVL(#TASKKY#, ' '),
				NVL(#TASKIT#, ' '),
				NVL(#TASKTY#, ' '),
				NVL(#RSNCOD#, ' '),
				NVL(#STATIT#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTAOR#), 0)),
				TO_NUMBER(NVL(TRIM(#QTCOMP#), 0)),
				NVL(#OWNRKY#, ' '),
				NVL(#SKUKEY#, ' '),
				NVL(#LOTNUM#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				TO_NUMBER(NVL(TRIM(#QTYUOM#), 0)),
				NVL(#TKFLKY#, ' '),
				NVL(#STEPNO#, ' '),
				NVL(#LSTTFL#, ' '),
				NVL(#LOCASR#, ' '),
				NVL(#SECTSR#, ' '),
				NVL(#PAIDSR#, ' '),
				NVL(#TRNUSR#, ' '),
				NVL(#STRUTY#, ' '),
				NVL(#SMEAKY#, ' '),
				NVL(#SUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSPUM#), 0)),
				NVL(#SDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTSDUM#), 0)),
				NVL(#LOCATG#, ' '),
				NVL(#SECTTG#, ' '),
				NVL(#PAIDTG#, ' '),
				NVL(#TRNUTG#, ' '),
				NVL(#TTRUTY#, ' '),
				NVL(#TMEAKY#, ' '),
				NVL(#TUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTPUM#), 0)),
				NVL(#TDUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTTDUM#), 0)),
				NVL(#LOCAAC#, ' '),
				NVL(#SECTAC#, ' '),
				NVL(#PAIDAC#, ' '),
				NVL(#TRNUAC#, ' '),
				NVL(#ATRUTY#, ' '),
				NVL(#AMEAKY#, ' '),
				NVL(#AUOMKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTAPUM#), 0)),
				NVL(#ADUOKY#, ' '),
				TO_NUMBER(NVL(TRIM(#QTADUM#), 0)),
				NVL(#REFDKY#, ' '),
				NVL(#REFDIT#, ' '),
				NVL(#REFCAT#, ' '),
				NVL(#REFDAT#, ' '),
				NVL(#PURCKY#, ' '),
				NVL(#PURCIT#, ' '),
				NVL(#ASNDKY#, ' '),
				NVL(#ASNDIT#, ' '),
				NVL(#RECVKY#, ' '),
				NVL(#RECVIT#, ' '),
				NVL(#SHPOKY#, ' '),
				NVL(#SHPOIT#, ' '),
				NVL(#GRPOKY#, ' '),
				NVL(#GRPOIT#, ' '),
				NVL(#SADJKY#, ' '),
				NVL(#SADJIT#, ' '),
				NVL(#SDIFKY#, ' '),
				NVL(#SDIFIT#, ' '),
				NVL(#PHYIKY#, ' '),
				NVL(#PHYIIT#, ' '),
				'V'
<!-- 				NVL(#DROPID#, ' '), -->
				NVL(#DESC01#, ' '),
				NVL(#DESC02#, ' '),
				NVL(#ASKU01#, ' '),
				NVL(#ASKU02#, ' '),
				NVL(#ASKU03#, ' '),
				NVL(#ASKU04#, ' '),
				NVL(#ASKU05#, ' '),
				NVL(#EANCOD#, ' '),
				NVL(#GTINCD#, ' '),
				NVL(#SKUG01#, ' '),
				NVL(#SKUG02#, ' '),
				NVL(#SKUG03#, ' '),
				NVL(#SKUG04#, ' '),
				NVL(#SKUG05#, ' '),
				TO_NUMBER(NVL(TRIM(#GRSWGT#), 0)),
				TO_NUMBER(NVL(TRIM(#NETWGT#), 0)),
				NVL(#WGTUNT#, ' '),
				TO_NUMBER(NVL(TRIM(#LENGTH#), 0)),
				TO_NUMBER(NVL(TRIM(#WIDTHW#), 0)),
				TO_NUMBER(NVL(TRIM(#HEIGHT#), 0)),
				TO_NUMBER(NVL(TRIM(#CUBICM#), 0)),
				TO_NUMBER(NVL(TRIM(#CAPACT#), 0)),
				NVL(#WORKID#, ' '),
				NVL(#WORKNM#, ' '),
				NVL(#HHTTID#, ' '),
				NVL(#AREAKY#, ' '),
				NVL(#LOTA01#, ' '),
				NVL(#LOTA02#, ' '),
				NVL(#LOTA03#, ' '),
				NVL(#LOTA04#, ' '),
				NVL(#LOTA05#, ' '),
				NVL(#LOTA06#, ' '),
				NVL(#LOTA07#, ' '),
				NVL(#LOTA08#, ' '),
				NVL(#LOTA09#, ' '),
				NVL(#LOTA10#, ' '),
				NVL(#LOTA11#, ' '),
				NVL(#LOTA12#, ' '),
				NVL(#LOTA13#, ' '),
				NVL(#LOTA14#, ' '),
				NVL(#LOTA15#, ' '),
				TO_NUMBER(NVL(TRIM(#LOTA16#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA17#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA18#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA19#), 0)),
				TO_NUMBER(NVL(TRIM(#LOTA20#), 0)),
				NVL(#AWMSNO#, ' '),
				NVL(#AWMSTS#, ' '),
				NVL(#SMANDT#, ' '),
				NVL(#SEBELN#, ' '),
				NVL(#SEBELP#, ' '),
				NVL(#SZMBLNO#, ' '),
				NVL(#SZMIPNO#, ' '),
				NVL(#STRAID#, ' '),
				NVL(#SVBELN#, ' '),
				NVL(#SPOSNR#, ' '),
				NVL(#STKNUM#, ' '),
				NVL(#STPNUM#, ' '),
				NVL(#SWERKS#, ' '),
				NVL(#SLGORT#, ' '),
				NVL(#SDATBG#, ' '),
				NVL(#STDLNR#, ' '),
				NVL(#SSORNU#, ' '),
				NVL(#SSORIT#, ' '),
				NVL(#SMBLNR#, ' '),
				NVL(#SZEILE#, ' '),
				NVL(#SMJAHR#, ' '),
				NVL(#SXBLNR#, ' '),
				NVL(#SAPSTS#, ' '),
				NVL(#DOORKY#, ' '),
				NVL(#PTLT01#, ' '),
				NVL(#PTLT02#, ' '),
				NVL(#PTLT03#, ' '),
				NVL(#PTLT04#, ' '),
				NVL(#PTLT05#, ' '),
				NVL(#PTLT06#, ' '),
				NVL(#PTLT07#, ' '),
				NVL(#PTLT08#, ' '),
				NVL(#PTLT09#, ' '),
				NVL(#PTLT10#, ' '),
				NVL(#PTLT11#, ' '),
				NVL(#PTLT12#, ' '),
				NVL(#PTLT13#, ' '),
				NVL(#PTLT14#, ' '),
				NVL(#PTLT15#, ' '),
				TO_NUMBER(NVL(TRIM(#PTLT16#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT17#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT18#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT19#), 0)),
				TO_NUMBER(NVL(TRIM(#PTLT20#), 0)),
				NVL(#PASTKY#, ' '),
				NVL(#ALSTKY#, ' '),
				NVL(#SBKTXT#, ' '),
				NVL(#TASRSN#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				NVL(#SES_USER_ID#, ' '),
				NVL(#INDBZL#, ' '),
				NVL(#INDARC#, ' '),
				TO_NUMBER(NVL(TRIM(#UPDCHK#), 0))
			)
	</insert>
	
	<insert id="PT02TASDREND_INSERT" parameterClass="Map">
		INSERT INTO TASDR (      
		      TASKKY
		    , TASKIT
		    , TASKIR
		    , STOKKY
		    , QTSTKM
		    , QTSTKC
		    , CREDAT
		    , CRETIM
		    , CREUSR
		    , LMODAT
		    , LMOTIM
		    , LMOUSR    
		) VALUES (
		      #TASKKY#
		    , #TASKIT#
		    , NVL(#TASKIR#,'0001')
		    , #STOKKY#
		    , TO_NUMBER(#QTSTKM#)
		    , TO_NUMBER(#QTSTKC#)
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#
		    , TO_CHAR(SYSDATE, 'YYYYMMDD')
		    , TO_CHAR(SYSDATE, 'HH24MISS')
		    , #SES_USER_ID#   
		)
	</insert>
	
	
	
	
	<select id="DL06_SAVE_LIST" parameterClass="Map" resultClass="DataMap">
		SELECT A.WAREKY AS WAREKY,
		       B.TASKKY AS TASKKY,
		       B.TASKIT AS TASKIT,
		       B.TASKTY AS TASKTY,
		       B.RSNCOD AS RSNCOD,
		       B.TASRSN AS TASRSN,
		       B.STATIT AS STATIT,
		       (SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = B.STATIT) AS STATITNM,
		       B.QTTAOR AS QTTAOR,
		       B.QTTAOR AS QTCOMP,
		       B.OWNRKY AS OWNRKY,
		       B.SKUKEY AS SKUKEY,
		       B.LOTNUM AS LOTNUM,
		       B.ACTCDT AS ACTCDT,
		       B.ACTCTI AS ACTCTI,
		       B.QTYUOM AS QTYUOM,
		       B.TKFLKY AS TKFLKY,
		       B.STEPNO AS STEPNO,
		       B.LSTTFL AS LSTTFL,
		       B.LOCASR AS LOCASR,
		       B.SECTSR AS SECTSR,
		       B.PAIDSR AS PAIDSR,
		       B.TRNUSR AS TRNUSR,
		       B.STRUTY AS STRUTY,
		       B.SMEAKY AS SMEAKY,
		       B.SUOMKY AS SUOMKY,
		       B.QTSPUM AS QTSPUM,
		       B.SDUOKY AS SDUOKY,
		       B.QTSDUM AS QTSDUM,
		       B.LOCATG AS LOCATG,
		       B.SECTTG AS SECTTG,
		       B.PAIDTG AS PAIDTG,
		       B.TRNUTG AS TRNUTG,
		       B.TTRUTY AS TTRUTY,
		       B.TMEAKY AS TMEAKY,
		       B.TUOMKY AS TUOMKY,
		       B.QTTPUM AS QTTPUM,
		       B.TDUOKY AS TDUOKY,
		       B.QTTDUM AS QTTDUM,
		       B.LOCATG AS LOCAAC,
		       B.SECTTG AS SECTAC,
		       B.PAIDTG AS PAIDAC,
		       B.TRNUTG AS TRNUAC,
		       B.TTRUTY AS ATRUTY,
		       B.TMEAKY AS AMEAKY,
		       B.TUOMKY AS AUOMKY,
		       B.QTTPUM AS QTAPUM,
		       B.TDUOKY AS ADUOKY,
		       B.QTTDUM AS QTADUM,
		       B.REFDKY AS REFDKY,
		       B.REFDIT AS REFDIT,
		       B.REFCAT AS REFCAT,
		       B.REFDAT AS REFDAT,
		       B.PURCKY AS PURCKY,
		       B.PURCIT AS PURCIT,
		       B.ASNDKY AS ASNDKY,
		       B.ASNDIT AS ASNDIT,
		       B.RECVKY AS RECVKY,
		       B.RECVIT AS RECVIT,
		       B.SHPOKY AS SHPOKY,
		       B.SHPOIT AS SHPOIT,
		       B.GRPOKY AS GRPOKY,
		       B.GRPOIT AS GRPOIT,
		       B.SADJKY AS SADJKY,
		       B.SADJIT AS SADJIT,
		       B.SDIFKY AS SDIFKY,
		       B.SDIFIT AS SDIFIT,
		       B.PHYIKY AS PHYIKY,
		       B.PHYIIT AS PHYIIT,
		       B.DROPID AS DROPID,
		       B.DESC01 AS DESC01,
		       B.DESC02 AS DESC02,
		       B.ASKU01 AS ASKU01,
		       B.ASKU02 AS ASKU02,
		       B.ASKU03 AS ASKU03,
		       B.ASKU04 AS ASKU04,
		       B.ASKU05 AS ASKU05,
		       B.EANCOD AS EANCOD,
		       B.GTINCD AS GTINCD,
		       B.SKUG01 AS SKUG01,
		       B.SKUG02 AS SKUG02,
		       B.SKUG03 AS SKUG03,
		       B.SKUG04 AS SKUG04,
		       B.SKUG05 AS SKUG05,
		       B.GRSWGT AS GRSWGT,
		       B.NETWGT AS NETWGT,
		       B.WGTUNT AS WGTUNT,
		       B.LENGTH AS LENGTH,
		       B.WIDTHW AS WIDTHW,
		       B.HEIGHT AS HEIGHT,
		       B.CUBICM AS CUBICM,
		       B.CAPACT AS CAPACT,
		       B.WORKID AS WORKID,
		       B.WORKNM AS WORKNM,
		       B.HHTTID AS HHTTID,
		       B.AREAKY AS AREAKY,
		       B.LOTA01 AS LOTA01,
		       B.LOTA02 AS LOTA02,
		       B.LOTA03 AS LOTA03,
		       B.LOTA04 AS LOTA04,
		       B.LOTA05 AS LOTA05,
		       B.LOTA06 AS LOTA06,
		       B.LOTA07 AS LOTA07,
		       B.LOTA08 AS LOTA08,
		       B.LOTA09 AS LOTA09,
		       B.LOTA10 AS LOTA10,
		       B.LOTA11 AS LOTA11,
		       B.LOTA12 AS LOTA12,
		       B.LOTA13 AS LOTA13,
		       B.LOTA14 AS LOTA14,
		       B.LOTA15 AS LOTA15,
		       B.LOTA16 AS LOTA16,
		       B.LOTA17 AS LOTA17,
		       B.LOTA18 AS LOTA18,
		       B.LOTA19 AS LOTA19,
		       B.LOTA20 AS LOTA20,
		       B.AWMSNO AS AWMSNO,
		       B.AWMSTS AS AWMSTS,
		       B.SMANDT AS SMANDT,
		       B.SEBELN AS SEBELN,
		       B.SEBELP AS SEBELP,
		       B.SZMBLNO AS SZMBLNO,
		       B.SZMIPNO AS SZMIPNO,
		       B.STRAID AS STRAID,
		       B.SVBELN AS SVBELN,
		       B.SPOSNR AS SPOSNR,
		       B.STKNUM AS STKNUM,
		       B.STPNUM AS STPNUM,
		       B.SWERKS AS SWERKS,
		       B.SLGORT AS SLGORT,
		       B.SDATBG AS SDATBG,
		       B.STDLNR AS STDLNR,
		       B.SSORNU AS SSORNU,
		       B.SSORIT AS SSORIT,
		       B.SMBLNR AS SMBLNR,
		       B.SZEILE AS SZEILE,
		       B.SMJAHR AS SMJAHR,
		       B.SXBLNR AS SXBLNR,
		       B.SAPSTS AS SAPSTS,
		       B.DOORKY AS DOORKY,
		       B.PTLT01 AS PTLT01,
		       B.PTLT02 AS PTLT02,
		       B.PTLT03 AS PTLT03,
		       B.PTLT04 AS PTLT04,
		       B.PTLT05 AS PTLT05,
		       B.PTLT06 AS PTLT06,
		       B.PTLT07 AS PTLT07,
		       B.PTLT08 AS PTLT08,
		       B.PTLT09 AS PTLT09,
		       B.PTLT10 AS PTLT10,
		       B.PTLT11 AS PTLT11,
		       B.PTLT12 AS PTLT12,
		       B.PTLT13 AS PTLT13,
		       B.PTLT14 AS PTLT14,
		       B.PTLT15 AS PTLT15,
		       B.PTLT16 AS PTLT16,
		       B.PTLT17 AS PTLT17,
		       B.PTLT18 AS PTLT18,
		       B.PTLT19 AS PTLT19,
		       B.PTLT20 AS PTLT20,
		       C.AUTLOC AS AUTLOC,
		       B.CREDAT AS CREDAT,
		       B.CRETIM AS CRETIM,
		       B.CREUSR AS CREUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.CREUSR) AS CUSRNM,
		       B.LMODAT AS LMODAT,
		       B.LMOTIM AS LMOTIM,
		       B.LMOUSR AS LMOUSR,
		       (SELECT X.NMLAST FROM USRMA X WHERE X.USERID = B.LMOUSR) AS LUSRNM,
		       B.INDBZL AS INDBZL,
		       B.INDARC AS INDARC,
		       B.UPDCHK AS UPDCHK
		  FROM TASDH A,
		       TASDI B,
		       LOCMA C
		 WHERE A.TASKKY = B.TASKKY
		   AND A.WAREKY = C.WAREKY
		   AND B.LOCASR = C.LOCAKY
		   AND A.TASKKY = #TASKKY#
		   AND B.STATIT = 'NEW'
		 ORDER BY B.TASKKY, B.TASKIT
	</select>	
	
	
	
	
	
	
	
	
	<select id="MV01LOCATION_VALIDATION" parameterClass="Map" resultClass="DataMap">
		SELECT *
		 FROM (
		        SELECT CASE WHEN (SELECT AREAKY FROM LOCMA WHERE WAREKY = STD.WAREKY AND LOCAKY = STD.LOCAKY) != (SELECT AREAKY FROM LOCMA WHERE WAREKY = STD.WAREKY AND LOCAKY = STD.LOCATG)
		                         THEN 'TASK_M0061†' || STD.SKUKEY ||'/' || STD.DESC01 || '/' || STD.LOCAKY || '/' || STD.LOCATG
		                    ELSE 'OK'
		                 END AS MSG
		        FROM ( $APPEND_QUERY$ ) STD
		      )
		WHERE MSG != 'OK'
	</select>
	
	<select id="PT02PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_TASK_COMPLETE_BY_PT( #TASKKY#, #TASKIT#, #QTCOMP#, #LOCAAC#, #TRNUAC#, #SES_USER_ID# )}
	</select>
	
	<select id="TK31PROCALL_MAP" parameterClass="Map" resultClass="DataMap">
		 { call P_TASK_PROCESS(#TASKKY#, #SES_USER_ID#)}
	</select>
</sqlMap>