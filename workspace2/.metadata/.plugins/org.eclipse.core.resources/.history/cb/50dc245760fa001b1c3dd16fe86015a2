<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Daerim">

		<!-- **[DR02] 출고조회(품목)조회쿼리 -->
		<select id="DR02_HEAD_LIST" parameterType="hashmap" resultType="DataMap">

	    SELECT /*+ ORDERED */I.WAREKY WAREKY,
	           I.SKUKEY SKUKEY,
	           SM.DESC01 DESC01,
	           SM.DESC02 DESC02,
	           SM.DUOMKY DUOMKY,
	           SM.QTDUOM BXIQTY,
	           SM.NETWGT NETWGT,
	           SM.SKUG03 SKUG03,
	           ROUND(SUM(I.QTYREQ) / SM.QTDUOM, 1) AS BOXQTY1,
	           SUM(I.QTYREQ) AS QTSIWH1,
	           (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0)) / SM.QTDUOM AS BOXQTY2,
	           NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) AS QTSIWH2,
	           CASE WHEN NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - SUM(DECODE(I.XSTAT, 'D', 0, I.QTYREQ)) &lt; 0 
	                    THEN (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - SUM(DECODE(I.XSTAT, 'D', 0, I.QTYREQ))) / SM.QTDUOM ELSE 0 END AS BOXQTY3,
	           CASE WHEN NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - SUM(DECODE(I.XSTAT, 'D', 0, I.QTYREQ)) &lt; 0 
	                    THEN NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - SUM(DECODE(I.XSTAT, 'D', 0, I.QTYREQ)) ELSE 0 END AS QTSIWH3,
	           NVL(EX1.INNQTY, 0) / SM.QTDUOM AS BOXQTY4,
	           NVL(EX1.INNQTY, 0) AS QTSIWH4,
	           NVL(EX1.TRFQTY, 0) / SM.QTDUOM AS BOXQTY5,
	           NVL(EX1.TRFQTY, 0) AS QTSIWH5,
	           ROUND(SUM(DECODE(I.XSTAT, 'R', 0, I.QTYREQ)) / SM.QTDUOM, 1) AS BOXQTY6,
	           SUM(DECODE(I.XSTAT, 'R', 0, I.QTYREQ)) AS QTSIWH6
	      FROM IFWMS113 I INNER JOIN SKUMA SM ON I.OWNRKY = SM.OWNRKY AND I.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
	                      LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNRTO AND B.PTNRTY='0007'
	                      LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNROD AND B2.PTNRTY = '0001'
	                      LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY = '2213' AND PK.SKUKEY = I.SKUKEY
	                      LEFT OUTER JOIN SKUWC W ON W.OWNRKY = I.OWNRKY AND W.WAREKY = I.WAREKY AND W.SKUKEY = I.SKUKEY
	                      LEFT OUTER JOIN V_WMS_EXP_STOCK_DR EX1 ON I.OWNRKY = EX1.OWNRKY AND I.WAREKY = EX1.WAREKY AND I.SKUKEY = EX1.SKUKEY AND TO_CHAR(SYSDATE, 'YYYYMMDD') = EX1.EXPDAT
	                      LEFT OUTER JOIN V_WMS_STOCK_TOSS ST1 ON I.OWNRKY = ST1.OWNRKY AND I.WAREKY = ST1.WAREKY AND I.SKUKEY = ST1.SKUKEY
	                      LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
	                                 FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
	                                WHERE 1 = 1
	                                  AND F.OWNRKY = #{OWNRKY}
	                                  AND F.WAREKY = #{LOGIN_WAREKY}
	                          ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
	     WHERE I.MANDT = 'SAP'
   		   AND I.WAREKY = #{WAREKY}
	       AND I.OWNRKY = #{OWNRKY}
	       AND I.QTYREQ &gt; 0
	       AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267') 
	       AND I.C00102 IN ('Y', 'N')
	       AND I.XSTAT IN ('R', 'D')
			<!-- range1 -->
	       <if test="RANGE_SQL != null and RANGE_SQL != ''">
			${RANGE_SQL}
		   </if>
	     GROUP BY I.WAREKY, I.SKUKEY, I.SKUKEY, SM.DESC01, SM.DESC02, SM.DUOMKY, SM.QTDUOM, SM.NETWGT, SM.SKUG01, SM.SKUG02, SM.SKUG03, ST1.STKQTY,
	              EX1.INNQTY, EX1.TRFQTY, EX1.OUTQTY
	    ORDER BY SM.SKUG03, Regexp_replace(REPLACE(UPPER(SM.DESC01), 'G', ''), '[0-9,+,*,-]', ''), SM.NETWGT								
								

	</select>
	
	<!-- **[DR02] 출고조회(품목)아이템조회쿼리 -->
	<select id="DR02_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT TO_NUMBER(I.ORDTOT) ORDTOT,
		       TO_NUMBER(NVL(I.USEQTY, 0)) USEQTY,
		       I.MANDT MANDT,
		       I.SEQNO SEQNO,
		       I.ORDTYP ORDTYP,
		       I.ORDDAT ORDDAT,
		       I.SVBELN SVBELN,
		       I.SPOSNR SPOSNR,
		       I.DOCUTY DOCUTY,
		       I.OTRQDT OTRQDT,
		       I.PTNG08 PTNG08,
		       I.PTNRTO PTNRTO,
		       I.PTNRTONM PTNRTONM,
		       I.PTNROD PTNROD,
		       I.PTNRODNM PTNRODNM,
		       I.OWNRKY OWNRKY,
		       I.WAREKY WAREKY,
		       I.WARESR WARESR,
		       I.WARETG WARETG,
		       I.SKUKEY SKUKEY,
		       I.QTYORG QTYORG,
		       I.QTYREQ QTYREQ,
		       I.QTYREQ - I.QTSHPD QTYREQ2,
		       I.WMSMGT WMSMGT,
		       I.QTSHPD QTSHPD,
		       I.QTYREQ - I.QTSHPD SHPQTY,
		       I.QTYREQ TOTSHP,
		       I.DUOMKY DUOMKY,
		       I.NETPR NETPR,
		       I.SALDPT SALDPT,
		       I.REFDKY REFDKY,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SALEPR SALEPR,
		       I.DISRAT DISRAT,
		       I.SELLPR SELLPR,
		       I.SELAMT SELAMT,
		       I.VATAMT VATAMT,
		       I.CUSRID CUSRID,
		       I.CUNAME CUNAME,
		       I.CUPOST CUPOST,
		       I.CUNATN CUNATN,
		       I.CUTEL1 CUTEL1,
		       I.CUTEL2 CUTEL2,
		       I.CUMAIL CUMAIL,
		       I.CUADDR CUADDR,
		       I.CTNAME CTNAME,
		       I.CTTEL1 CTTEL1,
		       I.SALENM SALENM,
		       I.SALTEL SALTEL,
		       I.TEXT01 TEXT01,
		       I.TEXT02 TEXT02,
		       I.TEXT03 TEXT03,
		       I.C00101 C00101,
		       I.C00102 C00102,
		       I.C00103 C00103,
		       I.USRID1 USRID1,
		       I.DEPTID1 DEPTID1,
		       SF_GET_USERNM(I.USRID2) USRID2,
		       I.CREDAT CREDAT,
		       I.CRETIM CRETIM,
		       I.LMODAT LMODAT,
		       I.LMOTIM LMOTIM,
		       I.XDATS CDATE,
		       I.XSTAT IFFLG,
		       I.DESC01 DESC01,
		       I.BXIQTY BXIQTY,
		       I.BOXQTY BOXQTY,
		       I.REMQTY REMQTY
  		  FROM (SELECT /*+ ORDERED */SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) AS ORDTOT,
               S.USEQTY USEQTY,
               I.MANDT MANDT,
               I.SEQNO SEQNO,
               I.ORDTYP ORDTYP,
               I.ORDDAT ORDDAT,
               I.SVBELN SVBELN,
               I.SPOSNR SPOSNR,
               I.DOCUTY DOCUTY,
               I.OTRQDT OTRQDT,
               CC.CDESC1 PTNG08,
               I.PTNRTO PTNRTO,
               B.NAME01 PTNRTONM,
               I.PTNROD PTNROD,
               B2.NAME01 PTNRODNM,
               I.OWNRKY OWNRKY,
               I.WAREKY WAREKY,
               I.WARESR WARESR,
               I.WARETG WARETG,
               I.SKUKEY SKUKEY,
               I.QTYORG QTYORG,
               I.QTYREQ QTYREQ,
               I.WMSMGT WMSMGT,
               I.QTSHPD QTSHPD,
               I.DUOMKY DUOMKY,
               I.NETPR NETPR,
               I.SALDPT SALDPT,
               I.REFDKY REFDKY,
               I.DIRDVY DIRDVY,
               I.DIRSUP DIRSUP,
               I.SALEPR SALEPR,
               I.DISRAT DISRAT,
               I.SELLPR SELLPR,
               I.SELAMT SELAMT,
               I.VATAMT VATAMT,
               I.CUSRID CUSRID,
               I.CUNAME CUNAME,
               I.CUPOST CUPOST,
               I.CUNATN CUNATN,
               I.CUTEL1 CUTEL1,
               I.CUTEL2 CUTEL2,
               I.CUMAIL CUMAIL,
               I.CUADDR CUADDR,
               I.CTNAME CTNAME,
               I.CTTEL1 CTTEL1,
               I.SALENM SALENM,
               I.SALTEL SALTEL,
               I.TEXT01 TEXT01,
               I.TEXT02 TEXT02,
               I.TEXT03 TEXT03,
               I.C00101 C00101,
               I.C00102 C00102,
               I.C00103 C00103,
               I.USRID1 USRID1,
               I.DEPTID1 DEPTID1,
               I.USRID2 USRID2,
               I.CREDAT CREDAT,
               I.CRETIM CRETIM,
               I.LMODAT LMODAT,
               I.LMOTIM LMOTIM,
               I.XDATS XDATS,
               I.XSTAT XSTAT,
               SM.DESC01 DESC01,
               NVL(SM.QTDUOM, 0) BXIQTY,
               NVL( TRUNC((I.QTYREQ - I.QTSHPD) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) ), 0) AS BOXQTY,
               NVL(MOD(I.QTYREQ, DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM)), 0) AS REMQTY
          FROM IFWMS113 I LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO, QTSPMO)) AS USEQTY
          FROM STKKY 
         WHERE OWNRKY = #{OWNRKY}
           AND WAREKY = #{WAREKY}
           AND AREAKY NOT IN ('SHP', 'SYS')
           AND LOCAKY != 'SETLOC'
           AND LOTA06 = '00'
           AND QTSIWH > 0
      GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY 
                                                                AND I.SKUKEY = S.SKUKEY 
               INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
               LEFT OUTER JOIN SKUWC W ON W.OWNRKY = I.OWNRKY AND W.WAREKY = I.WAREKY AND W.SKUKEY = I.SKUKEY
     	       LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNRTO AND B.PTNRTY IN ('0007', '0004')
     	       LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNROD AND B2.PTNRTY IN ('0007', '0004')
     	       LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
                                  FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
                                 WHERE 1 = 1
                                   AND F.OWNRKY = '2200'
                                   AND F.WAREKY = #{LOGIN_WAREKY}
                                ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
              LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY = '2213' AND PK.SKUKEY = I.SKUKEY
              LEFT OUTER JOIN CMCDV CC ON B.PTNG08 = CC.CMCDVL AND CC.CMCDKY = 'PTNG08'


         WHERE 1=1
           AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267') 
           AND I.C00102 IN ('N', 'Y')
           AND I.XSTAT IN ('R','D')
           AND I.OWNRKY = #{OWNRKY}
  		   AND I.WAREKY = #{WAREKY}

           
        <if test="RANGE_SQL != null and RANGE_SQL != ''">
		${RANGE_SQL}
		</if>

) I
 WHERE I.SKUKEY = #{SKUKEY}
 ORDER BY I.SPOSNR

          	
	</select>
	
	<!-- **[DR03] 주문시간별조회 헤드 쿼리 -->
	<select id="DR03_HEAD_LIST" parameterType="hashmap" resultType="DataMap">

		SELECT CDESC1 AS CDESC1,
		CASE CDESC1 WHEN '전체' THEN SKUKEY ELSE ' ' END AS SKUKEY,
		SKUKEY AS SKUKEY2,
		CASE CDESC1 WHEN '전체' THEN DESC01 ELSE ' ' END AS DESC01,
		CASE CDESC1 WHEN '전체' THEN DESC02 ELSE ' ' END AS DESC02,
		CASE CDESC1 WHEN '전체' THEN SKUG03 ELSE ' ' END AS SKUG03,
		NVL(QTDUOM, 0) AS QTDUOM,
		SUM(NUM01) AS NUM01,
		SUM(NUM02) AS NUM02,
		SUM(NUM03) AS NUM03,
		SUM(NUM03_1) AS NUM03_1,
		SUM(NUM04) AS NUM04,
		SUM(NUM04_1) AS NUM04_1,
		SUM(NUM05) AS NUM05,
		SUM(NUM06) AS NUM06,
		SUM(NUM07) AS NUM07,
		SUM(NUM08) AS NUM08,
		SUM(NUM09) AS NUM09,
		SUM(NUM10) AS NUM10,
		SUM(NUM11) AS NUM11,
		SUM(NUM13) AS NUM13,
		SUM(NUM14) AS NUM14,
		SUM(NUM15) AS NUM15,
		SUM(NUM16) AS NUM16,
		SUM(NUM18) AS NUM18,
		SUM(NUM19) AS NUM19,
		SUM(NUM20) AS NUM20,
		SUM(NUM22) AS NUM22,
		SUM(NUM23) AS NUM23,
		SUM(NUM24) AS NUM24,
		SUM(NUM25) AS NUM25,
		SUM(NUM26) AS NUM26,
		SUM(NUM27) AS NUM27,
		SUM(NUM28) AS NUM28,
		SUM(NUM29) AS NUM29,
		SUM(NUM30) AS NUM30,
		SUM(NUM31) AS NUM31,
		SUM(NUM33) AS NUM33,
		SUM(NUM99) AS NUM99,
		SUM(NUM01+NUM02+NUM03+NUM03_1+NUM04+NUM04_1+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		   NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		   NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM31+NUM33+NUM99) AS TOT01,
		SUM(NUM03+NUM03_1+NUM04+NUM04_1) AS TOT02,
		SUM(NUM01+NUM02+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		   NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		   NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM31+NUM33+NUM99) AS TOT03,
		TRUNC(SUM(NUM01)/QTDUOM) AS NUM01_BOX,
		TRUNC(SUM(NUM02)/QTDUOM) AS NUM02_BOX,
		TRUNC(SUM(NUM03)/QTDUOM) AS NUM03_BOX,
		TRUNC(SUM(NUM03_1)/QTDUOM) AS NUM03_1_BOX,
		TRUNC(SUM(NUM04)/QTDUOM) AS NUM04_BOX,
		TRUNC(SUM(NUM04_1)/QTDUOM) AS NUM04_1_BOX,
		TRUNC(SUM(NUM05)/QTDUOM) AS NUM05_BOX,
		TRUNC(SUM(NUM06)/QTDUOM) AS NUM06_BOX,
		TRUNC(SUM(NUM07)/QTDUOM) AS NUM07_BOX,
		TRUNC(SUM(NUM08)/QTDUOM) AS NUM08_BOX,
		TRUNC(SUM(NUM09)/QTDUOM) AS NUM09_BOX,
		TRUNC(SUM(NUM10)/QTDUOM) AS NUM10_BOX,
		TRUNC(SUM(NUM11)/QTDUOM) AS NUM11_BOX,
		TRUNC(SUM(NUM13)/QTDUOM) AS NUM13_BOX,
		TRUNC(SUM(NUM14)/QTDUOM) AS NUM14_BOX,
		TRUNC(SUM(NUM15)/QTDUOM) AS NUM15_BOX,
		TRUNC(SUM(NUM16)/QTDUOM) AS NUM16_BOX,
		TRUNC(SUM(NUM18)/QTDUOM) AS NUM18_BOX,
		TRUNC(SUM(NUM19)/QTDUOM) AS NUM19_BOX,
		TRUNC(SUM(NUM20)/QTDUOM) AS NUM20_BOX,
		TRUNC(SUM(NUM22)/QTDUOM) AS NUM22_BOX,
		TRUNC(SUM(NUM23)/QTDUOM) AS NUM23_BOX,
		TRUNC(SUM(NUM24)/QTDUOM) AS NUM24_BOX,
		TRUNC(SUM(NUM25)/QTDUOM) AS NUM25_BOX,
		TRUNC(SUM(NUM26)/QTDUOM) AS NUM26_BOX,
		TRUNC(SUM(NUM27)/QTDUOM) AS NUM27_BOX,
		TRUNC(SUM(NUM28)/QTDUOM) AS NUM28_BOX,
		TRUNC(SUM(NUM29)/QTDUOM) AS NUM29_BOX,
		TRUNC(SUM(NUM30)/QTDUOM) AS NUM30_BOX,
		TRUNC(SUM(NUM31)/QTDUOM) AS NUM31_BOX,
		TRUNC(SUM(NUM33)/QTDUOM) AS NUM33_BOX,
		TRUNC(SUM(NUM99)/QTDUOM) AS NUM99_BOX,
		TRUNC(SUM(NUM01+NUM02+NUM03+NUM03_1+NUM04+NUM04_1+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		   NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		   NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM31+NUM33+NUM99)/QTDUOM) AS TOT01_BOX,
		MOD(SUM(NUM01),QTDUOM) AS NUM01_REM,
		MOD(SUM(NUM02),QTDUOM) AS NUM02_REM,
		MOD(SUM(NUM03),QTDUOM) AS NUM03_REM,
		MOD(SUM(NUM03_1),QTDUOM) AS NUM03_1_REM,
		MOD(SUM(NUM04),QTDUOM) AS NUM04_REM,
		MOD(SUM(NUM04_1),QTDUOM) AS NUM04_1_REM,
		MOD(SUM(NUM05),QTDUOM) AS NUM05_REM,
		MOD(SUM(NUM06),QTDUOM) AS NUM06_REM,
		MOD(SUM(NUM07),QTDUOM) AS NUM07_REM,
		MOD(SUM(NUM08),QTDUOM) AS NUM08_REM,
		MOD(SUM(NUM09),QTDUOM) AS NUM09_REM,
		MOD(SUM(NUM10),QTDUOM) AS NUM10_REM,
		MOD(SUM(NUM11),QTDUOM) AS NUM11_REM,
		MOD(SUM(NUM13),QTDUOM) AS NUM13_REM,
		MOD(SUM(NUM14),QTDUOM) AS NUM14_REM,
		MOD(SUM(NUM15),QTDUOM) AS NUM15_REM,
		MOD(SUM(NUM16),QTDUOM) AS NUM16_REM,
		MOD(SUM(NUM18),QTDUOM) AS NUM18_REM,
		MOD(SUM(NUM19),QTDUOM) AS NUM19_REM,
		MOD(SUM(NUM20),QTDUOM) AS NUM20_REM,
		MOD(SUM(NUM22),QTDUOM) AS NUM22_REM,
		MOD(SUM(NUM23),QTDUOM) AS NUM23_REM,
		MOD(SUM(NUM24),QTDUOM) AS NUM24_REM,
		MOD(SUM(NUM25),QTDUOM) AS NUM25_REM,
		MOD(SUM(NUM26),QTDUOM) AS NUM26_REM,
		MOD(SUM(NUM27),QTDUOM) AS NUM27_REM,
		MOD(SUM(NUM28),QTDUOM) AS NUM28_REM,
		MOD(SUM(NUM29),QTDUOM) AS NUM29_REM,
		MOD(SUM(NUM30),QTDUOM) AS NUM30_REM,
		MOD(SUM(NUM31),QTDUOM) AS NUM31_REM,
		MOD(SUM(NUM33),QTDUOM) AS NUM33_REM,
		MOD(SUM(NUM99),QTDUOM) AS NUM99_REM,
		MOD(SUM(NUM01+NUM02+NUM03+NUM03_1+NUM04+NUM04_1+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		   NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		   NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM31+NUM33+NUM99),QTDUOM) AS TOT01_REM
		FROM (
		   SELECT CM1.CMCDVL,
		          CM1.CDESC1,
		          IFT.PTNG08,
		          IFT.PTNG08NM,
		          IFT.SKUKEY,
		          IFT.DESC01,
		          IFT.DESC02,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM01,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) 
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM02,
		          CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN DECODE(IFT.DIRSUP, '007', 0, DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0))) ELSE 0 END
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM03,
		          CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM03_1,
		          CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END ELSE 0 END
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM04,
		          CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM04_1,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM05,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM06,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM07,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM08,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM09,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM10,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM11,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM13,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM14,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM15,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM16,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM18,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM19,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM20,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM22,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM23,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM24,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM25,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM26,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM27,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM28,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM29,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM30,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM31,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                        WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM33,
		          CASE CM1.CMCDVL WHEN '1' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) 
		                          WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END
		                          WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0)
		                                                        WHEN 'X' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END END AS NUM99,                               
		          IFT.DIRSUP,
		          IFT.SKUG03,
		          IFT.NETWGT,
		          IFT.QTDUOM,
		          IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01||CM1.CMCDVL AS ORDSEQ
		     FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ORDERED */IT.PTNRTO,
		                                            CASE NVL(BZ2.PTNG08, ' ') WHEN '01' THEN CASE IT.PTNRTO WHEN '1005602' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1005605' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1069580' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END
		   WHEN '1069521' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		   WHEN '1009997' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		   WHEN '1005277' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1004678' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1005945' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1003507' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1010878' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                      WHEN '02' THEN CASE IT.DIRSUP WHEN '007' THEN '28' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                      WHEN '08' THEN CASE IT.PTNRTO WHEN '1010179' THEN CASE IT.DIRSUP WHEN '007' THEN '27' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1009646' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1074625' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1010914' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1009429' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    WHEN '1010915' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                    ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                      WHEN '17' THEN '18'
		                                                                      WHEN '21' THEN '13'
		                                                                      WHEN '12' THEN '30'
		                                                                      WHEN '32' THEN '19'
		                                                                      ELSE NVL(BZ2.PTNG08, ' ') END AS PTNG08, 
		                                            NVL(CM.CDESC1, ' ') AS PTNG08NM, 
		                                            IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                       FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		                                                        INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		                                                        INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
		                                                        LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
		                                                        LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL
		                                      WHERE IT.OWNRKY = #{OWNRKY}
		                                      <if test="ORDDAT != null and ORDDAT != ''">
		      									AND IT.ORDDAT = #{ORDDAT}
		      									</if>
		                                        AND IT.DOCUTY IN ('211','212','213','214','215','216')
		                                        AND IT.XSTAT IN ('R', 'D')
		   <!-- RANGE -->
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		       ${RANGE_SQL}	
		   </if>
		   GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY, 
		   SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB'
		   
		   WHERE CM1.CMCDKY = 'DRGUB'
		   UNION ALL
		   SELECT * FROM (
		   SELECT CM1.CMCDVL,      
		       CM1.CDESC1,      
		       IFT.PTNG08,      
		       IFT.PTNG08NM,
		       IFT.SKUKEY,      
		       IFT.DESC01,      
		       IFT.DESC02,      
		       0 AS NUM01,      
		       0 AS NUM02,      
		       0 AS NUM03,      
		       0 AS NUM03_1,
		       NVL(CASE CM1.CMCDVL WHEN '1' THEN NVL(IFT.QTYREQ, 0)      
		                       WHEN '2' THEN NVL(IFT.QTYREQ, 0)      
		                       WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN NVL(IFT.QTYREQ, 0)
		                                                     WHEN 'X' THEN NVL(IFT.QTYREQ, 0) END       
		                       ELSE 0 END, 0) AS NUM04,      
		       0 AS NUM04_1,      
		       0 AS NUM05,      
		       0 AS NUM06,      
		       0 AS NUM07,      
		       0 AS NUM08,      
		       0 AS NUM09,      
		       0 AS NUM10,      
		       0 AS NUM11,      
		       0 AS NUM13,      
		       0 AS NUM14,      
		       0 AS NUM15,      
		       0 AS NUM16,      
		       0 AS NUM18,      
		       0 AS NUM19,      
		       0 AS NUM20,      
		       0 AS NUM22,      
		       0 AS NUM23,      
		       0 AS NUM24,      
		       0 AS NUM25,      
		       0 AS NUM26,      
		       0 AS NUM27,      
		       0 AS NUM28,      
		       0 AS NUM29,      
		       0 AS NUM30,      
		       0 AS NUM31,      
		       0 AS NUM33,      
		       0 AS NUM99,     
		       IFT.DIRSUP,      
		       IFT.SKUG03,      
		       IFT.NETWGT,      
		       IFT.QTDUOM,      
		       IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01||CM1.CMCDVL AS ORDSEQ  
		  FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ordered */IT.PTNRTO,     
		                                         CASE NVL(BZ2.PTNG08, ' ') WHEN '01' THEN CASE IT.PTNRTO WHEN '1005602' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1005605' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1069580' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1069521' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1009997' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1005277' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1004678' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1005945' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1003507' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1010878' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 ELSE NVL(BZ2.PTNG08, ' ') END      
		                                                                   WHEN '02' THEN CASE IT.DIRSUP WHEN '007' THEN '28' ELSE NVL(BZ2.PTNG08, ' ') END     
		                                                                   WHEN '08' THEN CASE IT.PTNRTO WHEN '1010179' THEN CASE IT.DIRSUP WHEN '007' THEN '27' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1009646' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1074625' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1010914' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1009429' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 WHEN '1010915' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END 
		                                                                                                 ELSE NVL(BZ2.PTNG08, ' ') END     
		                                                                   WHEN '17' THEN '18'     
		                                                                   WHEN '21' THEN '13'     
		                                                                   WHEN '12' THEN '30'     
		                                                                   WHEN '32' THEN '19'     
		                                                                   ELSE NVL(BZ2.PTNG08, ' ') END AS PTNG08,      
		                                         NVL(CM.CDESC1, ' ') AS PTNG08NM,       
		                                         IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                    FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0004'
		                                                     INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '    
		                                                     INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY   
		                                                     LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY      
		                                                     LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL     
		                                   WHERE IT.OWNRKY = #{OWNRKY}    
		                                     AND IT.C00107 = 'Y003' 
		
		                                     AND IT.DOCUTY IN ('266', '267')     
		                                     AND IT.XSTAT IN ('R', 'D')
		                                     <if test="ORDDAT != null and ORDDAT != ''">    
		                                     AND IT.ORDDAT = #{ORDDAT}
		                                     </if>
		                                      <!-- RANGE2 -->
										      <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
										         ${RANGE_SQL2}	
										      </if>
		                                           GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY,  
		                                                    SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB'  
		         WHERE CM1.CMCDKY = 'DRGUB'  
		       ) WHERE TRIM(QTDUOM) IS NOT NULL
		   )
		GROUP BY CDESC1, SKUKEY, DESC01, DESC02, NETWGT, SKUG03, QTDUOM, ORDSEQ
		ORDER BY ORDSEQ

	</select>
	
	<!-- **[DR03] 주문시간별조회 헤드2 쿼리 -->
	<select id="DR03_HEAD2_LIST" parameterType="hashmap" resultType="DataMap">

		SELECT CDESC1 AS CDESC1,
		       CASE CDESC1 WHEN '전체' THEN SKUKEY ELSE ' ' END AS SKUKEY,
		       SKUKEY AS SKUKEY2,
		       CASE CDESC1 WHEN '전체' THEN DESC01 ELSE ' ' END AS DESC01,
		       CASE CDESC1 WHEN '전체' THEN DESC02 ELSE ' ' END AS DESC02,
		       CASE CDESC1 WHEN '전체' THEN SKUG03 ELSE ' ' END AS SKUG03,
		       NVL(QTDUOM, 0) AS QTDUOM,
		       SUM(NUM03) AS NUM03,
		       SUM(NUM03_1) AS NUM03_1,
		       SUM(NUM04) AS NUM04,
		       SUM(NUM04_1) AS NUM04_1,
		       SUM(NUM31) AS NUM31,
		       SUM(NUM33) AS NUM33,
		       SUM(NUM99) AS NUM99,
		       SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM33+NUM99) AS TOT01,
		       SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM33+NUM99) AS TOT02,
		       SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM33+NUM99) AS TOT03,
		       TRUNC(SUM(NUM03)/QTDUOM) AS NUM03_BOX,
		       TRUNC(SUM(NUM03_1)/QTDUOM) AS NUM03_1_BOX,
		       TRUNC(SUM(NUM04)/QTDUOM) AS NUM04_BOX,
		       TRUNC(SUM(NUM04_1)/QTDUOM) AS NUM04_1_BOX,
		       TRUNC(SUM(NUM31)/QTDUOM) AS NUM31_BOX,
		       TRUNC(SUM(NUM33)/QTDUOM) AS NUM33_BOX,
		       TRUNC(SUM(NUM99)/QTDUOM) AS NUM99_BOX,
		       TRUNC(SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM33+NUM99)/QTDUOM) AS TOT01_BOX,
		       MOD(SUM(NUM03),QTDUOM) AS NUM03_REM,
		       MOD(SUM(NUM03_1),QTDUOM) AS NUM03_1_REM,
		       MOD(SUM(NUM04),QTDUOM) AS NUM04_REM,
		       MOD(SUM(NUM04_1),QTDUOM) AS NUM04_1_REM,
		       MOD(SUM(NUM31),QTDUOM) AS NUM31_REM,
		       MOD(SUM(NUM33),QTDUOM) AS NUM33_REM,
		       MOD(SUM(NUM99),QTDUOM) AS NUM99_REM,
		       MOD(SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM33+NUM99),QTDUOM) AS TOT01_BOX
		  FROM (
		        SELECT CM1.CMCDVL,
		               CM1.CDESC1,
		               IFT.PTNG08,
		               IFT.PTNG08NM,
		               IFT.SKUKEY,
		               IFT.DESC01,
		               IFT.DESC02,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN DECODE(IFT.DIRSUP, '007', 0, DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0))) ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM03,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM03_1,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM04,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM04_1,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM31,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM33,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) 
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0)
		                                                             WHEN 'X' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END END AS NUM99,                               
		               IFT.DIRSUP,
		               IFT.SKUG03,
		               IFT.NETWGT,
		               IFT.QTDUOM,
		               IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01||CM1.CMCDVL AS ORDSEQ
		          FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ORDERED */IT.PTNRTO,
		                                                 NVL(BZ2.PTNG08, ' ') AS PTNG08, 
		                                                 NVL(CM.CDESC1, ' ') AS PTNG08NM, 
		                                                 IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                            FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		                                                             INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		                                                             INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
		                                                             LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
		                                                             LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL
		                                           WHERE IT.OWNRKY = #{OWNRKY}
		                                             AND IT.DOCUTY IN ('211','212','213','214','215','216')
		                                             AND IT.XSTAT IN ('R', 'D')
		                                             AND BZ2.PTNG08 IN ('03', '04', '31')
		                                             <if test="ORDDAT != null and ORDDAT != ''">
		                                             AND IT.ORDDAT = #{ORDDAT}
		                                             </if>
		                                             <if test="RANGE_SQL != null and RANGE_SQL != ''">
				                               			  ${RANGE_SQL}	
				                             		</if>
		                                           GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY, 
		                                                    SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB'
		         WHERE CM1.CMCDKY = 'DRGUB'
		
		
		        UNION ALL
		        SELECT CM1.CMCDVL,
		               CM1.CDESC1,
		               IFT.PTNG08,
		               IFT.PTNG08NM,
		               IFT.SKUKEY,
		               IFT.DESC01,
		               IFT.DESC02,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN DECODE(IFT.DIRSUP, '007', 0, DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0))) ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM03,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM03_1,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM04,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM04_1,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM31,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '33', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM33,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) 
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0)
		                                                             WHEN 'X' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END END AS NUM99,                               
		               IFT.DIRSUP,
		               IFT.SKUG03,
		               IFT.NETWGT,
		               IFT.QTDUOM,
		               IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01||CM1.CMCDVL AS ORDSEQ
		          FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ORDERED */IT.PTNRTO,
		                                                 NVL(BZ2.PTNG08, ' ') AS PTNG08, 
		                                                 NVL(CM.CDESC1, ' ') AS PTNG08NM, 
		                                                 IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                            FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0004'				
		                                                            INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '				    
		                                                        INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = '2213' AND IT.SKUKEY = SW.SKUKEY				   
		                                                         LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = '2213' AND IT.SKUKEY = PK.SKUKEY			      
		                                                      LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL	
		                                           WHERE IT.OWNRKY = #{OWNRKY}
		                                             AND IT.DOCUTY IN ('266', '267')
		                                             AND IT.XSTAT IN ('R', 'D')
		                                             AND IT.C00107 = 'Y003'
		                                             <if test="ORDDAT != null and ORDDAT != ''">
		                                             AND IT.ORDDAT = #{ORDDAT}
		                                             </if>
		                                             <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
							        					 ${RANGE_SQL2}	
							      					</if>
		                                           GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY, 
		                                                    SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB'
		         WHERE CM1.CMCDKY = 'DRGUB'
		        )
		 WHERE TRIM(QTDUOM) IS NOT NULL
		 GROUP BY CDESC1, SKUKEY, DESC01, DESC02, NETWGT, SKUG03, QTDUOM, ORDSEQ
		 ORDER BY ORDSEQ
	
	</select>
	<!-- **[DR03] 주문시간별조회 헤드2 id SJ220361]쿼리 -->
	<select id="DR03_HEAD2_SJ_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT CDESC1 AS CDESC1,
		       SKUKEY AS SKUKEY,
		       SKUKEY AS SKUKEY2,
		       DESC01 AS DESC01,
		       DESC02 AS DESC02,
		       SKUG03 AS SKUG03,
		       NVL(QTDUOM, 0) AS QTDUOM,
		       SUM(NUM03) AS NUM03,
		       SUM(NUM03_1) AS NUM03_1,
		       SUM(NUM04) AS NUM04,
		       SUM(NUM04_1) AS NUM04_1,
		       SUM(NUM31) AS NUM31,
		       SUM(NUM99) AS NUM99,
		       SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM99) AS TOT03,
		       TRUNC(SUM(NUM03)/QTDUOM) AS NUM03_BOX,
		       TRUNC(SUM(NUM03_1)/QTDUOM) AS NUM03_1_BOX,
		       TRUNC(SUM(NUM04)/QTDUOM) AS NUM04_BOX,
		       TRUNC(SUM(NUM04_1)/QTDUOM) AS NUM04_1_BOX,
		       TRUNC(SUM(NUM31)/QTDUOM) AS NUM31_BOX,
		       TRUNC(SUM(NUM99)/QTDUOM) AS NUM99_BOX,
		       TRUNC(SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM99)/QTDUOM) AS TOT03_BOX,
		       MOD(SUM(NUM03),QTDUOM) AS NUM03_REM,
		       MOD(SUM(NUM03_1),QTDUOM) AS NUM03_1_REM,
		       MOD(SUM(NUM04),QTDUOM) AS NUM04_REM,
		       MOD(SUM(NUM04_1),QTDUOM) AS NUM04_1_REM,
		       MOD(SUM(NUM31),QTDUOM) AS NUM31_REM,
		       MOD(SUM(NUM99),QTDUOM) AS NUM99_REM,
		       MOD(SUM(NUM03+NUM03_1+NUM04+NUM04_1+NUM31+NUM99),QTDUOM) AS TOT03_REM
		  FROM (
		        SELECT CM1.CMCDVL,
		               CM1.CDESC1,
		               IFT.PTNG08,
		               IFT.PTNG08NM,
		               IFT.SKUKEY,
		               IFT.DESC01,
		               IFT.DESC02,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN DECODE(IFT.DIRSUP, '007', 0, DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0))) ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM03,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '03' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '03', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM03_1,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN 0 ELSE DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) END, 0) ELSE 0 END END AS NUM04,
		               CASE CM1.CMCDVL WHEN '1' THEN CASE NVL(IFT.PTNG08, ' ') WHEN '04' THEN CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END ELSE 0 END
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '04', CASE IFT.DIRSUP WHEN '007' THEN DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)) ELSE 0 END, 0) ELSE 0 END END AS NUM04_1,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '31', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM31,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) 
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0)
		                                                             WHEN 'X' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END END AS NUM99,                               
		               IFT.DIRSUP,
		               IFT.SKUG03,
		               IFT.NETWGT,
		               IFT.QTDUOM,
		               CM1.CMCDVL||LPAD(TO_CHAR(NVL(SEQ.SEQNO, 0)), 3, '0') AS ORDSEQ,
		               IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01 AS ORDSEQ2
		          FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ORDERED */IT.PTNRTO,
		                                                 NVL(BZ2.PTNG08, ' ') AS PTNG08, 
		                                                 NVL(CM.CDESC1, ' ') AS PTNG08NM, 
		                                                 IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                            FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		                                                             INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		                                                             INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
		                                                             LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
		                                                             LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL
		                                           WHERE IT.OWNRKY = #{OWNRKY}
		                                             AND IT.DOCUTY IN ('211','212','213','214','215','216')
		                                             AND IT.XSTAT IN ('R', 'D')
		                                             AND BZ2.PTNG08 IN ('03', '04', '31')
		                                             <if test="ORDDAT != null and ORDDAT != ''">
		      										 AND IT.ORDDAT = #{ORDDAT}
		      										 </if>
		                                        
		                                             <if test="RANGE_SQL != null and RANGE_SQL != ''">
		                                                	${RANGE_SQL}	                               
		                                                </if>                                              
		                                           GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY, 
		                                                    SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB'
		                         LEFT OUTER JOIN DR03_SEQ SEQ ON SEQ.SKUKEY = IFT.SKUKEY
		         WHERE CM1.CMCDKY = 'DRGUB'
		     UNION ALL
		        SELECT * FROM (
		        SELECT CM1.CMCDVL,
		               CM1.CDESC1,
		               IFT.PTNG08,
		               IFT.PTNG08NM,
		               IFT.SKUKEY,
		               IFT.DESC01,
		               IFT.DESC02,
		               0 AS NUM03,
		               0 AS NUM03_1,
		               NVL(CASE CM1.CMCDVL WHEN '1' THEN NVL(IFT.QTYREQ, 0)
		                               WHEN '2' THEN NVL(IFT.QTYREQ, 0)
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN NVL(IFT.QTYREQ, 0)
		                                                             WHEN 'X' THEN NVL(IFT.QTYREQ, 0) END 
		                               ELSE 0 END, 0) AS NUM04,
		               0 AS NUM04_1,
		               0 AS NUM31,
		               0 AS NUM99,                               
		               IFT.DIRSUP,
		               IFT.SKUG03,
		               IFT.NETWGT,
		               IFT.QTDUOM,
		               CM1.CMCDVL||LPAD(TO_CHAR(NVL(SEQ.SEQNO, 0)), 3, '0') AS ORDSEQ,
		               IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01 AS ORDSEQ2
		          FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ORDERED */IT.PTNRTO,
		                                                 NVL(BZ2.PTNG08, ' ') AS PTNG08, 
		                                                 NVL(CM.CDESC1, ' ') AS PTNG08NM, 
		                                                 IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                            FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0004'
		                                                             INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		                                                             INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
		                                                             LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
		                                                             LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL
		                                           WHERE IT.OWNRKY = #{OWNRKY}
		                                             AND IT.DOCUTY IN ('266', '267')
		                                             AND IT.XSTAT IN ('R', 'D')
		                                             AND IT.C00107 = 'Y003' 
		
		                                             AND BZ2.PTNG08 IN ('03', '04', '31')
		                                             <if test="ORDDAT != null and ORDDAT != ''">
		       										 AND IT.ORDDAT = #{ORDDAT}
		       										 </if>
		                                             <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">   
		                                                	${RANGE_SQL2}	                                  
		                                                </if>                                                 
		                                           GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY, 
		                                                    SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB' AND TRIM(IFT.QTDUOM) IS NOT NULL 
		                         LEFT OUTER JOIN DR03_SEQ SEQ ON SEQ.SKUKEY = IFT.SKUKEY
		         WHERE CM1.CMCDKY = 'DRGUB' 
		         ) WHERE  TRIM(QTDUOM) IS NOT NULL 
		        )
		 GROUP BY CDESC1, SKUKEY, DESC01, DESC02, NETWGT, SKUG03, QTDUOM, ORDSEQ, ORDSEQ2
		 ORDER BY ORDSEQ, ORDSEQ2
 
	</select>
	
	<!-- **[DR03] 주문시간별조회 헤드3 쿼리 -->
	<select id="DR03_HEAD3_LIST" parameterType="hashmap" resultType="DataMap">

		SELECT CDESC1 AS CDESC1,
		       CASE CDESC1 WHEN '전체' THEN SKUKEY ELSE ' ' END AS SKUKEY,
		       SKUKEY AS SKUKEY2,
		       CASE CDESC1 WHEN '전체' THEN DESC01 ELSE ' ' END AS DESC01,
		       CASE CDESC1 WHEN '전체' THEN DESC02 ELSE ' ' END AS DESC02,
		       CASE CDESC1 WHEN '전체' THEN SKUG03 ELSE ' ' END AS SKUG03,
		       NVL(QTDUOM, 0) AS QTDUOM,
		       SUM(NUM01) AS NUM01,
		       SUM(NUM02) AS NUM02,
		       SUM(NUM05) AS NUM05,
		       SUM(NUM06) AS NUM06,
		       SUM(NUM07) AS NUM07,
		       SUM(NUM08) AS NUM08,
		       SUM(NUM09) AS NUM09,
		       SUM(NUM10) AS NUM10,
		       SUM(NUM11) AS NUM11,
		       SUM(NUM13) AS NUM13,
		       SUM(NUM14) AS NUM14,
		       SUM(NUM15) AS NUM15,
		       SUM(NUM16) AS NUM16,
		       SUM(NUM18) AS NUM18,
		       SUM(NUM19) AS NUM19,
		       SUM(NUM20) AS NUM20,
		       SUM(NUM22) AS NUM22,
		       SUM(NUM23) AS NUM23,
		       SUM(NUM24) AS NUM24,
		       SUM(NUM25) AS NUM25,
		       SUM(NUM26) AS NUM26,
		       SUM(NUM27) AS NUM27,
		       SUM(NUM28) AS NUM28,
		       SUM(NUM29) AS NUM29,
		       SUM(NUM30) AS NUM30,
		       SUM(NUM99) AS NUM99,
		       SUM(NUM01+NUM02+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		           NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		           NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM99) AS TOT01,
		       SUM(NUM01+NUM02+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		           NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		           NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM99) AS TOT02,
		       SUM(NUM01+NUM02+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		           NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		           NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM99) AS TOT03,
		       TRUNC(SUM(NUM01)/QTDUOM) AS NUM01_BOX,
		       TRUNC(SUM(NUM02)/QTDUOM) AS NUM02_BOX,
		       TRUNC(SUM(NUM05)/QTDUOM) AS NUM05_BOX,
		       TRUNC(SUM(NUM06)/QTDUOM) AS NUM06_BOX,
		       TRUNC(SUM(NUM07)/QTDUOM) AS NUM07_BOX,
		       TRUNC(SUM(NUM08)/QTDUOM) AS NUM08_BOX,
		       TRUNC(SUM(NUM09)/QTDUOM) AS NUM09_BOX,
		       TRUNC(SUM(NUM10)/QTDUOM) AS NUM10_BOX,
		       TRUNC(SUM(NUM11)/QTDUOM) AS NUM11_BOX,
		       TRUNC(SUM(NUM13)/QTDUOM) AS NUM13_BOX,
		       TRUNC(SUM(NUM14)/QTDUOM) AS NUM14_BOX,
		       TRUNC(SUM(NUM15)/QTDUOM) AS NUM15_BOX,
		       TRUNC(SUM(NUM16)/QTDUOM) AS NUM16_BOX,
		       TRUNC(SUM(NUM18)/QTDUOM) AS NUM18_BOX,
		       TRUNC(SUM(NUM19)/QTDUOM) AS NUM19_BOX,
		       TRUNC(SUM(NUM20)/QTDUOM) AS NUM20_BOX,
		       TRUNC(SUM(NUM22)/QTDUOM) AS NUM22_BOX,
		       TRUNC(SUM(NUM23)/QTDUOM) AS NUM23_BOX,
		       TRUNC(SUM(NUM24)/QTDUOM) AS NUM24_BOX,
		       TRUNC(SUM(NUM25)/QTDUOM) AS NUM25_BOX,
		       TRUNC(SUM(NUM26)/QTDUOM) AS NUM26_BOX,
		       TRUNC(SUM(NUM27)/QTDUOM) AS NUM27_BOX,
		       TRUNC(SUM(NUM28)/QTDUOM) AS NUM28_BOX,
		       TRUNC(SUM(NUM29)/QTDUOM) AS NUM29_BOX,
		       TRUNC(SUM(NUM30)/QTDUOM) AS NUM30_BOX,
		       TRUNC(SUM(NUM99)/QTDUOM) AS NUM99_BOX,
		       TRUNC(SUM(NUM01+NUM02+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		           NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		           NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM99)/QTDUOM) AS TOT03_BOX,
		       MOD(SUM(NUM01),QTDUOM) AS NUM01_REM,
		       MOD(SUM(NUM02),QTDUOM) AS NUM02_REM,
		       MOD(SUM(NUM05),QTDUOM) AS NUM05_REM,
		       MOD(SUM(NUM06),QTDUOM) AS NUM06_REM,
		       MOD(SUM(NUM07),QTDUOM) AS NUM07_REM,
		       MOD(SUM(NUM08),QTDUOM) AS NUM08_REM,
		       MOD(SUM(NUM09),QTDUOM) AS NUM09_REM,
		       MOD(SUM(NUM10),QTDUOM) AS NUM10_REM,
		       MOD(SUM(NUM11),QTDUOM) AS NUM11_REM,
		       MOD(SUM(NUM13),QTDUOM) AS NUM13_REM,
		       MOD(SUM(NUM14),QTDUOM) AS NUM14_REM,
		       MOD(SUM(NUM15),QTDUOM) AS NUM15_REM,
		       MOD(SUM(NUM16),QTDUOM) AS NUM16_REM,
		       MOD(SUM(NUM18),QTDUOM) AS NUM18_REM,
		       MOD(SUM(NUM19),QTDUOM) AS NUM19_REM,
		       MOD(SUM(NUM20),QTDUOM) AS NUM20_REM,
		       MOD(SUM(NUM22),QTDUOM) AS NUM22_REM,
		       MOD(SUM(NUM23),QTDUOM) AS NUM23_REM,
		       MOD(SUM(NUM24),QTDUOM) AS NUM24_REM,
		       MOD(SUM(NUM25),QTDUOM) AS NUM25_REM,
		       MOD(SUM(NUM26),QTDUOM) AS NUM26_REM,
		       MOD(SUM(NUM27),QTDUOM) AS NUM27_REM,
		       MOD(SUM(NUM28),QTDUOM) AS NUM28_REM,
		       MOD(SUM(NUM29),QTDUOM) AS NUM29_REM,
		       MOD(SUM(NUM30),QTDUOM) AS NUM30_REM,
		       MOD(SUM(NUM99),QTDUOM) AS NUM99_REM,
		       MOD(SUM(NUM01+NUM02+NUM05+NUM06+NUM07+NUM08+NUM09+NUM10+
		           NUM11+NUM13+NUM14+NUM15+NUM16+NUM18+NUM19+NUM20+
		           NUM22+NUM23+NUM24+NUM25+NUM26+NUM27+NUM28+NUM29+NUM30+NUM99),QTDUOM) AS TOT03_REM
		  FROM (
		        SELECT CM1.CMCDVL,
		               CM1.CDESC1,
		               IFT.PTNG08,
		               IFT.PTNG08NM,
		               IFT.SKUKEY,
		               IFT.DESC01,
		               IFT.DESC02,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '01', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM01,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) 
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '02', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM02,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '05', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM05,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '06', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM06,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '07', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM07,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '08', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM08,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '09', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM09,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '10', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM10,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '11', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM11,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '13', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM13,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '14', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM14,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '15', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM15,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '16', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM16,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '18', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM18,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '19', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM19,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '20', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM20,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '22', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM22,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '23', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM23,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '24', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM24,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '25', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM25,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '26', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM26,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '27', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM27,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '28', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM28,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '29', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM29,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END 
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0)
		                                                             WHEN 'X' THEN DECODE(NVL(IFT.PTNG08, ' '), '30', DECODE(IFT.DIRDVY,  '04', 0, NVL(IFT.QTYREQ, 0)), 0) ELSE 0 END END AS NUM30,
		               CASE CM1.CMCDVL WHEN '1' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) 
		                               WHEN '2' THEN CASE IFT.C00102 WHEN 'Y' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END
		                               WHEN '3' THEN CASE IFT.C00102 WHEN 'N' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0)
		                                                             WHEN 'X' THEN DECODE(IFT.DIRDVY, '04', NVL(IFT.QTYREQ, 0), 0) ELSE 0 END END AS NUM99,                               
		               IFT.DIRSUP,
		               IFT.SKUG03,
		               IFT.NETWGT,
		               IFT.QTDUOM,
		               IFT.SKUG03||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||IFT.NETWGT||DESC01||CM1.CMCDVL AS ORDSEQ
		          FROM CMCDV CM1 LEFT OUTER JOIN (SELECT /*+ ORDERED */IT.PTNRTO,
		                                                 CASE NVL(BZ2.PTNG08, ' ') WHEN '01' THEN CASE IT.PTNRTO WHEN '1005602' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1005605' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1069580' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1069521' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1009997' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1005277' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1004678' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1005945' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1003507' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1010878' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                           WHEN '02' THEN CASE IT.DIRSUP WHEN '007' THEN '28' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                           WHEN '08' THEN CASE IT.PTNRTO WHEN '1010179' THEN CASE IT.DIRSUP WHEN '007' THEN '27' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1009646' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1074625' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1010914' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1009429' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         WHEN '1010915' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                                                         ELSE NVL(BZ2.PTNG08, ' ') END
		                                                                           WHEN '17' THEN '18'
		                                                                           WHEN '21' THEN '13'
		                                                                           WHEN '12' THEN '30'
		                                                                           WHEN '32' THEN '19'
		                                                                           ELSE NVL(BZ2.PTNG08, ' ') END AS PTNG08, 
		                                                 NVL(CM.CDESC1, ' ') AS PTNG08NM, 
		                                                 IT.SKUKEY, SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SUM(IT.QTYREQ) AS QTYREQ, SM.SKUG03, SM.NETWGT, SM.QTDUOM
		                                            FROM IFWMS113 IT INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		                                                             INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		                                                             INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
		                                                             LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
		                                                             LEFT OUTER JOIN CMCDV CM ON CM.CMCDKY = 'PTNG08' AND BZ2.PTNG08 = CM.CMCDVL
		                                           WHERE IT.OWNRKY = #{OWNRKY}
		                                             AND IT.DOCUTY IN ('211','212','213','214','215','216')
		                                             AND IT.XSTAT IN ('R', 'D')
		                                             AND BZ2.PTNG08 NOT IN ('03', '04', '31')
		                                             <if test="ORDDAT != null and ORDDAT != ''">
		                                             AND IT.ORDDAT = #{ORDDAT}
		                                             </if>
		                                             <if test="RANGE_SQL != null and RANGE_SQL != ''">
		                                                ${RANGE_SQL}
		                                             </if>
		                                           GROUP BY IT.PTNRTO, NVL(BZ2.PTNG08, ' '), NVL(CM.CDESC1, ' '), IT.SKUKEY, 
		                                                    SM.DESC01, SM.DESC02, IT.C00102, IT.DIRSUP, IT.DIRDVY, SM.SKUG03, SM.NETWGT, SM.QTDUOM) IFT ON CM1.CMCDKY = 'DRGUB'
		         WHERE CM1.CMCDKY = 'DRGUB'
		        )
		 GROUP BY CDESC1, SKUKEY, DESC01, DESC02, NETWGT, SKUG03, QTDUOM, ORDSEQ
		 ORDER BY ORDSEQ

	</select>
	
	<!-- **[DR03] 주문시간별조회 아이템 쿼리 -->
	<select id="DR03_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
	
	    SELECT /*+ ORDERED */IT.OWNRKY AS OWNRKY,
	           IT.WAREKY AS WAREKY,
	           IT.WARESR AS WARESR,
	           IT.WARETG AS WARETG,
	           IT.DOCUTY AS DOCUTY,
	           IT.OTRQDT AS OTRQDT,
	           IT.PTNROD AS PTNROD,
	           BZ.NAME01 AS PTNRODNM,
	           IT.PTNRTO AS PTNRTO,
	           BZ2.NAME01 AS PTNRTONM,
	           CASE BZ2.PTNG08 WHEN '01' THEN CASE IT.PTNRTO WHEN '1005602' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005605' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1069580' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1069521' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1009997' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005277' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1004678' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005945' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1003507' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1010878' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   ELSE BZ2.PTNG08 END
	                           WHEN '02' THEN CASE IT.DIRSUP WHEN '007' THEN '28' ELSE BZ2.PTNG08 END
	                           WHEN '08' THEN CASE IT.PTNRTO WHEN '1010179' THEN CASE IT.DIRSUP WHEN '007' THEN '27' ELSE BZ2.PTNG08 END
	                                                         WHEN '1009646' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1074625' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1010914' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1009429' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1010915' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         ELSE BZ2.PTNG08 END
	                           WHEN '17' THEN '18'
	                           WHEN '21' THEN '13'
	                           WHEN '12' THEN '30'
	                           ELSE BZ2.PTNG08 END AS PTNG08,
	           IT.SKUKEY AS SKUKEY,
	           SM.DESC01 AS DESC01,
	           SM.NETWGT AS NETWGT,
	           SM.QTDUOM AS QTDUOM,
	           SM.QTYSTD AS QTYSTD,
	           IT.QTYREQ AS QTYREQ,
	           TRUNC(IT.QTYREQ/SM.QTDUOM) AS BOXQTY,
	           IT.DIRDVY AS DIRDVY,
	           IT.DIRSUP AS DIRSUP,
	           IT.SVBELN AS SVBELN,
	           IT.XDATS AS CREDAT,
	           IT.XTIMS AS CRETIM
	      FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
	                       INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
	                       LEFT OUTER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNROD = BZ.PTNRKY AND BZ.PTNRTY = '0001'
	                       LEFT OUTER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
	                       LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
	     WHERE IT.OWNRKY = #{OWNRKY}
	       AND IT.SKUKEY = #{SKUKEY}
	       <if test="ORDDAT != null and ORDDAT != ''">
	       AND IT.ORDDAT = #{ORDDAT}
	       </if>
	       AND CASE BZ2.PTNG08 WHEN '01' THEN CASE IT.PTNRTO WHEN '1005602' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005605' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1069580' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1069521' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1009997' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005277' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1004678' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005945' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1003507' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1010878' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   ELSE BZ2.PTNG08 END
	                           WHEN '02' THEN CASE IT.DIRSUP WHEN '007' THEN '28' ELSE BZ2.PTNG08 END
	                           WHEN '08' THEN CASE IT.PTNRTO WHEN '1010179' THEN CASE IT.DIRSUP WHEN '007' THEN '27' ELSE BZ2.PTNG08 END
	                                                         WHEN '1009646' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1074625' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1010914' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1009429' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1010915' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         ELSE BZ2.PTNG08 END
	                           WHEN '17' THEN '18'
	                           WHEN '21' THEN '13'
	                           WHEN '12' THEN '30'
	                           WHEN '32' THEN '19'
	                           ELSE BZ2.PTNG08 END LIKE #{PTNG08}
	       AND IT.XSTAT IN ('R', 'D')
	       AND IT.DOCUTY IN ('211','212','213','214','215','216')
	
	       <if test='DIRSUP !=null  and C00102.equalsIgnoreCase("007")'>
	       AND IT.DIRSUP = '007'
	       </if>
	       <if test='DIRSUP !=null  and C00102.equalsIgnoreCase("000")'>
	       AND IT.DIRSUP != '007'
	       </if>
	       <if test="C00102 != null and C00102 != ''">
	       AND IT.C00102 LIKE #{C00102}
	       </if>
	       <if test="C00102 == null or C00102 == ''">
	       AND IT.C00102 IN ('N', 'X')
	       </if>
	       <if test='DIRDVY !=null  and DIRDVY == "04" '>
	       AND IT.DIRDVY = '04'
	       </if>
	       <if test='DIRDVY !=null  and DIRDVY == "01" '>
	       AND IT.DIRDVY != '04'
	       </if>
	       <if test="RANGE_SQL != null and RANGE_SQL != ''">
	           ${RANGE_SQL}
	       </if>
	    UNION ALL
	     SELECT /*+ ORDERED */IT.OWNRKY AS OWNRKY,
	           IT.WAREKY AS WAREKY,
	           IT.WARESR AS WARESR,
	           IT.WARETG AS WARETG,
	           IT.DOCUTY AS DOCUTY,
	           IT.OTRQDT AS OTRQDT,
	           IT.PTNROD AS PTNROD,
	           BZ.NAME01 AS PTNRODNM,
	           IT.PTNRTO AS PTNRTO,
	           BZ2.NAME01 AS PTNRTONM,
	           CASE BZ2.PTNG08 WHEN '01' THEN CASE IT.PTNRTO WHEN '1005602' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005605' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1069580' THEN CASE IT.DIRSUP WHEN '007' THEN '25' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1069521' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1009997' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005277' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1004678' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1005945' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1003507' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   WHEN '1010878' THEN CASE IT.DIRSUP WHEN '007' THEN '26' ELSE BZ2.PTNG08 END
	                                                                   ELSE BZ2.PTNG08 END
	                           WHEN '02' THEN CASE IT.DIRSUP WHEN '007' THEN '28' ELSE BZ2.PTNG08 END
	                           WHEN '08' THEN CASE IT.PTNRTO WHEN '1010179' THEN CASE IT.DIRSUP WHEN '007' THEN '27' ELSE BZ2.PTNG08 END
	                                                         WHEN '1009646' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1074625' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1010914' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1009429' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         WHEN '1010915' THEN CASE IT.DIRSUP WHEN '007' THEN '29' ELSE BZ2.PTNG08 END
	                                                         ELSE BZ2.PTNG08 END
	                           WHEN '17' THEN '18'
	                           WHEN '21' THEN '13'
	                           WHEN '12' THEN '30'
	                           ELSE BZ2.PTNG08 END AS PTNG08,
	           IT.SKUKEY AS SKUKEY,
	           SM.DESC01 AS DESC01,
	           SM.NETWGT AS NETWGT,
	           SM.QTDUOM AS QTDUOM,
	           SM.QTYSTD AS QTYSTD,
	           IT.QTYREQ AS QTYREQ,
	           TRUNC(IT.QTYREQ/SM.QTDUOM) AS BOXQTY,
	           IT.DIRDVY AS DIRDVY,
	           IT.DIRSUP AS DIRSUP,
	           IT.SVBELN AS SVBELN,
	           IT.XDATS AS CREDAT,
	           IT.XTIMS AS CRETIM
	      FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
	                       INNER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = SW.SKUKEY
	                       LEFT OUTER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNROD = BZ.PTNRKY AND BZ.PTNRTY = '0004'
	                       LEFT OUTER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0004'
	                       LEFT OUTER JOIN PICSK PK ON IT.OWNRKY = PK.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND IT.SKUKEY = PK.SKUKEY
	     WHERE IT.OWNRKY = #{OWNRKY}
	       AND IT.SKUKEY = #{SKUKEY}
	       <if test="ORDDAT != null and ORDDAT != ''">
	       AND IT.ORDDAT = #{ORDDAT}
	       </if>
	       AND '04' = #{PTNG08}
	
	
	       AND IT.XSTAT IN ('R', 'D')
	       AND IT.C00107 = 'Y003' 
	       AND IT.DOCUTY IN ('266', '267')
	       <if test='DIRSUP !=null  and C00102.equalsIgnoreCase("007")'>
	        AND IT.DIRSUP = '007'
	       </if>
	       <if test='DIRSUP !=null  and C00102.equalsIgnoreCase("000")'>
	       AND IT.DIRSUP != '007'
	       </if>
	       <if test="C00102 == null or C00102 == ''">
	       AND IT.C00102 IN ('N', 'X')
	       </if>
	       <if test='DIRDVY !=null  and C00102.equalsIgnoreCase("04")'>
	       AND IT.DIRDVY = '04'
	       </if>
	       <if test='DIRDVY !=null  and C00102.equalsIgnoreCase("01")'>
	       AND IT.DIRDVY != '04'
	       </if>
	       <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
	           ${RANGE_SQL2}
	       </if>
    
     ORDER BY OTRQDT, PTNRTO
	
	</select>
	
	<!-- **[DR06] ,[DR08] 헤드조회 쿼리 -->
	<select id="DR06_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
	
		<if test='TYPE !=null  and TYPE.equalsIgnoreCase("count")'>
		SELECT COUNT(*) AS CNT
		FROM (
		</if>
		SELECT /*+ ORDERED */ I.SVBELN||I.TEXT03 AS KEY,
		       I.OWNRKY OWNRKY,
		       I.SVBELN SVBELN,
		       I.CARNUM CARNUM, 
		       I.CARNUM_NM CARNUMNM,
		       I.TEXT03 TEXT03,
		       I.PTNRTO PTNRTO,
		       I.PTNRTONM PTNRTONM,
		       I.PTNROD PTNROD,
		       I.PTNRODNM PTNRODNM,
		       I.DOCUTY DOCUTY,
		       I.ORDDAT ORDDAT,
		       I.OTRQDT OTRQDT,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SVBELN SVBELN,
		       I.PTNG08 PTNG08,
		       I.PTNG01 PTNG01,
		       I.PTNG02 PTNG02,
		       I.PTNG08NM PTNG08NM,
		       I.WAREKY WAREKY
		 FROM
		 (
		SELECT /*+ ORDERED FIRST_ROWS */
		       I.OWNRKY OWNRKY,
		       C.CARNUM CARNUM,
		       C.DESC01 CARNUM_NM,
		       I.TEXT03 TEXT03,
		       I.PTNRTO PTNRTO,
		       DECODE(I.DOCUTY, '266', W2.NAME01, B2.NAME01) as PTNRTONM,
		       I.PTNROD PTNROD,
		       DECODE(I.DOCUTY, '266', W.NAME01, B.NAME01) PTNRODNM,
		       I.DOCUTY DOCUTY,
		       I.ORDDAT ORDDAT,
		       I.OTRQDT OTRQDT,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SVBELN SVBELN,
		       B2.PTNG08 PTNG08,
		       B.PTNG01 PTNG01,
		       B.PTNG02 PTNG02,
		       CC.CDESC1 AS PTNG08NM,
		       B2.NAME03 AS WAREKY,
		       NVL(CASE WHEN NVL(S.USEQTY,0) >= SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) THEN
		       SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) END,0) STKTOT,
		       SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) ORDTOT
		  FROM IFWMS113 I INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY 
		                  LEFT OUTER JOIN SKUWC SW ON SW.OWNRKY = I.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND SW.SKUKEY = I.SKUKEY
		                  LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNROD AND B.PTNRTY = '0001'
		                  LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNRTO AND B2.PTNRTY = '0007'
		                  LEFT OUTER JOIN WAHMA W ON W.WAREKY = I.PTNROD
		                  LEFT OUTER JOIN WAHMA W2 ON W2.WAREKY = I.PTNRTO 
		                  LEFT OUTER JOIN CMCDV CC ON B2.PTNG08 = CC.CMCDVL AND CC.CMCDKY = 'PTNG08'
		                  LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND PK.SKUKEY = I.SKUKEY
		                  LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                               WHERE 1 = 1
		                                 AND F.OWNRKY = '2200'
		                                 AND F.WAREKY = #{SES_WAREKY}
		                                 
		                           ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
		                  LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY,SUM(QTSIWH-QTSBLK-GREATEST(QTSALO,QTSPMO)) AS USEQTY
		                           FROM STKKY 
		                          WHERE OWNRKY = #{OWNRKY}
		                            AND LOTA06 = '00' AND QTSIWH > 0 
		                          GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY AND I.SKUKEY = S.SKUKEY
		 WHERE I.OWNRKY = '2200'
		   AND I.DOCUTY IN ('211','212','213','214','215','216','266','267')
		   AND I.XSTAT IN ('R','D')
		   AND I.C00102 = 'Y'
		   AND I.CHKSEQ != ' '
		   AND I.QTYREQ > 0
		    <!-- range -->
		    <if test="RANGE_SQL != null and RANGE_SQL != ''">
		        ${RANGE_SQL}
		    </if>
		    <if test='CHKMAK !=null  and CHKMAK.equalsIgnoreCase("1")'>                        
		   AND NOT EXISTS (SELECT SVBELN, SPOSNR
		                     FROM DRPIC
		                    WHERE WAREPT = #{SES_WAREKY}
		                      AND CREUSR = #{SES_USER_ID}
		                      AND ORDDAT = I.ORDDAT
                              AND SVBELN = I.SVBELN
                              AND SPOSNR = I.SPOSNR
		                    GROUP BY SVBELN, SPOSNR)
		    </if>
		   <if test='CHKMAK2 !=null  and CHKMAK2.equalsIgnoreCase("1")'>
		   AND I.PTNRTO IN (SELECT DISTINCT PTNRKY FROM SKUBBD WHERE OWNRKY = #{OWNRKY})
		   </if>
		   ) I
		   GROUP BY I.SVBELN, I.TEXT03, I.OWNRKY, I.DOCUTY, I.PTNRTO, I.PTNRTONM,  I.PTNROD, I.PTNRODNM, I.DOCUTY, I.ORDDAT, I.OTRQDT, I.DIRDVY, I.DIRSUP,
		            I.PTNG08, I.PTNG08NM, I.PTNG01, I.PTNG02, I.WAREKY, I.CARNUM, I.CARNUM_NM
		<if test='ORDTYPE !=null  and ORDTYPE.equalsIgnoreCase("ALL")'>
		ORDER BY I.SVBELN
		</if>
		<if test='ORDTYPE !=null  and ORDTYPE.equalsIgnoreCase("NO")'>
		HAVING (SUM(STKTOT) >= SUM(ORDTOT))
		ORDER BY I.SVBELN
		</if>
		<if test='ORDTYPE !=null  and ORDTYPE.equalsIgnoreCase("ONE")'>
		HAVING (SUM(I.ORDTOT) > SUM(I.STKTOT))
		ORDER BY I.SVBELN
		</if>
		<if test='ORDTYPE !=null  and ORDTYPE.equalsIgnoreCase("MORE")'>
		HAVING (SUM(I.ORDTOT) > SUM(I.STKTOT))
		ORDER BY I.SVBELN
		</if>
		<if test='ORDTYPE !=null  and ORDTYPE.equalsIgnoreCase("POOR")'>
		HAVING (SUM(STKTOT) = 0)
		ORDER BY I.SVBELN
		</if>
		<if test='TYPE !=null  and TYPE.equalsIgnoreCase("count")'>
		)
		</if>
	
	</select>
	
	<!-- **[DR06] ,[DR08] 아이템조회 쿼리 -->
	<select id="DR06_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT I.SVBELN||I.TEXT03 KEY,
		       TO_NUMBER(I.ORDTOT) ORDTOT,
		       I.MANDT MANDT,
		       I.TEXT03 TEXT03,
		       I.ORDTYP ORDTYP,
		       I.ORDDAT ORDDAT,
		       I.CHKSEQ CHKSEQ,
		       I.ORDSEQ ORDSEQ,
		       I.SVBELN SVBELN,
		       I.DOCUTY DOCUTY,
		       I.OWNRKY OWNRKY,
		       I.WAREKY WAREKY,
		       I.SKUKEY SKUKEY,
		       I.QTYREQ QTYREQ,
		       I.QTSHPD QTSHPD,
		       I.DESC01 DESC01,
		       I.BXIQTY BXIQTY,
		       I.BOXQTY BOXQTY,
		       I.REMQTY REMQTY
		  FROM (
		        SELECT /*+ ORDERED */ SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) AS ORDTOT,
		               I.MANDT MANDT ,
		               I.ORDTYP ORDTYP ,
		               I.ORDDAT ORDDAT ,
		               I.CHKSEQ CHKSEQ ,
		               I.ORDSEQ ORDSEQ ,
		               I.SVBELN SVBELN ,
		               I.DOCUTY DOCUTY ,
		               I.OWNRKY OWNRKY ,
		               I.WAREKY WAREKY ,
		               I.TEXT03 TEXT03 ,
		               I.SKUKEY SKUKEY ,
		               I.QTYREQ QTYREQ ,
		               I.QTSHPD QTSHPD ,
		               SM.DESC01 DESC01 ,
		               NVL(SM.QTDUOM, 0) BXIQTY ,
		               NVL( TRUNC((I.QTYREQ) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) ) , 0) AS BOXQTY ,
		               NVL(MOD(I.QTYREQ, DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM)), 0) AS REMQTY
		          FROM IFWMS113 I INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN SKUWC SW ON SW.OWNRKY = I.OWNRKY AND SW.WAREKY = #{SES_WAREKY} AND SW.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNROD AND B.PTNRTY = '0001'
		                          LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNRTO AND B2.PTNRTY = '0007'
		                          LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND PK.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                             FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                                            WHERE 1 = 1
		                                              AND F.OWNRKY = #{OWNRKY}
		                                              AND F.WAREKY = #{SES_WAREKY}
		                                          ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
		                           
		         WHERE 1=1
		           AND I.MANDT = 'SAP'
		           AND I.OWNRKY = #{OWNRKY}
		           AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267')
		           AND I.C00102 = 'Y'
		           AND I.XSTAT IN ('D', 'R')
		           AND I.QTYREQ &gt; 0        
		           
		           AND I.SVBELN = #{SVBELN}
		           AND I.TEXT03 = #{TEXT03}
		           
		          <if test="RANGE_SQL != null and RANGE_SQL != ''"> 
		            ${RANGE_SQL}
		        </if>
		
		          <if test='CHKMAK !=null  and CHKMAK.equalsIgnoreCase("1")'>
		          AND (I.SVBELN, I.SPOSNR) NOT IN (SELECT SVBELN, SPOSNR
		                                             FROM DRPIC
		                                            WHERE WAREPT = #{SES_WAREKY}
		                                              AND CREUSR = #{CREUSR}
		                                              AND ORDDAT = I.ORDDAT
		                                            GROUP BY SVBELN, SPOSNR)
		          </if>
		
		
		   <if test='CHKMAK2 !=null  and CHKMAK2.equalsIgnoreCase("1")'>
		   AND I.PTNRTO IN (SELECT DISTINCT PTNRKY FROM SKUBBD WHERE OWNRKY = #{OWNRKY})
		   </if>
		        ) I
		 WHERE 1=1
		 ORDER BY I.SVBELN, I.ORDSEQ

	</select>
	
	
	
		<!-- [DR06] USETYPE 콤보 쿼리 -->
	<select id="USETYPE_COMBO_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 'ALL' AS VALUE_COL,
		       '전체S/O조회' AS TEXT_COL
		  FROM DUAL
	 	 UNION ALL
		SELECT 'NO' AS VALUE_COL,
		       '미부족' AS TEXT_COL
		  FROM DUAL
		 UNION ALL
		SELECT 'ONE' AS VALUE_COL,
		       '아이템 1건' AS TEXT_COL
		  FROM DUAL
		 UNION ALL
		SELECT 'MORE' AS VALUE_COL,
		       '아이템 2건 이상' AS TEXT_COL
		  FROM DUAL
		 UNION ALL
		SELECT 'POOR' AS VALUE_COL,
		       '전체부족조회' AS TEXT_COL
		  FROM DUAL
	</select>
	
	<!-- **[DR06]  그룹핑 GRPOKY_MAP 쿼리 -->
	<select id="GET_PICKINGLIST_SEQ_MAP" parameterType="hashmap" resultType="DataMap">
		SELECT SEQ_PICKINGLIST_DR.NEXTVAL AS PICKSEQ FROM DUAL
	</select>

	<update id="P_DR_PICKINGLIST_01_UPDATE" parameterType="hashmap">
   		{ call P_DR_PICKINGLIST_01(#{WAREKY}, #{TEXT03}, #{USERID}, #{CHKMAK2}) }
 	</update>

	<!-- **[DR06] 그룹핑 업데이트 쿼리 -->
	<update id="DR06_GROUPING_UPDATE" parameterType="hashmap">
	
		MERGE INTO /*+ORDERED USE_NL(I) */ IFWMS113 I 
		USING ( SELECT /*+ ORDERED USE_NL(I) INDEX_DESC(I IDX_IFWMS113K17)+*/ 
		               I.MANDT
		             , I.SEQNO
		        FROM IFWMS113 I
		             INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		             INNER JOIN SKUWC SW ON SW.OWNRKY = I.OWNRKY AND SW.WAREKY = I.WAREKY AND SW.SKUKEY = I.SKUKEY
		             LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND PK.SKUKEY = I.SKUKEY
		             LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNROD AND B.PTNRTY = '0001'
		             LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNRTO AND B2.PTNRTY = '0007'
		             LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                FROM CARFX F 
		                                     INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                               WHERE 1=1
		                                 AND F.OWNRKY = '2200'
		                                 AND F.WAREKY = #{SES_WAREKY}
		                             ) C ON C.OWNRKY = I.OWNRKY AND C.PTNRKY = I.PTNRTO
		   WHERE I.MANDT = 'SAP'
		     AND I.OWNRKY = '2200'
			<!--<statement property="appendQuery"/> -->
		     <if test="appendQuery != null and appendQuery != ''">
			    ${appendQuery}
			 </if>
		     AND I.TEXT03 = ' '
		     AND I.XSTAT IN ('D','R')
		     AND I.C00102 = 'Y'
		     <!-- rangeGroupingNum-->
		     <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
			    ${RANGE_SQL2}
			 </if>
		      ) E
		ON (I.MANDT = E.MANDT AND I.SEQNO = E.SEQNO)
		WHEN MATCHED THEN
		  UPDATE SET I.TEXT03 = #{TEXT03}
	
	</update>
	
	
	<!-- **[DR06] 그룹핑 삭제 쿼리 -->
	<update id="DR06_DELGROUP_UPDATE" parameterType="hashmap">
	
		UPDATE IFWMS113 I
		   SET I.TEXT03 = ' '
		 WHERE I.TEXT03 = #{TEXT03}
		   AND I.SVBELN = #{SVBELN}
		   AND I.OWNRKY = #{OWNRKY}
		   AND I.MANDT = 'SAP'
		   AND I.XSTAT IN ('D','R')
	
	</update>
	
	
	<!-- **[DR09] 거래명세서발행	헤드조회 쿼리 -->
	<select id="DR09_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT /*+ ORDERED */ IT.SVBELN AS KEY,
		       IT.SVBELN AS SVBELN,
		       IT.OWNRKY AS OWNRKY,
		       IT.DOCUTY AS DOCUTY,
		       IT.ORDDAT AS ORDDAT,
		       IT.OTRQDT AS OTRQDT,
		       IT.PTNROD AS PTNROD,
		       B.NAME01 AS PTNRODNM,
		       IT.PTNRTO AS PTNRTO,
		       B2.NAME01 AS PTNRTONM,
		       MAX(IT.TEXT03) AS TEXT03,
		       IT.DIRDVY AS DIRDVY,
		       IT.DIRSUP AS DIRSUP,
		       IT.CUADDR AS CUADDR,
		       IT.CTNAME AS CTNAME,
		       IT.CTTEL1 AS CTTEL1,
		       IT.SALENM AS SALENM,
		       IT.SALTEL AS SALTEL,
		       IT.TEXT01 AS TEXT01,
		       IT.TEXT02 AS TEXT02,
		       IT.USRID1 AS USRID1,
		       B2.PTNG08 AS PTNG08
		  FROM IFWMS113 IT INNER JOIN SKUMA SM ON SM.OWNRKY = IT.OWNRKY AND SM.SKUKEY = IT.SKUKEY 
		                   LEFT OUTER JOIN BZPTN B ON B.OWNRKY = IT.OWNRKY AND B.PTNRKY = IT.PTNROD AND B.PTNRTY = '0001' 
		                   LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = IT.OWNRKY AND B2.PTNRKY = IT.PTNRTO AND B2.PTNRTY = '0007'
		                   LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                             FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                                            WHERE 1 = 1
		                                              AND F.OWNRKY = #{OWNRKY} AND F.WAREKY = #{SES_WAREKY}
		                                          ) C ON IT.OWNRKY = C.OWNRKY AND IT.PTNRTO = C.PTNRKY
		                   LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = IT.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND PK.SKUKEY = IT.SKUKEY
		
		 WHERE IT.MANDT = 'SAP'
		   AND IT.OWNRKY = #{OWNRKY}
		   AND IT.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267')
		   AND IT.XSTAT IN ('R', 'D')
		   AND IT.QTYREQ > 0
		   AND IT.C00102 = 'Y'
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		       ${RANGE_SQL}
		   </if>
		 GROUP BY IT.SVBELN, IT.OWNRKY, IT.DOCUTY, IT.ORDDAT, IT.OTRQDT, IT.PTNRTO, B.NAME01, IT.PTNROD, B2.NAME01, 
		          IT.DIRDVY, IT.DIRSUP, IT.CUADDR, IT.CTNAME, IT.CTTEL1, IT.SALENM, IT.SALTEL, IT.TEXT01, IT.TEXT02,
		          IT.USRID1, B2.PTNG08
	
	</select>
	
	<!-- **[DR09] 거래명세서발행 아이템조회 쿼리 -->
	<select id="DR09_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT /*+ ORDERED */ IT.SVBELN AS KEY,
		       IT.SVBELN AS SVBELN,
		       IT.WAREKY AS WAREKY,
		       IT.SPOSNR AS SPOSNR,
		       IT.OWNRKY AS OWNRKY,
		       IT.SKUKEY AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SM.NETWGT AS NETWGT,
		       IT.QTYREQ AS QTYREQ,
		       SM.QTDUOM AS BXIQTY,
		       TRUNC(IT.QTYREQ / SM.QTDUOM) AS BOXQTY,
		       MOD(IT.QTYREQ, SM.QTDUOM) AS REMQTY,
		       IT.DUOMKY AS DUOMKY,
		       IT.QTYORG AS QTYORG,
		       SUM(IT.QTYREQ) OVER (PARTITION BY IT.OWNRKY, IT.WAREKY, IT.SKUKEY ORDER BY IT.OTRQDT, IT.SVBELN) AS ORDTOT
		  FROM IFWMS113 IT INNER JOIN SKUMA SM ON SM.OWNRKY = IT.OWNRKY AND SM.SKUKEY = IT.SKUKEY 
		                   LEFT OUTER JOIN BZPTN B ON B.OWNRKY = IT.OWNRKY AND B.PTNRKY = IT.PTNROD AND B.PTNRTY = '0001' 
		                   LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = IT.OWNRKY AND B2.PTNRKY = IT.PTNRTO AND B2.PTNRTY = '0007'
		                   LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                             FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                                            WHERE 1 = 1
		                                              AND F.OWNRKY = #{OWNRKY} AND F.WAREKY = #{SES_WAREKY}
		                                          ) C ON IT.OWNRKY = C.OWNRKY AND IT.PTNRTO = C.PTNRKY  
		                   LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = IT.OWNRKY AND PK.WAREKY = #{SES_WAREKY} AND PK.SKUKEY = IT.SKUKEY
		 WHERE IT.MANDT = 'SAP'
		   AND IT.OWNRKY = #{OWNRKY}
		   AND IT.SVBELN = #{SVBELN}
		   AND IT.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267')
		   AND IT.XSTAT IN ('R', 'D')
		   AND IT.QTYREQ > 0
		   AND IT.C00102 = 'Y'
				<if test="RANGE_SQL != null and RANGE_SQL != ''">
				 ${RANGE_SQL}
				</if>
		 ORDER BY IT.WAREKY, IT.SPOSNR
	
	</select>
	
		<!-- **[DR09] 시퀀스쿼리 -->
	<select id="GET_SHPDOC_SEQ_MAP" parameterType="hashmap" resultType="DataMap">
		SELECT LPAD(TO_CHAR(SEQ_SHPDOC.NEXTVAL), 12, '0') AS DOCSEQ  FROM DUAL
	</select>
		<!-- **[DR09] 업데이트 쿼리 -->
	<update id="DR09_GROUPING_UPDATE" parameterType="hashmap">
		UPDATE /*+ INDEX_DESC(IFWMS113 IDX_IFWMS113K03) */  IFWMS113
		   SET TEXT02 = #{TEXT02}
		 WHERE MANDT = 'SAP'
		   AND OWNRKY = '2200' 
		   AND TEXT02 = ' '
		   AND SVBELN = #{SVBELN} 
		   AND XSTAT IN ('R','D')
	
	</update>
	
	<!-- **[DR10] 미출내역 조회쿼리 -->
	<select id="DR10_LIST" parameterType="hashmap" resultType="DataMap">
			
		SELECT IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.ORDDAT AS ORDDAT,
		       IT.SVBELN AS SVBELN,
		       IT.DOCUTY AS DOCUTY,
		       IT.OTRQDT AS OTRQDT,
		       IT.PTNROD AS PTNROD,
		       BZ1.NAME01 AS PTNRODNM,
		       IT.PTNRTO AS PTNRTO,
		       BZ2.NAME01 AS PTNRTONM,
		       BZ2.PTNG08 AS PTNG08,
		       IT.WARESR AS WARESR,
		       IT.SKUKEY AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SM.QTDUOM AS QTDUOM,
		       SM.SKUG03 AS SKUG03,
		       SM.NETWGT AS NETWGT,
		       IT.QTYORG AS QTYORG,
		       IT.QTYREQ AS QTYREQ,
		       IT.QTYORG - IT.QTYREQ AS QTYREQ2,
		       NVL((IT.QTYORG-IT.QTYREQ)*SM.NETWGT,0) AS QTYWGT2,
		       IT.DIRDVY AS DIRDVY,
		       IT.DIRSUP AS DIRSUP,
		       IT.C00103 AS C00103,
		       IT.SALENM AS SALENM,
		       IT.SALTEL AS SALTEL,
		       NVL(PS.PICGRP, '000') AS PICGRP,
		       SF_GET_USERNM(IT.USRID2) AS USRID2
		  FROM IFWMS113 IT LEFT OUTER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		                   LEFT OUTER JOIN SKUWC SW ON IT.OWNRKY = SW.OWNRKY AND SW.WAREKY = #{WAREKY} AND IT.SKUKEY = SW.SKUKEY
		                   LEFT OUTER JOIN BZPTN BZ1 ON IT.OWNRKY = BZ1.OWNRKY AND IT.PTNROD = BZ1.PTNRKY AND BZ1.PTNRTY = '0001'
		                   LEFT OUTER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		                   LEFT OUTER JOIN PICSK PS ON IT.OWNRKY = PS.OWNRKY AND PS.WAREKY = #{WAREKY} AND PS.SKUKEY = IT.SKUKEY
		 WHERE 1 = 1
		   AND IT.XSTAT IN ('R', 'D')
		   AND IT.C00102 = 'Y'
		   AND IT.QTYORG - IT.QTYREQ > 0
		   AND IT.DOCUTY NOT IN('131', '133', '134', '135', '266', '267', '270')
		<if test="OWNRKY != null and OWNRKY != ''">
		   AND IT.OWNRKY = #{OWNRKY}
		</if>
		<if test="WAREKY != null and WAREKY != ''">
		   AND IT.WAREKY = #{WAREKY}
		</if>
		<if test="RANGE_SQL != null and RANGE_SQL != ''">
		   ${RANGE_SQL}
		</if>
		 ORDER BY IT.WAREKY, IT.PTNRTO, IT.SKUKEY
			
	</select>
	
</mapper>
