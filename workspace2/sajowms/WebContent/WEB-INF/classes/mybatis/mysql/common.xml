<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Common">

	<select id="findById" parameterType="hashmap" resultType="DataMap">
		select * from ITEM where ITEM_ID = #{id}
	</select>
	
	<select id="PARTCOMBO_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			'TEMP' AS VALUE_COL,
		    'TEMP' AS TEXT_COL
	</select>
	
	<select id="COMCOMBO_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			CITEMID AS VALUE_COL,
			CODENAME AS TEXT_COL
		FROM WEBDEK.SYSCOMMITEM
		WHERE COMMONID = #{CODE} 
		ORDER BY SORTORDER
	</select>
	
	<select id="COMCODE_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			CONCAT(COMMONID,'_',CITEMID) AS VALUE_COL,
			CODENAME AS TEXT_COL
		FROM WEBDEK.SYSCOMMITEM
		ORDER BY SORTORDER
	</select>
	
	<select id="LOGINMSG_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 
			 'MSG' AS MESGKY,
			 'MSG' AS MESGTX
	</select>

	<resultMap type="project.common.bean.User" id="UserMap">
		<result property="userid" column="USERID"></result>
		<result property="passwd" column="PASSWORD"></result>
		<result property="nmlast" column="USERNAME"></result>
		<result property="compky" column="COMPID"></result>
		<result property="deptid" column="DEPTID"></result>
		<result property="menuky" column="MENUGID"></result>
		<result property="cpasswd" column="CPASSWORD"></result>
		<result property="pwcdat" column="PWDCHDATE"></result>
		<result property="userg1" column="USERG1"></result>
		<result property="userg1" column="USERG1"></result>
		<result property="userg2" column="USERG2"></result>
		<result property="userg3" column="USERG3"></result>
		<result property="gradeid" column="GRADEID"></result>
	</resultMap>
	
	<select id="LOGIN_OBJECT" parameterType="hashmap" resultMap="UserMap">
		SELECT	
			USERID,
			PASSWORD,
			USERNAME,
			COMPID,
			MENUGID,
			DEPTID,
			USERTYPE,
			LOGINDATE,
			PWDCHDATE,
			USERG1,
			USERG2,
			USERG3,
			GRADEID
		FROM WEBDEK.MSTUSER U
		WHERE U.USERID = #{USERID}
			AND U.PASSWORD = #{PASSWD}
			AND U.DELETEYN != 'Y'
	</select>
	
	<select id="USERCHECK_OBJECT" parameterType="hashmap" resultMap="UserMap">
		SELECT	
			USERID,
			PASSWORD,
			#{PASSWD} AS CPASSWORD,
			PWDCHDATE,
			USERNAME,
			COMPID,
			MENUGID,
			DEPTID,
			USERTYPE,
			LOGINDATE,
			USERG1,
			USERG2,
			USERG3,
			GRADEID
		FROM WEBDEK.MSTUSER U
		WHERE U.USERID = #{USERID}
			AND U.DELETEYN != 'Y'
	</select>
	
	<update id="LOGIN_FAIL_UPDATE" parameterType="hashmap">
		UPDATE WEBDEK.MSTUSER SET 
			UPDATEDATE = now(),
			USERG1 = 
			CASE
			    WHEN USERG1 IS NULL THEN 1
			    ELSE USERG1 + 1	
			END
		 WHERE 
			USERID = #{USERID} 
	</update>
	
	<update id="LOGIN_LOCK_UPDATE" parameterType="hashmap">
		UPDATE WEBDEK.MSTUSER SET
			UPDATEDATE = now(), 
			USERG1 = 5,
			USERG2 = 'V'		
		 WHERE 
			USERID = #{USERID} 
	</update>
	
	<select id="MENUTREE_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 
			MGL.MENUGID,
			MGL.MENUID,
			MGL.SORTORDER,
			(CASE WHEN MGL.PMENUID = '' OR  MGL.PMENUID IS NULL THEN 'root' ELSE MGL.PMENUID END) AS AMNUID,
			(CASE WHEN CL.LABEL IS NULL THEN MM.MENUNAME ELSE CL.LABEL END) AS LBLTXL,
			MM.MENUNAME, 
			MM.URI AS PGPATH, 
			MM.PARAM
		FROM WEBDEK.MSTMENUGL MGL 
		LEFT OUTER JOIN WEBDEK.MSTMENU MM ON MM.MENUID = MGL.MENUID 
		LEFT OUTER JOIN WEBDEK.SYSLABEL CL ON CL.LABELGID = 'MENU' AND CL.LANGCODE = 'KO' AND MM.MENULABEL = CL.LABELID
		WHERE MGL.MENUGID = #{MENUGID}
		ORDER BY SORTORDER
	</select>
	
	<select id="LANGUAGE_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			 CI.CITEMID,
			 CI.CODELABEL,
			 CI.CODENAME,
             (CASE WHEN CI.CODELABEL IS NULL THEN CI.CODENAME ELSE CL.LABEL END) AS LABEL
		 FROM WEBDEK.SYSCOMMITEM CI 
		 LEFT OUTER JOIN SYSLABEL CL ON CL.LABELGID = 'STD' AND CL.LANGCODE = 'KO' AND CI.CODELABEL = CL.LABELID
		 WHERE CI.DELETEYN = 'N' 
		 AND CI.COMMONID = 'LANGKY'
		 ORDER BY CI.SORTORDER
	</select>
	
	<select id="SYSLABEL_JS_LIST" parameterType="hashmap" resultType="StringMap">
		SELECT 
			CONCAT(LABELGID,'_',LABELID) AS LABELKEY,
			LABEL
		FROM WEBDEK.SYSLABEL 
		WHERE LANGCODE = #{LANGCODE} 
			AND DELETEYN = 'N'
		ORDER BY LABELGID,LABELID
	</select>
	
	<select id="SYSMESSAGE_JS_LIST" parameterType="hashmap" resultType="StringMap">
		SELECT 
			 CONCAT(MESSAGEGID,'_',MESSAGEID) AS MESSAGEKEY,
			 MESSAGE
		FROM SYSMESSAGE
		WHERE LANGCODE = #{LANGCODE}
	</select>
	
	<select id="MENUTREE_8_LIST" parameterType="hashmap" resultType="DataMap">
		WITH RECURSIVE CTE AS 
		(
		SELECT 
			MENUGID,
			MENUID,
			SORTORDER,
			PMENUID
		FROM WEBDEK.MSTMENUGL 
		WHERE MENUGID = 'ALL'
		UNION ALL
		SELECT 
			P.MENUGID,
			P.MENUID,
			P.SORTORDER,
			P.PMENUID
		FROM WEBDEK.MSTMENUGL P
		INNER JOIN CTE C ON P.PMENUID = C.MENUID 
		)
		SELECT
			distinct 
			MGL.MENUGID,
			MGL.MENUID,
			MGL.SORTORDER,
			(CASE WHEN MGL.PMENUID = '' OR  MGL.PMENUID IS NULL THEN 'root' ELSE MGL.PMENUID END) AS AMNUID,
		    CL.LABEL AS LBLTXL,
			(CASE WHEN CL.LABEL IS NULL THEN MM.MENUNAME ELSE CL.LABEL END) AS LBLTXL,
			MM.MENUNAME, 
			MM.URI AS PGPATH, 
			MM.PARAM
		FROM CTE MGL 
		LEFT OUTER JOIN WEBDEK.MSTMENU MM ON MM.MENUID = MGL.MENUID 
		LEFT OUTER JOIN WEBDEK.SYSLABEL CL ON CL.LABELGID = 'MENU' AND CL.LANGCODE = 'KO' AND MM.MENULABEL = CL.LABELID
		ORDER BY SORTORDER
	</select>
	
	<select id="TABLE_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT
		TABLE_NAME AS VALUE_COL,
		TABLE_NAME AS TEXT_COL
		FROM USER_TABLES
		ORDER BY TABLE_NAME
	</select>

	<select id="SQL_LIST"  parameterType="hashmap" resultType="DataMap">
		${SQL}
	</select>
	
	<select id="JLBLM_LANG_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT
			CMCDVL AS LANGKY
		FROM CMCDV
		WHERE CMCDKY = 'LANGKY' 
		ORDER BY CMCDVL,USARG1
	</select>
	
	<sql id="JLBLM_TABLE">
		SELECT
			 LABLGR||'_'||LABLKY AS LABLKY,
			 LBLTXS,
			 LBLTXM,
			 LBLTXL
		 FROM JLBLM
	</sql>
	
	<select id="JLBLM_LIST"  parameterType="hashmap" resultType="StringMap">
		SELECT
			 LABLGR||'_'||LABLKY AS LABLKY,
			 LBLTXS,
			 LBLTXM,
			 LBLTXL
		FROM JLBLM
		WHERE LANGKY = #{LANGKY}
		<if test="LANGKY != null and LANGKY != ''">
			AND LABLGR != #{LABLGR}
		</if>
	</select>
	
	<select id="JMSGM_LANG_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT
			CMCDVL AS LANGKY
		FROM CMCDV
		WHERE CMCDKY = 'LANGKY' 
		ORDER BY CMCDVL,USARG1
	</select>
	
	<sql id="JMSGM_TABLE">
		SELECT 
			 MESGGR||'_'||MESGKY AS MESGKY,
			 MESGTX
		 FROM JMSGM
	</sql>
	
	<select id="JMSGM_LIST"  parameterType="hashmap" resultType="StringMap">
		SELECT 
			 MESGGR||'_'||MESGKY AS MESGKY,
			 MESGTX
		FROM JMSGM
		WHERE LANGKY = #{LANGKY}
	</select>
	
	<select id="SYSCOMMPOP_LIST" parameterType="hashmap" resultType="StringMap">
		SELECT 
		    CP.COMMPOPID,
		    CP.CPOPLABEL,
		    (CASE WHEN CP.CPOPLABEL IS NULL THEN CP.CPOPNAME ELSE CL.LABEL END) AS CPOPNAME,
		    CP.VIEWTNAME,
		    CP.CPOPDESC,
		    CP.CPOPTYPE,
		    CP.EXETYPE
		FROM SYSCOMMPOP CP 
		LEFT OUTER JOIN SYSLABEL CL ON CL.LABELGID = 'STD' AND CL.LANGCODE = #SES_LANGUAGE# AND CP.CPOPLABEL = CL.LABELID 
	</select>
	
	<select id="SYSCOMMPOP_MAP" parameterType="hashmap" resultType="StringMap">
		SELECT 
		    CP.COMMPOPID,
		    CP.CPOPLABEL,
		    (CASE WHEN CP.CPOPLABEL IS NULL THEN CP.CPOPNAME ELSE CL.LABEL END) AS CPOPNAME,
		    CP.VIEWTNAME,
		    CP.CPOPDESC,
		    CP.CPOPTYPE,
		    CP.EXETYPE
		FROM SYSCOMMPOP CP 
		LEFT OUTER JOIN SYSLABEL CL ON CL.LABELGID = 'STD' AND CL.LANGCODE = #SES_LANGUAGE# AND CP.CPOPLABEL = CL.LABELID 
		WHERE CP.COMMPOPID = #COMMPOPID# 
	</select>
	
	<select id="SYSCPOPITEM_LIST" parameterType="hashmap" resultType="StringMap">
		SELECT 
		    CI.COMMPOPID,
		    CI.CPOPITEMID,
		    CI.CPOPITL,
		    (CASE WHEN CI.CPOPITL IS NULL THEN CI.CPOPITNAME ELSE CL.LABEL END) AS CPOPITNAME,
		    CI.ITEMTYPE,
		    CI.SEARCHTYPE,
		    CI.SFORMAT,
		    CI.SOPTION,
		    CI.RETURNCOL,
		    CI.SDEFAULT,
		    CI.SREQUIRED,
		    CI.GWIDTH,
		    CI.SORTORDER
		FROM SYSCPOPITEM CI 
		LEFT OUTER JOIN SYSLABEL CL ON CL.LABELGID = 'STD' AND CL.LANGCODE = #SES_LANGUAGE# AND CI.CPOPITL = CL.LABELID 
		WHERE CI.COMMPOPID = #COMMPOPID# 
		ORDER BY CI.SORTORDER 
	</select>
	
	<select id="SEARCH_LIST"  parameterType="hashmap" resultType="StringMap">
		SELECT 
			${COL}
		FROM ${TABLE}
		WHERE 1=1 
		<if test="WHARE_SQL != null and WHARE_SQL != ''">
			${WHARE_SQL}
		</if>
		<if test="RANGE_SQL != null and RANGE_SQL != ''">
			${RANGE_SQL}
		</if>
	</select>
	
	<update id="LOGIN_UPDATE"  parameterType="hashmap">
		UPDATE MSTUSER SET 
			LOGINDATE = now(),
			USERG1 = 0
		 WHERE 
			USERID = #{USERID} 
	</update>
	
	<select id="PASSWORD_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			 USERID 
		 FROM MSTUSER 
		 WHERE USERID = #{USERID} 
		 AND PASSWORD = #{PASSWD}
	</select>
	
	<select id="USERCHECK_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			 USERID 
		 FROM MSTUSER 
		 WHERE USERID = #{USERID} 
	</select>
	
	<update id="PASSWORD_UPDATE"  parameterType="hashmap">
		UPDATE MSTUSER SET
			PASSWORD = #{NUSERPWD},
			PWDCHDATE = now(),
			UPDATEDATE = now(),
			UPDATEUSER = #{SES_USER_ID}
		 WHERE USERID = #{USERID} 
		 AND PASSWORD = #{USERPWD} 
	</update>
	
	<update id="PASSWORD_RESET_UPDATE"  parameterType="hashmap">
		UPDATE MSTUSER SET
			PASSWORD = USERID,
			USERG1 = 0,
			USERG2 = ' ',
			PWDCHDATE = now(),
			UPDATEDATE = now(),
			UPDATEUSER = #{SES_USER_ID}
		 WHERE 
			USERID = #{USERID} 
	</update>
	
	<update id="LOCK_RESET_UPDATE"  parameterType="hashmap">
		UPDATE MSTUSER SET
			USERG1 = 0,
			USERG2 = ' ',
			UPDATEDATE = now(),
			UPDATEUSER = #{SES_USER_ID}
		 WHERE 
			USERID = #{USERID} 
	</update>
	
	<update id="LOGOUT_UPDATE"  parameterType="hashmap">
		UPDATE MSTUSER SET 
			LOGOUTDATE = now()
		 WHERE 
			USERID = #{SES_USER_ID}
	</update>
	
	<select id="SYSGRIDCOL_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 
			 USERID,
			 PROGID,
			 GRIDID,
			 COLGID,
			 GROUPDATA
		 FROM SYSGRIDCOL 
		 WHERE USERID = #{SES_USER_ID}
		<if test="PROGID != null and PROGID != ''">
		  AND PROGID = #{PROGID}
		</if>
		<if test="GRIDID != null and GRIDID != ''">
		  AND GRIDID = #{GRIDID}
		</if>
		<if test="COLGID != null and COLGID != ''">
		  AND COLGID = #{COLGID}
		</if>
	</select>	

	<insert id="SYSGRIDCOL_INSERT" parameterType="hashmap">
		INSERT INTO SYSGRIDCOL 
			(USERID,PROGID,GRIDID,COLGID,GROUPDATA,
			CREATEUSER,CREATEDATE,UPDATEUSER,UPDATEDATE) 
		VALUES 
			(#{SES_USER_ID},#{PROGID},#{GRIDID},#{COLGID},#{GROUPDATA},
			#{SES_USER_ID},now(),#{SES_USER_ID},now())
	</insert>
	
	<update id="SYSGRIDCOL_UPDATE" parameterType="hashmap">
		UPDATE SYSGRIDCOL SET 
			GROUPDATA = #{GROUPDATA},
			UPDATEDATE = now(),
			UPDATEUSER = #{SES_USER_ID}
		 WHERE 
			USERID = #{SES_USER_ID} 
			AND PROGID = #{PROGID} 
			AND GRIDID = #{GRIDID}
			AND COLGID = #{COLGID}  
	</update>
	
	<delete id="SYSGRIDCOL_DELETE" parameterType="hashmap">
		DELETE FROM SYSGRIDCOL
		WHERE 
			USERID = #{SES_USER_ID} 
			AND PROGID = #{PROGID} 
			AND GRIDID = #{GRIDID}
			AND COLGID = #{COLGID} 
	</delete>
		
	<select id="USRLO_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			PROGID,
			GRIDID AS COMPID,
			COLGID AS LYOTID,
			GROUPDATA AS LAYDAT
		FROM SYSGRIDCOL
		WHERE USERID = #{SES_USER_ID} 
		<if test="PROGID != null and PROGID != ''">
			AND PROGID = #{PROGID} 
		</if>
		<if test="COMPID != null and COMPID != ''">
			AND GRIDID = #{COMPID} 
		</if>
		<if test="LYOTID != null and LYOTID != ''">
			AND COLGID = #{LYOTID} 
		</if>
	</select>
	
	<insert id="USRLO_INSERT"  parameterType="hashmap">
		INSERT INTO SYSGRIDCOL 
			(USERID,PROGID,GRIDID,COLGID,GROUPDATA,
			CREATEUSER,CREATEDATE,UPDATEUSER,UPDATEDATE) 
		VALUES 
			(#{SES_USER_ID},#{PROGID},#{COMPID},#{LYOTID},#{LAYDAT},
			#{SES_USER_ID},now(),#{SES_USER_ID},now())
	</insert>
	
	<update id="USRLO_UPDATE"  parameterType="hashmap">
		UPDATE SYSGRIDCOL SET 
			GROUPDATA = #{LAYDAT},
			UPDATEDATE = now(),
			UPDATEUSER = #{SES_USER_ID}
		 WHERE 
			USERID = #{SES_USER_ID} 
			AND PROGID = #{PROGID} 
			AND GRIDID = #{COMPID}
			AND COLGID = #{LYOTID}
	</update>
	
	<delete id="USRLO_DELETE"  parameterType="hashmap">
		DELETE FROM SYSGRIDCOL
		WHERE 
			USERID = #{SES_USER_ID} 
			AND PROGID = #{PROGID} 
			AND GRIDID = #{COMPID}
			AND COLGID = #{LYOTID}
	</delete>
	
	<select id="USRPHC_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT 
		    H.PROGID,
		    H.PARMKY,
		    H.DEFCHK,
		    I.ITEMNO,
			I.CTRLID,
			I.CTRLTY,
			I.CTRVAL 
		FROM USRPH H
		JOIN USRPI I ON H.USERID = I.USERID AND H.PROGID = I.PROGID 
		WHERE H.USERID = #{SES_USER_ID} 
		AND H.DEFCHK = 'V'
	</select>
	
	<select id="USRPH_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			USERID,
			PROGID,
			PARMKY,
			SHORTX,
			DEFCHK
		FROM USRPH
		WHERE USERID = #{SES_USER_ID} 
		<if test="PROGID != null and PROGID != ''">
			AND PROGID = #{PROGID} 
		</if>
		<if test="DEFCHK != null and DEFCHK != ''">
			AND DEFCHK = #{DEFCHK} 
		</if>
	</select>
	
	<select id="USRPH_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			USERID,
			PROGID,
			PARMKY,
			SHORTX,
			DEFCHK
		FROM USRPH
		WHERE USERID = #{SES_USER_ID} 
		AND PROGID = #{PROGID} 
		AND PARMKY = #{PARMKY}
	</select>
	
	<insert id="USRPH_INSERT"  parameterType="hashmap">
		INSERT INTO USRPH (USERID,PARMKY,PROGID,SHORTX,DEFCHK
								,CREDAT,CRETIM,CREUSR
								,LMODAT,LMOTIM,LMOUSR) 
		VALUES (#{SES_USER_ID},#{PARMKY},#{PROGID},#{SHORTX},#{DEFCHK}
				,TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID}
 			    ,TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID})
	</insert>
	
	<update id="USRPHDEF_UPDATE"  parameterType="hashmap">
		UPDATE USRPH SET 
			DEFCHK = ' '
		WHERE 
			 USERID = #{SES_USER_ID} 
			 AND PROGID = #{PROGID} 
	</update>
	
	<update id="USRPH_UPDATE"  parameterType="hashmap">
		UPDATE USRPH SET 
			SHORTX = #SHORTX#,
			DEFCHK = #DEFCHK#
		WHERE 
			 USERID = #{SES_USER_ID} 
			 AND PARMKY = #{PARMKY} 
			 AND PROGID = #{PROGID} 
	</update>
	
	<delete id="USRPH_DELETE"  parameterType="hashmap">
		DELETE FROM USRPH
		WHERE 
			 USERID = #{SES_USER_ID} 
			 AND PARMKY = #{PARMKY} 
			 AND PROGID = #{PROGID} 
	</delete>
	
	<select id="USRPI_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT 
			ITEMNO,
			CTRLID,
			CTRLTY,
			CTRVAL
		FROM USRPI
		WHERE PROGID = #{PROGID} 
			AND PARMKY = #{PARMKY}
		<if test="USERID != null and USERID != ''">
			AND USERID = #{USERID} 
		</if>
		<if test="DEFCHK != null or DEFCHK != ''">
			AND USERID = #{SES_USER_ID} 
		</if>
	</select>
	
	<insert id="USRPI_INSERT"  parameterType="hashmap">
		INSERT INTO USRPI (USERID,PARMKY,PROGID,ITEMNO,CTRLID
								,CTRLTY,CTRVAL
								,CREDAT,CRETIM,CREUSR
								,LMODAT,LMOTIM,LMOUSR) 
		 VALUES (#{SES_USER_ID},#{PARMKY},#{PROGID},#{ITEMNO},#{CTRLID}
					,' ',#CTRVAL#
					,TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID}
	 			    ,TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID})
	</insert>
	
	<delete id="USRPI_DELETE"  parameterType="hashmap">
		DELETE FROM USRPI
		WHERE 
			 USERID = #{SES_USER_ID} 
			 AND PARMKY = #{PARMKY} 
			 AND PROGID = #{PROGID} 
	</delete>
	
	<insert id="FMENU_INSERT"  parameterType="hashmap">
		INSERT INTO MNUFV (USERID, MENUKY, MENUID, SORTSQ, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR)
		(SELECT USERID, (SELECT USRMA.MENUKY FROM USRMA WHERE USRMA.USERID = #{SES_USER_ID}), MENUID, SORTSQ, CREDAT, CRETIM, CREUSR, LMODAT, LMOTIM, LMOUSR
		  FROM (SELECT #{SES_USER_ID} AS USERID,
		               #MENUID# AS MENUID,
		               LPAD(NVL(MAX(SORTSQ), 0) + 1, 4, '0') AS SORTSQ,
		               TO_CHAR(SYSDATE, 'YYYYMMDD') AS CREDAT,
		               TO_CHAR(SYSDATE, 'HH24MISS') AS CRETIM,
		               #{SES_USER_ID} AS CREUSR,
		               TO_CHAR(SYSDATE, 'YYYYMMDD') AS LMODAT,
		               TO_CHAR(SYSDATE, 'HH24MISS') AS LMOTIM,
		               #{SES_USER_ID} AS LMOUSR
		          FROM MNUFV
		          WHERE USERID = #{SES_USER_ID}) MN
		 WHERE NOT EXISTS (SELECT USERID
		                     FROM MNUFV
		                    WHERE MNUFV.MENUKY = (SELECT USRMA.MENUKY FROM USRMA WHERE USRMA.USERID = #{SES_USER_ID})
		                      AND MNUFV.MENUID = MN.MENUID
		                      AND MNUFV.USERID = MN.USERID))
	</insert>	
	
	<insert id="FMENU_DELETE"  parameterType="hashmap">
		DELETE FROM MNUFV 
		WHERE USERID = #{SES_USER_ID} 
			AND MENUKY = (SELECT MENUKY FROM USRMA WHERE USERID = #{SES_USER_ID}) 
			AND MENUID = #{MENUID}
	</insert>
	
	<sql id="FWCMFL0010_TABLE">
		SELECT
			UUID,
			RPATH,
			PATH,
			FNAME,
			NAME,
			MIME,
			STYPE,
			BYTE,
			GUUID,
			CASE WHEN BYTE <![CDATA[<]]> 1024 THEN BYTE || ' BYTE'
		         WHEN BYTE > 1024 AND BYTE <![CDATA[<]]> (1024*1024) THEN  ROUND(BYTE/1024,2) || ' KB'
		         ELSE ROUND(BYTE/(1024*1024),2) || ' MB'
		    END  AS BYTE_FILESIZEVIEW,
			DELKEY,
			UPTBYN,
			TO_CHAR(TO_DATE(CREDAT,'YYYYMMDD'),'$FORMAT_DATE$') AS CREDAT,
			TO_CHAR(TO_DATE(CRETIM,'HH24MISS'),'$FORMAT_TIME$') AS CRETIM,
			CREUSR,
			TO_CHAR(TO_DATE(LMODAT,'YYYYMMDD'),'$FORMAT_DATE$') AS LMODAT,
			TO_CHAR(TO_DATE(LMOTIM,'HH24MISS'),'$FORMAT_TIME$') AS LMOTIM,
			LMOUSR
		FROM FWCMFL0010 
	</sql>
	<select id="FWCMFL0010_LIST"  parameterType="hashmap" resultType="DataMap">
		<include refid="FWCMFL0010_TABLE" />
		WHERE 1=1
		<if test="STYPE != null and STYPE != ''">
			AND STYPE = #{STYPE} 
		</if>
		<if test="MIME != null and MIME != ''">
			AND MIME = #{MIME} 
		</if>
		<if test="DELKEY != null and DELKEY != ''">
			AND DELKEY = #{DELKEY} 
		</if>
		<if test="GUUID != null and GUUID != ''">
			AND GUUID = #{GUUID} 
		</if>
	</select>

	<select id="FWCMFL0010_MAP"  parameterType="hashmap" resultType="DataMap">
		<include refid="FWCMFL0010_TABLE" />
		WHERE UUID = #{UUID}
	</select>

	<insert id="FWCMFL0010_INSERT"  parameterType="hashmap">
		INSERT INTO
		FWCMFL0010
		(UUID,RPATH,PATH,FNAME,NAME,MIME,STYPE,BYTE,GUUID,DELKEY,CREDAT,CRETIM,CREUSR,LMODAT,LMOTIM,LMOUSR)
		VALUES
		(#{UUID},#{RPATH},#{PATH},#{FNAME},#{NAME},#{MIME},#{STYPE},#{BYTE},#{GUUID},'N',
		TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID},
 		TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID})
	</insert>

	<delete id="FWCMFL0010_DELETE"  parameterType="hashmap">
		UPDATE FWCMFL0010
		SET
			DELKEY = 'Y' ,
			LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
			LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
			LMOUSR = #{SES_USER_ID}
		WHERE
		UUID = #{UUID}
	</delete>
	
	<!-- 2019.07.02 이범준 : 파일 정보 테이블의 저장 여부 flag update-->
    <update id="FWCMFL0010_UPTBYN_UPDATE"  parameterType="hashmap">
        UPDATE FWCMFL0010 SET UPTBYN = #{UPTBYN} WHERE UUID = #{UUID} 
    </update>

	<sql id="FWCMFL0011_TABLE">
		SELECT
			UUID,
			PIXEL,
			FNAME,
			DELKEY,
			TO_CHAR(TO_DATE(CREDAT,'YYYYMMDD'),'$FORMAT_DATE$') AS CREDAT,
			TO_CHAR(TO_DATE(CRETIM,'HH24MISS'),'$FORMAT_TIME$') AS CRETIM,
			CREUSR,
			TO_CHAR(TO_DATE(LMODAT,'YYYYMMDD'),'$FORMAT_DATE$') AS LMODAT,
			TO_CHAR(TO_DATE(LMOTIM,'HH24MISS'),'$FORMAT_TIME$') AS LMOTIM,
			LMOUSR
		FROM FWCMFL0011
	</sql>
	<select id="FWCMFL0011_LIST"  parameterType="hashmap" resultType="DataMap">
		<include refid="FWCMFL0011_TABLE" />
		WHERE 1=1
		<if test="UUID != null and UUID != ''">
			AND UUID = #{UUID} 
		</if>
	</select>

	<select id="FWCMFL0011_MAP"  parameterType="hashmap" resultType="DataMap">
		<include refid="FWCMFL0011_TABLE" />
		WHERE UUID = #{UUID} 
		AND PIXEL = #{PIXEL}
	</select>
	
	<select id="FWCMFL0011MIN_MAP"  parameterType="hashmap" resultType="DataMap">
		<include refid="FWCMFL0011_TABLE" />
		WHERE UUID = #{UUID} 
		AND PIXEL = (SELECT NVL(MIN(PIXEL), ' ') FROM FWCMFL0011 WHERE UUID = #{UUID})
	</select>

	<insert id="FWCMFL0011_INSERT"  parameterType="hashmap">
		INSERT INTO FWCMFL0011 
		(UUID,PIXEL,FNAME,DELKEY,CREDAT,CRETIM,CREUSR,LMODAT,LMOTIM,LMOUSR) 
 		VALUES 
 		(#{UUID},#{PIXEL},#{FNAME},'N',
		TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID},
 		TO_CHAR(SYSDATE, 'YYYYMMDD'),TO_CHAR(SYSDATE, 'HH24MISS'),#{SES_USER_ID})
	</insert>

	<delete id="FWCMFL0011_DELETE"  parameterType="hashmap">
		UPDATE FWCMFL0011
		SET
			DELKEY = 'Y' ,
			LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
			LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
			LMOUSR = #{SES_USER_ID}
		WHERE
		UUID = #{UUID}
	</delete>
	
	<select id="DFDIC_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT
		    D.DDICKY,
		    D.DATFTY,
		    D.SHORTX,
		    D.DBFILD,
		    D.PDATTY,
		    D.OBJETY,
		    'TEXT' AS COLTY,
		    NVL(D.DBLENG,0) AS DBLENG,
		    NVL(D.DBDECP,0) AS DBDECP,
		    NVL(D.OUTLEN,5)*10 AS OUTLEN,
		    D.SHLPKY,
		    D.FLDALN,
		    D.LABLGR,
		    D.LABLKY,
		    D.LBTXTY,
		    L.LBLTXS,
		    D.LBTXTY AS GLBTXTY,
		    L.LBLTXL AS GLBLTXS,
		    ' ' AS SELECTOPTIONS,
		    ROWNUM*10 AS SELECTORDER,  
		    ' ' AS RANGE,
		    'V' AS GRID,
		    ROWNUM*10 AS GRIDORDER     
		FROM DFDIC D
		LEFT OUTER JOIN JLBLM L ON L.LABLGR = D.LABLGR AND L.LABLKY = D.LABLKY AND L.LANGKY = 'KR'
		WHERE D.DDICKY = #{name}
	</select>
	
	<select id="LABLM_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT
		    * 
		FROM JLBLM 
		WHERE LANGKY = #SES_LANGUAGE#
		  AND LABLGR = #{LABLGR} 
		  AND LABLKY = #{LABLKY}
	</select>
	
	<select id="ROLCT_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT WAREKY
		  FROM ROLCT
		 WHERE UROLKY IN ( SELECT UROLKY FROM USRRA WHERE USERID = #{SES_USER_ID} )
		   AND WAREKY = #{WAREKY}
	</select>
	
	<!-- 2019.06.28 이범준 : session key 체번 -->
	<select id="PROCS_BTCSEQ_MAP"  parameterType="hashmap" resultType="DataMap">
    	SELECT TO_CHAR(SEQ_PROCS.NEXTVAL) AS BTCSEQ FROM DUAL
    </select>
    
    <!-- 2019.06.28 이범준 : 프로시져를 이용해 저장시 이력을 남김 -->
    <select id="PROCS_UPD_COUNT"  parameterType="hashmap" resultType="Integer">
       SELECT 
		    COUNT(1) AS CNT
	   FROM PROCS
	   WHERE BTCSEQ = #{BTCSEQ}
	     AND PRCFLG IN('Y','E') 	
    </select>
	
</mapper>
