<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SajoInbound">

	<!-- GR00 헤더 조회-->
	<select id="GR00_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			  AH.ASNDKY AS ASNDKY
			, AH.ASNDKY AS KEY
			, NVL(MAX(RI.RECVKY),' ') AS RECVKY
			, AH.WAREKY AS WAREKY
			, WH.NAME01 AS WAREKYNM
			, #{RCPTTY} AS RCPTTY
			, DT.SHORTX AS RCPTTYNM
			, AH.STATDO AS STATDO
			, ' ' AS SAPSTS
			, DECODE(AH.OWNRKY , '2200' , AH.PRCPTD , TO_CHAR(SYSDATE,'YYYYMMDD')) AS DOCDAT
			, '100' AS DOCCAT
			, DC.SHORTX AS DOCCATNM
			, AH.DPTNKY AS DPTNKY
			, VD.NAME01 AS DPTNKYNM
			, ' ' AS DRELIN
			, AH.PRCPTD AS ARCPTD
			, AH.OWNRKY AS OWNRKY
			, ' ' AS INDRCN
			, ' ' AS CRECVD
			, ' ' AS RSNCOD
			, ' ' AS PUTSTS
			, ' ' AS LGORT
			, ' ' AS LGORTNM
			, AH.USRID1 AS USRID1
			, AH.UNAME1 AS UNAME1
			, AH.DEPTID1 AS DEPTID1
			, AH.DNAME1 AS DNAME1
			, AH.USRID2 AS USRID2
			, AH.UNAME2 AS UNAME2
			, AH.DEPTID2 AS DEPTID2
			, AH.DNAME2 AS DNAME2
			, AH.USRID3 AS USRID3
			, AH.UNAME3 AS UNAME3
			, AH.DEPTID3 AS DEPTID3
			, AH.DNAME3 AS DNAME3
			, AH.USRID4 AS USRID4
			, AH.UNAME4 AS UNAME4
			, AH.DEPTID4 AS DEPTID4
			, AH.DNAME4 AS DNAME4
			, AH.DOCTXT AS DOCTXT
			, AH.ASNDKY AS ASNDKY
			, AH.CREDAT AS CREDAT
            , AH.CRETIM AS CRETIM
            , AH.CREUSR AS CREUSR
            , ' ' AS CUSRNM
<!-- 			, AI.SEBELN AS SEBELN -->
		FROM
			ASNDH AH
			INNER JOIN ASNDI AI
				ON		AI.ASNDKY = AH.ASNDKY
			LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = AI.SEBELN
					AND RI.SEBELP = AI.SEBELP
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = AH.OWNRKY
					AND SM.SKUKEY = AI.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = AH.WAREKY
					AND SW.OWNRKY = AH.OWNRKY
					AND SW.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN WAHMA WH
				ON	WH.WAREKY = AH.WAREKY
			LEFT OUTER JOIN DOCCM DC
				ON	DC.DOCCAT = '100'
			LEFT OUTER JOIN DOCTM DT
				ON	DT.DOCUTY = AH.ASNTTY
			LEFT OUTER JOIN BZPTN VD
				ON		VD.PTNRKY = AH.DPTNKY
					AND VD.OWNRKY = AH.OWNRKY
					AND VD.PTNRTY = '0002'
			INNER JOIN IFWMS103 IFT
				ON		IFT.SEBELN = AI.SEBELN
					AND IFT.SEBELP = AI.SEBELP
		WHERE
				AH.OWNRKY = #{OWNRKY}
			AND AH.WAREKY = #{WAREKY}
			AND AH.ASNTTY = '051'
			
			<if test="SAVEKEY != null and SAVEKEY != ''"> 
				AND RI.RECVKY IN (${SAVEKEY})
			</if>
			<if test="SAVEKEY == null or SAVEKEY == ''">
				AND (AI.QTYASN-AI.QTYRCV) > 0
				AND AH.STATDO = 'NEW'
				<choose>
					<when test="RCPTTY == 101 ">
						AND  AI.STATIT IN ('NEW','ARV')
					</when>
					<when test="RCPTTY == 101 ">
						AND  AI.STATIT IN ('NEW')
					</when>
				</choose>
				AND IFT.POCLOS = ' '	
				AND IFT.XSTAT = 'R'
			</if>
			
			 <if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			 </if>
			
			
		
		GROUP
			BY AH.ASNDKY, AH.WAREKY, AH.DPTNKY, AH.OWNRKY, AI.SLGORT,
			WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01, AH.DOCTXT, AH.STATDO,
			AH.USRID1, AH.UNAME1, AH.DEPTID1, AH.DNAME1, AH.PRCPTD, 
			AH.USRID2, AH.UNAME2, AH.DEPTID2, AH.DNAME2,
			AH.USRID3, AH.UNAME3, AH.DEPTID3, AH.DNAME3, 
			AH.USRID4, AH.UNAME4, AH.DEPTID4, AH.DNAME4,
			AH.CREDAT, AH.CRETIM, AH.CREUSR
<!-- 			, AI.SEBELN -->
		ORDER BY AH.ASNDKY DESC
	</select>
	<!-- GR00 아이템 조회-->
	<select id="GR00_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT DISTINCT
			  AI.ASNDKY AS ASNDKY
			, AH.ASNDKY AS KEY
			, ' ' AS RECVKY	
			, ' ' AS RECVIT	
			, AI.STATIT AS STATIT
			, CM.CDESC1 AS STATITNM
			, ' ' AS SAPSTS
			, AI.SKUKEY AS SKUKEY
			, ' ' AS LOTNUM
			, ' ' AS AREAKY
		<if test = "'GR00'.equalsIgnoreCase(menuId)">
			, NVL(SW.LOCARV , ' ') AS LOCAKY				
		</if>
		<if test = "'GR01'.equalsIgnoreCase(menuId)">
			, 'DOCLOC' AS LOCAKY
		</if>
			, ' ' AS SECTID
			, ' ' AS TRNUID
			, ' ' AS PACKID	   
			, (AI.QTYASN) AS ASNQTY
			, DECODE(AI.STATIT , 'NEW' , AI.QTYASN , AI.QTYRCV) AS QTYRCV
			, 0 AS QTYDIF
			, AI.QTYUOM AS QTYUOM
			, ' ' AS TRUNTY
			, AI.MEASKY AS MEASKY
			, AI.UOMKEY AS UOMKEY	   
			, NVL(AI.QTYASN , 0) AS ASNQTY
			, NVL(AI.QTYASN , 0) AS QTYASN 
			, NVL(  TRUNC(DECODE(AI.STATIT, 'NEW', AI.QTYASN, AI.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY
			, DECODE(SM.DLGORT, 'Y', NVL(CEIL(DECODE(AI.STATIT, 'NEW', AI.QTYASN, AI.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0), 0) AS PBOXQTY
			, NVL(MI.QTPUOM , 0) AS BXIQTY
			, NVL(MOD(AI.QTYASN , MI.QTPUOM) , 0) AS REMQTY 
			, NVL(  TRUNC(DECODE(AI.STATIT, 'NEW', AI.QTYASN, AI.QTYRCV) / DECODE(MIP.QTPUOM, 0, NULL, MIP.QTPUOM) ) ,0) AS PLTQTY
			, NVL(MIP.QTPUOM , 0) AS PLTQTYCAL
			, NVL(AI.QTPUOM , 9999999) AS QTPUOM
			, NVL(SM.DUOMKY , ' ') AS DUOMKY
			, NVL(AI.QTDUOM , 9999999) AS QTDUOM
			, ' ' AS INDRCN
			, ' ' AS CRECVD
			, ' ' AS RSNCOD
			, AI.LOTA01 AS LOTA01
			, NVL(L01NM.NAME01 , ' ') AS LOTA01NM
			, AI.LOTA02 AS LOTA02
			, AI.LOTA03 AS LOTA03
			, AI.LOTA04 AS LOTA04
			, AI.LOTA05 AS LOTA05
			, AI.LOTA06 AS LOTA06
			, AI.LOTA07 AS LOTA07
			, AI.LOTA08 AS LOTA08
			, AI.LOTA09 AS LOTA09
			, AI.LOTA10 AS LOTA10
			, AI.LOTA11 AS LOTA11
			, TO_CHAR(SYSDATE , 'YYYYMMDD') AS LOTA12
			, AI.LOTA13 AS LOTA13
			, AI.LOTA14 AS LOTA14
			, AI.LOTA15 AS LOTA15
			, AI.LOTA16 AS LOTA16
			, AI.LOTA17 AS LOTA17
			, AI.LOTA18 AS LOTA18
			, AI.LOTA19 AS LOTA19
			, AI.LOTA20 AS LOTA20
			, AI.AWMSNO AS AWMSNO
			, AH.ASNDKY AS REFDKY
			, AI.ASNDIT AS REFDIT
			, AH.DOCCAT AS REFCAT
			, TO_CHAR(SYSDATE , 'YYYYMMDD') AS REFDAT
			, NVL(SM.DESC01 , ' ') AS DESC01
			, NVL(SM.DESC02 , ' ') AS DESC02
			, AI.ASKU01 AS ASKU01
			, AI.ASKU02 AS ASKU02
			, AI.ASKU03 AS ASKU03
			, AI.ASKU04 AS ASKU04
			, AI.ASKU05 AS ASKU05
			, AI.EANCOD AS EANCOD
			, AI.GTINCD AS GTINCD
			, AI.SKUG01 AS SKUG01
			, AI.SKUG02 AS SKUG02
			, AI.SKUG03 AS SKUG03
			, AI.SKUG04 AS SKUG04
			, AI.SKUG05 AS SKUG05
			, NVL(SM.GRSWGT , 0) * NVL(DECODE(AI.STATIT , 'NEW' , AI.QTYASN , AI.QTYRCV) , 0)  AS GRSWGT
			, NVL(SM.GRSWGT , 0)   AS GRSWGTCNT
			, NVL(SM.NETWGT , 0) * NVL(DECODE(AI.STATIT , 'NEW' , AI.QTYASN , AI.QTYRCV) , 0)  AS NETWGT
			, NVL(SM.NETWGT , 0)   AS NETWGTCNT	 
			, AI.WGTUNT AS WGTUNT
			, AI.LENGTH AS LENGTH
			, AI.WIDTHW AS WIDTHW
			, AI.HEIGHT AS HEIGHT
			, AI.CUBICM AS CUBICM
			, AI.CAPACT AS CAPACT
			, 0 AS QTYORG
			, AI.SMANDT AS SMANDT
			, AI.SEBELN AS SEBELN
			, AI.SEBELP AS SEBELP
			, AI.SZMBLNO AS SZMBLNO
			, AI.SZMIPNO AS SZMIPNO
			, AI.STRAID AS STRAID
			, AI.SVBELN AS SVBELN
			, AI.SPOSNR AS SPOSNR
			, AI.STKNUM AS STKNUM
			, AI.STPNUM AS STPNUM
			, AI.SWERKS AS SWERKS
			, AI.SLGORT AS SLGORT
			, AI.SDATBG AS SDATBG
			, AI.STDLNR AS STDLNR
			, AI.SSORNU AS SSORNU
			, AI.SSORIT AS SSORIT
			, AI.SMBLNR AS SMBLNR
			, AI.SZEILE AS SZEILE
			, AI.SMJAHR AS SMJAHR
			, AI.SXBLNR AS SXBLNR
			, AI.LRCPTD AS LRCPTD
			, AI.SBKTXT  AS SBKTXT
			, ' ' AS RCPRSN
			, SM.OUTDMT AS OUTDMT
			, AI.LRCPTD AS LRCPTD
			, NVL(TO_DATE(TRIM(AI.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')), 0) AS DTREMDAT
			, NVL(TRUNC((TO_NUMBER(TO_DATE(TRIM(AI.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100), 0) AS DTREMRAT
		FROM ASNDH AH
			INNER JOIN ASNDI AI
				ON		AI.ASNDKY = AH.ASNDKY
			LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = AI.SEBELN
					AND RI.SEBELP = AI.SEBELP
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = AH.OWNRKY
					AND SM.SKUKEY = AI.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = AH.WAREKY
					AND SW.OWNRKY = AH.OWNRKY
					AND SW.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN MEASI MI
				ON		MI.WAREKY = AH.WAREKY
					AND MI.OWNRKY = AH.OWNRKY
					AND MI.MEASKY = AI.MEASKY
					AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = AH.WAREKY
					AND MIP.OWNRKY = AH.OWNRKY
					AND MIP.MEASKY = AI.MEASKY
					AND MIP.UOMKEY = 'PL'			  
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = AH.DPTNKY
					AND L01NM.OWNRKY = AH.OWNRKY
					AND L01NM.PTNRTY = '0002'
			LEFT OUTER JOIN CMCDV CM
				ON		CM.CMCDKY = 'STATIT' 
					AND CM.CMCDVL = AI.STATIT
			INNER JOIN IFWMS103 IFT
				ON		IFT.SEBELN = AI.SEBELN
					AND IFT.SEBELP = AI.SEBELP
		WHERE
			<if test="SAVEKEY != null and SAVEKEY != ''"> 
					RI.RECVKY = #{RECVKY}
			</if>
			<if test="SAVEKEY == null or SAVEKEY == ''">
					AH.ASNDKY = #{KEY}
				AND AH.STATDO = 'NEW'
				AND AI.STATIT IN ('NEW' , 'ARV')
				AND AH.ASNTTY = '051'
				AND IFT.XSTAT = 'R'
				AND IFT.POCLOS = ' '
			</if>
			
			<if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			 </if>
				
			
		ORDER BY AI.SEBELN , AI.SEBELP , AI.QTYASN
	</select>
	
	<!-- GR00 아이템 조회-->
	<select id="GR00_ITEM_SAVE_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			  AI.ASNDKY AS ASNDKY
			, AH.ASNDKY AS KEY
			, NVL(RI.RECVKY,' ') AS RECVKY	
			, NVL(RI.RECVIT,' ') AS RECVIT	
			, AI.STATIT AS STATIT
			, CM.CDESC1 AS STATITNM
			, ' ' AS SAPSTS
			, AI.SKUKEY AS SKUKEY
			, ' ' AS LOTNUM
			, ' ' AS AREAKY
		<if test = "'GR00'.equalsIgnoreCase(menuId)">
			, NVL(SW.LOCARV , ' ') AS LOCAKY				
		</if>
		<if test = "'GR01'.equalsIgnoreCase(menuId)">
			, 'DOCLOC' AS LOCAKY
		</if>
			, ' ' AS SECTID
			, ' ' AS TRNUID
			, ' ' AS PACKID	   
			, (AI.QTYASN) AS ASNQTY
			, DECODE(AI.STATIT , 'NEW' , AI.QTYASN , AI.QTYRCV) AS QTYRCV
			, 0 AS QTYDIF
			, AI.QTYUOM AS QTYUOM
			, ' ' AS TRUNTY
			, AI.MEASKY AS MEASKY
			, AI.UOMKEY AS UOMKEY	   
			, NVL(AI.QTYASN , 0) AS ASNQTY
			, NVL(AI.QTYASN , 0) AS QTYASN 
			, NVL(  TRUNC(DECODE(AI.STATIT, 'NEW', AI.QTYASN, AI.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY
			, DECODE(SM.DLGORT, 'Y', NVL(CEIL(DECODE(AI.STATIT, 'NEW', AI.QTYASN, AI.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0), 0) AS PBOXQTY
			, NVL(MI.QTPUOM , 0) AS BXIQTY
			, NVL(MOD(AI.QTYASN , MI.QTPUOM) , 0) AS REMQTY 
			, NVL(  TRUNC(DECODE(AI.STATIT, 'NEW', AI.QTYASN, AI.QTYRCV) / DECODE(MIP.QTPUOM, 0, NULL, MIP.QTPUOM) ) ,0) AS PLTQTY
			, NVL(MIP.QTPUOM , 0) AS PLTQTYCAL
			, NVL(AI.QTPUOM , 9999999) AS QTPUOM
			, NVL(SM.DUOMKY , ' ') AS DUOMKY
			, NVL(AI.QTDUOM , 9999999) AS QTDUOM
			, ' ' AS INDRCN
			, ' ' AS CRECVD
			, ' ' AS RSNCOD
			, AI.LOTA01 AS LOTA01
			, NVL(L01NM.NAME01 , ' ') AS LOTA01NM
			, AI.LOTA02 AS LOTA02
			, AI.LOTA03 AS LOTA03
			, AI.LOTA04 AS LOTA04
			, AI.LOTA05 AS LOTA05
			, AI.LOTA06 AS LOTA06
			, AI.LOTA07 AS LOTA07
			, AI.LOTA08 AS LOTA08
			, AI.LOTA09 AS LOTA09
			, AI.LOTA10 AS LOTA10
			, AI.LOTA11 AS LOTA11
			, TO_CHAR(SYSDATE , 'YYYYMMDD') AS LOTA12
			, AI.LOTA13 AS LOTA13
			, AI.LOTA14 AS LOTA14
			, AI.LOTA15 AS LOTA15
			, AI.LOTA16 AS LOTA16
			, AI.LOTA17 AS LOTA17
			, AI.LOTA18 AS LOTA18
			, AI.LOTA19 AS LOTA19
			, AI.LOTA20 AS LOTA20
			, AI.AWMSNO AS AWMSNO
			, AH.ASNDKY AS REFDKY
			, AI.ASNDIT AS REFDIT
			, AH.DOCCAT AS REFCAT
			, TO_CHAR(SYSDATE , 'YYYYMMDD') AS REFDAT
			, NVL(SM.DESC01 , ' ') AS DESC01
			, NVL(SM.DESC02 , ' ') AS DESC02
			, AI.ASKU01 AS ASKU01
			, AI.ASKU02 AS ASKU02
			, AI.ASKU03 AS ASKU03
			, AI.ASKU04 AS ASKU04
			, AI.ASKU05 AS ASKU05
			, AI.EANCOD AS EANCOD
			, AI.GTINCD AS GTINCD
			, AI.SKUG01 AS SKUG01
			, AI.SKUG02 AS SKUG02
			, AI.SKUG03 AS SKUG03
			, AI.SKUG04 AS SKUG04
			, AI.SKUG05 AS SKUG05
			, NVL(SM.GRSWGT , 0) * NVL(DECODE(AI.STATIT , 'NEW' , AI.QTYASN , AI.QTYRCV) , 0)  AS GRSWGT
			, NVL(SM.GRSWGT , 0)   AS GRSWGTCNT
			, NVL(SM.NETWGT , 0) * NVL(DECODE(AI.STATIT , 'NEW' , AI.QTYASN , AI.QTYRCV) , 0)  AS NETWGT
			, NVL(SM.NETWGT , 0)   AS NETWGTCNT	 
			, AI.WGTUNT AS WGTUNT
			, AI.LENGTH AS LENGTH
			, AI.WIDTHW AS WIDTHW
			, AI.HEIGHT AS HEIGHT
			, AI.CUBICM AS CUBICM
			, AI.CAPACT AS CAPACT
			, 0 AS QTYORG
			, AI.SMANDT AS SMANDT
			, AI.SEBELN AS SEBELN
			, AI.SEBELP AS SEBELP
			, AI.SZMBLNO AS SZMBLNO
			, AI.SZMIPNO AS SZMIPNO
			, AI.STRAID AS STRAID
			, AI.SVBELN AS SVBELN
			, AI.SPOSNR AS SPOSNR
			, AI.STKNUM AS STKNUM
			, AI.STPNUM AS STPNUM
			, AI.SWERKS AS SWERKS
			, AI.SLGORT AS SLGORT
			, AI.SDATBG AS SDATBG
			, AI.STDLNR AS STDLNR
			, AI.SSORNU AS SSORNU
			, AI.SSORIT AS SSORIT
			, AI.SMBLNR AS SMBLNR
			, AI.SZEILE AS SZEILE
			, AI.SMJAHR AS SMJAHR
			, AI.SXBLNR AS SXBLNR
			, AI.LRCPTD AS LRCPTD
			, AI.SBKTXT  AS SBKTXT
			, ' ' AS RCPRSN
			, SM.OUTDMT AS OUTDMT
			, AI.LRCPTD AS LRCPTD
			, NVL(TO_DATE(TRIM(AI.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')), 0) AS DTREMDAT
			, NVL(TRUNC((TO_NUMBER(TO_DATE(TRIM(AI.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100), 0) AS DTREMRAT
		FROM ASNDH AH
			INNER JOIN ASNDI AI
				ON		AI.ASNDKY = AH.ASNDKY
			LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = AI.SEBELN
					AND RI.SEBELP = AI.SEBELP
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = AH.OWNRKY
					AND SM.SKUKEY = AI.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = AH.WAREKY
					AND SW.OWNRKY = AH.OWNRKY
					AND SW.SKUKEY = AI.SKUKEY
			LEFT OUTER JOIN MEASI MI
				ON		MI.WAREKY = AH.WAREKY
					AND MI.OWNRKY = AH.OWNRKY
					AND MI.MEASKY = AI.MEASKY
					AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = AH.WAREKY
					AND MIP.OWNRKY = AH.OWNRKY
					AND MIP.MEASKY = AI.MEASKY
					AND MIP.UOMKEY = 'PL'			  
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = AH.DPTNKY
					AND L01NM.OWNRKY = AH.OWNRKY
					AND L01NM.PTNRTY = '0002'
			LEFT OUTER JOIN CMCDV CM
				ON		CM.CMCDKY = 'STATIT' 
					AND CM.CMCDVL = AI.STATIT
			INNER JOIN IFWMS103 IFT
				ON		IFT.SEBELN = AI.SEBELN
					AND IFT.SEBELP = AI.SEBELP
		WHERE
			<if test="SAVEKEY != null and SAVEKEY != ''"> 
					RI.RECVKY = #{RECVKY}
			</if>
			<if test="SAVEKEY == null or SAVEKEY == ''">
					AH.ASNDKY = #{KEY}
				AND AH.STATDO = 'NEW'
				AND AI.STATIT IN ('NEW' , 'ARV')
				AND AH.ASNTTY = '051'
				AND IFT.XSTAT = 'R'
				AND IFT.POCLOS = ' '
			</if>
			
			<if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			 </if>
				
			
		ORDER BY AI.SEBELN , AI.SEBELP , AI.QTYASN
	</select>
	
	<insert id="RECDH_INSERT"  parameterType="hashmap">
		INSERT INTO RECDH
		(
			  RECVKY
			, WAREKY
			, RCPTTY
			, STATDO
			, SAPSTS
			, DOCDAT
			, DOCCAT
			, DPTNKY
			, DRELIN
			, ARCPTD
			, OWNRKY
			, INDRCN
			, CRECVD
			, RSNCOD
			, PUTSTS
			, USRID1
			, UNAME1
			, DEPTID1
			, DNAME1
			, USRID2
			, UNAME2
			, DEPTID2
			, DNAME2
			, USRID3
			, UNAME3
			, DEPTID3
			, DNAME3
			, USRID4
			, UNAME4
			, DEPTID4
			, DNAME4
			, DOCTXT
			, CREDAT
			, CRETIM
			, CREUSR
			, LMODAT
			, LMOTIM
			, LMOUSR
		)
		VALUES(
			  NVL(#{RECVKY}, ' ' )
			, NVL(#{WAREKY}, ' ' )
			, NVL(#{RCPTTY}, ' ' )
			, NVL(#{STATDO}, ' ' )
			, NVL(#{SAPSTS}, ' ' )
			, NVL(#{DOCDAT}, ' ' )
			, NVL(#{DOCCAT}, ' ' )
			, NVL(#{DPTNKY}, ' ' )
			, NVL(#{DRELIN}, ' ' )
			, TO_CHAR(SYSDATE , 'YYYYMMDD')
			, NVL(#{OWNRKY}   , ' ' )
			, NVL(#{INDRCN}   , ' ' )
			, NVL(#{CRECVD}   , ' ' )
			, NVL(#{RSNCOD}   , ' ' )
			, NVL(#{PUTSTS}   , ' ' )
			, NVL(#{USRID1}   , ' ' )
			, NVL(#{UNAME1}   , ' ' )
			, NVL(#{DEPTID1}  , ' ' )
			, NVL(#{DNAME1}   , ' ' )
			, NVL(#{USRID2}   , ' ' )
			, NVL(#{UNAME2}   , ' ' )
			, NVL(#{DEPTID2}  , ' ' )
			, NVL(#{DNAME2}   , ' ' )
			, NVL(#{USRID3}   , ' ' )
			, NVL(#{UNAME3}   , ' ' )
			, NVL(#{DEPTID3}  , ' ' )
			, NVL(#{DNAME3}   , ' ' )
			, NVL(#{USRID4}   , ' ' )
			, NVL(#{UNAME4}   , ' ' )
			, NVL(#{DEPTID4}  , ' ' )
			, NVL(#{DNAME4}   , ' ' )
			, NVL(TRIM(#{DOCTXT}),' ')
			, TO_CHAR(SYSDATE , 'YYYYMMDD')
			, TO_CHAR(SYSDATE , 'HH24MISS') 
			, #{SES_USER_ID}
			, TO_CHAR(SYSDATE , 'YYYYMMDD')
			, TO_CHAR(SYSDATE , 'HH24MISS') 
			, #{SES_USER_ID}
		)
				
	</insert>
	
	<insert id="RECDI_INSERT"  parameterType="hashmap">
		INSERT INTO RECDI
		(
		   RECVKY,
		   RECVIT,
		   STATIT,
		   SAPSTS,
		   SKUKEY,
		   LOTNUM,
		   AREAKY,
		   LOCAKY,
		   SECTID,
		   TRNUID,
		   PACKID,
		   QTYRCV,
		   QTYDIF,
		   QTYUOM,
		   TRUNTY,
		   MEASKY,
		   UOMKEY,
		   QTPUOM,
		   DUOMKY,
		   QTDUOM,
		   INDRCN,
		   CRECVD,
		   RSNCOD,
		   LOTA01,
		   LOTA02,
		   LOTA03,
		   LOTA04,
		   LOTA05,
		   LOTA06,
		   LOTA07,
		   LOTA08,
		   LOTA09,
		   LOTA10,
		   LOTA11,
		   LOTA12,
		   LOTA13,
		   LOTA14,
		   LOTA15,
		   LOTA16,
		   LOTA17,
		   LOTA18,
		   LOTA19,
		   LOTA20,
		   AWMSNO,
		   REFDKY,
		   REFDIT,
		   REFCAT,
		   REFDAT,
		   DESC01,
		   DESC02,
		   ASKU01,
		   ASKU02,
		   ASKU03,
		   ASKU04,
		   ASKU05,
		   EANCOD,
		   GTINCD,
		   SKUG01,
		   SKUG02,
		   SKUG03,
		   SKUG04,
		   SKUG05,
		   GRSWGT,
		   NETWGT,
		   WGTUNT,
		   LENGTH,
		   WIDTHW,
		   HEIGHT,
		   CUBICM,
		   CAPACT,
		   QTYORG,
		   SMANDT,
		   SEBELN,
		   SEBELP,
		   SZMBLNO,
		   SZMIPNO,
		   STRAID,
		   SVBELN,
		   SPOSNR,
		   STKNUM,
		   STPNUM,
		   SWERKS,
		   SLGORT,
		   SDATBG,
		   STDLNR,
		   SSORNU,
		   SSORIT,
		   SMBLNR,
		   SZEILE,
		   SMJAHR,
		   SXBLNR,
		   RCPRSN,
		   CREDAT,
		   CRETIM,
		   CREUSR,
		   LMODAT,
		   LMOTIM,
		   LMOUSR,
		   SBKTXT
		)
		VALUES(
		   NVL(#{RECVKY} , ' '),
		   NVL(#{RECVIT} , ' '),
		   NVL(#{STATIT} , ' '),
		   NVL(#{SAPSTS} , ' '),
		   NVL(#{SKUKEY} , ' '),
		   NVL(#{LOTNUM} , ' '),
		   NVL(#{AREAKY} , ' '),
		   NVL(#{LOCAKY} , ' '),
		   NVL(#{SECTID} , ' '),
		   NVL(#{TRNUID} , ' '),
		   NVL(#{PACKID} , ' '),
		   NVL(#{QTYRCV} , 0 ),
		   NVL(#{QTYDIF} , 0),
		   NVL(#{QTYUOM} , 0),
		   NVL(#{TRUNTY} , ' '),
		   NVL(#{MEASKY} , ' '),
		   NVL(#{UOMKEY} , ' '),
		   NVL(#{QTPUOM} , 0),
		   NVL(#{DUOMKY} , ' '),
		   NVL(#{QTDUOM} , 0),
		   NVL(#{INDRCN} , ' '),
		   NVL(#{CRECVD} , ' '),
		   NVL(#{RSNCOD} , ' '),
		   NVL(#{LOTA01} , ' '),
		   NVL(#{LOTA02} , ' '),
		   NVL(#{LOTA03} , ' '),
		   NVL(#{LOTA04} , ' '),
		   NVL(#{LOTA05} , ' '),
		   NVL(#{LOTA06} , ' '),
		   NVL(#{LOTA07} , ' '),
		   NVL(#{LOTA08} , ' '),
		   NVL(#{LOTA09} , ' '),
		   NVL(#{LOTA10} , ' '),
		   NVL(#{LOTA11} , ' '),
		   NVL(#{LOTA12} , ' '),
		   NVL(#{LOTA13} , ' '),
		   NVL(#{LOTA14} , ' '),
		   NVL(#{LOTA15} , ' '),
		   NVL(#{LOTA16} , 0),
		   NVL(#{LOTA17} , 0),
		   NVL(#{LOTA18} , 0),
		   NVL(#{LOTA19} , 0),
		   NVL(#{LOTA20} , 0),
		   NVL(#{AWMSNO} , ' '),
		   NVL(#{REFDKY} , ' '),
		   NVL(#{REFDIT} , ' '),
		   NVL(#{REFCAT} , ' '),
		   NVL(#{REFDAT} , ' '),
		   NVL(#{DESC01} , ' '),
		   NVL(#{DESC02} , ' '),
		   NVL(#{ASKU01} , ' '),
		   NVL(#{ASKU02} , ' '),
		   NVL(#{ASKU03} , ' '),
		   NVL(#{ASKU04} , ' '),
		   NVL(#{ASKU05} , ' '),
		   NVL(#{EANCOD} , ' '),
		   NVL(#{GTINCD} , ' '),
		   NVL(#{SKUG01} , ' '),
		   NVL(#{SKUG02} , ' '),
		   NVL(#{SKUG03} , ' '),
		   NVL(#{SKUG04} , ' '),
		   NVL(#{SKUG05} , ' '),
		   NVL(#{GRSWGT} , 0),
		   NVL(#{NETWGT} , 0),
		   NVL(#{WGTUNT} , ' '),
		   NVL(#{LENGTH} , 0),
		   NVL(#{WIDTHW} , 0),
		   NVL(#{HEIGHT} , 0),
		   NVL(#{CUBICM} , 0),
		   NVL(#{CAPACT} , 0),
		   NVL(#{QTYORG} , 0),
		   NVL(#{SMANDT} , ' '),
		   NVL(#{SEBELN} , ' '),
		   NVL(#{SEBELP} , ' '),
		   NVL(#{SZMBLNO}, ' '),
		   NVL(#{SZMIPNO}, ' '),
		   NVL(#{STRAID} , ' '),
		   NVL(#{SVBELN} , ' '),
		   NVL(#{SPOSNR} , ' '),
		   NVL(#{STKNUM} , ' '),
		   NVL(#{STPNUM} , ' '),
		   NVL(#{SWERKS} , ' '),
		   NVL(#{SLGORT} , ' '),
		   NVL(#{SDATBG} , ' '),
		   NVL(#{STDLNR} , ' '),
		   NVL(#{SSORNU} , ' '),
		   NVL(#{SSORIT} , ' '),
		   NVL(#{SMBLNR} , ' '),
		   NVL(#{SZEILE} , ' '),
		   NVL(#{SMJAHR} , ' '),
		   NVL(#{SXBLNR} , ' '),
		   NVL(#{RCPRSN} , ' '),
		   TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   TO_CHAR(SYSDATE, 'HH24MISS'), 
		   #{SES_USER_ID},
		   TO_CHAR(SYSDATE, 'YYYYMMDD'),
		   TO_CHAR(SYSDATE, 'HH24MISS'), 
		   #{SES_USER_ID},
		   NVL(TRIM(#{SBKTXT}), ' ')
		)
	</insert>
	
	<select id="RECIVEKEY_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT SZF_GETDOCNUMBER(#{RCPTTY}) AS KEY FROM DUAL
	</select>
	
	<select id="GR10_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 
			  IFWMS103.MANDT AS MANDT
			, IFWMS103.SEBELN AS SEBELN
			, IFWMS103.SEBELN AS KEY
			, NVL(MAX(RI.RECVKY),' ') AS RECVKY
			, IFWMS103.WAREKY AS WAREKY
			, WH.NAME01 AS WAREKYNM
			, #{RCPTTY} AS RCPTTY
			, DT.SHORTX AS RCPTTYNM
			, 'NEW' AS STATDO
			, ' '   AS SAPSTS
			, DECODE(IFWMS103.OWNRKY ,'2200' , MAX(IFWMS103.BUYDAT) , TO_CHAR(SYSDATE , 'YYYYMMDD')) AS DOCDAT
			, '100' AS DOCCAT
			, DC.SHORTX AS DOCCATNM
			, IFWMS103.PTNRKY AS DPTNKY
			, VD.NAME01 AS DPTNKYNM
			, ' ' AS DRELIN
			, '00000000' AS ARCPTD
			, IFWMS103.OWNRKY AS OWNRKY
			, ' ' AS INDRCN
			, ' ' AS CRECVD
			, ' ' AS RSNCOD
			, ' ' AS PUTSTS
			, ' ' AS LGORT
			, ' ' AS LGORTNM
			, ' ' AS USRID1
			, ' ' AS UNAME1
			, ' ' AS DEPTID1
			, ' ' AS DNAME1
			, ' ' AS USRID2
			, ' ' AS UNAME2
			, ' ' AS DEPTID2
			, ' ' AS DNAME2
			, ' ' AS USRID3
			, ' ' AS UNAME3
			, ' ' AS DEPTID3
			, ' ' AS DNAME3
			, ' ' AS USRID4
			, ' ' AS UNAME4
			, ' ' AS DEPTID4
			, ' ' AS DNAME4
			, ' ' AS DOCTXT
			, ' ' AS CUSRNM
			, ' ' AS CREUSR
			, ' ' AS CREDAT
			, ' ' AS CRETIM
		FROM
			IFWMS103
			LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = IFWMS103.SEBELN
					AND RI.SEBELP = IFWMS103.SEBELP
					AND IFWMS103.XSTAT IN( 'R' , 'D')
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IFWMS103.OWNRKY
					AND SM.SKUKEY = IFWMS103.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = IFWMS103.WAREKY
					AND SW.OWNRKY = IFWMS103.OWNRKY
					AND SW.SKUKEY = IFWMS103.SKUKEY
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = IFWMS103.WAREKY
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '100' 
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = #{RCPTTY}
			LEFT OUTER JOIN BZPTN VD
				ON		VD.PTNRKY = IFWMS103.PTNRKY
					AND VD.OWNRKY = IFWMS103.OWNRKY
					AND VD.PTNRTY = '0002'
		WHERE
				IFWMS103.OWNRKY = #{OWNRKY}
			AND IFWMS103.WAREKY = #{WAREKY}
			<if test="SAVEKEY != null and SAVEKEY != ''"> 
				AND RI.RECVKY IN ( ${SAVEKEY} ) 
			</if>
			<if test="SAVEKEY == null or SAVEKEY == ''">
				AND XSTAT = 'R' 
				AND IFWMS103.ORDQTY - IFWMS103.ASNQTY - IFWMS103.INNQTY > 0
			</if>
			
			
			AND IFWMS103.DOCUTY = DECODE(#{RCPTTY} , '111' , '110', #{RCPTTY})
			
			 <if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			 </if>
			
			
		GROUP BY  IFWMS103.MANDT, IFWMS103.WAREKY, IFWMS103.PTNRKY, IFWMS103.OWNRKY, IFWMS103.SEBELN, 
		WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01
	</select>
	
	<select id="GR10_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			  IFWMS103.SEBELN AS SEBELN
			, IFWMS103.SEBELN AS KEY
			, IFWMS103.SEBELP AS SEBELP
			, IFWMS103.MANDT AS MANDT
			, IFWMS103.MANDT AS SMANDT
			, NVL(RI.RECVKY, ' ') AS RECVKY
			, NVL(RI.RECVIT, ' ') AS RECVIT
			, 'NEW' AS STATIT
			, ' ' AS SAPSTS
			, IFWMS103.SKUKEY AS SKUKEY
			, ' ' AS LOTNUM
			, ' ' AS AREAKY
		<if test = "'GR10'.equalsIgnoreCase(menuId)">
			, NVL(SW.LOCARV , ' ') AS LOCAKY 				
		</if>
		<if test = "'GR11'.equalsIgnoreCase(menuId)">
			, 'DOCLOC' AS LOCAKY
		</if>
			, ' ' AS SECTID
			, ' ' AS TRNUID
			, ' ' AS PACKID
			, IFWMS103.N00101 AS MAXRAT
			, TRUNC((IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY) * (100 + IFWMS103.N00101) / 100) AS MAXQTY
			, (IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY) AS ORDQTY
			, (IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY) AS QTYRCV
			, 0 AS QTYDIF
			, IFWMS103.INNQTY AS QTYUOM
			, ' ' AS TRUNTY
			, IFWMS103.SKUKEY AS MEASKY
			, IFWMS103.DUOMKY AS UOMKEY	   
			, NVL(IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY,0) AS ASNQTY
			, NVL(IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY,0) AS QTYASN 
			, NVL(  TRUNC((IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY) / DECODE(MI.QTPUOM , 0 ,  NULL, MI.QTPUOM)), 0) AS BOXQTY
			, DECODE(SM.DLGORT, 'Y', NVL(CEIL((IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0), 0) AS PBOXQTY
			, NVL(MI.QTPUOM , 0) AS BXIQTY
			, NVL(MOD(IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY, NVL(MI.QTPUOM,0)),0) AS REMQTY 
			, NVL(  TRUNC((IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY) / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY
			, NVL( MIP.QTPUOM , 0)  AS PLTQTYCAL
			, NVL(ITFMS.QTPUOM , 9999999)   AS QTPUOM
			, NVL(SM.DUOMKY, ' ') AS DUOMKY
			, NVL(MI.QTPUOM , 9999999) AS QTDUOM
			, ' ' AS INDRCN
			, ' ' AS CRECVD
			, ' ' AS RSNCOD
			, ' ' AS LOTA01
			, ' ' AS LOTA01NM
			, ' ' AS LOTA02
			, IFWMS103.PTNRKY AS LOTA03
			, ' ' AS LOTA04
			, ' ' AS LOTA05
			, '00' AS LOTA06
			, ' ' AS LOTA07
			, ' ' AS LOTA08
			, ' ' AS LOTA09
			, ' ' AS LOTA10
			, ' ' AS LOTA11
			, TO_CHAR(SYSDATE , 'YYYYMMDD') AS LOTA12
			, ' ' AS LOTA13
			, ' ' AS LOTA14
			, ' ' AS LOTA15
			, 0 AS LOTA16
			, 0 AS LOTA17
			, 0 AS LOTA18
			, 0 AS LOTA19
			, 0 AS LOTA20
			, ' ' AS AWMSNO
			, IFWMS103.SEBELN AS REFDKY
			, IFWMS103.SEBELP AS REFDIT
			, '100' AS REFCAT
			, TO_CHAR(SYSDATE ,'YYYYMMDD') AS REFDAT
			, NVL(SM.DESC01 , ' ') AS DESC01
			, NVL(SM.DESC02 , ' ') AS DESC02
			, SM.ASKU01 AS ASKU01
			, SM.ASKU02 AS ASKU02
			, SM.ASKU03 AS ASKU03
			, SM.ASKU04 AS ASKU04
			, SM.ASKU05 AS ASKU05
			, SM.EANCOD AS EANCOD
			, SM.GTINCD AS GTINCD
			, SM.SKUG01 AS SKUG01
			, SM.SKUG02 AS SKUG02
			, SM.SKUG03 AS SKUG03
			, SM.SKUG04 AS SKUG04
			, SM.SKUG05 AS SKUG05
			, NVL(SM.GRSWGT,0) * NVL(IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY,0)  AS GRSWGT
			, NVL(SM.GRSWGT,0)   AS GRSWGTCNT
			, NVL(SM.NETWGT,0) * NVL(IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY,0)  AS NETWGT
			, NVL(SM.NETWGT,0)   AS NETWGTCNT	 
			, SM.WGTUNT AS WGTUNT
			, SM.LENGTH AS LENGTH
			, SM.WIDTHW AS WIDTHW
			, SM.HEIGHT AS HEIGHT
			, SM.CUBICM AS CUBICM
			, SM.CAPACT AS CAPACT
			, 0 AS QTYORG
			, ' ' AS SZMBLNO
			, ' ' AS SZMIPNO
			, ' ' AS STRAID
			, ' ' AS SVBELN
			, ' ' AS SPOSNR
			, ' ' AS STKNUM
			, ' ' AS STPNUM
			, ' ' AS SWERKS
			, ' ' AS SLGORT
			, ' ' AS SDATBG
			, ' ' AS STDLNR
			, ' ' AS SSORNU
			, ' ' AS SSORIT
			, ' ' AS SMBLNR
			, ' ' AS SZEILE
			, ' ' AS SMJAHR
			, ' ' AS SXBLNR
			, IFWMS103.C00110 AS SBKTXT
			, ' ' AS RCPRSN
			, IFWMS103.DLVDAT  AS LRCPTD
			, NVL(SM.OUTDMT , 0) AS OUTDMT
			, IFWMS103.OWNRKY
			, IFWMS103.WAREKY
			, 0 AS DTREMDAT
			, 0 AS DTREMRAT
		FROM
			IFWMS103
			LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = IFWMS103.SEBELN
					AND RI.SEBELP = IFWMS103.SEBELP
					AND IFWMS103.XSTAT IN( 'R' , 'D')
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = IFWMS103.OWNRKY
					AND SM.SKUKEY = IFWMS103.SKUKEY
			LEFT OUTER JOIN SKUWC SW
				ON		SW.WAREKY = IFWMS103.WAREKY
					AND SW.OWNRKY = IFWMS103.OWNRKY
					AND SW.SKUKEY = IFWMS103.SKUKEY
			LEFT OUTER JOIN MEASI ITFMS
				ON		ITFMS.OWNRKY = IFWMS103.OWNRKY
					AND ITFMS.WAREKY = IFWMS103.WAREKY 
					AND ITFMS.MEASKY = IFWMS103.SKUKEY
					AND ITFMS.UOMKEY = IFWMS103.DUOMKY
			LEFT OUTER JOIN MEASI MI
				ON		MI.WAREKY = IFWMS103.WAREKY
					AND MI.OWNRKY = IFWMS103.OWNRKY 
					AND MI.MEASKY = IFWMS103.SKUKEY
					AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = IFWMS103.WAREKY
					AND MIP.OWNRKY = IFWMS103.OWNRKY
					AND MIP.MEASKY = IFWMS103.SKUKEY
					AND MIP.UOMKEY = 'PL'			  
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = IFWMS103.PTNRKY
					AND L01NM.OWNRKY = IFWMS103.OWNRKY
					AND L01NM.PTNRTY = '0002'
		WHERE 
				IFWMS103.SEBELN = #{KEY}
			<if test="SAVEKEY != null and SAVEKEY != ''"> 
				AND RI.RECVKY = #{RECVKY} 
			</if>
			<if test="SAVEKEY == null or SAVEKEY == ''">
				AND IFWMS103.XSTAT = 'R' 
				AND NVL(IFWMS103.ORDQTY-IFWMS103.ASNQTY-IFWMS103.INNQTY,0) > 0
			</if>
			
			<if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			 </if>
			
		ORDER BY  IFWMS103.SEBELN, IFWMS103.SEBELP
	</select>
	
	<select id="GR90_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			RH.RECVKY AS RECVKY,
			RH.WAREKY AS WAREKY,
			WH.NAME01 AS WAREKYNM,
			RH.RCPTTY AS RCPTTY,
			DT.SHORTX AS RCPTTYNM,
			RH.STATDO AS STATDO,
			DECODE(RH.SAPSTS,' ',' ','V') AS SAPSTS,
			RH.DOCDAT AS DOCDAT,
			RH.DOCCAT AS DOCCAT,
			DC.SHORTX AS DOCCATNM,
			RH.DPTNKY AS DPTNKY,
			DECODE(TRIM(MAX(VD.NAME01)),NULL, DECODE(TRIM(MAX(VD2.NAME01)),NULL, MAX(BT.NAME01),MAX(VD2.NAME01)), MAX(VD.NAME01)) AS DPTNKYNM,
			DECODE(TRIM(MAX(VD.NAME01)),NULL, DECODE(TRIM(MAX(VD2.POSTCD)),NULL, MAX(SA1.REGNKY),MAX(SA3.REGNKY)),MAX(SA2.REGNKY)) AS REGNKY,
			DECODE(TRIM(MAX(VD.NAME01)),NULL, DECODE(TRIM(MAX(VD2.POSTCD)),NULL, MAX(SA1.REGNNM),MAX(SA3.REGNNM)),MAX(SA2.REGNNM)) AS REGNNM,
			RH.DRELIN AS DRELIN,
			RH.ARCPTD AS ARCPTD,
			RH.OWNRKY AS OWNRKY,
			RH.INDRCN AS INDRCN,
			RH.CRECVD AS CRECVD,
			RH.RSNCOD AS RSNCOD,
			RH.PUTSTS AS PUTSTS,
			
			DECODE(RH.RCPTTY, '121', MAX(SR.DRIVER), '122', MAX(SR.DRIVER), '123', MAX(SR.DRIVER), MAX(RH.USRID1)) AS USRID1,
			DECODE(RH.RCPTTY, '121', MAX(SR.PERHNO), '122', MAX(SR.PERHNO), '123', MAX(SR.PERHNO), MAX(RH.UNAME1)) AS UNAME1,
			DECODE(RH.RCPTTY, '121', MAX(SR.RECNUM), '122', MAX(SR.RECNUM), '123', MAX(SR.RECNUM), MAX(RH.DEPTID1)) AS DEPTID1,
			DECODE(RH.RCPTTY, '121', MAX(SR.CASTYN), '122', MAX(SR.CASTYN), '123', MAX(SR.CASTYN), MAX(RH.DNAME1)) AS DNAME1,
			DECODE(RH.RCPTTY, '121', MAX(SR.CASTDT), '122', MAX(SR.CASTDT), '123', MAX(SR.CASTDT), MAX(RH.USRID2)) AS USRID2,
			DECODE(RH.RCPTTY, '121', MAX(SR.CASTIM), '122', MAX(SR.CASTIM), '123', MAX(SR.CASTIM), MAX(RH.UNAME2)) AS UNAME2,
			MAX(RH.DEPTID2) AS DEPTID2,
			MAX(RH.DNAME2) AS DNAME2,
			MAX(RH.USRID3) AS USRID3,
			MAX(RH.UNAME3) AS UNAME3,
			MAX(RH.DEPTID3) AS DEPTID3,
			MAX(RH.DNAME3) AS DNAME3,
			MAX(RH.USRID4) AS USRID4,
			MAX(RH.UNAME4) AS UNAME4,
			MAX(RH.DEPTID4) AS DEPTID4,
			MAX(RH.DNAME4) AS DNAME4,	   
			
			RH.DOCTXT AS DOCTXT,
			MAX(S.SEBELN) AS SEBELN,
			MAX(S.STRAID) AS VGBEL,
			MAX(CASE WHEN RH.RCPTTY IN ('101', '102') THEN S.REFDKY
				ELSE ' '
			END) AS ASNDKY,
			 MAX(CASE WHEN RH.RCPTTY IN ('108') THEN S.REFDKY
				ELSE ' '
			END) AS SHPOKY,
			RH.CREDAT AS CREDAT,
			RH.CRETIM AS CRETIM,
			RH.CREUSR AS CREUSR,
			CU.NMLAST AS CUSRNM,
			RH.LMODAT AS LMODAT,
			RH.LMOTIM AS LMOTIM,
			RH.LMOUSR AS LMOUSR,
			LU.NMLAST AS LUSRNM,
			' ' AS ERPWHT,
			' ' AS ERPTNM,
			MAX(S.REFDKY) AS REFDKY,
			(SELECT DISTINCT C00106 FROM IFWMS113 WHERE DOCUTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT ='100') AND SVBELN = S.SVBELN  AND XSTAT !='X') AS CARNUM,
			(SELECT DISTINCT TEXT02 FROM IFWMS113 WHERE DOCUTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT ='100') AND SVBELN = S.SVBELN  AND XSTAT !='X') AS TEXT02
		FROM RECDH RH
			   INNER JOIN RECDI S
					   ON S.RECVKY = RH.RECVKY
			   LEFT OUTER JOIN USRMA CU
					   ON CU.USERID = RH.CREUSR
			   LEFT OUTER JOIN USRMA LU
					   ON LU.USERID = RH.LMOUSR
			   LEFT OUTER JOIN WAHMA WH
					   ON WH.WAREKY = RH.WAREKY
			   LEFT OUTER JOIN DOCCM DC
					   ON DC.DOCCAT = '100'
			   LEFT OUTER JOIN DOCTM DT
					   ON DT.DOCUTY = RH.RCPTTY
			   LEFT OUTER JOIN BZPTN VD
					   ON VD.PTNRKY = RH.DPTNKY
					  AND VD.OWNRKY = RH.OWNRKY
					  AND VD.PTNRTY = '0002'
			   LEFT OUTER JOIN BZPTN BT
					   ON BT.PTNRKY = RH.DPTNKY
					  AND BT.OWNRKY = RH.OWNRKY
					  AND BT.PTNRTY = '0001' 
			   LEFT OUTER JOIN WAHMA VD2
					  ON VD2.WAREKY = RH.DPTNKY		   
			   LEFT OUTER JOIN SHPDR SR
					  ON S.SEBELN = SR.SHPOKY
					 AND S.SEBELP = SR.SHPOIT
			   LEFT OUTER JOIN SHPMA SA1
					  ON SA1.OWNRKY = RH.OWNRKY
					  AND SA1.POSTCD = BT.POSTCD
			   LEFT OUTER JOIN SHPMA SA2
					  ON SA2.OWNRKY = RH.OWNRKY
					  AND SA2.POSTCD = VD.POSTCD
			   LEFT OUTER JOIN SHPMA SA3
					  ON SA3.OWNRKY = RH.OWNRKY
					  AND SA3.POSTCD = VD2.POSTCD
		WHERE
				RH.OWNRKY = #{OWNRKY}
			AND RH.WAREKY = #{WAREKY}
			AND S.STATIT = 'FRV'
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		GROUP BY RH.RECVKY,RH.WAREKY,RH.RCPTTY,RH.STATDO,RH.SAPSTS,
				  RH.DOCDAT,RH.DOCCAT,RH.DPTNKY,RH.DRELIN,RH.ARCPTD,
				  RH.OWNRKY,RH.INDRCN,RH.CRECVD,RH.RSNCOD,RH.PUTSTS,
				  RH.CREDAT,RH.CRETIM,RH.CREUSR,CU.NMLAST,
				  RH.LMODAT,RH.LMOTIM,RH.LMOUSR,LU.NMLAST,
				  WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01,
				  RH.DOCTXT, S.SVBELN
		 ORDER BY RH.RECVKY DESC
	</select>
	
	<select id="GR90_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			RH.WAREKY AS WAREKY,
			RH.OWNRKY AS OWNRKY,
			S.RECVKY  AS RECVKY,
			S.RECVIT  AS RECVIT,
			S.STATIT AS STATIT,
			DECODE(S.SAPSTS,' ',' ','V') AS SAPSTS,
			S.SKUKEY  AS SKUKEY,
			S.LOTNUM  AS LOTNUM,
			S.AREAKY  AS AREAKY,
			S.LOCAKY  AS LOCAKY,
			S.SECTID  AS SECTID,
			S.TRNUID  AS TRNUID,
			S.PACKID  AS PACKID,
			S.QTYRCV  AS QTYRCV,
			S.QTYRCV  AS SNDQTY,
			S.QTYDIF  AS QTYDIF,
			S.QTYUOM  AS QTYUOM,
			S.TRUNTY  AS TRUNTY,
			S.MEASKY  AS MEASKY,
			S.UOMKEY  AS UOMKEY,
			S.QTPUOM  AS QTPUOM,
			S.DUOMKY  AS DUOMKY,
			S.QTDUOM  AS QTDUOM,
			NVL( MI.QTPUOM, 0 ) AS BXIQTY,
			TRUNC(S.QTYRCV/S.QTDUOM) AS BOXQTY,
			DECODE(SM.DLGORT, 'Y', NVL(CEIL(S.QTYRCV/S.QTDUOM), 0), 0) AS PBOXQTY,
			MOD(S.QTYRCV,S.QTDUOM) AS REMQTY,
			NVL(  TRUNC(S.QTYRCV / DECODE(MIP.QTPUOM, 0, NULL, MIP.QTPUOM))  ,0) AS PLTQTY,
			NVL(MIP.QTPUOM, 0) AS PLIQTY,
			S.INDRCN  AS INDRCN,
			S.CRECVD  AS CRECVD,
			S.RSNCOD  AS RSNCOD,
			S.LOTA01  AS LOTA01,
			L01NM.NAME01 AS LOTA01NM,
			S.LOTA02  AS LOTA02,
			S.LOTA03  AS LOTA03,
			S.LOTA04  AS LOTA04,
			S.LOTA05  AS LOTA05,
			S.LOTA06  AS LOTA06,
			S.LOTA07  AS LOTA07,
			S.LOTA08  AS LOTA08,
			S.LOTA09  AS LOTA09,
			S.LOTA10  AS LOTA10,
			S.LOTA11  AS LOTA11,
			S.LOTA12  AS LOTA12,
			S.LOTA13  AS LOTA13,
			S.LOTA14  AS LOTA14,
			S.LOTA15  AS LOTA15,
			S.LOTA16  AS LOTA16,
			S.LOTA17  AS LOTA17,
			S.LOTA18  AS LOTA18,
			S.LOTA19  AS LOTA19,
			S.LOTA20  AS LOTA20,
			S.AWMSNO  AS AWMSNO,
			S.REFDKY  AS REFDKY,
			S.REFDIT  AS REFDIT,
			S.REFCAT  AS REFCAT,
			S.REFDAT  AS REFDAT,
			S.DESC01  AS DESC01,
			S.DESC02  AS DESC02,
			S.ASKU01  AS ASKU01,
			S.ASKU02  AS ASKU02,
			S.ASKU03  AS ASKU03,
			S.ASKU04  AS ASKU04,
			S.ASKU05  AS ASKU05,
			S.EANCOD  AS EANCOD,
			S.GTINCD  AS GTINCD,
			S.SKUG01  AS SKUG01,
			S.SKUG02  AS SKUG02,
			S.SKUG03  AS SKUG03,
			S.SKUG04  AS SKUG04,
			S.SKUG05  AS SKUG05,
			NVL(SM.GRSWGT,0) * NVL(S.QTYRCV,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(S.QTYRCV,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT,   
			S.WGTUNT  AS WGTUNT,
			S.LENGTH  AS LENGTH,
			S.WIDTHW  AS WIDTHW,
			S.HEIGHT  AS HEIGHT,
			S.CUBICM  AS CUBICM,
			S.CAPACT  AS CAPACT,
			S.QTYORG  AS QTYORG,
			S.SMANDT  AS SMANDT,
			S.SEBELN  AS SEBELN,
			S.SEBELP  AS SEBELP,
			S.SZMBLNO AS SZMBLNO,
			S.SZMIPNO AS SZMIPNO,
			S.STRAID  AS STRAID,
			S.SVBELN  AS SVBELN,
			S.SPOSNR  AS SPOSNR,
			S.STKNUM  AS STKNUM,
			S.STPNUM  AS STPNUM,
			S.SWERKS  AS SWERKS,
			S.SLGORT  AS SLGORT,
			S.SDATBG  AS SDATBG,
			S.STDLNR  AS STDLNR,
			S.SSORNU  AS SSORNU,
			S.SSORIT  AS SSORIT,
			S.SMBLNR  AS SMBLNR,
			S.SZEILE  AS SZEILE,
			S.SMJAHR  AS SMJAHR,
			S.SXBLNR  AS SXBLNR,
			S.SBKTXT  AS SBKTXT,
			S.RCPRSN  AS RCPRSN,
			S.CREDAT AS CREDAT,
			S.CRETIM AS CRETIM,
			S.CREUSR AS CREUSR,
			CU.NMLAST AS CUSRNM,
			S.LMODAT AS LMODAT,
			S.LMOTIM AS LMOTIM,
			S.LMOUSR AS LMOUSR,
			LU.NMLAST AS LUSRNM,
			NVL(TO_DATE(TRIM(S.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')),0) AS DTREMDAT,
			NVL(TRUNC(((TO_DATE(TRIM(S.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100),0) AS DTREMRAT
		FROM RECDH RH
			INNER JOIN RECDI S
				ON		S.RECVKY = RH.RECVKY
			LEFT OUTER JOIN USRMA CU
				ON		CU.USERID = S.CREUSR
			LEFT OUTER JOIN USRMA LU
				ON LU.USERID = S.LMOUSR
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = RH.DPTNKY
					AND L01NM.OWNRKY = RH.OWNRKY
					AND L01NM.PTNRTY = '0002'
			LEFT OUTER JOIN MEASI MI
				ON		MI.OWNRKY = RH.OWNRKY
					AND MI.WAREKY = RH.WAREKY
					AND MI.MEASKY = S.SKUKEY
					AND MI.UOMKEY = 'BOX' 
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = RH.WAREKY
					AND MIP.OWNRKY = RH.OWNRKY
					AND MIP.MEASKY = S.MEASKY
					AND MIP.UOMKEY = 'PL'		
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = RH.OWNRKY
					AND SM.SKUKEY = S.SKUKEY		 
		WHERE
			RH.RECVKY = #{RECVKY} 
			<if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			 </if>
		ORDER BY S.RECVKY, S.RECVIT
	</select>
	
	
	<select id="PT01_HEAD_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT
			  ' ' AS TASKKY
			, (SELECT NAME01 FROM WAHMA WHERE WAREKY = #{WAREKY}) AS WAREKYNM
			, (SELECT SHORTX FROM DOCTM WHERE DOCUTY = '310') AS TASOTYNM
			, #{WAREKY} AS WAREKY
			, '300' AS DOCCAT
			, '310' AS TASOTY
			, TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT
			, #{WAREKY} AS WARETG
			, ' ' AS DOCTXT
			, TO_CHAR(SYSDATE,'YYYYMMDD') AS CREDAT
			, TO_CHAR(SYSDATE,'HH24MISS') AS CRETIM
			, #{SES_USER_ID} AS CREUSR
			, (SELECT NMLAST FROM USRMA WHERE USERID = #{SES_USER_ID} AND ROWNUM = 1) AS CUSRNM
		FROM DUAL
	</select>
	
	<select id="PT01_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 
			  ROW_NUMBER() OVER(ORDER BY S.STOKKY) AS NUM
			, S.WAREKY AS WAREKY
			, S.STOKKY AS STOKKY
			, 'PT' AS TASKTY
			, 'NEW' AS STATIT
			, 'N' AS ISNEW 
			, S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK AS AVAILABLEQTY
			, (S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK) AS AVAILABLEQTYUOM
			, S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK AS QTTAOR
			,  TRUNC((S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK) / SM.QTDUOM, 1) AS BOXQTY
			, (S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK) AS QTYUOM
			, ' ' AS TASKKY
			, ' ' AS TASKIT
			, '00000000' AS ACTCDT
			, '000000' AS ACTCTI
			, S.LOCAKY AS LOCASR
			, S.SECTID AS SECTSR
			, S.PACKID AS PAIDSR
			, S.TRNUID AS TRNUSR
			, S.TRUNTY AS STRUTY
			, E.MEASKY AS SMEAKY
			, S.UOMKEY AS SUOMKY
			, S.QTPUOM AS QTSPUM
			, S.DUOMKY AS SDUOKY
			, S.QTDUOM AS QTSDUM
			, ' ' AS LOCATG
			, S.SECTID AS SECTTG
			, S.PACKID AS PAIDTG
			, S.TRNUID AS TRNUTG
			, S.TRUNTY AS TTRUTY
			, E.MEASKY AS TMEAKY
			, E.UOMDTA AS TUOMKY
			, S.QTPUOM AS QTTPUM
			, S.DUOMKY AS TDUOKY
			, S.QTDUOM AS QTTDUM
			, S.OWNRKY AS OWNRKY
			, S.SKUKEY AS SKUKEY
			, S.LOTNUM AS LOTNUM
			, S.REFDKY AS REFDKY
			, S.REFDIT AS REFDIT
			, S.REFCAT AS REFCAT
			, S.REFDAT AS REFDAT
			, S.PURCKY AS PURCKY
			, S.PURCIT AS PURCIT
			, S.ASNDKY AS ASNDKY
			, S.ASNDIT AS ASNDIT
			, S.RECVKY AS RECVKY
			, S.RECVIT AS RECVIT
			, S.SHPOKY AS SHPOKY
			, S.SHPOIT AS SHPOIT
			, S.GRPOKY AS GRPOKY
			, S.GRPOIT AS GRPOIT
			, S.SADJKY AS SADJKY
			, S.SADJIT AS SADJIT
			, S.SDIFKY AS SDIFKY
			, S.SDIFIT AS SDIFIT
			, S.PHYIKY AS PHYIKY
			, S.PHYIIT AS PHYIIT
			, S.DESC01 AS DESC01
			, S.DESC02 AS DESC02
			, S.ASKU01 AS ASKU01
			, S.ASKU02 AS ASKU02
			, S.ASKU03 AS ASKU03
			, S.ASKU04 AS ASKU04
			, S.ASKU05 AS ASKU05
			, S.EANCOD AS EANCOD
			, S.GTINCD AS GTINCD
			, S.SKUG01 AS SKUG01
			, S.SKUG02 AS SKUG02
			, S.SKUG03 AS SKUG03
			, S.SKUG04 AS SKUG04
			, S.SKUG05 AS SKUG05
			, S.GRSWGT AS GRSWGT
			, S.NETWGT AS NETWGT
			, S.WGTUNT AS WGTUNT
			, S.LENGTH AS LENGTH
			, S.WIDTHW AS WIDTHW
			, S.HEIGHT AS HEIGHT
			, S.CUBICM AS CUBICM
			, S.CAPACT AS CAPACT
			, S.AREAKY AS AREAKY
			, S.LOTA01 AS LOTA01
			, S.LOTA02 AS LOTA02
			, S.LOTA03 AS LOTA03
			, S.LOTA04 AS LOTA04
			, S.LOTA05 AS LOTA05
			, S.LOTA06 AS LOTA06
			, S.LOTA07 AS LOTA07
			, S.LOTA08 AS LOTA08
			, S.LOTA09 AS LOTA09
			, S.LOTA10 AS LOTA10
			, S.LOTA11 AS LOTA11
			, S.LOTA12 AS LOTA12
			, S.LOTA13 AS LOTA13
			, S.LOTA14 AS LOTA14
			, S.LOTA15 AS LOTA15
			, S.LOTA16 AS LOTA16
			, S.LOTA17 AS LOTA17
			, S.LOTA18 AS LOTA18
			, S.LOTA19 AS LOTA19
			, S.LOTA20 AS LOTA20
			, S.AWMSNO AS AWMSNO
			, S.SMANDT AS SMANDT
			, S.SEBELN AS SEBELN
			, S.SEBELP AS SEBELP
			, S.SVBELN AS SVBELN
			, S.SMBLNR AS SMBLNR
			, S.SMJAHR AS SMJAHR
			, S.SZEILE AS SZEILE
			, S.SZMIPNO AS SZMIPNO
			, S.SPOSNR AS SPOSNR
			, S.STKNUM AS STKNUM
			, S.STPNUM AS STPNUM
			, S.SLGORT AS SLGORT
			, S.SWERKS AS SWERKS
			, S.STDLNR AS STDLNR
			, S.STRAID AS STRAID
			, S.SSORNU AS SSORNU
			, S.SSORIT AS SSORIT
			, S.SXBLNR AS SXBLNR
			, S.LOTA01 AS PTLT01
			, S.LOTA02 AS PTLT02
			, S.LOTA03 AS PTLT03
			, S.LOTA04 AS PTLT04
			, S.LOTA05 AS PTLT05
			, S.LOTA06 AS PTLT06
			, S.LOTA07 AS PTLT07
			, S.LOTA08 AS PTLT08
			, S.LOTA09 AS PTLT09
			, S.LOTA10 AS PTLT10
			, S.LOTA11 AS PTLT11
			, S.LOTA12 AS PTLT12
			, S.LOTA13 AS PTLT13
			, S.LOTA14 AS PTLT14
			, S.LOTA15 AS PTLT15
			, S.LOTA16 AS PTLT16
			, S.LOTA17 AS PTLT17
			, S.LOTA18 AS PTLT18
			, S.LOTA19 AS PTLT19
			, S.LOTA20 AS PTLT20
			, E.PASTKY AS PASTKY
			, S.SZMBLNO AS SZMBLNO
			, S.SDATBG AS SDATBG
			, BZ.NAME01 AS LOTA03NM
			, SM.QTYSTD AS PLIQTY
			, SM.QTDUOM AS BXIQTY
			, (SELECT MAX(LM.LOCAKY) FROM LOCMA LM WHERE LM.WAREKY =  S.WAREKY AND LM.LOCSKU = S.SKUKEY  ) AS LOCSKU
			, NVL(  TRUNC(S.QTSIWH / DECODE(SM.QTYSTD, 0, NULL, SM.QTYSTD), 2 ) ,0) AS PLTQTY
			, NVL(SM.QTYSTD,0) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) AS PLBQTY
			, S.MEASKY    AS AMEAKY
			, S.UOMKEY    AS AUOMKY
			, S.QTPUOM    AS QTAPUM
			, S.DUOMKY    AS ADUOKY
			, S.QTDUOM    AS QTADUM
		FROM STKKY S
			INNER JOIN AREMA D
				ON		S.WAREKY = D.WAREKY
					AND S.AREAKY = D.AREAKY
			INNER JOIN SKUWC E
				ON		S.OWNRKY = E.OWNRKY
					AND S.SKUKEY = E.SKUKEY
					AND S.WAREKY = E.WAREKY
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = S.OWNRKY
					AND SM.SKUKEY = S.SKUKEY
			LEFT OUTER JOIN BZPTN BZ
				ON		S.OWNRKY = BZ.OWNRKY
					AND S.LOTA03 = BZ.PTNRKY
					AND BZ.PTNRTY = '0002'
		WHERE
				S.OWNRKY = #{OWNRKY}
			AND S.WAREKY = #{WAREKY}
			AND S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK > 0
			AND S.AREAKY NOT IN ('SHP','SYS')
			AND S.LOCAKY NOT IN ('SYSSHP')
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		<if test="STKKYS != null and STKKYS != ''">  
			${STKKYS}  
		ORDER BY LOTNUM, OWNRKY, SKUKEY, LOCASR, SECTSR, PAIDSR,
				TRNUSR, STRUTY, SMEAKY, SUOMKY, SDUOKY
		</if>
	</select>

	
		<!-- **[GR30] 이고입고 121  헤더 조회쿼리 -->
	<select id="GR30_121_LIST" parameterType="hashmap" resultType="DataMap">

		SELECT CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY,
			   NVL(MAX(RI.RECVKY),' ') AS RECVKY,
			   TRF.WARETG AS WAREKY,
			   WH.NAME01 AS WAREKYNM,
			   #{RCPTTY} AS RCPTTY,
			   DT.SHORTX AS RCPTTYNM,
			   'NEW' AS STATDO,
			   ' ' AS SAPSTS,
			   DECODE(#{OWNRKY}, '2200', TRF.DOCDAT, TO_CHAR(SYSDATE,'YYYYMMDD')) AS DOCDAT,
			   '100' AS DOCCAT,
			   DC.SHORTX AS DOCCATNM,
			   TRF.WARESR AS DPTNKY,
			   VD.NAME01 AS DPTNKYNM,
			   ' ' AS DRELIN,
			   '00000000' AS ARCPTD,
			   #{OWNRKY} AS OWNRKY,
			   ' ' AS INDRCN,
			   ' ' AS CRECVD,
			   ' ' AS RSNCOD,
			   ' ' AS PUTSTS,
			   ' ' AS USRID1,
			   ' ' AS UNAME1,
			   ' ' AS DEPTID1,
			   ' ' AS DNAME1,
			   ' ' AS USRID2,
			   ' ' AS UNAME2,
			   ' ' AS DEPTID2,
			   ' ' AS DNAME2,
			   ' ' AS USRID3,
			   ' ' AS UNAME3,
			   ' ' AS DEPTID3,
			   ' ' AS DNAME3,
			   ' ' AS USRID4,
			   ' ' AS UNAME4,
			   ' ' AS DEPTID4,
			   ' ' AS DNAME4,
			   MAX(SH.DOCTXT) AS DOCTXT,
			   MAX(SR.PERHNO) AS PERHNO,
			   SR.CARNUM AS CARNUM,
			   MAX(SR.RECNUM) AS RECNUM,
			   MAX(SR.CASTYN) AS CASTYN,
			   MAX(SR.CASTDT) AS CASTDT,
			   MAX(SR.CASTIM) AS CASTIM,
			   TRF.SHPOKY AS SHPOKYMV,
			   TRF.DOCDAT AS DOCDATMV,
			   MAX(TRF.REFDKY) REFDKY,
			   MAX(SR.CARDAT) CARDAT,
			   MAX(SH.DOCDAT) ORDDAT
		  FROM
		  	TRFIT TRF
		  	LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = TRF.SHPOKY
					AND RI.SEBELP = TRF.SHPOIT
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = #{OWNRKY}
					AND SM.SKUKEY = TRF.SKUKEY 
			LEFT OUTER JOIN SKUWC SW
				ON		SW.WAREKY = TRF.WARETG
					AND SW.OWNRKY = #{OWNRKY}
					AND SW.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = TRF.WARETG 
			LEFT OUTER JOIN WAHMA VD
				ON		VD.WAREKY = TRF.WARESR
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '100'
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = #{RCPTTY}
			LEFT OUTER JOIN SHPDH SH
				ON		TRF.SHPOKY = SH.SHPOKY
			LEFT OUTER JOIN SHPDR SR
				ON		TRF.SHPOKY = SR.SHPOKY
					AND TRF.SHPOIT = SR.SHPOIT
					AND SR.SHPOIR = '001'
			   
		 WHERE
				TRF.OWNRKY = #{OWNRKY}
			AND TRF.WARETG = #{WAREKY} 
			<if test="SAVEKEY == null or SAVEKEY == ''">
				AND TRF.STATIT = 'NEW'
			</if>
			AND TRF.QTYTRF > 0
			AND TRF.TRFOTY = '121'
			AND (TRF.LOTA07 != '21SV' AND TRF.LOTA08 != 'OD')
			AND TRF.REFDKY NOT LIKE '61%'
		   <if test="SAVEKEY != null and SAVEKEY != ''"> 
				AND RI.RECVKY IN ( ${SAVEKEY} ) 
			</if>
			<if test="RANGE_SQL != null and RANGE_SQL != ''">
				${RANGE_SQL}
			</if>
		 GROUP BY TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX, DC.SHORTX, TRF.WARESR, VD.NAME01, TRF.SHPOKY, TRF.DOCDAT, SR.CARNUM

		 ORDER BY TRF.TASKKY DESC

	</select>
	
	<!-- **[GR30] 이고입고 121 아이템 조회쿼리 -->
	<select id="GR30_121_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT CONCAT(TRF.SHPOKY, SR.CARNUM) AS KEY,
			   (SELECT NAME01 FROM SHPDI SI WHERE TRF.SHPOKY = SI.SHPOKY AND TRF.SHPOIT = SI.SHPOIT AND ROWNUM = 1) AS SBKTXT,
			   NVL(RI.RECVKY, ' ') AS RECVKY,
			   NVL(RI.RECVIT, ' ') AS RECVIT,
			   'NEW' AS STATIT,
			   ' ' AS SAPSTS,
			   TRF.SKUKEY AS SKUKEY,
			   ' ' AS LOTNUM,
			   ' ' AS AREAKY,
			   NVL(SW.LOCARV , ' ') AS LOCAKY , 				
			   ' ' AS SECTID,
			   TRF.TRNUID AS TRNUID,
			   ' ' AS PACKID,
			   TRF.QTYTRF AS ORDQTY,
			   TRF.QTYTRF-TRF.QTYRCV AS QTYTRF,
			   TRF.QTYTRF-TRF.QTYRCV AS QTYRCV,
			   0 AS QTYDIF,
			   TRF.QTYTRF AS QTYUOM,
			   ' ' AS TRUNTY,
			   TRF.MEASKY AS MEASKY,
			   TRF.UOMKEY AS UOMKEY,
			   NVL(MS.QTPUOM,0) AS QTPUOM,
			   NVL(SM.DUOMKY,' ') AS DUOMKY,
			   NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM,
			   ' ' AS INDRCN,
			   ' ' AS CRECVD,
			   ' ' AS RSNCOD,
			   TRF.LOTA01 AS LOTA01,
			   ' ' AS LOTA01NM,
			   TRF.LOTA02 AS LOTA02,
			   TRF.LOTA03 AS LOTA03,
			   TRF.LOTA04 AS LOTA04,
			   TRF.LOTA05 AS LOTA05,
			   '00' AS LOTA06,
			   TRF.LOTA07 AS LOTA07,
			   TRF.LOTA08 AS LOTA08,
			   TRF.LOTA09 AS LOTA09,
			   TRF.LOTA10 AS LOTA10,
			   TRF.LOTA11 AS LOTA11,
			   TRF.LOTA12 AS LOTA12,
			   TRF.LOTA13 AS LOTA13,
			   TRF.LOTA14 AS LOTA14,
			   TRF.LOTA15 AS LOTA15,
			   TRF.LOTA16 AS LOTA16,
			   TRF.LOTA17 AS LOTA17,
			   TRF.LOTA18 AS LOTA18,
			   TRF.LOTA19 AS LOTA19,
			   TRF.LOTA20 AS LOTA20,
			   TRF.TRFKEY AS AWMSNO,
			   TRF.REFDKY AS REFDKY,
			   TRF.REFDIT AS REFDIT,
			   ' ' AS REFCAT,
			   TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			   NVL(SM.DESC01,' ') AS DESC01,
			   NVL(SM.DESC02,' ') AS DESC02,
			   TRF.ASKU01 AS ASKU01,
			   TRF.ASKU02 AS ASKU02,
			   TRF.ASKU03 AS ASKU03,
			   TRF.ASKU04 AS ASKU04,
			   TRF.ASKU05 AS ASKU05,
			   ' ' AS EANCOD,
			   ' ' AS GTINCD,
			   TRF.SKUG01 AS SKUG01,
			   TRF.SKUG02 AS SKUG02,
			   TRF.SKUG03 AS SKUG03,
			   TRF.SKUG04 AS SKUG04,
			   TRF.SKUG05 AS SKUG05,
		
			   TRF.WGTUNT AS WGTUNT,
			   TRF.LENGTH AS LENGTH,
			   TRF.WIDTHW AS WIDTHW,
			   TRF.HEIGHT AS HEIGHT,
			   TRF.CUBICM AS CUBICM,
			   TRF.CAPACT AS CAPACT,
			   0 AS QTYORG,
			   ' ' AS SMANDT,
			   TRF.SHPOKY AS SEBELN,
			   TRF.SHPOIT AS SEBELP,
			   TRF.SHPOIT AS SHPOIT,
			   ' ' AS SZMBLNO,
			   ' ' AS SZMIPNO,
			   ' ' AS STRAID,
			   ' ' AS SVBELN,
			   ' ' AS SPOSNR,
			   ' ' AS STKNUM,
			   ' ' AS STPNUM,
			   ' ' AS SWERKS,
			   ' ' AS SLGORT,
			   ' ' AS SDATBG,
			   ' ' AS STDLNR,
			   ' ' AS SSORNU,
			   ' ' AS SSORIT,
			   ' ' AS SMBLNR,
			   ' ' AS SZEILE,
			   ' ' AS SMJAHR,
			   ' ' AS SXBLNR,
			   ' ' AS RCPRSN,
			   NVL(MI.QTPUOM,0) AS BXIQTY,
			   NVL(MOD(TRF.QTYTRF-TRF.QTYRCV, NVL(MI.QTPUOM,0)),0) AS REMQTY,		
			   NVL(  TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY, 
			   DECODE(SM.ASKU02, 'Y', NVL(CEIL((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0), 0) AS PBOXQTY, 
			   NVL(  TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			   NVL( MIP.QTPUOM, 0)  AS PLTQTYCAL,
			   NVL(SM.GRSWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS GRSWGT,
			   NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			   NVL(SM.NETWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS NETWGT,
			   NVL(SM.NETWGT,0)   AS NETWGTCNT  ,
			   NVL(SM.OUTDMT,0) AS OUTDMT,
			   NVL(TO_DATE(TRIM(REPLACE(TRF.LOTA13,'.','')),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')),0) AS DTREMDAT,
			   NVL(TRUNC(((TO_DATE(TRIM(REPLACE(TRF.LOTA13,'.','')),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100),0) AS DTREMRAT,
			   TRF.SHPOKY AS SHOPKY,
			   TRF.SHPOKY AS SHPOKYMV
		  FROM TRFIT TRF 
		  	LEFT OUTER JOIN RECDI RI
				ON		RI.SEBELN = TRF.SHPOKY
					AND RI.SEBELP = TRF.SHPOIT
		  				 LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = TRF.OWNRKY AND SM.SKUKEY = TRF.SKUKEY
						 LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = TRF.WARETG AND SW.OWNRKY = TRF.OWNRKY AND SW.SKUKEY = TRF.SKUKEY
						 LEFT OUTER JOIN MEASI MS ON MS.WAREKY = TRF.WARETG AND MS.MEASKY = TRF.MEASKY AND MS.UOMKEY = TRF.UOMKEY		   
						 LEFT OUTER JOIN MEASI MI ON MI.WAREKY = TRF.WARETG AND MI.OWNRKY = TRF.OWNRKY AND MI.MEASKY = TRF.SKUKEY AND MI.UOMKEY = 'BOX'
						 LEFT OUTER JOIN MEASI MIP ON MIP.WAREKY = TRF.WARETG AND MIP.OWNRKY = TRF.OWNRKY AND MIP.MEASKY = TRF.SKUKEY AND MIP.UOMKEY = 'PL'
						 LEFT OUTER JOIN SHPDR SR ON TRF.SHPOKY = SR.SHPOKY AND TRF.SHPOIT = SR.SHPOIT AND SR.SHPOIR = '001'
		 WHERE
		   		TRF.OWNRKY = #{OWNRKY}
		   AND TRF.WARETG = #{WAREKY}
		   AND TRF.SHPOKY = #{SHPOKYMV}
	   <if test="SAVEKEY == null or SAVEKEY == ''">
			AND TRF.STATIT = 'NEW'
		</if>
		   AND TRF.QTYTRF > 0
		   AND TRF.TRFOTY IN ('121', '122')
		   AND TRF.REFDKY NOT LIKE '61%'
	   <if test="SAVEKEY != null and SAVEKEY != ''"> 
			AND RI.RECVKY = ( ${RECVKY} ) 
		</if>
		   
	   <if test="RANGE_SQL != null and RANGE_SQL != ''">
	   		${RANGE_SQL}
	   </if>
	
	</select>
	
	<!-- **[GR30] 이고입고 헤더 조회쿼리 -->
	<select id="GR30_122_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY,
			   NVL(MAX(RI.RECVKY),' ') AS RECVKY,
			   TRF.WARETG AS WAREKY,
			   WH.NAME01 AS WAREKYNM,
			   #{RCPTTY} AS RCPTTY,
			   DT.SHORTX AS RCPTTYNM,
			   'NEW' AS STATDO,
			   ' ' AS SAPSTS,
				NVL(MAX(RH.DOCDAT),TO_CHAR(SYSDATE,'YYYYMMDD') ) AS DOCDAT,
			   '100' AS DOCCAT,
			   DC.SHORTX AS DOCCATNM,
			   TRF.WARESR AS DPTNKY,
			   VD.NAME01 AS DPTNKYNM,
			   ' ' AS DRELIN,
			   '00000000' AS ARCPTD,
			   #{OWNRKY} AS OWNRKY,
			   ' ' AS INDRCN,
			   ' ' AS CRECVD,
			   ' ' AS RSNCOD,
			   ' ' AS PUTSTS,
			   ' ' AS USRID1,
			   ' ' AS UNAME1,
			   ' ' AS DEPTID1,
			   ' ' AS DNAME1,
			   ' ' AS USRID2,
			   ' ' AS UNAME2,
			   ' ' AS DEPTID2,
			   ' ' AS DNAME2,
			   ' ' AS USRID3,
			   ' ' AS UNAME3,
			   ' ' AS DEPTID3,
			   ' ' AS DNAME3,
			   ' ' AS USRID4,
			   ' ' AS UNAME4,
			   ' ' AS DEPTID4,
			   ' ' AS DNAME4,
			   NVL(MAX(RH.DOCTXT),MAX(SH.DOCTXT)) AS DOCTXT,
			   MAX(SR.PERHNO) AS PERHNO,
			   SR.CARNUM AS CARNUM,
			   MAX(SR.RECNUM) AS RECNUM,
			   MAX(SR.CASTYN) AS CASTYN,
			   MAX(SR.CASTDT) AS CASTDT,
			   MAX(SR.CASTIM) AS CASTIM,
				TRF.SHPOKY AS SHPOKYMV,
				TRF.DOCDAT AS DOCDATMV 
		  FROM TRFIT TRF
			   LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = TRF.SKUKEY
			   LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = TRF.WARETG AND SW.OWNRKY = #{OWNRKY} AND SW.SKUKEY = TRF.SKUKEY
			   LEFT OUTER JOIN WAHMA WH ON WH.WAREKY = TRF.WARETG
			   LEFT OUTER JOIN WAHMA VD ON VD.WAREKY = TRF.WARESR
			   LEFT OUTER JOIN DOCCM DC ON DC.DOCCAT = '100'
			   LEFT OUTER JOIN DOCTM DT ON DT.DOCUTY = #{RCPTTY}
			   LEFT OUTER JOIN SHPDH SH ON TRF.SHPOKY = SH.SHPOKY
			   LEFT OUTER JOIN SHPDR SR ON TRF.SHPOKY = SR.SHPOKY AND TRF.SHPOIT = SR.SHPOIT AND SR.SHPOIR = '001'
			   LEFT OUTER JOIN RECDI RI ON RI.SEBELN = TRF.SHPOKY AND RI.SEBELP = TRF.SHPOIT
			   LEFT OUTER JOIN RECDH RH ON RH.RECVKY = RI.RECVKY
			   
					   
		 WHERE
				TRF.OWNRKY = #{OWNRKY}
		   <if test="SAVEKEY == null or SAVEKEY == ''">
				AND TRF.STATIT = 'NEW'
			</if>
		   AND TRF.TRFOTY = '122'
		   AND TRF.WARETG = #{WAREKY}
		   AND TRF.QTYTRF > 0
		   
			
			<if test="SAVEKEY != null and SAVEKEY != ''"> 
				AND RI.RECVKY IN ( ${SAVEKEY} ) 
			</if>
		   
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		   		${RANGE_SQL}
		   </if>
		 GROUP BY TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX,
				  DC.SHORTX, TRF.WARESR, VD.NAME01,
				  TRF.SHPOKY, TRF.DOCDAT,
				  SR.CARNUM , RH.DOCDAT, RH.DOCTXT
		 ORDER BY TRF.TASKKY DESC
				
	</select>
	
	<!-- **[GR30] 이고입고 122  아이템 조회쿼리 -->
	<select id="GR30_122_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
	
		SELECT CONCAT(TRF.SHPOKY, SR.CARNUM) AS KEY,
			   (SELECT NAME01 FROM SHPDI SI WHERE TRF.SHPOKY = SI.SHPOKY AND TRF.SHPOIT = SI.SHPOIT AND ROWNUM = 1) AS SBKTXT,
			   ' ' AS RECVKY,
			   ' ' AS RECVIT,
			   'NEW' AS STATIT,
			   ' ' AS SAPSTS,
			   TRF.SKUKEY AS SKUKEY,
			   ' ' AS LOTNUM,
			   ' ' AS AREAKY,
			NVL(SW.LOCARV , ' ') AS LOCAKY , 				
			   ' ' AS SECTID,
			   ' ' AS TRNUID,
			   ' ' AS PACKID,
			   TRF.QTYTRF AS ORDQTY,
			   TRF.QTYTRF-TRF.QTYRCV AS QTYTRF,
			   TRF.QTYTRF-TRF.QTYRCV AS QTYRCV,
			   0 AS QTYDIF,
			   TRF.QTYTRF AS QTYUOM,
			   ' ' AS TRUNTY,
			   TRF.MEASKY AS MEASKY,
			   TRF.UOMKEY AS UOMKEY,
			   NVL(MS.QTPUOM,0) AS QTPUOM,
			   NVL(SM.DUOMKY,' ') AS DUOMKY,
			   NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM,
			   ' ' AS INDRCN,
			   ' ' AS CRECVD,
			   ' ' AS RSNCOD,
			   TRF.LOTA01 AS LOTA01,
			   ' ' AS LOTA01NM,
			   TRF.LOTA02 AS LOTA02,
			   TRF.LOTA03 AS LOTA03,
			   TRF.LOTA04 AS LOTA04,
			   TRF.LOTA05 AS LOTA05,
			   DECODE(TRF.TRFOTY, '122', '20', '00') AS LOTA06,
			   TRF.LOTA07 AS LOTA07,
			   TRF.LOTA08 AS LOTA08,
			   TRF.LOTA09 AS LOTA09,
			   TRF.LOTA10 AS LOTA10,
			   TRF.LOTA11 AS LOTA11,
			   TRF.LOTA12 AS LOTA12,
			   TRF.LOTA13 AS LOTA13,
			   TRF.LOTA14 AS LOTA14,
			   TRF.LOTA15 AS LOTA15,
			   TRF.LOTA16 AS LOTA16,
			   TRF.LOTA17 AS LOTA17,
			   TRF.LOTA18 AS LOTA18,
			   TRF.LOTA19 AS LOTA19,
			   TRF.LOTA20 AS LOTA20,
			   TRF.TRFKEY AS AWMSNO,
			   TRF.REFDKY AS REFDKY,
			   TRF.REFDIT AS REFDIT,
			   ' ' AS REFCAT,
			   TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			   NVL(SM.DESC01,' ') AS DESC01,
			   NVL(SM.DESC02,' ') AS DESC02,
			   TRF.ASKU01 AS ASKU01,
			   TRF.ASKU02 AS ASKU02,
			   TRF.ASKU03 AS ASKU03,
			   TRF.ASKU04 AS ASKU04,
			   TRF.ASKU05 AS ASKU05,
			   ' ' AS EANCOD,
			   ' ' AS GTINCD,
			   TRF.SKUG01 AS SKUG01,
			   TRF.SKUG02 AS SKUG02,
			   TRF.SKUG03 AS SKUG03,
			   TRF.SKUG04 AS SKUG04,
			   TRF.SKUG05 AS SKUG05,
		
			   TRF.WGTUNT AS WGTUNT,
			   TRF.LENGTH AS LENGTH,
			   TRF.WIDTHW AS WIDTHW,
			   TRF.HEIGHT AS HEIGHT,
			   TRF.CUBICM AS CUBICM,
			   TRF.CAPACT AS CAPACT,
			   0 AS QTYORG,
			   ' ' AS SMANDT,
			   TRF.SHPOKY AS SEBELN,
			   TRF.SHPOIT AS SEBELP,
			   TRF.SHPOIT AS SHPOIT,
			   ' ' AS SZMBLNO,
			   ' ' AS SZMIPNO,
			   ' ' AS STRAID,
			   ' ' AS SVBELN,
			   ' ' AS SPOSNR,
			   ' ' AS STKNUM,
			   ' ' AS STPNUM,
			   ' ' AS SWERKS,
			   ' ' AS SLGORT,
			   ' ' AS SDATBG,
			   ' ' AS STDLNR,
			   ' ' AS SSORNU,
			   ' ' AS SSORIT,
			   ' ' AS SMBLNR,
			   ' ' AS SZEILE,
			   ' ' AS SMJAHR,
			   ' ' AS SXBLNR,
			   ' ' AS RCPRSN,
			   TRF.SHPOIT AS SHPOIT,
				NVL(MI.QTPUOM,0) AS BXIQTY,
			   NVL(MOD(TRF.QTYTRF-TRF.QTYRCV, NVL(MI.QTPUOM,0)),0) AS REMQTY,		
			   NVL(  TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			   NVL( MIP.QTPUOM, 0)  AS PLTQTYCAL,
			   NVL(SM.GRSWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS GRSWGT,
			   NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			   NVL(SM.NETWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS NETWGT,
			   NVL(SM.NETWGT,0)   AS NETWGTCNT  ,
			   NVL(SM.OUTDMT,0) AS OUTDMT,
			   TRF.SHPOKY AS SHOPKY
		  FROM TRFIT TRF
			   LEFT OUTER JOIN SKUMA SM
					   ON SM.OWNRKY = TRF.OWNRKY
					  AND SM.SKUKEY = TRF.SKUKEY
			   LEFT OUTER JOIN SKUWC SW
					   ON SW.WAREKY = TRF.WARETG
					  AND SW.OWNRKY = TRF.OWNRKY
					  AND SW.SKUKEY = TRF.SKUKEY
			   LEFT OUTER JOIN MEASI MS
					   ON MS.WAREKY = TRF.WARETG
					  AND MS.MEASKY = TRF.MEASKY
					  AND MS.UOMKEY = TRF.UOMKEY		   
			   LEFT OUTER JOIN MEASI MI
					   ON MI.WAREKY = TRF.WARETG
					  AND MI.OWNRKY = TRF.OWNRKY
					  AND MI.MEASKY = TRF.SKUKEY
					  AND MI.UOMKEY = 'BOX'
			   LEFT OUTER JOIN MEASI MIP
					   ON MIP.WAREKY = TRF.WARETG
					  AND MIP.OWNRKY = TRF.OWNRKY
					  AND MIP.MEASKY = TRF.SKUKEY
					  AND MIP.UOMKEY = 'PL'			
			   LEFT OUTER JOIN SHPDR SR
					   ON TRF.SHPOKY = SR.SHPOKY AND TRF.SHPOIT = SR.SHPOIT AND SR.SHPOIR = '001'				
		 WHERE TRF.STATIT = 'NEW'
		   AND TRF.QTYTRF > 0
		   AND TRF.TRFOTY = '122'
		   AND TRF.OWNRKY = #{OWNRKY}
		   AND TRF.WARETG = #{WAREKY}
		   AND TRF.SHPOKY = #{SHPOKYMV}
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		   		${RANGE_SQL}
		   </if>
	
	</select>
	
	<select id="GR30_HEADER_123_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT 
			CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY,
			NVL((SELECT DISTINCT RECVKY FROM RECDI WHERE SEBELN = TRF.SHPOKY),' ') AS RECVKY,
			TRF.WARETG AS WAREKY,
			WH.NAME01 AS WAREKYNM,
			#{RCPTTY} AS RCPTTY,
			DT.SHORTX AS RCPTTYNM,
			'NEW' AS STATDO,
			' ' AS SAPSTS,
			<if test="RECVKY == null or RECVKY == '' or RECVKY == ' '">
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			</if>
			<if test="RECVKY != null and RECVKY != '' and RECVKY != ' '">
			RH.DOCDAT AS DOCDAT,
			</if>
			'100' AS DOCCAT,
			DC.SHORTX AS DOCCATNM,
			TRF.WARESR AS DPTNKY,
			VD.NAME01 AS DPTNKYNM,
			' ' AS DRELIN,
			'00000000' AS ARCPTD,
			#{OWNRKY} AS OWNRKY,
			' ' AS INDRCN,
			' ' AS CRECVD,
			' ' AS RSNCOD,
			' ' AS PUTSTS,
			' ' AS USRID1,
			' ' AS UNAME1,
			' ' AS DEPTID1,
			' ' AS DNAME1,
			' ' AS USRID2,
			' ' AS UNAME2,
			' ' AS DEPTID2,
			' ' AS DNAME2,
			' ' AS USRID3,
			' ' AS UNAME3,
			' ' AS DEPTID3,
			' ' AS DNAME3,
			' ' AS USRID4,
			' ' AS UNAME4,
			' ' AS DEPTID4,
			' ' AS DNAME4,
			<if test="RECVKY == null or RECVKY == '' or RECVKY == ' '">
			MAX(SH.DOCTXT) AS DOCTXT,
			</if>
			<if test="RECVKY != null and RECVKY != '' and RECVKY != ' '">
			RH.DOCTXT AS DOCTXT,
			</if>
			MAX(SR.PERHNO) AS PERHNO,
			SR.CARNUM AS CARNUM,
			MAX(SR.RECNUM) AS RECNUM,
			MAX(SR.CASTYN) AS CASTYN,
			MAX(SR.CASTDT) AS CASTDT,
			MAX(SR.CASTIM) AS CASTIM,
			MAX(SH.DOCTXT) AS DOCTXT,
			TRF.SHPOKY AS SHPOKYMV,
			TRF.DOCDAT AS DOCDATMV
		FROM
			TRFIT TRF
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = #{OWNRKY}
					AND SM.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN SKUWC SW
				ON		SW.WAREKY = TRF.WARETG
					AND SW.OWNRKY = #{OWNRKY}
					AND SW.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = TRF.WARETG
			LEFT OUTER JOIN WAHMA VD
				ON		VD.WAREKY = TRF.WARESR
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '100'
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = #{RCPTTY}
			LEFT OUTER JOIN SHPDH SH
				ON		TRF.SHPOKY = SH.SHPOKY
			LEFT OUTER JOIN SHPDR SR
				ON		TRF.SHPOKY = SR.SHPOKY
					AND TRF.SHPOIT = SR.SHPOIT
					AND SR.SHPOIR = '001'
			<if test="RECVKY != null and RECVKY != '' and RECVKY != ' '">
				LEFT OUTER JOIN RECDI RI ON RI.SEBELN = TRF.SHPOKY
				LEFT OUTER JOIN RECDH RH ON RH.RECVKY = RI.RECVKY
			</if>
		WHERE
			<if test="RECVKY == null or RECVKY == '' or RECVKY == ' '">
				TRF.STATIT = 'NEW' AND 
			</if>
				TRF.QTYTRF > 0
			AND TRF.TRFOTY = '121'
			AND TRF.REFDKY NOT LIKE '61%'
			AND (TRF.LOTA07 != '21SV' AND TRF.LOTA08 != 'OD')
			AND TRF.OWNRKY = #{OWNRKY}
			AND TRF.WARETG = #{WAREKY}
		<if test="RECVKY != null and RECVKY != '' and RECVKY != ' '">
			AND TRF.SHPOKY IN (${SHPOKY})
		</if>
		<if test="RANGE_SQL != null and RANGE_SQL != ''">
			${RANGE_SQL}
		</if>
		GROUP BY
			TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX,
			DC.SHORTX, TRF.WARESR, VD.NAME01, TRF.SHPOKY,
			TRF.DOCDAT, SR.CARNUM
		<if test="RECVKY != null and RECVKY != '' and RECVKY != ' '">
			, RH.DOCDAT, RH.DOCTXT
		</if>
		ORDER BY TRF.TASKKY DESC

	</select>
	
	<!-- **[GR30] 벨리데이터 조회 -->																																					   
	<select id="GR30_VALI_MAP" parameterType="hashmap" resultType="DataMap">

		SELECT CASE WHEN DC.DOCCAT IS NULL THEN 'DOCCAT' || '/' || STD.DOCCAT
					WHEN DT.DOCUTY IS NULL THEN 'DOCUTY' || '/' || STD.DOCUTY
					WHEN WH.WAREKY IS NULL THEN 'WAREKY' || '/' || STD.WAREKY
					WHEN LM.LOCAKY IS NULL THEN 'LOCAKY' || '/' || STD.LOCAKY
					WHEN OW.OWNRKY IS NULL THEN 'OWNRKY' || '/' || STD.OWNRKY
					WHEN BZ.PTNRKY IS NULL THEN 'DPTNKY' || '/' || STD.DPTNKY
					WHEN SM.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY
					WHEN SW.SKUKEY IS NULL THEN 'SKUKEY' || '/' || STD.SKUKEY
					WHEN MH.MEASKY IS NULL THEN 'MEASKY' || '/' || STD.MEASKY
					WHEN MI.UOMKEY IS NULL THEN 'UOMKEY' || '/' || STD.UOMKEY
					ELSE 'OK'
				END AS RESULTMSG
		  FROM (<!-- <statement property="appendQuery"/> -->
		  		SELECT #{DOCCAT} AS DOCCAT,
					   #{RCPTTY} AS DOCUTY,
					   #{WAREKY} AS WAREKY,
					   #{LOCAKY} AS LOCAKY, 
					   #{OWNRKY} AS OWNRKY,
					   #{DPTNKY} AS DPTNKY,
					   #{SKUKEY} AS SKUKEY,
					   #{MEASKY} AS MEASKY,
					   #{UOMKEY} AS UOMKEY,
					   #{QTYRCV} AS QTYRCV,
					   #{QTYUOM} AS QTYMAX
				 FROM DUAL
		  		
		  		) STD
			   LEFT OUTER JOIN DOCCM DC
					   ON DC.DOCCAT = STD.DOCCAT
			   LEFT OUTER JOIN DOCTM DT
					   ON DT.DOCUTY = STD.DOCUTY
			   LEFT OUTER JOIN WAHMA WH
					   ON WH.WAREKY = STD.WAREKY
			   LEFT OUTER JOIN LOCMA LM
					   ON LM.WAREKY = STD.WAREKY
					  AND LM.LOCAKY = STD.LOCAKY
			   LEFT OUTER JOIN OWNER OW
					   ON OW.OWNRKY = STD.OWNRKY
			   LEFT OUTER JOIN BZPTN BZ
					   ON BZ.PTNRKY = STD.DPTNKY
					  AND BZ.OWNRKY = STD.OWNRKY
			   LEFT OUTER JOIN SKUMA SM
					   ON SM.OWNRKY = STD.OWNRKY
					  AND SM.SKUKEY = STD.SKUKEY
			   LEFT OUTER JOIN SKUWC SW
					   ON SW.WAREKY = STD.WAREKY
					  AND SW.OWNRKY = STD.OWNRKY
					  AND SW.SKUKEY = STD.SKUKEY
			   LEFT OUTER JOIN MEASH MH
					   ON MH.WAREKY = STD.WAREKY
					  AND MH.MEASKY = STD.MEASKY
			   LEFT OUTER JOIN MEASI MI
					   ON MI.WAREKY = STD.WAREKY
					  AND MI.MEASKY = STD.MEASKY
					  AND MI.UOMKEY = STD.UOMKEY

	</select>
	
	<!-- **[GR30] 수정쿼리 -->
	<update id="GR30_UPDATE"  parameterType="hashmap">
	
		UPDATE SHPDR SET
		PERHNO = #{PERHNO}, <!-- 기사핸드폰 -->
		RECNUM = #{RECNUM}, <!--재배차 차량번호-->
		CASTDT = #{CASTDT}, <!--차량출발일자-->
		CASTIM = #{CASTIM} <!--출발시간-->
		WHERE 1=1
		AND SHPOKY = #{SHPOKYMV} <!--출고문서번호-->
		AND CARNUM = #{CARNUM} <!--차량번호-->
		<if test="SHPOIT != null and SHPOIT != ''">
		   AND ( ${SHPOIT} )
		</if>
	
	</update>
	
	<!-- **[GR30] 121 저장 이후 확인 -->
	<select id="GR30_AFTERHEAD_121_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY,
			   RI.RECVKY AS RECVKY,
			   TRF.WARETG AS WAREKY,
			   WH.NAME01 AS WAREKYNM,
			   #{RCPTTY} AS RCPTTY,
			   DT.SHORTX AS RCPTTYNM,
			   'NEW' AS STATDO,
			   ' ' AS SAPSTS,
				 RH.DOCDAT AS DOCDAT,
			   '100' AS DOCCAT,
			   DC.SHORTX AS DOCCATNM,
			   TRF.WARESR AS DPTNKY,
			   VD.NAME01 AS DPTNKYNM,
			   ' ' AS DRELIN,
			   '00000000' AS ARCPTD,
			   #{OWNRKY} AS OWNRKY,
			   ' ' AS INDRCN,
			   ' ' AS CRECVD,
			   ' ' AS RSNCOD,
			   ' ' AS PUTSTS,
			   ' ' AS USRID1,
			   ' ' AS UNAME1,
			   ' ' AS DEPTID1,
			   ' ' AS DNAME1,
			   ' ' AS USRID2,
			   ' ' AS UNAME2,
			   ' ' AS DEPTID2,
			   ' ' AS DNAME2,
			   ' ' AS USRID3,
			   ' ' AS UNAME3,
			   ' ' AS DEPTID3,
			   ' ' AS DNAME3,
			   ' ' AS USRID4,
			   ' ' AS UNAME4,
			   ' ' AS DEPTID4,
			   ' ' AS DNAME4,
				 RH.DOCTXT AS DOCTXT,
			   MAX(SR.PERHNO) AS PERHNO,
			   SR.CARNUM AS CARNUM,
			   MAX(SR.RECNUM) AS RECNUM,
			   MAX(SR.CASTYN) AS CASTYN,
			   MAX(SR.CASTDT) AS CASTDT,
			   MAX(SR.CASTIM) AS CASTIM,
			   TRF.SHPOKY AS SHPOKYMV,
			   TRF.DOCDAT AS DOCDATMV,
			   MAX(TRF.REFDKY) REFDKY,
			   MAX(SR.CARDAT) CARDAT,
			   MAX(SH.DOCDAT) ORDDAT
		  FROM TRFIT TRF LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = TRF.SKUKEY 
						 LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = TRF.WARETG AND SW.OWNRKY = #{OWNRKY} AND SW.SKUKEY = TRF.SKUKEY
						 LEFT OUTER JOIN WAHMA WH ON WH.WAREKY = TRF.WARETG 
						 LEFT OUTER JOIN WAHMA VD ON VD.WAREKY = TRF.WARESR
						 LEFT OUTER JOIN DOCCM DC ON DC.DOCCAT = '100'
						 LEFT OUTER JOIN DOCTM DT ON DT.DOCUTY = #{RCPTTY}
						 LEFT OUTER JOIN SHPDH SH ON TRF.SHPOKY = SH.SHPOKY
						 LEFT OUTER JOIN SHPDR SR ON TRF.SHPOKY = SR.SHPOKY AND TRF.SHPOIT = SR.SHPOIT AND SR.SHPOIR = '001'
						 LEFT OUTER JOIN RECDI RI ON RI.SEBELN = TRF.SHPOKY
			   			 LEFT OUTER JOIN RECDH RH ON RH.RECVKY = RI.RECVKY

			   
		 WHERE TRF.QTYTRF > 0
		   AND TRF.TRFOTY = '121'
		   AND (TRF.LOTA07 != '21SV' AND LOTA08 != 'OD')
		   AND TRF.REFDKY NOT LIKE '61%'
		   AND TRF.OWNRKY = #{OWNRKY}
		   AND TRF.WARETG = #{WAREKY}
		   AND TRF.SHPOKY IN (${SHPOKY})
		   AND RI.RECVKY IN (${RECVKY})
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		   		${RANGE_SQL}
		   </if>
		 GROUP BY TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX, DC.SHORTX, TRF.WARESR, VD.NAME01, TRF.SHPOKY, TRF.DOCDAT, SR.CARNUM, RI.RECVKY
				  , RH.DOCDAT, RH.DOCTXT
		 ORDER BY TRF.TASKKY DESC

	</select>
	
	<select id="GR30_AFTERHEAD_122_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY,
			   RI.RECVKY AS RECVKY,
			   TRF.WARETG AS WAREKY,
			   WH.NAME01 AS WAREKYNM,
			   #{RCPTTY} AS RCPTTY,
			   DT.SHORTX AS RCPTTYNM,
			   'NEW' AS STATDO,
			   ' ' AS SAPSTS,
				 RH.DOCDAT AS DOCDAT,
			   '100' AS DOCCAT,
			   DC.SHORTX AS DOCCATNM,
			   TRF.WARESR AS DPTNKY,
			   VD.NAME01 AS DPTNKYNM,
			   ' ' AS DRELIN,
			   '00000000' AS ARCPTD,
			   #{OWNRKY} AS OWNRKY,
			   ' ' AS INDRCN,
			   ' ' AS CRECVD,
			   ' ' AS RSNCOD,
			   ' ' AS PUTSTS,
			   ' ' AS USRID1,
			   ' ' AS UNAME1,
			   ' ' AS DEPTID1,
			   ' ' AS DNAME1,
			   ' ' AS USRID2,
			   ' ' AS UNAME2,
			   ' ' AS DEPTID2,
			   ' ' AS DNAME2,
			   ' ' AS USRID3,
			   ' ' AS UNAME3,
			   ' ' AS DEPTID3,
			   ' ' AS DNAME3,
			   ' ' AS USRID4,
			   ' ' AS UNAME4,
			   ' ' AS DEPTID4,
			   ' ' AS DNAME4,
				 RH.DOCTXT AS DOCTXT,
			   MAX(SR.PERHNO) AS PERHNO,
			   SR.CARNUM AS CARNUM,
			   MAX(SR.RECNUM) AS RECNUM,
			   MAX(SR.CASTYN) AS CASTYN,
			   MAX(SR.CASTDT) AS CASTDT,
			   MAX(SR.CASTIM) AS CASTIM,
				TRF.SHPOKY AS SHPOKYMV,
				TRF.DOCDAT AS DOCDATMV 
		  FROM TRFIT TRF
			   LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = TRF.SKUKEY
			   LEFT OUTER JOIN SKUWC SW ON SW.WAREKY = TRF.WARETG AND SW.OWNRKY = #{OWNRKY} AND SW.SKUKEY = TRF.SKUKEY
			   LEFT OUTER JOIN WAHMA WH ON WH.WAREKY = TRF.WARETG
			   LEFT OUTER JOIN WAHMA VD ON VD.WAREKY = TRF.WARESR
			   LEFT OUTER JOIN DOCCM DC ON DC.DOCCAT = '100'
			   LEFT OUTER JOIN DOCTM DT ON DT.DOCUTY = #{RCPTTY}
			   LEFT OUTER JOIN SHPDH SH ON TRF.SHPOKY = SH.SHPOKY
			   LEFT OUTER JOIN SHPDR SR ON TRF.SHPOKY = SR.SHPOKY AND TRF.SHPOIT = SR.SHPOIT AND SR.SHPOIR = '001'
			   LEFT OUTER JOIN RECDI RI ON RI.SEBELN = TRF.SHPOKY
			   LEFT OUTER JOIN RECDH RH ON RH.RECVKY = RI.RECVKY
			   
					   
		 WHERE  TRF.QTYTRF > 0
		   AND TRF.TRFOTY = '122'
		   AND TRF.OWNRKY = #{OWNRKY}
		   AND TRF.WARETG = #{WAREKY}
		   AND RH.RECVKY IN (${RECVKY})
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		   		${RANGE_SQL}
		   </if>
		 GROUP BY TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX,
				  DC.SHORTX, TRF.WARESR, VD.NAME01,
				  TRF.SHPOKY, TRF.DOCDAT, RI.RECVKY,
				  SR.CARNUM
				  , RH.DOCDAT, RH.DOCTXT
		 ORDER BY TRF.TASKKY DESC
	</select>
	
	<!-- **[GR30] 저장 이후 확인 ITEM -->
	<select id="GR30_AFTERITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT RI.RECVKY,
			   RI.RECVIT,
			   RI.STATIT,
			   RI.SAPSTS,
			   RI.SKUKEY,
			   RI.LOTNUM,
			   RI.AREAKY,
			   RI.LOCAKY,
			   RI.SECTID,
			   RI.TRNUID,
			   RI.PACKID,
			   RI.QTYRCV,
			   RI.QTYDIF,
			   RI.QTYUOM,
			   RI.TRUNTY,
			   RI.MEASKY,
			   RI.UOMKEY,
			   RI.QTPUOM,
			   RI.DUOMKY,
			   RI.QTDUOM,
			   RI.INDRCN,
			   RI.CRECVD,
			   RI.RSNCOD,
			   RI.LOTA01,
			   RI.LOTA02,
			   RI.LOTA03,
			   RI.LOTA04,
			   RI.LOTA05,
			   RI.LOTA06,
			   RI.LOTA07,
			   RI.LOTA08,
			   RI.LOTA09,
			   RI.LOTA10,
			   RI.LOTA11,
			   RI.LOTA12,
			   RI.LOTA13,
			   RI.LOTA14,
			   RI.LOTA15,
			   RI.LOTA16,
			   RI.LOTA17,
			   RI.LOTA18,
			   RI.LOTA19,
			   RI.LOTA20,
			   RI.AWMSNO,
			   RI.REFDKY,
			   RI.REFDIT,
			   RI.REFCAT,
			   RI.REFDAT,
			   RI.DESC01,
			   RI.DESC02,
			   RI.ASKU01,
			   RI.ASKU02,
			   RI.ASKU03,
			   RI.ASKU04,
			   RI.ASKU05,
			   RI.EANCOD,
			   RI.GTINCD,
			   RI.SKUG01,
			   RI.SKUG02,
			   RI.SKUG03,
			   RI.SKUG04,
			   RI.SKUG05,
			   RI.GRSWGT,
			   RI.NETWGT,
			   RI.WGTUNT,
			   RI.LENGTH,
			   RI.WIDTHW,
			   RI.HEIGHT,
			   RI.CUBICM,
			   RI.CAPACT,
			   RI.QTYORG,
			   RI.SMANDT,
			   RI.SEBELN,
			   RI.SEBELP,
			   RI.SZMBLNO,
			   RI.SZMIPNO,
			   RI.STRAID,
			   RI.SVBELN,
			   RI.SPOSNR,
			   RI.STKNUM,
			   RI.STPNUM,
			   RI.SWERKS,
			   RI.SLGORT,
			   RI.SDATBG,
			   RI.STDLNR,
			   RI.SSORNU,
			   RI.SSORIT,
			   RI.SMBLNR,
			   RI.SZEILE,
			   RI.SMJAHR,
			   RI.SXBLNR,
			   RI.RCPRSN,
			   RI.CREDAT,
			   RI.CRETIM,
			   RI.CREUSR,
			   RI.LMODAT,
			   RI.LMOTIM,
			   RI.LMOUSR,
			   RI.SBKTXT,
			   TRF.QTYTRF AS ORDQTY,
			   TRF.QTYTRF-TRF.QTYRCV AS QTYTRF,
			   NVL( TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MI.QTPUOM, 0, NULL, MI.QTPUOM)) , 0) AS BOXQTY,
			   DECODE(SM.ASKU02, 'Y', NVL(CEIL((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MI.QTPUOM, 0, NULL, MI.QTPUOM)) , 0), 0) AS PBOXQTY,
			   NVL(MI.QTPUOM, 0) AS BXIQTY,
			   NVL(MOD(TRF.QTYTRF-TRF.QTYRCV, NVL(MI.QTPUOM, 0)), 0) AS REMQTY,
			   NVL( TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MIP.QTPUOM, 0, NULL, MIP.QTPUOM) ) , 0) AS PLTQTY,
			   NVL( MIP.QTPUOM, 0) AS PLTQTYCAL,
			   NVL(SM.OUTDMT, 0) AS OUTDMT,
			   NVL(TO_DATE(TRIM(TRF.LOTA13), 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')), 0) AS DTREMDAT,
			   NVL(TRUNC(((TO_DATE(TRIM(TRF.LOTA13), 'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100), 0) AS DTREMRAT,
			   (SELECT NAME01
				FROM   SHPDI SI
				WHERE  TRF.SHPOKY = SI.SHPOKY
				AND	TRF.SHPOIT = SI.SHPOIT
				AND	ROWNUM = 1) AS SBKTXT,
				TRF.SHPOIT AS SHPOIT
		FROM   TRFIT TRF LEFT OUTER JOIN MEASI MI ON MI.WAREKY = TRF.WARETG AND	MI.OWNRKY = TRF.OWNRKY AND MI.MEASKY = TRF.SKUKEY AND MI.UOMKEY = 'BOX' 
						 LEFT OUTER JOIN MEASI MIP ON MIP.WAREKY = TRF.WARETG AND MIP.OWNRKY = TRF.OWNRKY AND MIP.MEASKY = TRF.SKUKEY AND MIP.UOMKEY = 'PL' 
						 LEFT OUTER JOIN SKUMA SM ON SM.OWNRKY = TRF.OWNRKY AND SM.SKUKEY = TRF.SKUKEY 
						 LEFT OUTER JOIN RECDI RI ON RI.REFDKY = TRF.REFDKY AND RI.REFDIT = TRF.REFDIT
		WHERE  RI.RECVKY = #{RECVKY}
		  AND TRF.SHPOKY = #{SHPOKYMV}
	 ORDER BY RECVIT
	
	</select>
	
	<select id="GR31_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
			CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY,
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			(SELECT MAX(RECVKY) FROM RECDI WHERE SEBELN = TRF.SHPOKY) AS RECVKY ,	
		</if>
		<if test="SAVEKEY == null or SAVEKEY == ''">
			' ' AS RECVKY ,
		</if>
			TRF.WARETG AS WAREKY,
			WH.NAME01 AS WAREKYNM,
			#{RCPTTY} AS RCPTTY,
			DT.SHORTX AS RCPTTYNM,
			'NEW' AS STATDO,
			' ' AS SAPSTS,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			'100' AS DOCCAT,
			DC.SHORTX AS DOCCATNM,
			TRF.WARESR AS DPTNKY,
			VD.NAME01 AS DPTNKYNM,
			' ' AS DRELIN,
			'00000000' AS ARCPTD,
			TRF.OWNRKY AS OWNRKY,
			' ' AS INDRCN,
			' ' AS CRECVD,
			' ' AS RSNCOD,
			' ' AS PUTSTS,
			' ' AS USRID1,
			' ' AS UNAME1,
			' ' AS DEPTID1,
			' ' AS DNAME1,
			' ' AS USRID2,
			' ' AS UNAME2,
			' ' AS DEPTID2,
			' ' AS DNAME2,
			' ' AS USRID3,
			' ' AS UNAME3,
			' ' AS DEPTID3,
			' ' AS DNAME3,
			' ' AS USRID4,
			' ' AS UNAME4,
			' ' AS DEPTID4,
			' ' AS DNAME4,
			MAX(SR.PERHNO) AS PERHNO,
			SR.CARNUM AS CARNUM,
			MAX(SR.RECNUM) AS RECNUM,
			MAX(SR.CASTYN) AS CASTYN,
			MAX(SR.CASTDT) AS CASTDT,
			MAX(SR.CASTIM) AS CASTIM,
			MAX(SH.DOCTXT) AS DOCTXT,
			TRF.SHPOKY AS SHPOKYMV,
			TRF.DOCDAT AS DOCDATMV
		FROM TRFIT TRF
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = TRF.OWNRKY
					AND SM.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN SKUWC SW
				ON		SW.OWNRKY = TRF.OWNRKY
					AND SW.WAREKY = TRF.WARETG
					AND SW.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = TRF.WARETG
			LEFT OUTER JOIN WAHMA VD
				ON		VD.WAREKY = TRF.WARESR
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '100'
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = #{RCPTTY}
			LEFT OUTER JOIN SHPDH SH
				ON		TRF.SHPOKY = SH.SHPOKY
			LEFT OUTER JOIN SHPDR SR
				ON		TRF.SHPOKY = SR.SHPOKY
					AND TRF.SHPOIT = SR.SHPOIT
					AND SR.SHPOIR = '001'
		WHERE
				TRF.OWNRKY = #{OWNRKY}
			AND TRF.WARETG = #{WAREKY}
		<if test="SAVEKEY == null or SAVEKEY == ''">
			AND TRF.STATIT = 'NEW'
		</if>
		<if test="SAVEKEY != null and SAVEKEY != ''">
		
			AND TRF.SHPOKY IN ( SELECT SEBELN FROM RECDI WHERE RECVKY IN ( ${SAVEKEY} ) ) 
		</if>
			AND TRF.QTYTRF > 0
			AND TRF.TRFOTY = '121'
			AND TRF.REFDKY NOT LIKE '61%'
			AND (TRF.LOTA07 != '21SV' AND TRF.LOTA08 != 'OD')
		<if test="RANGE_SQL != null and RANGE_SQL != ''">
	   		${RANGE_SQL}
	   </if>
		GROUP BY TRF.TASKKY, TRF.WARETG, WH.NAME01, DT.SHORTX,
			DC.SHORTX, TRF.WARESR, VD.NAME01,
			TRF.SHPOKY, TRF.DOCDAT, TRF.OWNRKY, SR.CARNUM
		ORDER BY TRF.TASKKY DESC
	</select>
	
	<select id="GR31_SAVED_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT CONCAT(TRF.SHPOKY,SR.CARNUM) AS KEY
		     , RH.RECVKY 
		     , RH.WAREKY
		     , (SELECT NAME01 FROM WAHMA WHERE WAREKY = RH.WAREKY) AS WAREKYNM	
		     , RH.RCPTTY
		     , (SELECT SHORTX FROM DOCTM WHERE DOCUTY = RH.RCPTTY) AS RCPTTYNM
		     , RH.STATDO
		     , RH.SAPSTS
		     , RH.DOCDAT
		     , RH.DOCCAT
		     , (SELECT SHORTX FROM DOCCM WHERE DOCCAT = RH.DOCCAT) AS DOCCATNM
		     , RH.DPTNKY
		     , (SELECT NAME01 FROM WAHMA WHERE WAREKY = RH.WAREKY) AS DPTNKYNM
		     , RH.DRELIN
		     , RH.ARCPTD
		     , RH.OWNRKY
		     , RH.INDRCN
		     , RH.CRECVD
		     , RH.RSNCOD
		     , RH.PUTSTS
		     , RH.USRID1
		     , RH.UNAME1
		     , RH.DEPTID1
		     , RH.DNAME1
		     , RH.USRID2
		     , RH.UNAME2
		     , RH.DEPTID2
		     , RH.DNAME2
		     , RH.USRID3
		     , RH.UNAME3
		     , RH.DEPTID3
		     , RH.DNAME3
		     , RH.USRID4
		     , RH.UNAME3
		     , RH.DEPTID4
		     , RH.DNAME4
		     , MAX(SR.PERHNO) AS PERHNO
		     , SR.CARNUM AS CARNUM
		     , MAX(SR.RECNUM) AS RECNUM
		     , MAX(SR.CASTYN) AS CASTYN
		     , MAX(SR.CASTDT) AS CASTDT
		     , MAX(SR.CASTIM) AS CASTIM
		     , MAX(SH.DOCTXT) AS DOCTXT
		     , TRF.SHPOKY AS SHPOKYMV
		     , TRF.DOCDAT AS DOCDATMV
		  FROM TRFIT TRF
		       INNER JOIN SHPDR SR ON SR.SHPOKY = TRF.SHPOKY AND SR.SHPOIT = TRF.SHPOIT
		       INNER JOIN SHPDI SI ON SI.SHPOKY = SR.SHPOKY AND SI.SHPOIT = SR.SHPOIT 
		       INNER JOIN SHPDH SH ON SH.SHPOKY = SI.SHPOKY
		       INNER JOIN RECDI RI ON RI.REFDKY = SI.REFDKY AND RI.REFDIT = SI.REFDIT
		       INNER JOIN RECDH RH ON RH.RECVKY = RI.RECVKY
		 WHERE RH.WAREKY = #{WAREKY}
		   AND TRF.SHPOKY IN (${SHPOKYS})
		   AND RH.RECVKY IN (${RECVKYS})
		   AND TRF.REFDKY NOT LIKE '61%'
		   AND (TRF.LOTA07 != '21SV' AND TRF.LOTA08 != 'OD')
		   AND SR.SHPOIR = '001'
		GROUP BY  RH.RECVKY, RH.WAREKY, RH.RCPTTY, RH.STATDO, RH.SAPSTS, RH.DOCDAT, RH.DOCCAT
		        , RH.DPTNKY, RH.DRELIN, RH.ARCPTD, RH.OWNRKY, RH.INDRCN, RH.CRECVD, RH.RSNCOD
		        , RH.PUTSTS, RH.USRID1, RH.UNAME1, RH.DEPTID1, RH.DNAME1, RH.USRID2, RH.UNAME2
		        , RH.DEPTID2, RH.DNAME2, RH.USRID3, RH.UNAME3, RH.DEPTID3, RH.DNAME3, RH.USRID4
		        , RH.UNAME3, RH.DEPTID4, RH.DNAME4, SR.CARNUM , TRF.SHPOKY, TRF.DOCDAT, TRF.TASKKY
		  ORDER BY TRF.TASKKY DESC
	</select>
	
	<select id="GR31_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
			CONCAT(TRF.SHPOKY, SR.CARNUM) AS KEY,
			(SELECT NAME01 FROM SHPDI SI WHERE TRF.SHPOKY = SI.SHPOKY AND TRF.SHPOIT = SI.SHPOIT AND ROWNUM = 1) AS SBKTXT,
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			(SELECT RECVKY FROM RECDI WHERE SEBELN = TRF.SHPOKY AND SEBELP = TRF.SHPOIT ) AS RECVKY,
			(SELECT RECVIT FROM RECDI WHERE SEBELN = TRF.SHPOKY AND SEBELP = TRF.SHPOIT ) AS RECVIT,
		</if>
		<if test="SAVEKEY == null or SAVEKEY == ''">
			' ' AS RECVKY ,
			' ' AS RECVIT ,
		</if>
			'NEW' AS STATIT,
			' ' AS SAPSTS,
			TRF.SKUKEY AS SKUKEY,
			' ' AS LOTNUM,
			' ' AS AREAKY,
			'DOCLOC' AS LOCAKY,
			' ' AS SECTID,
			' ' AS TRNUID,
			' ' AS PACKID,
			TRF.QTYTRF AS ORDQTY,
			TRF.QTYTRF-TRF.QTYRCV AS QTYTRF,
			TRF.QTYTRF-TRF.QTYRCV AS QTYRCV,
			0 AS QTYDIF,
			TRF.QTYTRF AS QTYUOM,
			' ' AS TRUNTY,
			TRF.MEASKY AS MEASKY,
			TRF.UOMKEY AS UOMKEY,
			NVL(MS.QTPUOM,0) AS QTPUOM,
			NVL(SM.DUOMKY,' ') AS DUOMKY,
			NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM,
			' ' AS INDRCN,
			' ' AS CRECVD,
			' ' AS RSNCOD,
			TRF.LOTA01 AS LOTA01,
			' ' AS LOTA01NM,
			TRF.LOTA02 AS LOTA02,
			TRF.LOTA03 AS LOTA03,
			TRF.LOTA04 AS LOTA04,
			TRF.LOTA05 AS LOTA05,
			'00' AS LOTA06,
			TRF.LOTA07 AS LOTA07,
			TRF.LOTA08 AS LOTA08,
			TRF.LOTA09 AS LOTA09,
			TRF.LOTA10 AS LOTA10,
			TRF.LOTA11 AS LOTA11,
			TRF.LOTA12 AS LOTA12,
			TRF.LOTA13 AS LOTA13,
			TRF.LOTA14 AS LOTA14,
			TRF.LOTA15 AS LOTA15,
			TRF.LOTA16 AS LOTA16,
			TRF.LOTA17 AS LOTA17,
			TRF.LOTA18 AS LOTA18,
			TRF.LOTA19 AS LOTA19,
			TRF.LOTA20 AS LOTA20,
			TRF.TRFKEY AS AWMSNO,
			TRF.REFDKY AS REFDKY,
			TRF.REFDIT AS REFDIT,
			' ' AS REFCAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			TRF.ASKU01 AS ASKU01,
			TRF.ASKU02 AS ASKU02,
			TRF.ASKU03 AS ASKU03,
			TRF.ASKU04 AS ASKU04,
			TRF.ASKU05 AS ASKU05,
			' ' AS EANCOD,
			' ' AS GTINCD,
			TRF.SKUG01 AS SKUG01,
			TRF.SKUG02 AS SKUG02,
			TRF.SKUG03 AS SKUG03,
			TRF.SKUG04 AS SKUG04,
			TRF.SKUG05 AS SKUG05,
			
			TRF.WGTUNT AS WGTUNT,
			TRF.LENGTH AS LENGTH,
			TRF.WIDTHW AS WIDTHW,
			TRF.HEIGHT AS HEIGHT,
			TRF.CUBICM AS CUBICM,
			TRF.CAPACT AS CAPACT,
			0 AS QTYORG,
			' ' AS SMANDT,
			TRF.SHPOKY AS SEBELN,
			TRF.SHPOIT AS SEBELP,
			TRF.SHPOIT AS SHPOIT,
			' ' AS SZMBLNO,
			' ' AS SZMIPNO,
			' ' AS STRAID,
			' ' AS SVBELN,
			' ' AS SPOSNR,
			' ' AS STKNUM,
			' ' AS STPNUM,
			' ' AS SWERKS,
			' ' AS SLGORT,
			' ' AS SDATBG,
			' ' AS STDLNR,
			' ' AS SSORNU,
			' ' AS SSORIT,
			' ' AS SMBLNR,
			' ' AS SZEILE,
			' ' AS SMJAHR,
			' ' AS SXBLNR,
			' ' AS RCPRSN,
			NVL(MI.QTPUOM,0) AS BXIQTY,
			NVL(MOD(TRF.QTYTRF-TRF.QTYRCV, NVL(MI.QTPUOM,0)),0) AS REMQTY,		
			NVL(  TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY,
			NVL(  TRUNC((TRF.QTYTRF-TRF.QTYRCV) / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			NVL( MIP.QTPUOM, 0)  AS PLTQTYCAL,
			NVL(SM.GRSWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT ,
			NVL(SM.OUTDMT,0) AS OUTDMT ,
			0 AS DTREMDAT , 
			0 AS DTREMRAT ,
			0 AS PBOXQTY
		FROM
			TRFIT TRF
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = TRF.OWNRKY
					AND SM.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN SKUWC SW
				ON		SW.OWNRKY = TRF.OWNRKY
					AND SW.WAREKY = TRF.WARETG
					AND SW.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN MEASI MS
				ON		MS.WAREKY = TRF.WARETG
					AND MS.MEASKY = TRF.MEASKY
					AND MS.UOMKEY = TRF.UOMKEY		   
			LEFT OUTER JOIN MEASI MI
				ON		MI.OWNRKY = TRF.OWNRKY
					AND MI.WAREKY = TRF.WARETG
					AND MI.MEASKY = TRF.SKUKEY
					AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.OWNRKY = TRF.OWNRKY
					AND MIP.WAREKY = TRF.WARETG
					AND MIP.MEASKY = TRF.SKUKEY
					AND MIP.UOMKEY = 'PL'
			LEFT OUTER JOIN SHPDR SR
				ON		TRF.SHPOKY = SR.SHPOKY
					AND TRF.SHPOIT = SR.SHPOIT
					AND SR.SHPOIR = '001'							
		WHERE
				TRF.OWNRKY = #{OWNRKY}
			AND TRF.WARETG = #{WAREKY}
			AND CONCAT(TRF.SHPOKY, SR.CARNUM) = #{KEY}
			AND TRF.STATIT = 'NEW'
			AND TRF.QTYTRF > 0
			AND TRF.TRFOTY = '121'
			AND (TRF.LOTA07 != '21SV' AND TRF.LOTA08 != 'OD')
			AND TRF.REFDKY NOT LIKE '61%'
		<if test="RANGE_SQL != null and RANGE_SQL != ''">
	   		${RANGE_SQL}
	   </if>
	</select>
	
	<select id="GR31_ITEM_SAVE_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT CONCAT(TRF.SHPOKY, SR.CARNUM) AS KEY
		     , RI.SBKTXT
		     , RI.RECVKY
		     , RI.RECVIT
		     , RI.STATIT
		     , RI.SAPSTS
		     , RI.SKUKEY
		     , RI.LOTNUM
		     , RI.AREAKY
		     , RI.LOCAKY
		     , RI.SECTID
		     , RI.TRNUID
		     , RI.PACKID
		     , TRF.QTYTRF AS ORDQTY
		     , RI.QTYRCV AS QTYTRF
		     , RI.QTYRCV
		     , RI.QTYDIF
		     , RI.QTYUOM
		     , RI.TRUNTY
		     , RI.MEASKY
		     , RI.UOMKEY
		     , RI.QTPUOM
		     , RI.DUOMKY
		     , RI.QTDUOM
		     , RI.INDRCN
		     , RI.CRECVD
		     , RI.RSNCOD
		     , RI.LOTA01
		     , RI.LOTA02
		     , RI.LOTA03
		     , RI.LOTA04
		     , RI.LOTA05
		     , RI.LOTA01
		     , RI.LOTA06
		     , RI.LOTA07
		     , RI.LOTA08
		     , RI.LOTA09
		     , RI.LOTA10
		     , RI.LOTA11
		     , RI.LOTA12
		     , RI.LOTA13
		     , RI.LOTA14
		     , RI.LOTA15
		     , RI.LOTA16
		     , RI.LOTA17
		     , RI.LOTA18
		     , RI.LOTA19
		     , RI.LOTA20
		     , RI.AWMSNO
		     , RI.REFDKY
		     , RI.REFDIT
		     , RI.REFCAT
		     , RI.REFDAT
		     , SM.DESC01
		     , SM.DESC02
		     , RI.ASKU01
		     , RI.ASKU02
		     , RI.ASKU03
		     , RI.ASKU04
		     , RI.ASKU05
		     , SM.EANCOD
		     , SM.GTINCD
		     , RI.SKUG01
		     , RI.SKUG02
		     , RI.SKUG03
		     , RI.SKUG04
		     , RI.SKUG05
		     , RI.WGTUNT
		     , RI.LENGTH
		     , RI.WIDTHW
		     , RI.HEIGHT
		     , RI.CAPACT
		     , 0 AS QTYORG
		     , RI.SMANDT
		     , TRF.SHPOKY AS SEBELN
		     , TRF.SHPOIT AS SEBELP
		     , TRF.SHPOIT AS SHPOIT
		     , RI.SZMBLNO
		     , RI.SZMIPNO
		     , RI.STRAID
		     , SI.SVBELN
		     , SI.SPOSNR
		     , RI.STKNUM
		     , RI.STPNUM
		     , RI.SWERKS
		     , RI.SLGORT
		     , RI.SDATBG
		     , RI.STDLNR
		     , ' ' AS SSORNU
		     , ' ' AS SSORTT
		     , RI.SMBLNR
		     , RI.SZEILE
		     , RI.SMJAHR
		     , RI.SXBLNR
		     , RI.RCPRSN
		     , RI.CUBICM
		     , MI.QTPUOM  AS BXIQTY
		     , NVL(MOD(RI.QTYRCV, NVL(MI.QTPUOM,0)),0) AS REMQTY
		     , NVL(  TRUNC(RI.QTYRCV / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY
		     , NVL(  TRUNC(RI.QTYRCV / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY
		     , NVL( MIP.QTPUOM, 0)  AS PLTQTYCAL
		     , NVL(SM.GRSWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS GRSWGT
		     , NVL(SM.GRSWGT,0)   AS GRSWGTCNT
		     , NVL(SM.NETWGT,0) * NVL(TRF.QTYTRF-TRF.QTYRCV,0)  AS NETWGT
		     , NVL(SM.NETWGT,0)   AS NETWGTCNT 
		     , NVL(SM.OUTDMT,0) AS OUTDMT 
		     , 0 AS DTREMDAT 
		     , 0 AS DTREMRAT 
		     , 0 AS PBOXQTY
		  FROM RECDH RH 
		       INNER JOIN RECDI RI ON RI.RECVKY = RH.RECVKY
		       INNER JOIN SHPDI SI ON SI.SHPOKY = RI.SEBELN AND SI.SHPOIT = RI.SEBELP
		       INNER JOIN TRFIT TRF ON TRF.SHPOKY = SI.SHPOKY AND TRF.SHPOIT = SI.SHPOIT
		       INNER JOIN SKUMA SM ON SM.OWNRKY = RH.OWNRKY AND SM.SKUKEY = RI.SKUKEY
		       INNER JOIN SKUWC SW ON SW.OWNRKY = RH.OWNRKY AND SW.WAREKY = RH.WAREKY AND SW.SKUKEY = RI.SKUKEY
			   LEFT OUTER JOIN MEASI MS ON MS.WAREKY = RH.WAREKY AND MS.MEASKY = SW.MEASKY AND MS.UOMKEY = RI.UOMKEY  		 
			   LEFT OUTER JOIN MEASI MI ON MI.WAREKY = RH.WAREKY AND MI.MEASKY = SW.MEASKY AND MI.UOMKEY = 'BOX'  
			   LEFT OUTER JOIN MEASI MIP ON MIP.WAREKY = RH.WAREKY AND MIP.MEASKY = SW.MEASKY AND MIP.UOMKEY = 'PL' 
		       LEFT OUTER JOIN SHPDR SR ON SR.SHPOKY = SI.SHPOKY AND SR.SHPOIT = SI.SHPOIT
		 WHERE RH.OWNRKY = #{OWNRKY}
		   AND RH.WAREKY = #{WAREKY}
		   AND RH.RECVKY = #{RECVKY}
		   AND (RI.LOTA07 != '21SV' AND RI.LOTA08 != 'OD')
		   AND RI.REFDKY NOT LIKE '61%'
		  
	</select>
	
	<update id="CARINFO_UPDATE"  parameterType="hashmap">
		UPDATE SHPDR
		SET
			PERHNO = #{PERHNO},
			RECNUM = #{RECNUM},
			CASTDT = #{CASTDT},
			CASTIM = #{CASTIM}
		WHERE
				SHPOKY = #{SHPOKY}
			AND SHPOIT = #{SHPOIT}
			AND CARNUM = #{CARNUM}
	</update>
	
	<!-- ** COMBO.LOTA05 -->
	<select id="COMBO_LOTA05_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT SUBSTR(CMCDVL,1,2) AS VALUE_COL,
			   CDESC1 AS TEXT_COL
		  FROM CMCDV
		 WHERE CMCDKY = 'LOTA05'
		 ORDER BY 1
	</select>
	
	<!-- ** COMBO.LOTA06 -->
	<select id="COMBO_LOTA06_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT CMCDVL AS VALUE_COL,
			   CDESC1 AS TEXT_COL
		  FROM CMCDV
		WHERE CMCDKY = 'LOTA06'
	</select>

	<!-- GR60 헤더 조회-->
	<select id="GR60_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT RH.RECVKY AS KEY,
			   RH.RECVKY AS RECVKY,
			   RH.WAREKY AS WAREKY,
			   WH.NAME01 AS WAREKYNM,
			   RH.RCPTTY AS RCPTTY,
			   DT.SHORTX AS RCPTTYNM,
			   RH.STATDO AS STATDO,
			   DECODE(RH.SAPSTS,' ',' ','V') AS SAPSTS,
			   RH.DOCDAT AS DOCDAT,
			   RH.DOCCAT AS DOCCAT,
			   DC.SHORTX AS DOCCATNM,
			   RH.DPTNKY AS DPTNKY,
			  DECODE(TRIM(MAX(VD.NAME01)),NULL, DECODE(TRIM(MAX(VD2.NAME01)),NULL, MAX(BT.NAME01),MAX(VD2.NAME01)), MAX(VD.NAME01)) AS DPTNKYNM,
			   DECODE(TRIM(MAX(VD.NAME01)),NULL, DECODE(TRIM(MAX(VD2.POSTCD)),NULL, MAX(SA1.REGNKY),MAX(SA3.REGNKY)),MAX(SA2.REGNKY)) AS REGNKY,
			   DECODE(TRIM(MAX(VD.NAME01)),NULL, DECODE(TRIM(MAX(VD2.POSTCD)),NULL, MAX(SA1.REGNNM),MAX(SA3.REGNNM)),MAX(SA2.REGNNM)) AS REGNNM,
			   RH.DRELIN AS DRELIN,
			   RH.ARCPTD AS ARCPTD,
			   RH.OWNRKY AS OWNRKY,
			   RH.INDRCN AS INDRCN,
			   RH.CRECVD AS CRECVD,
			   RH.RSNCOD AS RSNCOD,
			   RH.PUTSTS AS PUTSTS,
		
			   DECODE(RH.RCPTTY, '121', MAX(SR.DRIVER), '122', MAX(SR.DRIVER), '123', MAX(SR.DRIVER), MAX(RH.USRID1)) AS USRID1,
			   DECODE(RH.RCPTTY, '121', MAX(SR.PERHNO), '122', MAX(SR.PERHNO), '123', MAX(SR.PERHNO), MAX(RH.UNAME1)) AS UNAME1,
			   DECODE(RH.RCPTTY, '121', MAX(SR.RECNUM), '122', MAX(SR.RECNUM), '123', MAX(SR.RECNUM), MAX(RH.DEPTID1)) AS DEPTID1,
			   DECODE(RH.RCPTTY, '121', MAX(SR.CASTYN), '122', MAX(SR.CASTYN), '123', MAX(SR.CASTYN), MAX(RH.DNAME1)) AS DNAME1,
			   DECODE(RH.RCPTTY, '121', MAX(SR.CASTDT), '122', MAX(SR.CASTDT), '123', MAX(SR.CASTDT), MAX(RH.USRID2)) AS USRID2,
			   DECODE(RH.RCPTTY, '121', MAX(SR.CASTIM), '122', MAX(SR.CASTIM), '123', MAX(SR.CASTIM), MAX(RH.UNAME2)) AS UNAME2,
			   MAX(RH.DEPTID2) AS DEPTID2,
			   MAX(RH.DNAME2) AS DNAME2,
			   MAX(RH.USRID3) AS USRID3,
			   MAX(RH.UNAME3) AS UNAME3,
			   MAX(RH.DEPTID3) AS DEPTID3,
			   MAX(RH.DNAME3) AS DNAME3,
			   MAX(RH.USRID4) AS USRID4,
			   MAX(RH.UNAME4) AS UNAME4,
			   MAX(RH.DEPTID4) AS DEPTID4,
			   MAX(RH.DNAME4) AS DNAME4,	   
			   
			   RH.DOCTXT AS DOCTXT,
			   MAX(S.SEBELN) AS SEBELN,
			   MAX(S.STRAID) AS VGBEL,
			   MAX(CASE WHEN RH.RCPTTY IN ('101', '102') THEN S.REFDKY
						ELSE ' '
					END) AS ASNDKY,
			   MAX(CASE WHEN RH.RCPTTY IN ('108') THEN S.REFDKY
						ELSE ' '
					END) AS SHPOKY,
			   RH.CREDAT AS CREDAT,
			   RH.CRETIM AS CRETIM,
			   RH.CREUSR AS CREUSR,
			   CU.NMLAST AS CUSRNM,
			   RH.LMODAT AS LMODAT,
			   RH.LMOTIM AS LMOTIM,
			   RH.LMOUSR AS LMOUSR,
			   LU.NMLAST AS LUSRNM,
			   ' ' AS ERPWHT,
			   ' ' AS ERPTNM,
			   MAX(S.REFDKY) AS REFDKY,
			   (SELECT DISTINCT C00106 FROM IFWMS113 WHERE DOCUTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT ='100') AND SVBELN = S.SVBELN  AND XSTAT !='X') AS CARNUM,
			   (SELECT DISTINCT TEXT02 FROM IFWMS113 WHERE DOCUTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT ='100') AND SVBELN = S.SVBELN  AND XSTAT !='X') AS TEXT02
		  FROM RECDH RH
			   INNER JOIN RECDI S
					   ON S.RECVKY = RH.RECVKY
			   LEFT OUTER JOIN USRMA CU
					   ON CU.USERID = RH.CREUSR
			   LEFT OUTER JOIN USRMA LU
					   ON LU.USERID = RH.LMOUSR
			   LEFT OUTER JOIN WAHMA WH
					   ON WH.WAREKY = RH.WAREKY
			   LEFT OUTER JOIN DOCCM DC
					   ON DC.DOCCAT = '100'
			   LEFT OUTER JOIN DOCTM DT
					   ON DT.DOCUTY = RH.RCPTTY
			   LEFT OUTER JOIN BZPTN VD
					   ON VD.PTNRKY = RH.DPTNKY
					  AND VD.OWNRKY = RH.OWNRKY
					  AND VD.PTNRTY = '0002'
			   LEFT OUTER JOIN BZPTN BT
					   ON BT.PTNRKY = RH.DPTNKY
					  AND BT.OWNRKY = RH.OWNRKY
					  AND BT.PTNRTY = '0001' 
			   LEFT OUTER JOIN WAHMA VD2
					  ON VD2.WAREKY = RH.DPTNKY		   
			   LEFT OUTER JOIN SHPDR SR
					  ON S.SEBELN = SR.SHPOKY
					 AND S.SEBELP = SR.SHPOIT
			   LEFT OUTER JOIN SHPMA SA1
					  ON SA1.OWNRKY = RH.OWNRKY
					  AND SA1.POSTCD = BT.POSTCD
			   LEFT OUTER JOIN SHPMA SA2
					  ON SA2.OWNRKY = RH.OWNRKY
					  AND SA2.POSTCD = VD.POSTCD
			   LEFT OUTER JOIN SHPMA SA3
					  ON SA3.OWNRKY = RH.OWNRKY
					  AND SA3.POSTCD = VD2.POSTCD
		 WHERE 1 = 1
		AND S.STATIT = 'FRV'
		AND RH.WAREKY = #{WAREKY}
		AND RH.OWNRKY = #{OWNRKY}
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		   		${RANGE_SQL}
		   </if>
		  GROUP BY RH.RECVKY,RH.WAREKY,RH.RCPTTY,RH.STATDO,RH.SAPSTS,
				  RH.DOCDAT,RH.DOCCAT,RH.DPTNKY,RH.DRELIN,RH.ARCPTD,
				  RH.OWNRKY,RH.INDRCN,RH.CRECVD,RH.RSNCOD,RH.PUTSTS,
				  RH.CREDAT,RH.CRETIM,RH.CREUSR,CU.NMLAST,
				  RH.LMODAT,RH.LMOTIM,RH.LMOUSR,LU.NMLAST,
				  WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01,
				  RH.DOCTXT, s.svbeln
		 ORDER BY RH.RECVKY DESC	
	</select>

	<!-- GR60 아이템 조회-->
	<select id="GR60_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT S.RECVKY  AS KEY,
			   RH.WAREKY AS WAREKY,
			   S.RECVKY  AS RECVKY,
			   S.RECVIT  AS RECVIT,
			   S.STATIT AS STATIT,
			   DECODE(S.SAPSTS,' ',' ','V') AS SAPSTS,
			   S.SKUKEY  AS SKUKEY,
			   S.LOTNUM  AS LOTNUM,
			   S.AREAKY  AS AREAKY,
			   S.LOCAKY  AS LOCAKY,
			   S.SECTID  AS SECTID,
			   S.TRNUID  AS TRNUID,
			   S.PACKID  AS PACKID,
			   S.QTYRCV  AS QTYRCV,
			   S.QTYRCV  AS SNDQTY,
			   S.QTYDIF  AS QTYDIF,
			   S.QTYUOM  AS QTYUOM,
			   S.TRUNTY  AS TRUNTY,
			   S.MEASKY  AS MEASKY,
			   S.UOMKEY  AS UOMKEY,
			   S.QTPUOM  AS QTPUOM,
			   S.DUOMKY  AS DUOMKY,
			   S.QTDUOM  AS QTDUOM,
			   NVL( MI.QTPUOM, 0 ) AS BXIQTY,
			   TRUNC(S.QTYRCV/S.QTDUOM) AS BOXQTY,
			   DECODE(SM.DLGORT, 'Y', NVL(CEIL(S.QTYRCV/S.QTDUOM), 0), 0) AS PBOXQTY,
			   MOD(S.QTYRCV,S.QTDUOM) AS REMQTY,
			   NVL(  TRUNC(S.QTYRCV / DECODE(MIP.QTPUOM, 0, NULL, MIP.QTPUOM))  ,0) AS PLTQTY,
			   NVL(MIP.QTPUOM, 0) AS PLIQTY,
			   S.INDRCN  AS INDRCN,
			   S.CRECVD  AS CRECVD,
			   S.RSNCOD  AS RSNCOD,
			   S.LOTA01  AS LOTA01,
			   L01NM.NAME01 AS LOTA01NM,
			   S.LOTA02  AS LOTA02,
			   S.LOTA03  AS LOTA03,
			   S.LOTA04  AS LOTA04,
			   S.LOTA05  AS LOTA05,
			   S.LOTA06  AS LOTA06,
			   S.LOTA07  AS LOTA07,
			   S.LOTA08  AS LOTA08,
			   S.LOTA09  AS LOTA09,
			   S.LOTA10  AS LOTA10,
			   S.LOTA11  AS LOTA11,
			   S.LOTA12  AS LOTA12,
			   S.LOTA13  AS LOTA13,
			   S.LOTA14  AS LOTA14,
			   S.LOTA15  AS LOTA15,
			   S.LOTA16  AS LOTA16,
			   S.LOTA17  AS LOTA17,
			   S.LOTA18  AS LOTA18,
			   S.LOTA19  AS LOTA19,
			   S.LOTA20  AS LOTA20,
			   S.AWMSNO  AS AWMSNO,
			   S.REFDKY  AS REFDKY,
			   S.REFDIT  AS REFDIT,
			   S.REFCAT  AS REFCAT,
			   S.REFDAT  AS REFDAT,
			   S.DESC01  AS DESC01,
			   S.DESC02  AS DESC02,
			   S.ASKU01  AS ASKU01,
			   S.ASKU02  AS ASKU02,
			   S.ASKU03  AS ASKU03,
			   S.ASKU04  AS ASKU04,
			   S.ASKU05  AS ASKU05,
			   S.EANCOD  AS EANCOD,
			   S.GTINCD  AS GTINCD,
			   S.SKUG01  AS SKUG01,
			   S.SKUG02  AS SKUG02,
			   S.SKUG03  AS SKUG03,
			   S.SKUG04  AS SKUG04,
			   S.SKUG05  AS SKUG05,
			   NVL(SM.GRSWGT,0) * NVL(S.QTYRCV,0)  AS GRSWGT,
			   NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			   NVL(SM.NETWGT,0) * NVL(S.QTYRCV,0)  AS NETWGT,
			   NVL(SM.NETWGT,0)   AS NETWGTCNT,   
			   S.WGTUNT  AS WGTUNT,
			   S.LENGTH  AS LENGTH,
			   S.WIDTHW  AS WIDTHW,
			   S.HEIGHT  AS HEIGHT,
			   S.CUBICM  AS CUBICM,
			   S.CAPACT  AS CAPACT,
			   S.QTYORG  AS QTYORG,
			   S.SMANDT  AS SMANDT,
			   S.SEBELN  AS SEBELN,
			   S.SEBELP  AS SEBELP,
			   S.SZMBLNO AS SZMBLNO,
			   S.SZMIPNO AS SZMIPNO,
			   S.STRAID  AS STRAID,
			   S.SVBELN  AS SVBELN,
			   S.SPOSNR  AS SPOSNR,
			   S.STKNUM  AS STKNUM,
			   S.STPNUM  AS STPNUM,
			   S.SWERKS  AS SWERKS,
			   S.SLGORT  AS SLGORT,
			   S.SDATBG  AS SDATBG,
			   S.STDLNR  AS STDLNR,
			   S.SSORNU  AS SSORNU,
			   S.SSORIT  AS SSORIT,
			   S.SMBLNR  AS SMBLNR,
			   S.SZEILE  AS SZEILE,
			   S.SMJAHR  AS SMJAHR,
			   S.SXBLNR  AS SXBLNR,
			   S.SBKTXT  AS SBKTXT,
			   S.RCPRSN  AS RCPRSN,
			   S.CREDAT AS CREDAT,
			   S.CRETIM AS CRETIM,
			   S.CREUSR AS CREUSR,
			   CU.NMLAST AS CUSRNM,
			   S.LMODAT AS LMODAT,
			   S.LMOTIM AS LMOTIM,
			   S.LMOUSR AS LMOUSR,
			   LU.NMLAST AS LUSRNM,
			   NVL(TO_DATE(TRIM(S.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')),0) AS DTREMDAT,
			   NVL(TRUNC(((TO_DATE(TRIM(S.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100),0) AS DTREMRAT
		  FROM RECDH RH
			   INNER JOIN RECDI S
					   ON S.RECVKY = RH.RECVKY
			   LEFT OUTER JOIN USRMA CU
					   ON CU.USERID = S.CREUSR
			   LEFT OUTER JOIN USRMA LU
					   ON LU.USERID = S.LMOUSR
			   LEFT OUTER JOIN BZPTN L01NM
					   ON L01NM.PTNRKY = RH.DPTNKY
					  AND L01NM.OWNRKY = RH.OWNRKY
					  AND L01NM.PTNRTY = '0002'
			   LEFT OUTER JOIN MEASI MI
					   ON MI.OWNRKY = RH.OWNRKY
					  AND MI.WAREKY = RH.WAREKY
					  AND MI.MEASKY = S.SKUKEY
					  AND MI.UOMKEY = 'BOX' 
			   LEFT OUTER JOIN MEASI MIP
					   ON MIP.WAREKY = RH.WAREKY
					  AND MIP.OWNRKY = RH.OWNRKY
					  AND MIP.MEASKY = S.MEASKY
					  AND MIP.UOMKEY = 'PL'		
			   LEFT OUTER JOIN SKUMA SM
					   ON SM.OWNRKY = RH.OWNRKY
					  AND SM.SKUKEY = S.SKUKEY		 
		 WHERE 1=1   
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">
		   		${RANGE_SQL}
		   </if>
		   AND RH.RECVKY = #{RECVKY}
		 ORDER BY S.RECVKY, S.RECVIT	
	</select>
	
	
	
	<select id="VALID_GR60_LIST"  parameterType="hashmap" resultType="DataMap">
		SELECT (#{QTYRCV} - V_REVCAL) AS QTYRCV
		  FROM (
				SELECT NVL(TRIM(SUM(QTSIWH)),0) AS V_REVCAL
				  FROM STKKY
				 WHERE WAREKY = #{WAREKY}
				   AND LOCAKY = #{LOCAKY}
				   AND SKUKEY = #{SKUKEY}
				   AND LOTA06 = '00'
				   AND QTSIWH > 0
				   AND QTSBLK + QTSALO + QTSPMO = 0
			   )
	</select>
	
	<!-- **[GR60] 수정쿼리 -->
	<update id="GR60_FLAG_UPDATE"  parameterType="hashmap">
		UPDATE RECDI
		   SET STATIT = 'RCN',
			   INDRCN = 'V',
			   CRECVD = TO_CHAR(SYSDATE,'YYYYMMDD'),
			   RSNCOD = #{RSNCOD},
			   LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
			   LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
			   LMOUSR = #{SES_USER_ID}
		 WHERE RECVKY = #{RECVKY}
		   AND RECVIT = #{RECVIT}
	</update>
	
	
	
	<select id="VALID_GR60_MAP"  parameterType="hashmap" resultType="DataMap">
		 SELECT  (CASE WHEN A.RCNCNT = B.TOTCNT THEN 'OK'
					  ELSE 'X'
				 END) AS RESULTMSG 
		 FROM (
		 		SELECT RECVKY, COUNT(*) AS RCNCNT, 0 TOTCNT
				FROM RECDI
				WHERE RECVKY = #{RECVKY}
				  AND STATIT = 'RCN'
				GROUP BY RECVKY
				) A
			   INNER JOIN (
			   SELECT RECVKY, 0, COUNT(*) TOTCNT
				FROM RECDI
				WHERE RECVKY = #{RECVKY} 
				GROUP BY RECVKY
				) B
				ON A.RECVKY = B.RECVKY	
	</select>
	
	
	<!-- **[GR60] 완료쿼리 -->
	<update id="GR60_DELETE_UPDATE"  parameterType="hashmap">
		UPDATE RECDH
		   SET STATDO = 'RCN',
			   INDRCN = 'V',
			   LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
			   LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
			   LMOUSR = #{SES_USER_ID}
		 WHERE RECVKY = #{RECVKY}
	</update>
	
	<select id="GR20_TAB1_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
			' ' AS ASNDKY,
			IF.SEBELN AS KEY,
			IF.ORDDAT AS ORDDAT,
			IF.SEBELN AS SEBELN,
			IF.WAREKY AS WAREKY,
			NVL(WH.NAME01,' ') AS WAREKYNM,
			'051' AS ASNTTY,
			NVL(DT.SHORTX,' ') AS ASNTTYNM,
			'NEW' AS STATDO,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
			'050' AS DOCCAT,
			NVL(DC.SHORTX,' ') AS DOCCATNM,
			IF.OWNRKY AS OWNRKY,
			IF.PTNRKY AS DPTNKY,
			BZ.NAME01 AS DPTNKYNM,
			' ' AS DRELIN,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS PRCPTD,
			' ' AS LRCPTD,
			' ' AS INDDCL,
			' ' AS RSNCOD,
			' ' AS RSNRET,
			0 AS QTYASN,
			0 AS QTYRCV,
			' ' AS LGORT,
			' ' AS LGORTNM,
			' ' AS USRID1,
			' ' AS UNAME1,
			' ' AS DEPTID1,
			' ' AS DNAME1,
			' ' AS USRID2,
			' ' AS UNAME2,
			IF.SALDPT AS DEPTID2,
			IF.SALDPT,
			' ' AS DNAME2,
			' ' AS USRID3,
			' ' AS UNAME3,
			' ' AS DEPTID3,
			' ' AS DNAME3,
			' ' AS USRID4,
			' ' AS UNAME4,
			' ' AS DEPTID4,
			' ' AS DNAME4,
			' ' AS DOCTXT,
			IF.ORDDAT ORDDAT,
			MAX(IF.BUYDAT) BUYDAT,
			
			IF.CHKSEQ CHKSEQ,
			IF.BUYCDT BUYCDT,
			IF.BUYLMO BUYLMO,
			DECODE(MIN(IF.POCLOS),'V','YES','NO') POCLOS,
			MAX(IF.CREDAT) CREDAT,
			MAX(IF.CRETIM) CRETIM,
			MAX(IF.LMODAT) LMODAT,
			MAX(IF.LMOTIM) LMOTIM
		
		FROM
			IFWMS103 IF
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IF.OWNRKY
					AND SM.SKUKEY = IF.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.OWNRKY = IF.OWNRKY
					AND SW.WAREKY = IF.WAREKY
					AND SW.SKUKEY = IF.SKUKEY
			INNER JOIN MEASI ITFMS
				ON		ITFMS.WAREKY = IF.WAREKY
					AND ITFMS.OWNRKY = IF.OWNRKY
					AND ITFMS.MEASKY = IF.SKUKEY
					AND ITFMS.UOMKEY = IF.DUOMKY
			INNER JOIN WAHMA WH
				ON		WH.WAREKY = IF.WAREKY
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '050'
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = '051'
			LEFT OUTER JOIN BZPTN BZ
				ON		BZ.OWNRKY = IF.OWNRKY
					AND BZ.PTNRKY = IF.PTNRKY
					AND BZ.PTNRTY = '0002'
		WHERE
				IF.OWNRKY = #{OWNRKY}
			AND IF.WAREKY = #{WAREKY}
			
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			AND IF.SEBELN||SEBELP IN ( ${SAVEKEY} ) 
		</if>
			AND IF.XSTAT IN ('D', 'R') 
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		<if test="POCLOS != 'ALL' ">
			AND IF.POCLOS = DECODE(#{POCLOS},'N',' ','V')
		</if>
		
		GROUP BY IF.SEBELN, IF.WAREKY, IF.PTNRKY, WH.NAME01, DC.SHORTX, DT.SHORTX, IF.ORDDAT,
				IF.OWNRKY, IF.SALDPT, IF.ORDDAT, IF.CHKSEQ,  IF.BUYCDT, IF.BUYLMO, IF.DOCUTY, BZ.NAME01  
		HAVING IF.DOCUTY = '110'
	</select>
	
	<select id="GR20_TAB1_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
			IF.SEBELN AS SEBELN,
			IF.POCLOS AS POCLOS,
			IF.C00110 AS SBKTXT,
			' ' AS ASNDKY,
			' ' AS ASNDIT,
			'NEW' AS STATIT,
			IF.SKUKEY AS SKUKEY,
			IF.ORDQTY AS POIQTY,
			NVL(  TRUNC((IF.ORDQTY-ASNQTY) / DECODE(MI.QTPUOM, NULL,0,MI.QTPUOM) ) ,0) AS BOXQTY,
			NVL(MI.QTPUOM,0) AS BXIQTY,
			NVL(MOD(IF.ORDQTY-ASNQTY, DECODE(MI.QTPUOM, NULL,0,MI.QTPUOM)),0) AS REMQTY, 
			NVL(  TRUNC((IF.ORDQTY-ASNQTY) / DECODE(MIP.QTPUOM,0, NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			NVL(MIP.QTPUOM,0) AS PLTQTYCAL,
			IF.ASNQTY QTYASN, 
			IF.INNQTY AS QTYRCV,
			0 AS QTYUOM,
			NVL(SW.MEASKY,' ')  AS MEASKY,
			IF.DUOMKY	 AS UOMKEY,
			NVL(ITFMS.QTPUOM,0) AS QTPUOM,
			NVL(SM.DUOMKY,' ') AS DUOMKY,
			NVL(SM.QTDUOM,9999999) AS QTDUOM,
			' ' AS RCSTKY,
			' ' AS LOCARV,
			' ' AS LOTA01,
			' ' AS LOTA01NM,
			' ' AS LOTA02,
			NVL(IF.PTNRKY, ' ') AS LOTA03,
			' ' AS LOTA04,
			NVL(SM.ASKU03, ' ') AS LOTA05,
			'00' AS LOTA06,
			' ' AS LOTA07,
			' ' AS LOTA08,
			' ' AS LOTA09,
			' ' AS LOTA10,
			' ' AS LOTA11,
			' ' AS LOTA12,
			' ' AS LOTA13,
			' ' AS LOTA14,
			' ' AS LOTA15,
			0 AS LOTA16,
			0 AS LOTA17,
			0 AS LOTA18,
			0 AS LOTA19,
			0 AS LOTA20,
			IF.SEBELN AS REFDKY,
			IF.SEBELP AS REFDIT,	
			IF.ORDSEQ AS ORDSEQ,	
			' ' AS REFCAT,
			' ' AS EASNKY,
			' ' AS EASNIT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			NVL(SM.ASKU02,' ') AS ASKU01,
			NVL(SM.ASKU02,' ') AS ASKU02,
			NVL(SM.ASKU03,' ') AS ASKU03,
			NVL(SM.ASKU04,' ') AS ASKU04,
			NVL(SM.ASKU05,' ') AS ASKU05,
			NVL(SM.EANCOD,' ') AS EANCOD,
			NVL(SM.GTINCD,' ') AS GTINCD,
			NVL(SM.SKUG01,' ') AS SKUG01,
			NVL(SM.SKUG02,' ') AS SKUG02,
			NVL(SM.SKUG03,' ') AS SKUG03,
			NVL(SM.SKUG04,' ') AS SKUG04,
			NVL(SM.SKUG05,' ') AS SKUG05,
			NVL(SM.GRSWGT,0) * NVL(IF.ORDQTY,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(IF.ORDQTY,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT,
			NVL(SM.WGTUNT,' ') AS WGTUNT,
			NVL(SM.LENGTH,0) AS LENGTH,
			NVL(SM.WIDTHW,0) AS WIDTHW,
			NVL(SM.HEIGHT,0) AS HEIGHT,
			NVL(SM.CUBICM,0) AS CUBICM,
			NVL(SM.CAPACT,0) AS CAPACT,
			IF.MANDT AS SMANDT,
			IF.SEBELP AS SEBELP,
			IF.SZMBLNO AS SZMBLNO,
			IF.SZMIPNO AS SZMIPNO,
			BUYCOST AS BUYCOST,
			BUYAMT  AS BUYAMT,
			VATAMT  AS VATAMT,
			DLVDAT  AS LRCPTD,
			' ' AS STRAID,
			' ' AS SVBELN,
			' ' AS SPOSNR,
			' ' AS STKNUM,
			' ' AS STPNUM,
			' ' AS SWERKS,
			' ' AS SLGORT,
			' ' AS SDATBG,
			' ' AS STDLNR,
			' ' AS SSORNU,
			' ' AS SSORIT,
			' ' AS SMBLNR,
			' ' AS SZEILE,
			' ' AS SMJAHR,
			' ' AS SXBLNR,
			' ' AS AWMSNO
		FROM
			IFWMS103 IF
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IF.OWNRKY
					AND SM.SKUKEY = IF.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.OWNRKY = IF.OWNRKY
					AND SW.WAREKY = IF.WAREKY 
					AND SW.SKUKEY = IF.SKUKEY
			LEFT OUTER JOIN MEASI ITFMS
				ON		ITFMS.OWNRKY = IF.OWNRKY
					AND ITFMS.WAREKY = IF.WAREKY
					AND ITFMS.MEASKY = IF.SKUKEY
					AND ITFMS.UOMKEY = IF.DUOMKY
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = IF.PTNRKY
					AND L01NM.OWNRKY = IF.OWNRKY
					AND L01NM.PTNRTY = '0002'	
			LEFT OUTER JOIN MEASI MI
				ON		MI.OWNRKY = IF.OWNRKY
					AND MI.WAREKY = IF.WAREKY
					AND MI.MEASKY = IF.SKUKEY
					AND MI.UOMKEY = 'BOX'  
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.OWNRKY = IF.OWNRKY
					AND MIP.WAREKY = IF.WAREKY
					AND MIP.MEASKY = IF.SKUKEY
					AND MIP.UOMKEY = 'PL'				
		WHERE
				IF.OWNRKY = #{OWNRKY}
			AND IF.XSTAT IN ('D', 'R') 
			AND IF.WAREKY = #{WAREKY}
			AND IF.SEBELN = #{SEBELN}
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			AND IF.SEBELN||SEBELP IN ( ${SAVEKEY} ) 
		</if>
			AND DOCUTY = '110'
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		AND IF.POCLOS = DECODE(#{POCLOS},'YES','V',' ')
		
		ORDER BY IF.SEBELN ,IF.SEBELP
	</select>
	
	<select id="POCLOSING_VALIDATE_MAP"  parameterType="hashmap" resultType="DataMap">
		SELECT COUNT(*) AS RESULTMSG FROM ASNDI WHERE SEBELN = #{SEBELN} AND SEBELP = #{SEBELP} AND STATIT = 'NEW'
	</select>
	
	<update id="POCLOSING_UPDATE"  parameterType="hashmap">
		UPDATE IFWMS103
		SET
			POCLOS = 'V',
			LMODAT = TO_CHAR(SYSDATE , 'YYYYMMDD'),
			LMOTIM = TO_CHAR(SYSDATE , 'HH24MISS')
		WHERE
				SEBELN = #{SEBELN}
			AND SEBELP = #{SEBELP}		
	</update>
	
	<select id="GR20_TAB2_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
		/*+ ordered */ 	TRIM(IF.SVBELN||NVL(SI.SHPOKY,' ')) || DECODE(TR.STATIT, 'FRV', 'A', 'B') AS KEY,
			IF.OWNRKY AS OWNRKY,
			IF.OTRQDT AS OTRQDT,
			DECODE(TR.STATIT, 'FRV', TR.DOCDAT, ' ') AS DOCDAT,
			IF.SVBELN AS SVBELN,
			NVL(SI.SHPOKY,' ') AS SHPOKY,
			IF.DOCUTY AS DOCUTY,
			IF.WAREKY AS WARESR,
			NVL(BZ.NAME01,' ') AS WARESRNM,
			IF.WARETG AS WARETG,
			NVL(BZ2.NAME01,' ') AS WARETGNM,
			MAX(IF.CREDAT) CREDAT,
			MAX(IF.CRETIM) CRETIM,
			MAX(IF.LMODAT) LMODAT,
			MAX(IF.LMOTIM) LMOTIM,
			DECODE(TR.STATIT, 'FRV', 'YES', 'NO') AS POCLOS,
			DECODE(MAX(IF.CREDAT), ' ', MAX(IF.XDATS), MAX(IF.CREDAT)) AS CREDAT,
			DECODE(MAX(IF.CRETIM), ' ', MAX(IF.XTIMS), MAX(IF.CRETIM)) AS CRETIM,
			DECODE(MAX(US.NMLAST),' ', MAX(IF.USRID1), MAX(US.NMLAST)) AS CREUSR
		FROM
			IFWMS113 IF 
			LEFT OUTER JOIN SHPDI SI 
				ON		SI.SVBELN = IF.SVBELN 
					AND SI.SPOSNR = IF.SPOSNR
			LEFT OUTER JOIN(
				SELECT STATIT, SHPOKY, DOCDAT, SHPOIT, SKUKEY, SUM(QTYTRF) QTYTRF, SUM(QTYRCV) QTYRCV 
				FROM TRFIT
				GROUP BY STATIT, SHPOKY, DOCDAT, SHPOIT, SKUKEY) TR 
				ON		TR.SHPOKY = SI.SHPOKY 
					AND TR.SHPOIT = SI.SHPOIT
					AND TR.SKUKEY = SI.SKUKEY 
			INNER JOIN BZPTN BZ 
				ON		IF.OWNRKY = BZ.OWNRKY 
					AND IF.WAREKY = BZ.PTNRKY
					AND BZ.PTNRTY = '0004'
			INNER JOIN BZPTN BZ2
				ON		IF.OWNRKY = BZ2.OWNRKY
					AND IF.WARETG = BZ2.PTNRKY
					AND BZ2.PTNRTY = '0004' 
			LEFT OUTER JOIN USRMA US
				ON		IF.USRID1 = US.USERID
		WHERE
				IF.OWNRKY = #{OWNRKY}
			AND	IF.WARETG = #{WAREKY}
			AND IF.DOCUTY IN ('266','267')
			AND XSTAT IN ('D', 'R')
			AND IF.QTYREQ > 0
		<if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">  
			${RANGE_SQL2}  
		</if>
		<if test="POCLOS != 'ALL' ">
			AND NVL(TR.STATIT,'NEW') = DECODE(#{POCLOS},'N','NEW','FRV')
		</if>
		GROUP BY IF.SVBELN, IF.OWNRKY, IF.OTRQDT, IF.SVBELN, IF.DOCUTY, IF.WAREKY,
				IF.WARETG, BZ.NAME01, BZ2.NAME01, SI.SHPOKY, TR.STATIT, TR.DOCDAT
		ORDER BY IF.SVBELN, NVL(SI.SHPOKY,' ')
	</select>
	
	<select id="GR20_TAB2_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			/*+ ORDERED */TRIM(IF.SVBELN||NVL(SI.SHPOKY,' ')) || DECODE(TR.STATIT, 'FRV', 'A', 'B') AS KEY,
			DECODE(TR.STATIT,'FRV','YES','NO') AS POCLOS,
			IF.SVBELN AS SVBELN,
			IF.OTRQDT AS LRCPTD,
			IF.SPOSNR AS SEBELP,
			IF.SPOSNR AS ORDSEQ,	
			IF.SKUKEY AS SKUKEY,
			SUM(IF.QTYORG) AS POIQTY,
			DECODE(TR.STATIT, 'NEW', SUM(NVL(TR.QTYTRF,0)), 0) AS QTYIGO,
			SUM(NVL(TR.QTYRCV,0)) AS QTYRCV,
			SM.DESC01 AS DESC01,
			SM.DESC02 AS DESC02,
			NVL(SM.ASKU01,' ') AS ASKU01,
			NVL(SM.ASKU02,' ') AS ASKU02,
			NVL(SM.ASKU03,' ') AS ASKU03,
			NVL(SM.ASKU04,' ') AS ASKU04,
			NVL(SM.ASKU05,' ') AS ASKU05,
			NVL(SM.EANCOD,' ') AS EANCOD,
			NVL(SM.GTINCD,' ') AS GTINCD,
			NVL(SM.SKUG01,' ') AS SKUG01,
			NVL(SM.SKUG02,' ') AS SKUG02,
			NVL(SM.SKUG03,' ') AS SKUG03,
			NVL(SM.SKUG04,' ') AS SKUG04,
			NVL(SM.SKUG05,' ') AS SKUG05,
			MAX(IF.TEXT01)	 AS SBKTXT,
			DECODE(MAX(IF.CREDAT), ' ', MAX(IF.XDATS), MAX(IF.CREDAT)) AS CREDAT,
			DECODE(MAX(IF.CRETIM), ' ', MAX(IF.XTIMS), MAX(IF.CRETIM)) AS CRETIM
		FROM IFWMS113 IF 
			LEFT OUTER JOIN SHPDI SI 
				ON		SI.SVBELN = IF.SVBELN 
					AND SI.SPOSNR = IF.SPOSNR
			LEFT OUTER JOIN (
				SELECT STATIT, SHPOKY, SHPOIT, SKUKEY, SUM(QTYTRF) QTYTRF, SUM(QTYRCV) QTYRCV 
				FROM TRFIT
				GROUP BY STATIT, SHPOKY, SHPOIT, SKUKEY
			) TR 
				ON		TR.SHPOKY = SI.SHPOKY 
					AND TR.SHPOIT = SI.SHPOIT
					AND TR.SKUKEY = SI.SKUKEY	
			INNER JOIN SKUMA SM 
				ON		IF.OWNRKY = SM.OWNRKY 
					AND IF.SKUKEY = SM.SKUKEY		
		WHERE
				IF.OWNRKY = #{OWNRKY}
			AND IF.WARETG = #{WAREKY}
			AND IF.DOCUTY = '266'
			AND TRIM(IF.SVBELN||NVL(SI.SHPOKY,' ')) || DECODE(TR.STATIT, 'FRV', 'A', 'B') = #{KEY}
			AND IF.XSTAT IN ('D', 'R')
			AND IF.QTYREQ > 0
		<if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">  
			${RANGE_SQL2} 
		</if>
		<if test="POCLOS != 'ALL' ">
			AND NVL(TR.STATIT,'NEW') = DECODE(#{POCLOS},'NO','NEW','FRV')
		</if>
		GROUP BY IF.SVBELN, SI.SHPOKY, IF.OTRQDT, IF.SPOSNR, IF.SKUKEY, SM.DESC01, SM.DESC02, SM.ASKU02, 
				SM.ASKU01, SM.ASKU02, SM.ASKU03, SM.ASKU04, SM.ASKU05, SM.EANCOD, SM.GTINCD, SM.SKUG01, SM.SKUG02, SM.SKUG03, SM.SKUG04, SM.SKUG05, TR.STATIT 
		ORDER BY IF.SVBELN, IF.SPOSNR
				
	</select>
	
	
	<select id="GR21_TAB1_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
			IF.SEBELN AS SEBELN,
			IF.POCLOS AS POCLOS,
			IF.C00110 AS SBKTXT,
			' ' AS ASNDKY,
			' ' AS ASNDIT,
			'NEW' AS STATIT,
			IF.SKUKEY AS SKUKEY,
			IF.ORDQTY AS POIQTY,
			NVL(  TRUNC((IF.ORDQTY-ASNQTY) / DECODE(MI.QTPUOM, NULL,0,MI.QTPUOM) ) ,0) AS BOXQTY,
			NVL(MI.QTPUOM,0) AS BXIQTY,
			NVL(MOD(IF.ORDQTY-ASNQTY, DECODE(MI.QTPUOM, NULL,0,MI.QTPUOM)),0) AS REMQTY, 
			NVL(  TRUNC((IF.ORDQTY-ASNQTY) / DECODE(MIP.QTPUOM,0, NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			NVL(MIP.QTPUOM,0) AS PLTQTYCAL,
			IF.ASNQTY QTYASN, 
			IF.INNQTY AS QTYRCV,
			0 AS QTYUOM,
			NVL(SW.MEASKY,' ')  AS MEASKY,
			IF.DUOMKY	 AS UOMKEY,
			NVL(ITFMS.QTPUOM,0) AS QTPUOM,
			NVL(SM.DUOMKY,' ') AS DUOMKY,
			NVL(SM.QTDUOM,9999999) AS QTDUOM,
			' ' AS RCSTKY,
			' ' AS LOCARV,
			' ' AS LOTA01,
			' ' AS LOTA01NM,
			' ' AS LOTA02,
			NVL(IF.PTNRKY, ' ') AS LOTA03,
			' ' AS LOTA04,
			NVL(SM.ASKU03, ' ') AS LOTA05,
			'00' AS LOTA06,
			' ' AS LOTA07,
			' ' AS LOTA08,
			' ' AS LOTA09,
			' ' AS LOTA10,
			' ' AS LOTA11,
			' ' AS LOTA12,
			' ' AS LOTA13,
			' ' AS LOTA14,
			' ' AS LOTA15,
			0 AS LOTA16,
			0 AS LOTA17,
			0 AS LOTA18,
			0 AS LOTA19,
			0 AS LOTA20,
			IF.SEBELN AS REFDKY,
			IF.SEBELP AS REFDIT,	
			IF.ORDSEQ AS ORDSEQ,	
			' ' AS REFCAT,
			' ' AS EASNKY,
			' ' AS EASNIT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			NVL(SM.ASKU02,' ') AS ASKU01,
			NVL(SM.ASKU02,' ') AS ASKU02,
			NVL(SM.ASKU03,' ') AS ASKU03,
			NVL(SM.ASKU04,' ') AS ASKU04,
			NVL(SM.ASKU05,' ') AS ASKU05,
			NVL(SM.EANCOD,' ') AS EANCOD,
			NVL(SM.GTINCD,' ') AS GTINCD,
			NVL(SM.SKUG01,' ') AS SKUG01,
			NVL(SM.SKUG02,' ') AS SKUG02,
			NVL(SM.SKUG03,' ') AS SKUG03,
			NVL(SM.SKUG04,' ') AS SKUG04,
			NVL(SM.SKUG05,' ') AS SKUG05,
			NVL(SM.GRSWGT,0) * NVL(IF.ORDQTY,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(IF.ORDQTY,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT,
			NVL(SM.WGTUNT,' ') AS WGTUNT,
			NVL(SM.LENGTH,0) AS LENGTH,
			NVL(SM.WIDTHW,0) AS WIDTHW,
			NVL(SM.HEIGHT,0) AS HEIGHT,
			NVL(SM.CUBICM,0) AS CUBICM,
			NVL(SM.CAPACT,0) AS CAPACT,
			IF.MANDT AS SMANDT,
			IF.SEBELP AS SEBELP,
			IF.SZMBLNO AS SZMBLNO,
			IF.SZMIPNO AS SZMIPNO,
			BUYCOST AS BUYCOST,
			BUYAMT  AS BUYAMT,
			VATAMT  AS VATAMT,
			DLVDAT  AS LRCPTD,
			' ' AS STRAID,
			' ' AS SVBELN,
			' ' AS SPOSNR,
			' ' AS STKNUM,
			' ' AS STPNUM,
			' ' AS SWERKS,
			' ' AS SLGORT,
			' ' AS SDATBG,
			' ' AS STDLNR,
			' ' AS SSORNU,
			' ' AS SSORIT,
			' ' AS SMBLNR,
			' ' AS SZEILE,
			' ' AS SMJAHR,
			' ' AS SXBLNR,
			' ' AS AWMSNO,
            IF.LMODAT AS CREDAT,
            IF.LMOTIM AS CRETIM,
            IF.PTNRKY AS DPTNKY,
            (SELECT NAME01 FROM BZPTN WHERE PTNRKY = IF.PTNRKY AND OWNRKY = IF.OWNRKY AND PTNRTY = '0002') AS DPTNKYNM
		FROM
			IFWMS103 IF
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IF.OWNRKY
					AND SM.SKUKEY = IF.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.OWNRKY = IF.OWNRKY
					AND SW.WAREKY = IF.WAREKY 
					AND SW.SKUKEY = IF.SKUKEY
			LEFT OUTER JOIN MEASI ITFMS
				ON		ITFMS.OWNRKY = IF.OWNRKY
					AND ITFMS.WAREKY = IF.WAREKY
					AND ITFMS.MEASKY = IF.SKUKEY
					AND ITFMS.UOMKEY = IF.DUOMKY
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = IF.PTNRKY
					AND L01NM.OWNRKY = IF.OWNRKY
					AND L01NM.PTNRTY = '0002'	
			LEFT OUTER JOIN MEASI MI
				ON		MI.OWNRKY = IF.OWNRKY
					AND MI.WAREKY = IF.WAREKY
					AND MI.MEASKY = IF.SKUKEY
					AND MI.UOMKEY = 'BOX'  
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.OWNRKY = IF.OWNRKY
					AND MIP.WAREKY = IF.WAREKY
					AND MIP.MEASKY = IF.SKUKEY
					AND MIP.UOMKEY = 'PL'				
		WHERE
				IF.OWNRKY = #{OWNRKY}
			AND XSTAT IN ('D', 'R')
			AND IF.WAREKY = #{WAREKY}
			AND DOCUTY = '110'
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		<if test="POCLOS != 'ALL' ">
			AND IF.POCLOS = DECODE(#{POCLOS},'N',' ','V')
		</if>
		
		ORDER BY IF.SEBELN ,IF.SEBELP
	</select>
	
	
	<select id="GR21_TAB2_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			/*+ ORDERED */TRIM(IF.SVBELN||NVL(SI.SHPOKY,' ')) || DECODE(TR.STATIT, 'FRV', 'A', 'B') AS KEY,
			DECODE(TR.STATIT,'FRV','YES','NO') AS POCLOS,
			IF.SVBELN AS SVBELN,
			IF.OTRQDT AS LRCPTD,
			IF.SPOSNR AS SEBELP,
			IF.SPOSNR AS ORDSEQ,	
			IF.SKUKEY AS SKUKEY,
			SUM(IF.QTYORG) AS POIQTY,
			DECODE(TR.STATIT, 'NEW', SUM(NVL(TR.QTYTRF,0)), 0) AS QTYIGO,
			SUM(NVL(TR.QTYRCV,0)) AS QTYRCV,
			SM.DESC01 AS DESC01,
			SM.DESC02 AS DESC02,
			NVL(SM.ASKU01,' ') AS ASKU01,
			NVL(SM.ASKU02,' ') AS ASKU02,
			NVL(SM.ASKU03,' ') AS ASKU03,
			NVL(SM.ASKU04,' ') AS ASKU04,
			NVL(SM.ASKU05,' ') AS ASKU05,
			NVL(SM.EANCOD,' ') AS EANCOD,
			NVL(SM.GTINCD,' ') AS GTINCD,
			NVL(SM.SKUG01,' ') AS SKUG01,
			NVL(SM.SKUG02,' ') AS SKUG02,
			NVL(SM.SKUG03,' ') AS SKUG03,
			NVL(SM.SKUG04,' ') AS SKUG04,
			NVL(SM.SKUG05,' ') AS SKUG05,
			MAX(IF.TEXT01)	 AS SBKTXT,
			DECODE(MAX(IF.CREDAT), ' ', MAX(IF.XDATS), MAX(IF.CREDAT)) AS CREDAT,
			DECODE(MAX(IF.CRETIM), ' ', MAX(IF.XTIMS), MAX(IF.CRETIM)) AS CRETIM,
			TR.WARESR AS DPTNKY,
			(SELECT NAME01 FROM WAHMA WHERE WAREKY = TR.WARESR) AS DPTNKYNM
		FROM IFWMS113 IF 
			LEFT OUTER JOIN SHPDI SI 
				ON		SI.SVBELN = IF.SVBELN 
					AND SI.SPOSNR = IF.SPOSNR
			LEFT OUTER JOIN (
				SELECT STATIT, SHPOKY, SHPOIT, SKUKEY, SUM(QTYTRF) QTYTRF, SUM(QTYRCV) QTYRCV, MAX(WARESR) AS WARESR 
				FROM TRFIT
				GROUP BY STATIT, SHPOKY, SHPOIT, SKUKEY
			) TR 
				ON		TR.SHPOKY = SI.SHPOKY 
					AND TR.SHPOIT = SI.SHPOIT
					AND TR.SKUKEY = SI.SKUKEY	
			INNER JOIN SKUMA SM 
				ON		IF.OWNRKY = SM.OWNRKY 
					AND IF.SKUKEY = SM.SKUKEY		
		WHERE
				IF.WARETG = #{WAREKY}
			AND IF.DOCUTY = '266'
			AND IF.XSTAT IN ('D', 'R')
			AND IF.QTYREQ > 0
		<if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">  
			${RANGE_SQL2} 
		</if>
		<if test="POCLOS != 'ALL' ">
			AND NVL(TR.STATIT,'NEW') = DECODE(#{POCLOS},'N','NEW','FRV')
		</if>
		GROUP BY IF.SVBELN, SI.SHPOKY, IF.OTRQDT, IF.SPOSNR, IF.SKUKEY, SM.DESC01, SM.DESC02, SM.ASKU02, 
				SM.ASKU01, SM.ASKU02, SM.ASKU03, SM.ASKU04, SM.ASKU05, SM.EANCOD, SM.GTINCD, SM.SKUG01, SM.SKUG02, SM.SKUG03, SM.SKUG04, SM.SKUG05, TR.STATIT, TR.WARESR 
		ORDER BY IF.SVBELN, IF.SPOSNR
				
	</select>
	
	<select id="GR40_NOT133_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT 
			IFWMS113.WAREKY AS WAREKY ,
			IFWMS113.WAREKYNM AS WAREKYNM ,
			IFWMS113.RCPTTY AS RCPTTY ,
			IFWMS113.RCPTTYNM AS RCPTTYNM ,
			IFWMS113.SAPSTS AS SAPSTS ,
			IFWMS113.DOCCAT AS DOCCAT ,
			IFWMS113.DOCCATNM AS DOCCATNM ,
			IFWMS113.RECVKY AS RECVKY ,
			IFWMS113.STATDO AS STATDO ,
			IFWMS113.DOCDAT AS DOCDAT ,
			IFWMS113.DPTNKY AS DPTNKY ,
			IFWMS113.DPTNKYNM AS DPTNKYNM ,
			IFWMS113.PTNROD AS PTNROD ,
			IFWMS113.PTNRODNM AS PTNRODNM ,
			IFWMS113.DRELIN AS DRELIN ,
			IFWMS113.ARCPTD AS ARCPTD ,
			IFWMS113.OWNRKY AS OWNRKY ,
			IFWMS113.INDRCN AS INDRCN ,
			IFWMS113.CRECVD AS CRECVD ,
			IFWMS113.RSNCOD AS RSNCOD ,
			IFWMS113.PUTSTS AS PUTSTS ,
			IFWMS113.LGORT AS LGORT ,
			IFWMS113.LGORTNM AS LGORTNM ,
			IFWMS113.USRID1 AS USRID1 ,
			IFWMS113.UNAME1 AS UNAME1 ,
			IFWMS113.DEPTID1 AS DEPTID1 ,
			IFWMS113.DNAME1 AS DNAME1 ,
			IFWMS113.USRID2 AS USRID2 ,
			IFWMS113.UNAME2 AS UNAME2 ,
			IFWMS113.DEPTID2 AS DEPTID2 ,
			IFWMS113.DNAME2 AS DNAME2 ,
			IFWMS113.USRID3 AS USRID3 ,
			IFWMS113.UNAME3 AS UNAME3 ,
			IFWMS113.DEPTID3 AS DEPTID3 ,
			IFWMS113.DNAME3 AS DNAME3 ,
			IFWMS113.USRID4 AS USRID4 ,
			IFWMS113.UNAME4 AS UNAME4 ,
			IFWMS113.DEPTID4 AS DEPTID4 ,
			IFWMS113.DNAME4 AS DNAME4 ,
			IFWMS113.SVBELN AS SVBELN ,
			IFWMS113.SVBELN AS KEY,
			IFWMS113.CUNAME AS CUNAME ,
			IFWMS113.SDATBG AS SDATBG ,
			IFWMS113.DOCTXT AS DOCTXT ,
			IFWMS113.PRINTCHK AS PRINTCHK ,
			IFWMS113.LGORTNM AS LGORTNM ,
			IFWMS113.SHPOKYMV AS SHPOKYMV ,
			IFWMS113.CARNUM AS CARNUM ,
			IFWMS113.DPHONE AS DPHONE ,
			IFWMS113.ERDAT AS ERDAT ,
			IFWMS113.RECALLDAT AS RECALLDAT ,
			IFWMS113.BOXQTY AS BOXQTY ,
			MAX(IFWMS113.SKUG05) AS SKUG05 ,
			SUBSTR(MAX(IFWMS113.XDATS), 1, 4)||'-'||SUBSTR(MAX(IFWMS113.XDATS), 5, 2)||'-'||SUBSTR(MAX(IFWMS113.XDATS), 7, 8) AS WMSCREDAT ,
			SUBSTR(MAX(IFWMS113.XTIMS), 1, 2)||':'||SUBSTR(MAX(IFWMS113.XTIMS), 3, 2)||':'||SUBSTR(MAX(IFWMS113.XTIMS), 5, 2) AS WMSCRETIM,
			SUBSTR(MAX(IFWMS113.OTRQDT), 1, 4)||''||SUBSTR(MAX(IFWMS113.OTRQDT), 5, 2)||''||SUBSTR(MAX(IFWMS113.OTRQDT), 7, 8) AS ORDDAT,
			MAX(IFWMS113.REGNKY) AS REGNKY,
			MAX(IFWMS113.REGNNM) AS REGNNM,
			MAX(IFWMS113.TEXT02) AS TEXT02,
			' ' AS CREDAT,
			' ' AS CRETIM,
			' ' AS CREUSR,
			' ' AS CUSRNM,
			' ' AS CUADDR
		FROM
			(
				SELECT
					IFWMS113.WAREKY AS WAREKY,
					NVL(MAX(RI.RECVKY),' ') AS RECVKY ,
					WH.NAME01 AS WAREKYNM,
					IFWMS113.DOCUTY  AS RCPTTY,
					DT.SHORTX AS RCPTTYNM,
					
					' '   AS SAPSTS,
					IFWMS113.DOCUTY AS DOCUTY,
					IFWMS113.OTRQDT AS OTRQDT,
					IFWMS113.CUADDR AS CUADDR,
					IFWMS113.PTNRTO AS PTNRTO,
					NVL(TRIM((SELECT MAX(H.DOCDAT) FROM RECDH H, RECDI I WHERE H.RECVKY = I.RECVKY AND I.SVBELN = IFWMS113.SVBELN)) ,TO_CHAR(SYSDATE,'YYYYMMDD'))  AS DOCDAT,
					NVL(TRIM((SELECT MAX(H.STATDO) FROM RECDH H, RECDI I WHERE H.RECVKY = I.RECVKY AND I.SVBELN = IFWMS113.SVBELN)) ,'NEW')  AS STATDO,
					'100' AS DOCCAT,
					DC.SHORTX AS DOCCATNM,
					IFWMS113.PTNRTO AS DPTNKY,
					VD.NAME01 AS DPTNKYNM,
					IFWMS113.PTNROD AS PTNROD,
					VD2.NAME01 AS PTNRODNM,
					' ' AS DRELIN,
					'00000000' AS ARCPTD,
					IFWMS113.OWNRKY AS OWNRKY,
					' ' AS INDRCN,
					' ' AS CRECVD,
					' ' AS RSNCOD,
					' ' AS PUTSTS,
					' ' AS LGORT,
					' ' AS USRID1,
					IFWMS113.CTNAME AS UNAME1,
					' ' AS DEPTID1,
					IFWMS113.WARESR AS DNAME1,
					' ' AS USRID2,
					IFWMS113.CTTEL1 AS UNAME2,
					' ' AS DEPTID2,
					' ' AS DNAME2,
					' ' AS USRID3,
					IFWMS113.SALENM AS UNAME3,
					' ' AS DEPTID3,
					' ' AS DNAME3,
					' ' AS USRID4,
					IFWMS113.SALTEL AS UNAME4,
					' ' AS DEPTID4,
					IFWMS113.CUADDR AS DNAME4,
					IFWMS113.SVBELN AS SVBELN,
					NVL(MAX(BZ.NAME01), NVL(MAX(BZ2.NAME01),MAX(BZ3.NAME01))) AS CUNAME,
					IFWMS113.OTRQDT AS SDATBG,
					IFWMS113.TEXT01 AS DOCTXT,
					IFWMS113.C00106 AS CARNUM,
					IFWMS113.C00107 AS DPHONE,
					IFWMS113.C00108 AS ERDAT,
					IFWMS113.C00109 AS RECALLDAT,
					(SELECT SUM(TRUNC((QTYREQ-QTSHPD) / DECODE(SK.QTDUOM,0, NULL,SK.QTDUOM),1)) 
					FROM IFWMS113 ITEM, SKUMA SK 
					WHERE ITEM.OWNRKY = SK.OWNRKY AND ITEM.SKUKEY = SK.SKUKEY AND SVBELN = IFWMS113.SVBELN AND XSTAT = 'R') AS BOXQTY,
					DECODE(MAX(C00105),'V','YES','NO') AS PRINTCHK,
					IFWMS113.OTRQDT AS LGORTNM,
					IFWMS113.XSTAT AS SHPOKYMV,
					IFWMS113.SKUKEY AS SKUKEY,
					SM.DESC01 AS DESC01,
					SM.DESC02 AS DESC02,
					SM.ASKU02 AS SKUG05,
					IFWMS113.XDATS AS XDATS,
					IFWMS113.XTIMS AS XTIMS,
					MAX(SP.REGNKY) AS REGNKY,
					MAX(SP.REGNNM) AS REGNNM,
					MAX(IFWMS113.TEXT02) AS TEXT02
				FROM
					(
						SELECT * 
						FROM IFWMS113 
						WHERE DOCUTY IN ('131','133','134','135','136','137','138','139', '171')
					) IFWMS113 
				LEFT OUTER JOIN RECDI RI
					ON		RI.SVBELN = IFWMS113.SVBELN
						AND RI.SPOSNR = IFWMS113.SPOSNR
				INNER JOIN SKUMA SM
					ON		SM.OWNRKY = IFWMS113.OWNRKY
						AND SM.SKUKEY = IFWMS113.SKUKEY
				INNER JOIN SKUWC SW
					ON		SW.WAREKY = IFWMS113.WAREKY
						AND SW.OWNRKY = IFWMS113.OWNRKY 
						AND SW.SKUKEY = IFWMS113.SKUKEY
				LEFT OUTER JOIN BZPTN BZ
					ON		BZ.PTNRKY = IFWMS113.WARESR
						AND BZ.OWNRKY = IFWMS113.OWNRKY
						AND BZ.PTNRTY = '0001' AND BZ.DELMAK != 'V'
				LEFT OUTER JOIN BZPTN BZ2
					ON		BZ2.PTNRKY = IFWMS113.WARESR
						AND BZ2.OWNRKY = IFWMS113.OWNRKY
						AND BZ2.PTNRTY = '0003'
						AND BZ2.DELMAK != 'V'
				LEFT OUTER JOIN BZPTN BZ3
					ON		BZ3.PTNRKY = IFWMS113.WARESR
						AND BZ3.OWNRKY = IFWMS113.OWNRKY
						AND BZ3.PTNRTY = '0004' AND BZ3.DELMAK != 'V'			  
				LEFT OUTER JOIN WAHMA WH
					ON		WH.WAREKY = IFWMS113.WAREKY
				LEFT OUTER JOIN DOCCM DC
					ON		DC.DOCCAT = '100'
				LEFT OUTER JOIN DOCTM DT
					ON		DT.DOCUTY = IFWMS113.DOCUTY 
				LEFT OUTER JOIN BZPTN VD
					ON		VD.PTNRKY = IFWMS113.PTNRTO
						AND VD.OWNRKY = IFWMS113.OWNRKY
						AND VD.PTNRTY = '0007'
				LEFT OUTER JOIN BZPTN VD2
					ON	VD2.PTNRKY = IFWMS113.PTNROD
						AND VD2.OWNRKY = IFWMS113.OWNRKY
						AND VD2.PTNRTY = '0001'
				LEFT OUTER JOIN (SELECT DISTINCT OWNRKY, REGNKY, POSTCD, REGNNM
					FROM SHPMA) SP ON IFWMS113.CUPOST = SP.POSTCD AND IFWMS113.OWNRKY = SP.OWNRKY
				WHERE
						IFWMS113.MANDT = 'SAP'
					AND IFWMS113.OWNRKY = #{OWNRKY}
					AND IFWMS113.WAREKY = #{WAREKY}
				<if test="SAVEKEY != null and SAVEKEY != ''"> 
					AND IFWMS113.C00102 IN ('N','Y')
					AND RI.RECVKY IN (${SAVEKEY})
<!-- 					AND IFWMS113.XSTAT = 'D'  -->
				</if>
				
				<if test="SAVEKEY == null or SAVEKEY == ''">
					AND IFWMS113.QTYREQ-IFWMS113.QTSHPD > 0
					AND IFWMS113.C00102 IN ('N','Y') 
					AND IFWMS113.XSTAT = 'R'
				</if>
					AND IFWMS113.DOCUTY = #{RCPTTY}
				<if test="PRINTCHK != 'ALL' ">
					AND IFWMS113.C00105 = DECODE(#{PRINTCHK},'N',' ','V')
				</if>
				GROUP BY IFWMS113.WAREKY, IFWMS113.PTNRTO, IFWMS113.OWNRKY, IFWMS113.SVBELN, WH.NAME01, DC.SHORTX, DT.SHORTX, 
					VD.NAME01,IFWMS113.PTNROD, VD2.NAME01, IFWMS113.CTNAME, IFWMS113.WARESR, IFWMS113.CTTEL1, IFWMS113.SALENM, 
					IFWMS113.SALTEL, IFWMS113.CUADDR, IFWMS113.OTRQDT , IFWMS113.TEXT01, IFWMS113.XSTAT, IFWMS113.DOCUTY,
					IFWMS113.SKUKEY, SM.DESC01, SM.DESC02, SM.ASKU02, IFWMS113.C00106, IFWMS113.C00107, IFWMS113.C00108, 
					IFWMS113.C00109, IFWMS113.XDATS, IFWMS113.XTIMS 
		
			) IFWMS113
		WHERE 1= 1
		<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
			${RANGE_SQL}  
		</if>
		GROUP BY RECVKY, WAREKY, WAREKYNM, RCPTTY, RCPTTYNM, STATDO, SAPSTS, ARCPTD, DOCDAT, DOCCAT, DOCCATNM,
			DPTNKY, DPTNKYNM, DRELIN, OWNRKY, INDRCN, DNAME1, CRECVD, RSNCOD, PUTSTS, LGORTNM, USRID1, UNAME1,
			DEPTID1, USRID2, UNAME2, DEPTID2, DNAME2, USRID3, UNAME3, DEPTID3, DNAME3, USRID4, UNAME4, DEPTID4,
			DNAME4, SVBELN, CUNAME, SDATBG, DOCTXT, PRINTCHK, LGORTNM, SHPOKYMV, CARNUM, DPHONE, ERDAT, RECALLDAT,
			BOXQTY, IFWMS113.PTNROD, IFWMS113.PTNRODNM
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			, IFWMS113.RECVKY
		</if>
				
	</select>
	
	<select id="GR40_NOT133_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			IFWMS113.SVBELN AS KEY,
			NVL(RI.RECVKY,' ') AS RECVKY,	
			NVL(RI.RECVIT,' ') AS RECVIT,
			'NEW' AS STATIT,
			' ' AS SAPSTS,
			IFWMS113.SKUKEY AS SKUKEY,
			' ' AS LOTNUM,
			' ' AS AREAKY,
		<if test="SAVEKEY == null or SAVEKEY == ''">
			' ' AS TRNUID,
			CASE WHEN IFWMS113.OWNRKY = '2200' AND IFWMS113.DOCUTY = '136' AND SUBSTR(IFWMS113.OTRQDT,7,8)  <![CDATA[<]]> '10' THEN 'SYSLOC'
				ELSE DECODE(IFWMS113.OWNRKY,'2100','1R01101','2500','1R01101','2200',DECODE(SW.LOCARV,' ','1R01101',SW.LOCARV))
			END AS LOCAKY,
			' ' AS LOTA05,
			DECODE(IFWMS113.DOCUTY , '131', '20', '133', '20', '134', '20', '135', '20', '136', '20','137','20', '138','20','139','20','171','20','00') AS LOTA06,
			IFWMS113.C00103 AS RSNCOD,
			'19900101' AS LOTA11,
			'19900101' AS LOTA13,
			'NEW' AS STATDO,
		</if>
		<if test="SAVEKEY != null and SAVEKEY != ''">
			RI.TRNUID AS TRNUID,
			RI.LOCAKY AS LOCAKY,
			RI.LOTA05 AS LOTA05,
			RI.LOTA06 AS LOTA06,
			RI.RSNCOD AS RSNCOD,
			RI.LOTA11 AS LOTA11,
			RI.LOTA13 AS LOTA13,
			(SELECT MAX(RH.STATDO) FROM RECDH RH WHERE RECVKY = RI.RECVKY ) AS STATDO,
		</if>
			' ' AS SECTID,
			' ' AS PACKID,
			(IFWMS113.QTYREQ-IFWMS113.QTSHPD) AS ORDQTY,
			(IFWMS113.QTYREQ-IFWMS113.QTSHPD) AS QTYRCV,
			0 AS QTYDIF,
			IFWMS113.QTYREQ AS QTYUOM,
			' ' AS TRUNTY,
			IFWMS113.SKUKEY AS MEASKY,
			IFWMS113.DUOMKY AS UOMKEY,	   
			NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0) AS ASNQTY,
			NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0) AS QTYASN, 
			NVL(  TRUNC((IFWMS113.QTYREQ-IFWMS113.QTSHPD) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY,
			NVL(MI.QTPUOM,0) AS BXIQTY,
			NVL(MOD(IFWMS113.QTYREQ-IFWMS113.QTSHPD, NVL(MI.QTPUOM,0)),0) AS REMQTY, 
			NVL(  TRUNC((IFWMS113.QTYREQ-IFWMS113.QTSHPD) / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			NVL( MIP.QTPUOM, 0)  AS PLTQTYCAL,
			NVL(ITFMS.QTPUOM,9999999)   AS QTPUOM,
			NVL(SM.DUOMKY,' ') AS DUOMKY,
			NVL(MI.QTPUOM,9999999) AS QTDUOM,
			' ' AS INDRCN,
			' ' AS CRECVD,
			
			' ' AS LOTA01,
			' ' AS LOTA01NM,
			' ' AS LOTA02,
			IFWMS113.PTNRTO AS LOTA03,
			' ' AS LOTA04,
			
			' ' AS LOTA07,
			' ' AS LOTA08,
			' ' AS LOTA09,
			' ' AS LOTA10,
			
			TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12,
			
			' ' AS LOTA14,
			' ' AS LOTA15,
			0 AS LOTA16,
			0 AS LOTA17,
			0 AS LOTA18,
			0 AS LOTA19,
			0 AS LOTA20,
			' ' AS AWMSNO,
			IFWMS113.SVBELN AS REFDKY,
			IFWMS113.SPOSNR AS REFDIT,
			'100' AS REFCAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			SM.ASKU01 AS ASKU01,
			SM.ASKU02 AS ASKU02,
			SM.ASKU03 AS ASKU03,
			SM.ASKU04 AS ASKU04,
			SM.ASKU05 AS ASKU05,
			SM.EANCOD AS EANCOD,
			SM.GTINCD AS GTINCD,
			SM.SKUG01 AS SKUG01,
			SM.SKUG02 AS SKUG02,
			SM.SKUG03 AS SKUG03,
			SM.SKUG04 AS SKUG04,
			SM.SKUG05 AS SKUG05,
			NVL(SM.GRSWGT,0) * NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT,	 
			SM.WGTUNT AS WGTUNT,
			SM.LENGTH AS LENGTH,
			SM.WIDTHW AS WIDTHW,
			SM.HEIGHT AS HEIGHT,
			SM.CUBICM AS CUBICM,
			SM.CAPACT AS CAPACT,
			0 AS QTYORG,
			' ' AS SMANDT,
			' ' AS SEBELN,
			' ' AS SEBELP,
			' ' AS SZMBLNO,
			' ' AS SZMIPNO,
			' ' AS STRAID,
			IFWMS113.SVBELN AS SVBELN,
			IFWMS113.SPOSNR AS SPOSNR,
			' ' AS STKNUM,
			' ' AS STPNUM,
			' ' AS SWERKS,
			' ' AS SLGORT,
			' ' AS SDATBG,
			' ' AS STDLNR,
			' ' AS SSORNU,
			' ' AS SSORIT,
			' ' AS SMBLNR,
			' ' AS SZEILE,
			' ' AS SMJAHR,
			' ' AS SXBLNR,
			' ' AS SBKTXT,
			' ' AS RCPRSN,
			NVL(SM.OUTDMT,0) AS OUTDMT
		FROM
			IFWMS113
			LEFT OUTER JOIN RECDI RI
					ON		RI.SVBELN = IFWMS113.SVBELN
						AND RI.SPOSNR = IFWMS113.SPOSNR
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IFWMS113.OWNRKY
					AND SM.SKUKEY = IFWMS113.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = IFWMS113.WAREKY
					AND SW.OWNRKY = IFWMS113.OWNRKY
					AND SW.SKUKEY = IFWMS113.SKUKEY
			LEFT OUTER JOIN MEASI ITFMS
				ON		ITFMS.OWNRKY = IFWMS113.OWNRKY
					AND ITFMS.WAREKY = IFWMS113.WAREKY
					AND ITFMS.MEASKY = IFWMS113.SKUKEY
					AND ITFMS.UOMKEY = IFWMS113.DUOMKY
			LEFT OUTER JOIN MEASI MI
				ON		MI.WAREKY = IFWMS113.WAREKY
					AND MI.OWNRKY = IFWMS113.OWNRKY
					AND MI.MEASKY = IFWMS113.SKUKEY AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = IFWMS113.WAREKY
					AND MIP.OWNRKY = IFWMS113.OWNRKY
					AND MIP.MEASKY = IFWMS113.SKUKEY
					AND MIP.UOMKEY = 'PL'			  
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = IFWMS113.PTNRTO
					AND L01NM.OWNRKY = IFWMS113.OWNRKY
					AND L01NM.PTNRTY = '0007'
		WHERE
				MANDT = 'SAP'
			AND IFWMS113.DOCUTY = #{RCPTTY}
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
<!-- 			AND IFWMS113.XSTAT = 'D' -->
			AND RI.RECVKY = #{RECVKY}
		</if>
		<if test="SAVEKEY == null or SAVEKEY == ''">
			AND IFWMS113.QTYREQ-IFWMS113.QTSHPD > 0 
			AND IFWMS113.XSTAT = 'R'
			AND IFWMS113.SVBELN = #{KEY}
		</if>
		ORDER BY IFWMS113.SKUKEY
				
	</select>
	
	<select id="GR61_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			' ' AS RECVKY,
			' ' AS RECVIT,
			IF.C00102 AS POPKEY,
			'RCNLOC' AS LOCAKY,
			'NEW' AS STATIT,
			IF.SKUKEY AS SKUKEY,
			IF.SKUKEY AS MEASKY,
			IF.LOTA11 AS LOTA11,
			IF.LOTA13 AS LOTA13,
			IF.C00101 AS SLGORT,
			SUM(IF.QTYRCV) AS QTYRCV,
			
			' ' AS LOTNUM,
			' ' AS AREAKY,
			' ' AS SECTID,
			' ' AS TRNUID,
			' ' AS PACKID,
			'00' AS LOTA06,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			NVL(SM.OUTDMT,0) AS OUTDMT,
			NVL(TO_DATE(TRIM(DECODE(IF.LOTA13,'00000000','',IF.LOTA13)),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')),0) AS DTREMDAT,
			NVL(TRUNC(((TO_DATE(TRIM(DECODE(IF.LOTA13,'00000000','',IF.LOTA13)),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100),0) AS DTREMRAT,
			
			NVL(IF.DUOMKY,' ') AS DUOMKY,
			NVL(IF.DUOMKY,' ') AS UOMKEY,
			NVL(DECODE(SM.QTDUOM,0,9999999,SM.QTDUOM),9999999) AS QTDUOM,
			IF.REFDKY AS REFDKY,
			IF.REFDIT AS REFDIT,
			ROUND(SUM(IF.QTYRCV) / MAX(SM.QTYSTD),0) AS PLTQTY,
			MAX(SM.QTYSTD) AS PLTQTYCAL,
			MAX(SM.QTYSTD) AS QTPUOM,
			ROUND(SUM(IF.QTYRCV) / SM.QTDUOM,0) AS BOXQTY,
			MAX(SM.QTDUOM) AS BXIQTY,
			MOD(SUM(IF.QTYRCV),SM.QTDUOM) AS REMQTY,
			0 AS QTYDIF,
			' ' AS INDRCN,
			' ' AS CRECVD,
			' ' AS RSNCOD,
			' ' AS LOTA01,
			' ' AS LOTA01NM,
			' ' AS LOTA02,
			' ' AS LOTA04,
			' ' AS LOTA05,
			'00' AS LOTA06,
			' ' AS LOTA07,
			' ' AS LOTA08,
			' ' AS LOTA09,
			' ' AS LOTA10,
			IF.WARESR AS LOTA03,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12,
			' ' AS LOTA14,
			' ' AS LOTA15,
			0 AS LOTA16,
			0 AS LOTA17,
			0 AS LOTA18,
			0 AS LOTA19,
			0 AS LOTA20,
			' ' AS AWMSNO,
			IF.REFDKY AS REFDKY,
			IF.REFDIT AS REFDIT,
			'100' AS REFCAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			SM.ASKU01 AS ASKU01,
			SM.ASKU02 AS ASKU02,
			SM.ASKU03 AS ASKU03,
			SM.ASKU04 AS ASKU04,
			SM.ASKU05 AS ASKU05,
			SM.EANCOD AS EANCOD,
			SM.GTINCD AS GTINCD,
			SM.SKUG01 AS SKUG01,
			SM.SKUG02 AS SKUG02,
			SM.SKUG03 AS SKUG03,
			SM.SKUG04 AS SKUG04,
			SM.SKUG05 AS SKUG05,
			SM.LENGTH AS LENGTH,
			SM.WIDTHW AS WIDTHW,
			SM.HEIGHT AS HEIGHT,
			SM.CUBICM AS CUBICM,
			SM.CAPACT AS CAPACT,
			0 AS QTYORG,
			IF.MANDT AS SMANDT,
			' ' AS SEBELN,
			' ' AS SEBELP,
			' ' AS SZMBLNO,
			' ' AS SZMIPNO,
			' ' AS STRAID,
			' ' AS SVBELN,
			' ' AS SPOSNR,
			' ' AS STKNUM,
			' ' AS STPNUM,
			' ' AS SWERKS,
			' ' AS SDATBG,
			' ' AS STDLNR,
			' ' AS SSORNU,
			' ' AS SSORIT,
			' ' AS SMBLNR,
			' ' AS SZEILE,
			' ' AS SMJAHR,
			' ' AS SXBLNR,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS LRCPTD,
			NVL(SM.OUTDMT,0) AS OUTDMT,
			NVL((SELECT SUM(QTSIWH) FROM STKKY WHERE WAREKY = IF.WARETG AND SKUKEY = IF.SKUKEY  AND AREAKY NOT IN ('SYS','SHP') AND LOCAKY != 'DOCLOC' AND LOCAKY = 'RCNLOC'), 0) AS STKQTY,
			<![CDATA[(SELECT COUNT(*) FROM IFWMS413 WHERE PRTDAT < TO_CHAR(SYSDATE,'YYYYMMDD') AND OWNRKY = #{OWNRKY} AND WARETG = #{WAREKY} AND XSTAT = 'R' AND QTYRCV > 0) AS ERPWHF]]>,
			IF.PRTDAT , IF.XDATS
		FROM
			IFWMS413 IF
			LEFT OUTER JOIN SKUMA SM
				ON		SM.OWNRKY = IF.OWNRKY
					AND SM.SKUKEY = IF.SKUKEY
			LEFT OUTER JOIN SKUWC SW
				ON		SW.WAREKY = IF.WARETG
					AND SW.OWNRKY = IF.OWNRKY
					AND SW.SKUKEY = IF.SKUKEY
		WHERE
				IF.OWNRKY = #{OWNRKY}
			AND IF.WARETG = #{WAREKY}
			AND IF.XSTAT = 'R'
			AND IF.POPSTS = 'D'
			AND IF.QTYRCV > 0
			AND EXISTS (SELECT 1 FROM RECDI WHERE RCPRSN = IF.C00102 AND STATIT = 'FRV')
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>			
		GROUP BY
			IF.POPKEY, IF.MANDT, IF.SKUKEY, IF.DUOMKY, IF.C00101,IF.C00102, SM.QTDUOM, SM.DESC01, SM.DESC02, SM.OUTDMT, IF.LOTA11, IF.LOTA13, IF.REFDKY, IF.REFDIT, IF.WARESR,
			SM.ASKU01, SM.ASKU02, SM.ASKU03, SM.ASKU04, SM.ASKU05, SM.EANCOD, SM.GTINCD, SM.SKUG01, SM.SKUG02, SM.SKUG03, SM.SKUG04,
			SM.SKUG05, SM.LENGTH, SM.WIDTHW, SM.HEIGHT, SM.CUBICM, SM.CAPACT, SW.LOCARV, IF.WARETG, IF.PRTDAT , IF.XDATS
		ORDER BY IF.POPKEY
				
	</select>
	
	
	<parameterMap id="facreceiptCancel" type="hashmap">
		<parameter property="POPKEY" mode="IN"  jdbcType="VARCHAR" javaType="string"/>
		<parameter property="LOCAKY" mode="IN"  jdbcType="VARCHAR" javaType="string"/>
		<parameter property="SES_USER_ID" mode="IN"  jdbcType="VARCHAR" javaType="string"/>
		<parameter property="ERRNUM" mode="OUT" jdbcType="VARCHAR" javaType="string" />
		<parameter property="ERRMSG" mode="OUT" jdbcType="VARCHAR" javaType="string" /> 
	</parameterMap>
	
	<select id="CANCEL_FACRECEIPT_UPDATE" statementType="CALLABLE" parameterMap="facreceiptCancel">
		{ call P_CANCEL_FACRECEIPT( ? , ?  , ?  , ?  , ? ) }
	</select>
	
	<select id="GR91_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			RH.RECVKY AS RECVKY,
			S.RECVIT AS RECVIT,
			RH.WAREKY AS WAREKY,
			NVL(WH.NAME01,' ') AS WAREKYNM,
			RH.RCPTTY AS RCPTTY,
			NVL(DT.SHORTX,' ') AS RCPTTYNM,
			DECODE(S.STATIT,'FRV','입고','RCN','입고취소', S.STATIT) AS STATDO,
			NVL(STI.CDESC1,' ') AS STATDONM,
			RH.SAPSTS AS SAPSTS,
			RH.DOCDAT AS DOCDAT,
			RH.DOCDAT AS WDOCDAT,
			RH.DOCCAT AS DOCCAT,
			NVL(DC.SHORTX,' ') AS DOCCATNM,
			RH.DPTNKY AS DPTNKY,
			DECODE(RH.RCPTTY, '131', BR.NAME01, '133', BR.NAME01, '134', BR.NAME01, '135', BR.NAME01, NVL(BZ.NAME01,UNAME1)) AS DPTNKYNM,
			RH.DRELIN AS DRELIN,
			RH.ARCPTD AS ARCPTD,
			RH.OWNRKY AS OWNRKY,
			RH.INDRCN AS INDRCN,
			RH.CRECVD AS CRECVD,
			RH.PUTSTS AS PUTSTS,
			
			DECODE(RH.RCPTTY, '121', SR.DRIVER, '122', SR.DRIVER, '123', SR.DRIVER, RH.USRID1) AS USRID1,
			DECODE(RH.RCPTTY, '121', SR.PERHNO, '122', SR.PERHNO, '123', SR.PERHNO, RH.UNAME1) AS UNAME1,
			DECODE(RH.RCPTTY, '121', SR.RECNUM, '122', SR.RECNUM, '123', SR.RECNUM, RH.DEPTID1) AS DEPTID1,
			DECODE(RH.RCPTTY, '121', SR.CASTYN, '122', SR.CASTYN, '123', SR.CASTYN, '131', BP.NAME01, '133', BP.NAME01, RH.DNAME1) AS DNAME1,
			DECODE(RH.RCPTTY, '121', SR.CASTDT, '122', SR.CASTDT, '123', SR.CASTDT, RH.USRID2) AS USRID2,
			DECODE(RH.RCPTTY, '121', SR.CASTIM, '122', SR.CASTIM, '123', SR.CASTIM, RH.UNAME2) AS UNAME2,
			RH.DEPTID2 AS DEPTID2,
			RH.DNAME2 AS DNAME2,
			RH.USRID3 AS USRID3,
			RH.UNAME3 AS UNAME3,
			RH.DEPTID3 AS DEPTID3,
			RH.DNAME3 AS DNAME3,
			RH.USRID4 AS USRID4,
			RH.UNAME4 AS UNAME4,
			RH.DEPTID4 AS DEPTID4,
			RH.DNAME4 AS DNAME4,
			S.SBKTXT AS DOCTXT,
			NVL(  TRUNC(S.QTYRCV / DECODE(MIP.QTPUOM,0, NULL,MIP.QTPUOM))  ,0) AS PLTQTY,
			NVL(MIP.QTPUOM,0) AS PLIQTY,
			NVL(MI.QTPUOM,0) AS BXIQTY,
			TRUNC(S.QTYRCV/S.QTDUOM) AS BOXQTY,
			CEIL(S.QTYRCV/S.QTDUOM) AS PBOXQTY,
			MOD(S.QTYRCV,S.QTDUOM) AS REMQTY,
			S.STATIT AS STATIT,
			NVL(STI.CDESC1,' ') AS STATITNM,
			S.SAPSTS AS SAPSTS,
			S.SKUKEY AS SKUKEY,
			S.LOTNUM AS LOTNUM,
			S.AREAKY AS AREAKY,
			S.LOCAKY AS LOCAKY,
			S.SECTID AS SECTID,
			S.TRNUID AS TRNUID,
			S.PACKID AS PACKID,
			S.QTYRCV AS QTYRCV,
			S.QTYDIF AS QTYDIF,
			S.QTYUOM AS QTYUOM,
			S.TRUNTY AS TRUNTY,
			S.MEASKY AS MEASKY,
			S.UOMKEY AS UOMKEY,
			S.QTPUOM AS QTPUOM,
			S.DUOMKY AS DUOMKY,
			S.QTDUOM AS QTDUOM,
			S.INDRCN AS INDRCN,
			S.CRECVD AS CRECVD,
			S.RSNCOD AS RSNCOD,
			S.WORKID AS WORKID,
			S.WORKNM AS WORKNM,
			S.HHTTID AS HHTTID,
			S.LOTA01 AS LOTA01,
			S.LOTA02 AS LOTA02,
			S.LOTA03 AS LOTA03,
			NVL(BZ.NAME01,' ')  AS LOTA03NM,
			S.LOTA04 AS LOTA04,
			S.LOTA05 AS LOTA05,
			S.LOTA06 AS LOTA06,
			S.LOTA07 AS LOTA07,
			S.LOTA08 AS LOTA08,
			S.LOTA09 AS LOTA09,
			S.LOTA10 AS LOTA10,
			S.LOTA11 AS LOTA11,
			S.LOTA12 AS LOTA12,
			S.LOTA12 AS WLOTA12,
			S.LOTA13 AS LOTA13,
			S.LOTA14 AS LOTA14,
			S.LOTA15 AS LOTA15,
			S.LOTA16 AS LOTA16,
			S.LOTA17 AS LOTA17,
			S.LOTA18 AS LOTA18,
			S.LOTA19 AS LOTA19,
			S.LOTA20 AS LOTA20,
			S.AWMSNO AS AWMSNO,
			S.REFDKY AS REFDKY,
			S.REFDIT AS REFDIT,
			S.REFCAT AS REFCAT,
			S.REFDAT AS REFDAT,
			S.DESC01 AS DESC01,
			S.DESC02 AS DESC02,
			S.ASKU01 AS ASKU01,
			S.ASKU02 AS ASKU02,
			S.ASKU03 AS ASKU03,
			S.ASKU04 AS ASKU04,
			S.ASKU05 AS ASKU05,
			S.EANCOD AS EANCOD,
			S.GTINCD AS GTINCD,
			S.SKUG01 AS SKUG01,
			S.SKUG02 AS SKUG02,
			S.SKUG03 AS SKUG03,
			S.SKUG04 AS SKUG04,
			S.SKUG05 AS SKUG05,
			S.GRSWGT AS GRSWGT,
			S.NETWGT AS NETWGT,
			S.WGTUNT AS WGTUNT,
			S.LENGTH AS LENGTH,
			S.WIDTHW AS WIDTHW,
			S.HEIGHT AS HEIGHT,
			S.CUBICM AS CUBICM,
			S.CAPACT AS CAPACT,
			S.QTYORG AS QTYORG,
			S.SMANDT AS SMANDT,
			S.SEBELN AS SEBELN,
			S.SEBELP AS SEBELP,
			S.SZMBLNO AS SZMBLNO,
			S.SZMIPNO AS SZMIPNO,
			S.STRAID AS STRAID,
			S.SVBELN AS SVBELN,
			S.SPOSNR AS SPOSNR,
			S.STKNUM AS STKNUM,
			S.STPNUM AS STPNUM,
			S.SWERKS AS SWERKS,
			S.SLGORT AS SLGORT,
			S.SDATBG AS SDATBG,
			S.STDLNR AS STDLNR,
			S.SSORNU AS SSORNU,
			S.SSORIT AS SSORIT,
			S.SMBLNR AS SMBLNR,
			S.SZEILE AS SZEILE,
			S.SMJAHR AS SMJAHR,
			S.SXBLNR AS SXBLNR,
			S.RCPRSN AS RCPRSN,
			S.CREDAT AS CREDAT,
			S.CRETIM AS CRETIM,
			S.CREUSR AS CREUSR,
			NVL(CU.NMLAST,' ') AS CUSRNM,
			S.LMOUSR AS LMOUSR,
			NVL(LU.NMLAST,' ') AS LUSRNM,
			NVL(TO_DATE(TRIM(S.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')),0) AS DTREMDAT,
			NVL(TRUNC(((TO_DATE(TRIM(S.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100),0) AS DTREMRAT,
			CASE 
				WHEN RH.RCPTTY IN('101','102') THEN
					(SELECT SUBSTR(MAX(IF.CREDAT), 1, 4)||'-'||SUBSTR(MAX(IF.CREDAT), 5, 2)||'-'||SUBSTR(MAX(IF.CREDAT), 7, 8) FROM ASNDI IF WHERE IF.SEBELN  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('110','111') THEN
					(SELECT SUBSTR(MAX(IF.XDATS), 1, 4)||'-'||SUBSTR(MAX(IF.XDATS), 5, 2)||'-'||SUBSTR(MAX(IF.XDATS), 7, 8) FROM IFWMS103 IF WHERE IF.SEBELN = S.SEBELN ) 
				WHEN RH.RCPTTY IN('121','122','123') THEN
					(SELECT SUBSTR(MAX(IF.CREDAT), 1, 4)||'-'||SUBSTR(MAX(IF.CREDAT), 5, 2)||'-'||SUBSTR(MAX(IF.CREDAT), 7, 8) FROM TRFIT IF WHERE IF.SHPOKY  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('131','133','134','135','136','137') THEN
					(SELECT SUBSTR(MAX(IF.XDATS), 1, 4)||'-'||SUBSTR(MAX(IF.XDATS), 5, 2)||'-'||SUBSTR(MAX(IF.XDATS), 7, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
				ELSE 
					(SELECT SUBSTR(MAX(IF.XDATS), 1, 4)||'-'||SUBSTR(MAX(IF.XDATS), 5, 2)||'-'||SUBSTR(MAX(IF.XDATS), 7, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
			END AS LMODAT, 
			CASE 
				WHEN RH.RCPTTY IN('101','102') THEN
					(SELECT SUBSTR(MAX(IF.CREDAT), 1, 4)||'-'||SUBSTR(MAX(IF.CREDAT), 5, 2)||'-'||SUBSTR(MAX(IF.CREDAT), 7, 8) FROM ASNDI IF WHERE IF.SEBELN  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('110','111') THEN
					(SELECT SUBSTR(MAX(IF.XDATS), 1, 4)||'-'||SUBSTR(MAX(IF.XDATS), 5, 2)||'-'||SUBSTR(MAX(IF.XDATS), 7, 8) FROM IFWMS103 IF WHERE IF.SEBELN = S.SEBELN ) 
				WHEN RH.RCPTTY IN('121','122','123') THEN
					(SELECT SUBSTR(MAX(IF.CREDAT), 1, 4)||'-'||SUBSTR(MAX(IF.CREDAT), 5, 2)||'-'||SUBSTR(MAX(IF.CREDAT), 7, 8) FROM TRFIT IF WHERE IF.SHPOKY  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('131','133','134','135','136','137') THEN
					(SELECT SUBSTR(MAX(IF.XDATS), 1, 4)||'-'||SUBSTR(MAX(IF.XDATS), 5, 2)||'-'||SUBSTR(MAX(IF.XDATS), 7, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
				ELSE 
					(SELECT SUBSTR(MAX(IF.XDATS), 1, 4)||'-'||SUBSTR(MAX(IF.XDATS), 5, 2)||'-'||SUBSTR(MAX(IF.XDATS), 7, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
			END AS WLMODAT,
			CASE 
				WHEN RH.RCPTTY IN('101','102') THEN
					(SELECT SUBSTR(MAX(IF.CRETIM), 1, 2)||':'||SUBSTR(MAX(IF.CRETIM), 3, 2)||':'||SUBSTR(MAX(IF.CRETIM), 5, 8) FROM ASNDI IF WHERE IF.SEBELN  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('110','111') THEN
					(SELECT SUBSTR(MAX(IF.XTIMS), 1, 2)||':'||SUBSTR(MAX(IF.XTIMS), 3, 2)||':'||SUBSTR(MAX(IF.XTIMS), 5, 8) FROM IFWMS103 IF WHERE IF.SEBELN = S.SEBELN ) 
				WHEN RH.RCPTTY IN('121','122','123') THEN
					(SELECT SUBSTR(MAX(IF.CRETIM), 1, 2)||':'||SUBSTR(MAX(IF.CRETIM), 3, 2)||':'||SUBSTR(MAX(IF.CRETIM), 5, 8) FROM TRFIT IF WHERE IF.SHPOKY  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('131','133','134','135','136','137') THEN
					(SELECT SUBSTR(MAX(IF.XTIMS), 1, 2)||':'||SUBSTR(MAX(IF.XTIMS), 3, 2)||':'||SUBSTR(MAX(IF.XTIMS), 5, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
				ELSE 
					(SELECT SUBSTR(MAX(IF.XTIMS), 1, 2)||':'||SUBSTR(MAX(IF.XTIMS), 3, 2)||':'||SUBSTR(MAX(IF.XTIMS), 5, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
			END AS LMOTIM,
			CASE 
				WHEN RH.RCPTTY IN('101','102') THEN
					(SELECT SUBSTR(MAX(IF.CRETIM), 1, 2)||':'||SUBSTR(MAX(IF.CRETIM), 3, 2)||':'||SUBSTR(MAX(IF.CRETIM), 5, 8) FROM ASNDI IF WHERE IF.SEBELN  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('110','111') THEN
					(SELECT SUBSTR(MAX(IF.XTIMS), 1, 2)||':'||SUBSTR(MAX(IF.XTIMS), 3, 2)||':'||SUBSTR(MAX(IF.XTIMS), 5, 8) FROM IFWMS103 IF WHERE IF.SEBELN = S.SEBELN ) 
				WHEN RH.RCPTTY IN('121','122','123') THEN
					(SELECT SUBSTR(MAX(IF.CRETIM), 1, 2)||':'||SUBSTR(MAX(IF.CRETIM), 3, 2)||':'||SUBSTR(MAX(IF.CRETIM), 5, 8) FROM TRFIT IF WHERE IF.SHPOKY  = S.SEBELN ) 
				WHEN RH.RCPTTY IN('131','133','134','135','136','137') THEN
					(SELECT SUBSTR(MAX(IF.XTIMS), 1, 2)||':'||SUBSTR(MAX(IF.XTIMS), 3, 2)||':'||SUBSTR(MAX(IF.XTIMS), 5, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
				ELSE 
					(SELECT SUBSTR(MAX(IF.XTIMS), 1, 2)||':'||SUBSTR(MAX(IF.XTIMS), 3, 2)||':'||SUBSTR(MAX(IF.XTIMS), 5, 8) FROM IFWMS113 IF WHERE IF.SVBELN = S.SVBELN ) 
			END AS WLMOTIM,
			(SELECT DISTINCT C00106 FROM IFWMS113 WHERE DOCUTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT ='100') AND SVBELN = S.SVBELN  AND XSTAT IN ('R', 'D')) AS EDOCKY,
			(SELECT DISTINCT TEXT02 FROM IFWMS113 WHERE DOCUTY IN (SELECT DOCUTY FROM DOCTM WHERE DOCCAT ='100') AND SVBELN = S.SVBELN  AND XSTAT IN ('R', 'D')) AS TEXT02
		FROM
			RECDH RH
			INNER JOIN RECDI S
				ON		S.RECVKY = RH.RECVKY
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = RH.WAREKY
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = RH.RCPTTY
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = RH.DOCCAT
			LEFT OUTER JOIN CMCDV STH
				ON		STH.CMCDKY = 'STATDO'
					AND STH.CMCDVL = RH.STATDO
			LEFT OUTER JOIN CMCDV STI
				ON		STI.CMCDKY = 'STATIT'
					AND STI.CMCDVL = S.STATIT
			LEFT OUTER JOIN BZPTN BZ
				ON		BZ.PTNRKY = RH.DPTNKY
					AND BZ.OWNRKY = RH.OWNRKY
					AND BZ.PTNRTY = '0002'
			LEFT OUTER JOIN BZPTN BR
				ON		BR.PTNRKY = RH.DPTNKY
					AND BR.OWNRKY = RH.OWNRKY
					AND BR.PTNRTY = '0001'
			LEFT OUTER JOIN BZPTN BP
				ON		BP.PTNRKY = RH.DNAME1
					AND BP.OWNRKY = RH.OWNRKY
					AND BP.PTNRTY IN ('0003', '0004', '0006')
			LEFT OUTER JOIN USRMA CU
				ON		CU.USERID = S.CREUSR
			LEFT OUTER JOIN USRMA LU
				ON		LU.USERID = S.LMOUSR
			LEFT OUTER JOIN MEASI MI
				ON		MI.OWNRKY = RH.OWNRKY
					AND MI.WAREKY = RH.WAREKY
					AND MI.MEASKY = S.SKUKEY
					AND MI.UOMKEY = 'BOX' 
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = RH.WAREKY
					AND MIP.OWNRKY = RH.OWNRKY
					AND MIP.MEASKY = S.SKUKEY
					AND MIP.UOMKEY = 'PL'	  
			LEFT OUTER JOIN SHPDR SR
				ON		S.SEBELN = SR.SHPOKY
					AND S.SEBELP = SR.SHPOIT		   
			LEFT OUTER JOIN SKUMA SM
				ON		RH.OWNRKY = SM.OWNRKY
					AND S.SKUKEY = SM.SKUKEY
		WHERE
				RH.OWNRKY = #{OWNRKY}	
			<if test="RANGE_SQL != null and RANGE_SQL != ''">  
				${RANGE_SQL}  
			</if>
		ORDER BY RH.RECVKY, S.RECVIT
		
	</select>
	
	<select id="GR70_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			SW.OWNRKY AS OWNRKY, 
			SW.WAREKY AS WAREKY, 
			SW.SKUKEY AS SKUKEY, 
			SM.DESC01 AS DESC01, 
			SM.QTDUOM AS BOXQTY,	 <!-- 박스입수 -->
			SM.QTYSTD AS PLTQTY,	 <!-- 팔렛입수 -->
			NVL(ORDREQ.REQPLT,0) + NVL(TRF.TRFPLT,0) AS ORDREQPLT,	 <!-- 발주팔렛수량 -->
			NVL(ORDREQ.REQBOX,0) + NVL(TRF.TRFBOX,0) AS ORDREQBOX,	 <!-- 발주박스수량 -->
			NVL(ORDREQ.REQQTY,0) + NVL(TRF.TRFQTY,0) AS ORDREQQTY,	 <!-- 발주수량 -->
			NVL(ASN.ASNPLT,0) AS ASNPLT,	 <!-- ANS팔렛수량 -->
			NVL(ASN.ASNBOX,0) AS ASNBOX,	 <!-- ASN박스수량 -->
			NVL(ASN.ASNQTY,0) AS ASNQTY,	 <!-- ASN수량 -->
			NVL(TRFREQ.TRFREQPLT,0) AS TRFREQPLT,	 <!-- 창간이고요청 팔렛수량 -->
			NVL(TRFREQ.TRFREQBOX,0) AS TRFREQBOX,	 <!-- 창간이고요청 박스수량 -->
			NVL(TRFREQ.TRFREQQTY,0) AS TRFREQQTY,	 <!-- 창간이고요청 수량 -->
			NVL(TRF.TRFPLT,0) AS TRFPLT,	 <!-- 창간이고입고예정 팔렛수량 -->
			NVL(TRF.TRFBOX,0) AS TRFBOX,	 <!-- 창간이고입고예정 박스수량 -->
			NVL(TRF.TRFQTY,0) AS TRFQTY,	  <!-- 창간이고입고예정 수량 -->
			NVL(PRT.PRTDPLT,0) AS PRTDPLT,	 <!-- 생산입고예정 팔렛수량 -->
			NVL(PRT.PRTDBOX,0) AS PRTDBOX,	 <!-- 생산입고예정 박스수량 -->
			NVL(PRT.PRTDQTY,0) AS PRTDQTY,	  <!-- 생산입고예정 수량 -->
			#{DOCDAT} AS DOCDAT,
			0 AS ORDREQPBOX,
            0 AS ASNPBOX,
            0 AS TRFREQPBOX,
            0 AS TRFPBOX
		FROM
			SKUMA SM
			INNER JOIN SKUWC SW
				ON		SM.OWNRKY = SW.OWNRKY
					AND SM.SKUKEY = SW.SKUKEY
			LEFT OUTER JOIN
			(
				SELECT
					  S.OWNRKY, WAREKY, S.SKUKEY, S.DESC01
					, NVL(TRUNC(SUM(ORDQTY - INNQTY) / DECODE(MAX(S.QTYSTD), 0, NULL, MAX(S.QTYSTD)),2 ) ,0) AS REQPLT
					, NVL(SUM(TRUNC((ORDQTY - INNQTY / DECODE(S.QTDUOM, 0, NULL, S.QTDUOM )),1 )) , 0) AS REQBOX
					, SUM(ORDQTY - INNQTY) AS REQQTY 
				FROM IFWMS103 INNER JOIN SKUMA S ON IFWMS103.OWNRKY = S.OWNRKY AND IFWMS103.SKUKEY = S.SKUKEY
				WHERE
						XSTAT = 'R'
					AND POCLOS = ' '
					AND ORDQTY - INNQTY > 0
					AND DOCUTY NOT IN ('121','122')
					AND IFWMS103.DLVDAT = #{DOCDAT}
				GROUP BY S.OWNRKY, WAREKY, S.SKUKEY, S.DESC01
			) ORDREQ
				ON		SW.OWNRKY = ORDREQ.OWNRKY
					AND SW.WAREKY = ORDREQ.WAREKY
					AND SW.SKUKEY = ORDREQ.SKUKEY 
		
			LEFT OUTER JOIN
			(
				SELECT
					  H.OWNRKY OWNRKY 
					, H.WAREKY WAREKY
					, I.SKUKEY SKUKEY
					, I.DESC01 DESC01
					, NVL(TRUNC(SUM(I.QTYASN) / DECODE(MAX(S.QTYSTD), 0, NULL, MAX(S.QTYSTD)),2 ) ,0) AS ASNPLT
					, NVL(SUM(TRUNC((I.QTYASN / DECODE(S.QTDUOM, 0, NULL, S.QTDUOM )),1 )) , 0) AS ASNBOX
					, SUM(I.QTYASN) AS ASNQTY 
				FROM ASNDH H, ASNDI I, SKUMA S
				WHERE
						H.ASNDKY = I.ASNDKY
					AND H.OWNRKY = S.OWNRKY
					AND I.SKUKEY = S.SKUKEY
					AND I.STATIT = 'NEW'
					AND H.STATDO NOT IN ('RCN') 
					AND H.PRCPTD = #{DOCDAT}
				
				GROUP BY H.OWNRKY, H.WAREKY, I.SKUKEY, I.DESC01
			) ASN
				ON		SW.OWNRKY = ASN.OWNRKY
					AND SW.WAREKY = ASN.WAREKY
					AND SW.SKUKEY = ASN.SKUKEY
		
			LEFT OUTER JOIN 
			(
				SELECT
					  I.OWNRKY, I.WAREKY, I.SKUKEY, S.DESC01
					, NVL(TRUNC(SUM(I.QTYREQ-I.WMSMGT-I.QTSHPD) / DECODE(MAX(S.QTYSTD), 0, NULL, MAX(S.QTYSTD)),2 ) ,0) AS TRFREQPLT
					, NVL(SUM(TRUNC((I.QTYREQ-I.WMSMGT-I.QTSHPD / DECODE(S.QTDUOM, 0, NULL, S.QTDUOM )),1 )) , 0) AS TRFREQBOX
					, SUM(I.QTYREQ-I.WMSMGT-I.QTSHPD) AS TRFREQQTY 
				FROM IFWMS113 I INNER JOIN SKUMA S ON S.OWNRKY = I.OWNRKY AND S.SKUKEY = I.SKUKEY 
				WHERE
						I.DOCUTY IN ('266')
					AND I.XSTAT = 'R'
					AND I.QTYREQ - I.WMSMGT - I.QTSHPD > 0  
					AND I.STKNUM = ' '
					AND I.CHKSEQ != ' '
				GROUP BY I.OWNRKY , I.WAREKY ,  I.SKUKEY , S.DESC01
			) TRFREQ ON SW.OWNRKY = TRFREQ.OWNRKY AND SW.WAREKY = TRFREQ.WAREKY AND SW.SKUKEY = TRFREQ.SKUKEY
		
			LEFT OUTER JOIN 
			(
				SELECT
					  I.OWNRKY OWNRKY 
					, I.WARETG WAREKY
					, I.SKUKEY SKUKEY
					, I.DESC01 DESC01
					, NVL(TRUNC(SUM(I.QTYTRF) / DECODE(MAX(M.QTYSTD), 0, NULL, MAX(M.QTYSTD)),2 ) ,0) AS TRFPLT
					, NVL(SUM(TRUNC((I.QTYTRF / DECODE(M.QTDUOM, 0, NULL, M.QTDUOM )),1 )) , 0) AS TRFBOX
					, SUM(I.QTYTRF) AS TRFQTY 
				FROM   TRFIT I, SKUMA M 
				WHERE
						M.OWNRKY = I.OWNRKY 
					AND M.SKUKEY = I.SKUKEY 
					AND I.STATIT = 'NEW'
				GROUP BY  I.OWNRKY, I.WARETG, I.SKUKEY, I.DESC01
			) TRF
				ON		SW.OWNRKY = TRF.OWNRKY
					AND SW.WAREKY = TRF.WAREKY
					AND SW.SKUKEY = TRF.SKUKEY
			LEFT OUTER JOIN
			(
				SELECT
					  S.OWNRKY, S.SKUKEY, WARETG
					, TRUNC(SUM(QTYRCV) / QTYSTD,2) AS PRTDPLT
					, TRUNC(SUM(QTYRCV) / QTDUOM,1) AS PRTDBOX
					, SUM(QTYRCV) AS PRTDQTY
				FROM
					IFWMS403 JOIN SKUMA S
						ON		IFWMS403.OWNRKY = S.OWNRKY
							AND IFWMS403.SKUKEY = S.SKUKEY 
							AND IFWMS403.XSTAT = 'R'
							AND IFWMS403.TSTAT = 'N'
				WHERE
					IFWMS403.PRTDAT = #{DOCDAT}
				GROUP BY S.OWNRKY, S.SKUKEY, WARETG, QTDUOM, QTYSTD
			) PRT
				ON		SW.OWNRKY = PRT.OWNRKY
					AND SW.WAREKY = PRT.WARETG
					AND SW.SKUKEY = PRT.SKUKEY
		WHERE 1 = 1
			AND
				(
					ORDREQ.SKUKEY IS NOT NULL
					OR ASN.SKUKEY IS NOT NULL
					OR TRFREQ.SKUKEY IS NOT NULL
					OR TRF.SKUKEY IS NOT NULL
				)
			AND SW.OWNRKY = #{OWNRKY}
			AND SW.WAREKY = #{WAREKY}
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		ORDER BY 1,2,3
	</select>
	
	<select id="GR40_133_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			IFWMS113.SVBELN AS KEY,
			IFWMS113.WAREKY AS WAREKY,
			WH.NAME01 AS WAREKYNM,
			IFWMS113.DOCUTY  AS RCPTTY,
			DT.SHORTX AS RCPTTYNM,
			' '   AS SAPSTS,
		<if test="SAVEKEY == null or SAVEKEY == ''">
			' ' AS RECVKY,
			'NEW' AS STATDO,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT,
		</if>
		<if test="SAVEKEY != null and SAVEKEY != ''">
			RI.RECVKY AS RECVKY,
			(SELECT MAX(RH.STATDO) FROM RECDH RH WHERE RECVKY = RI.RECVKY ) AS STATDO,
			(SELECT MAX(RH.DOCDAT) FROM RECDH RH WHERE RECVKY = RI.RECVKY ) AS DOCDAT
		</if>
			'100' AS DOCCAT,
			DC.SHORTX AS DOCCATNM,
			IFWMS113.PTNRTO AS DPTNKY,
			VD.NAME01 AS DPTNKYNM,
			' ' AS DRELIN,
			'00000000' AS ARCPTD,
			IFWMS113.OWNRKY AS OWNRKY,
			' ' AS INDRCN,
			' ' AS CRECVD,
			' ' AS RSNCOD,
			' ' AS PUTSTS,
			' ' AS LGORT,
			' ' AS LGORTNM,
			' ' AS USRID1,
			IFWMS113.CTNAME AS UNAME1,
			' ' AS DEPTID1,
			IFWMS113.WARESR AS DNAME1,
			' ' AS USRID2,
			IFWMS113.CTTEL1 AS UNAME2,
			' ' AS DEPTID2,
			' ' AS DNAME2,
			' ' AS USRID3,
			IFWMS113.SALENM AS UNAME3,
			' ' AS DEPTID3,
			' ' AS DNAME3,
			' ' AS USRID4,
			IFWMS113.SALTEL AS UNAME4,
			' ' AS DEPTID4,
			DECODE(MAX(C00105),'V','YES','NO') AS PRINTCHK,
			IFWMS113.CUADDR AS DNAME4,
			IFWMS113.SVBELN AS SVBELN,
			BZ.NAME01 AS CUNAME,
			IFWMS113.C00106   CARNUM,
			IFWMS113.C00107   DPHONE,
			IFWMS113.C00108	ERDAT,
			IFWMS113.C00109  RECALLDAT,
			(SELECT SUM(TRUNC((QTYREQ-QTSHPD) / DECODE(SK.QTDUOM,0, NULL,SK.QTDUOM),1)) FROM IFWMS113 ITEM, SKUMA SK WHERE ITEM.OWNRKY = SK.OWNRKY AND ITEM.SKUKEY = SK.SKUKEY AND SVBELN = IFWMS113.SVBELN AND XSTAT = 'R')  BOXQTY,
			SUBSTR(MAX(IFWMS113.XDATS), 1, 4)||'-'||SUBSTR(MAX(IFWMS113.XDATS), 5, 2)||'-'||SUBSTR(MAX(IFWMS113.XDATS), 7, 8) WMSCREDAT ,
			SUBSTR(MAX(IFWMS113.XTIMS), 1, 2)||':'||SUBSTR(MAX(IFWMS113.XTIMS), 3, 2)||':'||SUBSTR(MAX(IFWMS113.XTIMS), 5, 2) WMSCRETIM,
			SUBSTR(MAX(IFWMS113.OTRQDT), 1, 4)||'-'||SUBSTR(MAX(IFWMS113.OTRQDT), 5, 2)||'-'||SUBSTR(MAX(IFWMS113.OTRQDT), 7, 8) ORDDAT,
			' ' AS PTNROD,
			' ' AS PTNRODNM,
			' ' AS DOCTXT,
			' ' AS CUADDR,
			' ' AS DOCTXT,
			' ' AS CREDAT,
			' ' AS CRETIM,
			' ' AS CREUSR,
			' ' AS CUSRNM,
			' ' AS CUADDR,
			' ' AS REGNKY,
			' ' AS REGNNM,
			' ' AS TEXT02
		FROM
			IFWMS113
			LEFT OUTER JOIN RECDI RI
				ON		RI.SVBELN = IFWMS113.SVBELN
					AND RI.SPOSNR = IFWMS113.SPOSNR
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IFWMS113.OWNRKY
					AND SM.SKUKEY = IFWMS113.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = IFWMS113.WAREKY
					AND SW.OWNRKY = IFWMS113.OWNRKY
					AND SW.SKUKEY = IFWMS113.SKUKEY
			LEFT OUTER JOIN BZPTN BZ
				ON		BZ.PTNRKY = IFWMS113.WARESR
					AND BZ.OWNRKY = IFWMS113.OWNRKY
					AND ROWNUM = 1
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = IFWMS113.WAREKY
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '100'
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = IFWMS113.DOCUTY 
			LEFT OUTER JOIN BZPTN VD
				ON		VD.PTNRKY = IFWMS113.PTNRTO
					AND VD.OWNRKY = IFWMS113.OWNRKY
					AND VD.PTNRTY = '0001'
		WHERE
				IFWMS113.OWNRKY = #{OWNRKY}
			AND IFWMS113.WAREKY = #{WAREKY}
			AND IFWMS113.DOCUTY = '133'
		<if test="SAVEKEY == null or SAVEKEY == ''">
			AND IFWMS113.QTYREQ-IFWMS113.QTSHPD > 0
			AND IFWMS113.XSTAT = 'R'
		</if>
		
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			AND RI.RECVKY IN (${SAVEKEY})
		</if>
		
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		
		<if test="PRINTCHK != 'ALL' ">
			AND IFWMS113.C00105 = DECODE(#{PRINTCHK},'N',' ','V')
		</if>
		
		
		GROUP BY IFWMS113.WAREKY, IFWMS113.PTNRTO, IFWMS113.OWNRKY, IFWMS113.SVBELN, 
				WH.NAME01, DC.SHORTX, DT.SHORTX, VD.NAME01,IFWMS113.CTNAME, 
				IFWMS113.WARESR, IFWMS113.CTTEL1, IFWMS113.SALENM, 
				IFWMS113.SALTEL, IFWMS113.CUADDR, BZ.NAME01, IFWMS113.DOCUTY, IFWMS113.C00106, IFWMS113.C00107, IFWMS113.C00108,IFWMS113.C00109
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			, RI.RECVKY
		</if>
	</select>
	
	<select id="GR40_133_ITEM_LIST" parameterType="hashmap"  resultType="DataMap">
		SELECT
			IFWMS113.SVBELN AS KEY,
			'NEW' AS STATIT,
			' ' AS SAPSTS,
			IFWMS113.SKUKEY AS SKUKEY,
			' ' AS LOTNUM,
			' ' AS AREAKY,
			' ' AS SECTID,
			' ' AS PACKID,
			
		<if test="SAVEKEY == null or SAVEKEY == ''">
			' ' AS LOTA11,
			'19900101' AS LOTA13,
			' ' AS LOTA05,
			DECODE(IFWMS113.DOCUTY , '133', '20', '00') AS LOTA06,
			IFWMS113.C00103 AS RSNCOD,
			' ' AS TRNUID,
			'1R01101' AS LOCAKY,
			' ' AS RECVKY,
			' ' AS RECVIT,
			'NEW' AS STATDO,
		</if>
		<if test="SAVEKEY != null and SAVEKEY != ''">
			RI.LOTA11 AS LOTA11,
			RI.LOTA13 AS LOTA13,
			RI.LOTA05 AS LOTA05,
			RI.LOTA06 AS LOTA06,
			RI.RSNCOD AS RSNCOD,
			RI.TRNUID AS TRNUID,
			RI.LOCAKY AS LOCAKY,
			RI.RECVKY AS RECVKY,
			RI.RECVIT AS RECVIT,
			(SELECT MAX(RH.STATDO) FROM RECDH RH WHERE RECVKY = RI.RECVKY ) AS STATDO,
		</if>
			
			(IFWMS113.QTYREQ-IFWMS113.QTSHPD) AS ORDQTY,
			(IFWMS113.QTYREQ-IFWMS113.QTSHPD) AS QTYRCV,
			0 AS QTYDIF,
			IFWMS113.QTYREQ AS QTYUOM,
			' ' AS TRUNTY,
			IFWMS113.SKUKEY AS MEASKY,
			IFWMS113.DUOMKY AS UOMKEY,	   
			
			NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0) AS ASNQTY,
			NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0) AS QTYASN, 
			NVL(  TRUNC((IFWMS113.QTYREQ-IFWMS113.QTSHPD) / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY,
			NVL(MI.QTPUOM,0) AS BXIQTY,
			NVL(MOD(IFWMS113.QTYREQ-IFWMS113.QTSHPD, NVL(MI.QTPUOM,0)),0) AS REMQTY, 
			
			NVL(  TRUNC((IFWMS113.QTYREQ-IFWMS113.QTSHPD) / DECODE(MIP.QTPUOM, 0,NULL,MIP.QTPUOM) ) ,0) AS PLTQTY,
			NVL( MIP.QTPUOM, 0)  AS PLTQTYCAL,
			
			NVL(ITFMS.QTPUOM,9999999)   AS QTPUOM,
			NVL(SM.DUOMKY,' ') AS DUOMKY,
			NVL(MI.QTPUOM,9999999) AS QTDUOM,
			' ' AS INDRCN,
			IFWMS113.C00103 AS CRECVD,
			
			' ' AS LOTA01,
			' ' AS LOTA01NM,
			' ' AS LOTA02,
			IFWMS113.PTNRTO AS LOTA03,
			' ' AS LOTA04,
			
			' ' AS LOTA07,
			' ' AS LOTA08,
			' ' AS LOTA09,
			' ' AS LOTA10,
			
			TO_CHAR(SYSDATE,'YYYYMMDD') AS LOTA12,
			' ' AS LOTA14,
			' ' AS LOTA15,
			0 AS LOTA16,
			0 AS LOTA17,
			0 AS LOTA18,
			0 AS LOTA19,
			0 AS LOTA20,
			' ' AS AWMSNO,
			IFWMS113.SVBELN AS REFDKY,
			IFWMS113.SPOSNR AS REFDIT,
			'100' AS REFCAT,
			TO_CHAR(SYSDATE,'YYYYMMDD') AS REFDAT,
			NVL(SM.DESC01,' ') AS DESC01,
			NVL(SM.DESC02,' ') AS DESC02,
			SM.ASKU01 AS ASKU01,
			SM.ASKU02 AS ASKU02,
			SM.ASKU03 AS ASKU03,
			SM.ASKU04 AS ASKU04,
			SM.ASKU05 AS ASKU05,
			SM.EANCOD AS EANCOD,
			SM.GTINCD AS GTINCD,
			SM.SKUG01 AS SKUG01,
			SM.SKUG02 AS SKUG02,
			SM.SKUG03 AS SKUG03,
			SM.SKUG04 AS SKUG04,
			SM.SKUG05 AS SKUG05,
			NVL(SM.GRSWGT,0) * NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(IFWMS113.QTYREQ-IFWMS113.QTSHPD,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT,	 
			SM.WGTUNT AS WGTUNT,
			SM.LENGTH AS LENGTH,
			SM.WIDTHW AS WIDTHW,
			SM.HEIGHT AS HEIGHT,
			SM.CUBICM AS CUBICM,
			SM.CAPACT AS CAPACT,
			0 AS QTYORG,
			' ' AS SMANDT,
			' ' AS SEBELN,
			' ' AS SEBELP,
			' ' AS SZMBLNO,
			' ' AS SZMIPNO,
			' ' AS STRAID,
			IFWMS113.SVBELN AS SVBELN,
			IFWMS113.SPOSNR AS SPOSNR,
			' ' AS STKNUM,
			' ' AS STPNUM,
			' ' AS SWERKS,
			' ' AS SLGORT,
			' ' AS SDATBG,
			' ' AS STDLNR,
			' ' AS SSORNU,
			' ' AS SSORIT,
			' ' AS SMBLNR,
			' ' AS SZEILE,
			' ' AS SMJAHR,
			' ' AS SXBLNR,
			' ' AS SBKTXT,
			' ' AS RCPRSN,
			NVL(SM.OUTDMT,0) AS OUTDMT
		FROM
			IFWMS113
			LEFT OUTER JOIN RECDI RI
				ON		RI.SVBELN = IFWMS113.SVBELN
					AND RI.SPOSNR = IFWMS113.SPOSNR
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = IFWMS113.OWNRKY
					AND SM.SKUKEY = IFWMS113.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = IFWMS113.WAREKY
					AND SW.OWNRKY = IFWMS113.OWNRKY
					AND SW.SKUKEY = IFWMS113.SKUKEY
			LEFT OUTER JOIN MEASI ITFMS
				ON		ITFMS.OWNRKY = IFWMS113.OWNRKY
					AND ITFMS.WAREKY = IFWMS113.WAREKY
					AND ITFMS.MEASKY = IFWMS113.SKUKEY
					AND ITFMS.UOMKEY = IFWMS113.DUOMKY
			LEFT OUTER JOIN MEASI MI
				ON		MI.WAREKY = IFWMS113.WAREKY
					AND MI.OWNRKY = IFWMS113.OWNRKY
					AND MI.MEASKY = IFWMS113.SKUKEY
					AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = IFWMS113.WAREKY
					AND MIP.OWNRKY = IFWMS113.OWNRKY
					AND MIP.MEASKY = IFWMS113.SKUKEY
					AND MIP.UOMKEY = 'PL'			  
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = IFWMS113.PTNRTO
					AND L01NM.OWNRKY = IFWMS113.OWNRKY
					AND L01NM.PTNRTY = '0001'
		WHERE 
				IFWMS113.WAREKY = #{WAREKY}
			AND IFWMS113.SVBELN = #{SVBELN}
		<if test="SAVEKEY == null or SAVEKEY == ''">
			AND XSTAT = 'R'
			AND DOCUTY = '133'
			AND IFWMS113.QTYREQ-IFWMS113.QTSHPD > 0
		</if>
		
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			AND RI.RECVKY = #{RECVKY}
		</if>
			
		
		ORDER BY  IFWMS113.SKUKEY
	</select>
	
	<update id="CALLBACK_UPDATE"  parameterType="hashmap">
		UPDATE IFWMS113
		SET
			C00106 = #{CARNUM},
			C00107 = #{DPHONE},
			C00108 = #{ERDAT},
			TEXT01 = #{DOCTXT}
		WHERE
				XSTAT IN ('R','D')
			AND SVBELN = #{SVBELN}
			AND C00105 = 'V'
	</update>
	
	<select id="RECDH_SAVEAFTER_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			  RH.RECVKY
			, RH.WAREKY
			, RH.RCPTTY
			, RH.STATDO
			, RH.SAPSTS
			, RH.DOCDAT
			, RH.DOCCAT
			, RH.DPTNKY
			, RH.DRELIN
			, RH.ARCPTD
			, RH.OWNRKY
			, RH.INDRCN
			, RH.CRECVD
			, RH.RSNCOD
			, RH.PUTSTS
			, RH.USRID1
			, RH.UNAME1
			, RH.DEPTID1
			, RH.DNAME1
			, RH.USRID2
			, RH.UNAME2
			, RH.DEPTID2
			, RH.DNAME2
			, RH.USRID3
			, RH.UNAME3
			, RH.DEPTID3
			, RH.DNAME3
			, RH.USRID4
			, RH.UNAME4
			, RH.DEPTID4
			, RH.DNAME4
			, RH.DOCTXT
			, WH.NAME01 AS WAREKYNM
			, DT.SHORTX AS RCPTTYNM
			, DC.SHORTX AS DOCCATNM
			, VD.NAME01 AS DPTNKYNM
			, RH.CREDAT
			, RH.CRETIM
			, RH.CREUSR
			, RH.LMODAT
			, RH.LMOTIM
			, RH.LMOUSR
			, (SELECT MAX(RI.SEBELN) FROM RECDI RI WHERE RI.RECVKY = RH.RECVKY) AS SEBELN
            , (SELECT MAX(RI.REFDKY) FROM RECDI RI WHERE RI.RECVKY = RH.RECVKY) AS ASNDKY
            , (SELECT MAX(RI.SVBELN) FROM RECDI RI WHERE RI.RECVKY = RH.RECVKY) AS SVBELN
		FROM
			RECDH RH
			LEFT OUTER JOIN WAHMA WH
				ON		WH.WAREKY = RH.WAREKY
			LEFT OUTER JOIN DOCCM DC
				ON		DC.DOCCAT = '100'
			LEFT OUTER JOIN DOCTM DT
				ON		DT.DOCUTY = RH.RCPTTY
			LEFT OUTER JOIN BZPTN VD
				ON		VD.PTNRKY = RH.DPTNKY
					AND VD.OWNRKY = RH.OWNRKY
					AND VD.PTNRTY = '0002'
		WHERE
				RH.OWNRKY = #{OWNRKY}
			AND RH.WAREKY = #{WAREKY}
			AND RH.RECVKY IN (${SAVEKEY})
	</select>
	
	<select id="RECDI_SAVEAFTER_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			  RI.RECVKY
			, RI.RECVIT
			, RI.STATIT
			, RI.SAPSTS
			, RI.SKUKEY
			, RI.LOTNUM
			, RI.AREAKY
			, RI.LOCAKY
			, RI.SECTID
			, RI.TRNUID
			, RI.PACKID
			, RI.QTYDIF + RI.QTYRCV AS ORDQTY
			, RI.QTYDIF + RI.QTYRCV AS ASNQTY
			, RI.QTYDIF AS QTYTRF
			, RI.QTYDIF
			, RI.QTYRCV
			, RI.QTYUOM
			, RI.TRUNTY
			, RI.MEASKY
			, RI.UOMKEY
			, ' ' AS INDRCN
			, ' ' AS CRECVD
			, ' ' AS RSNCOD
			, RI.LOTA01
			, RI.LOTA02
			, RI.LOTA03
			, RI.LOTA04
			, RI.LOTA05
			, RI.LOTA06
			, RI.LOTA07
			, RI.LOTA08
			, RI.LOTA09
			, RI.LOTA10
			, RI.LOTA11
			, RI.LOTA12
			, RI.LOTA13
			, RI.LOTA14
			, RI.LOTA15
			, RI.LOTA16
			, RI.LOTA17
			, RI.LOTA18
			, RI.LOTA19
			, RI.LOTA20
			, RI.AWMSNO
			, RI.ASKU01
			, RI.ASKU02
			, RI.ASKU03
			, RI.ASKU04
			, RI.ASKU05
			, RI.EANCOD
			, RI.GTINCD
			, RI.SKUG01
			, RI.SKUG02
			, RI.SKUG03
			, RI.SKUG04
			, RI.SKUG05
			, RI.WGTUNT
			, RI.LENGTH
			, RI.WIDTHW
			, RI.HEIGHT
			, RI.CUBICM
			, RI.CAPACT
			, RI.QTYORG
			, RI.SMANDT
			, RI.SEBELN
			, RI.SEBELP
			, RI.SZMBLNO
			, RI.SZMIPNO
			, RI.STRAID
			, RI.SVBELN
			, RI.SPOSNR
			, RI.STKNUM
			, RI.SWERKS
			, RI.SLGORT
			, RI.SDATBG
			, RI.STDLNR
			, RI.SSORNU
			, RI.SSORIT
			, RI.SMBLNR
			, RI.SZEILE
			, RI.SMJAHR
			, RI.SXBLNR
			, RI.SBKTXT
			, RI.RCPRSN
			, RI.REFDAT 
			, ' ' LRCPTD
			, CM.CDESC1 AS STATITNM
			, NVL(  TRUNC(QTYRCV / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0) AS BOXQTY 
			, DECODE(SM.DLGORT, 'Y', NVL(CEIL(QTYRCV / DECODE(MI.QTPUOM,0, NULL,MI.QTPUOM)) ,0), 0) AS PBOXQTY
			, NVL(MI.QTPUOM , 0) AS BXIQTY
			, NVL(MOD(QTYDIF + QTYRCV , MI.QTPUOM) , 0) AS REMQTY
			, NVL(  TRUNC(QTYRCV / DECODE(MIP.QTPUOM, 0, NULL, MIP.QTPUOM) ) ,0) AS PLTQTY
			, NVL(MIP.QTPUOM , 0) AS PLTQTYCAL
			, NVL(RI.QTPUOM , 9999999) AS QTPUOM
			, NVL(SM.DUOMKY , ' ') AS DUOMKY
			, NVL(RI.QTDUOM , 9999999) AS QTDUOM
			, NVL(L01NM.NAME01 , ' ') AS LOTA01NM
			, NVL(SM.DESC01 , ' ') AS DESC01
			, NVL(SM.DESC02 , ' ') AS DESC02
			, NVL(SM.GRSWGT , 0) * NVL(QTYRCV , 0)  AS GRSWGT
			, NVL(SM.GRSWGT , 0)   AS GRSWGTCNT
			, NVL(SM.NETWGT , 0) * NVL(QTYRCV , 0)  AS NETWGT
			, NVL(SM.NETWGT , 0)   AS NETWGTCNT
			, SM.OUTDMT AS OUTDMT
			, NVL(TO_DATE(TRIM(RI.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')), 0) AS DTREMDAT
			, NVL(TRUNC((TO_NUMBER(TO_DATE(TRIM(RI.LOTA13),'YYYYMMDD') - TO_DATE(TO_CHAR(SYSDATE, 'YYYYMMDD')))/SM.OUTDMT) * 100), 0) AS DTREMRAT
		FROM
			RECDH RH
			INNER JOIN RECDI RI
				ON		RI.RECVKY = RH.RECVKY
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = RH.OWNRKY
					AND SM.SKUKEY = RI.SKUKEY
			INNER JOIN SKUWC SW
				ON		SW.WAREKY = RH.WAREKY
					AND SW.OWNRKY = RH.OWNRKY
					AND SW.SKUKEY = RI.SKUKEY
			LEFT OUTER JOIN MEASI MI
				ON		MI.WAREKY = RH.WAREKY
					AND MI.OWNRKY = RH.OWNRKY
					AND MI.MEASKY = RI.MEASKY
					AND MI.UOMKEY = 'BOX'
			LEFT OUTER JOIN MEASI MIP
				ON		MIP.WAREKY = RH.WAREKY
					AND MIP.OWNRKY = RH.OWNRKY
					AND MIP.MEASKY = RI.MEASKY
					AND MIP.UOMKEY = 'PL'			  
			LEFT OUTER JOIN BZPTN L01NM
				ON		L01NM.PTNRKY = RH.DPTNKY
					AND L01NM.OWNRKY = RH.OWNRKY
					AND L01NM.PTNRTY = '0002'
			LEFT OUTER JOIN CMCDV CM
				ON		CM.CMCDKY = 'STATIT' 
					AND CM.CMCDVL = RI.STATIT
		WHERE
				RH.OWNRKY = #{OWNRKY}
			AND RH.WAREKY = #{WAREKY}
			AND RH.RECVKY = #{RECVKY}
	</select>
	
	
	<parameterMap id="returnadjdh" type="hashmap">
		<parameter property="RECVKY" mode="IN"  jdbcType="VARCHAR" javaType="string"/>
		<parameter property="SES_USER_ID" mode="IN"  jdbcType="VARCHAR" javaType="string"/>
	</parameterMap>
	
	<select id="P_CREATE_RETURNADJDH_DATA_UPDATE" statementType="CALLABLE" parameterMap="returnadjdh">
		{ call P_CREATE_RETURNADJDH_DATA( ? , ? ) }
	</select>
	
	<select id="GR50_CREATE_MAP" parameterType="hashmap" resultType="DataMap">
		SELECT
			  (SELECT NAME01 FROM WAHMA WHERE WAREKY = '2256') AS WAREKYNM
			, (SELECT SHORTX FROM DOCCM WHERE DOCCAT = '100') AS DOCCATNM
			, (SELECT SHORTX FROM DOCTM WHERE DOCUTY = '150') AS RCPTTYNM
			, #{WAREKY} AS WAREKY
			, #{RCPTTY} AS RCPTTY
			, 'NEW' AS STATDO
			, TO_CHAR(SYSDATE,'YYYYMMDD') AS DOCDAT
			, '100' AS DOCCAT
			, '001' AS RSNCOD
			, #{OWNRKY} AS OWNRKY
		FROM DUAL		
	</select>
	
	<select id="P_CREATE_PHYSICAL_DATA_UPDATE" statementType="CALLABLE"  parameterType="hashmap">
		{ call P_CREATE_PHYSICAL_DATA(#{RECVKY}, #{SES_USER_ID}) }
 	</select>
 	
 	<select id="PT02_LIST" parameterType="hashmap" resultType="DataMap">
 		SELECT 
			TH.TASKKY AS TASKKY,
			TH.WAREKY AS WAREKY,
			TH.TASOTY AS TASOTY,
			TH.DOCDAT AS DOCDAT,
			TH.DOCCAT AS DOCCAT,
			(SELECT SHORTX FROM DOCCM WHERE DOCCAT = TH.DOCCAT) AS DOCCATNM,
			TH.DRELIN AS DRELIN,
			TH.STATDO AS STATDO,
			(SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TH.STATDO) AS STATDONM,
			(SELECT SHORTX FROM DOCTM WHERE DOCUTY = TH.TASOTY) AS ADJDSC,
			TH.QTTAOR AS QTTAOR,
			TH.QTCOMP AS QTCOMP,
			TH.TSPKEY AS TSPKEY,
			TH.DOORKY AS DOORKY,
			DECODE(TH.WARETG, ' ', TH.WAREKY, TH.WARETG) AS WARETG,
			TH.PTNRKY AS PTNRKY,
			TH.CREDAT AS CREDAT,
			TH.CRETIM AS CRETIM,
			TH.CREUSR AS CREUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TH.CREUSR) AS CUSRNM,
			TH.LMODAT AS LMODAT,
			TH.LMOTIM AS LMOTIM,
			TH.LMOUSR AS LMOUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TH.LMOUSR) AS LUSRNM,
			TH.INDBZL AS INDBZL,
			TH.INDARC AS INDARC,
			TH.UPDCHK AS UPDCHK,
			TH.KEEPTS AS KEEPTS,
			MAX(S.RECVKY) AS RECVKY,
			MAX(S.SHPOKY) AS SHPOKY,
			MAX(SHPDH.SHPMTY) AS SHPMTY,
			MAX(DOCTM.SHORTX) AS SHPMTYNM,
			MAX(SHPDH.STATDO) AS SHSTATDO,
			MAX(CMCDV.CDESC1) AS SHSTATDONM,
			MAX(SHPDH.DPTNKY) AS DPTNKY,
			MAX(BZPTN.NAME01) AS DPTNKYNM,
			MAX(S.SEBELN) AS SEBELN,
			MAX(S.SZMBLNO) AS SZMBLNO,
			MAX(S.SZMIPNO) AS SZMIPNO,
			MAX(S.STRAID) AS STRAID,
			MAX(S.SVBELN) AS SVBELN,
			MAX(S.STKNUM) AS STKNUM,
			MAX(S.STDLNR) AS STDLNR,
			MAX(S.SSORNU) AS SSORNU,
			MAX(S.SMBLNR) AS SMBLNR,
			MAX(S.SXBLNR) AS SXBLNR,
			NVL(SUM(DECODE(S.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
			MAX(S.AREAKY) AS AREAKY,
			MAX(TH.DOCTXT)   AS DOCTXT
		FROM
			TASDH TH
			INNER JOIN TASDI S
				ON		TH.TASKKY = S.TASKKY
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = S.OWNRKY
					AND SM.SKUKEY = S.SKUKEY
			LEFT OUTER JOIN (
				SELECT
					DISTINCT SHPOKY, SHPOIT, CARDAT, CARNUM, SHIPSQ, RECAYN, TASKKY
				FROM SHPDR WHERE RECAYN = 'N'
			)  SR
				ON		SR.SHPOKY = S.SHPOKY 
					AND SR.SHPOIT = S.SHPOIT              
			LEFT OUTER  JOIN SHPDI
				ON		SHPDI.SHPOKY = S.SHPOKY 
					AND SHPDI.SHPOIT = S.SHPOIT
			LEFT OUTER JOIN SHPDH 
				ON		SHPDH.SHPOKY = S.SHPOKY
			LEFT OUTER JOIN DOCTM
				ON		SHPDH.SHPMTY = DOCTM.DOCUTY
			LEFT OUTER JOIN CMCDV
				ON		SHPDH.STATDO = CMCDV.CMCDVL 
					AND CMCDKY = 'STATDO'
			LEFT OUTER JOIN BZPTN
				ON		BZPTN.PTNRKY = SHPDH.DPTNKY
					AND BZPTN.PTNRTY = '0001'
					AND BZPTN.OWNRKY = S.OWNRKY
		WHERE
				TH.WAREKY = #{WAREKY}
			AND TH.TASOTY = #{TASOTY}
		<if test="(SAVEKEY == null or SAVEKEY == '') and RANGE_SQL != null and RANGE_SQL != ''">
			${RANGE_SQL} 
		</if>
		
		<if test="SAVEKEY != null and SAVEKEY != ''"> 
			AND TH.TASKKY IN (${SAVEKEY})
		</if>
		
		GROUP BY TH.TASKKY, TH.WAREKY, TH.TASOTY, TH.DOCDAT, TH.DOCCAT,
				TH.DRELIN, TH.STATDO, TH.QTTAOR, TH.QTCOMP, TH.TSPKEY,
				TH.DOORKY, TH.PTNRKY, TH.CREDAT, TH.CRETIM, TH.CREUSR, TH.LMODAT,
				TH.LMOTIM, TH.LMOUSR, TH.INDBZL, TH.INDARC, TH.UPDCHK,
				TH.KEEPTS, TH.WARETG
		ORDER BY TH.TASKKY
 	</select>
	
	<select id="PT02_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT S.TASKIT AS ROWSEQUENCE,
			(
				CASE
					WHEN D.ROWCK IS NULL THEN ' '
					ELSE D.ROWCK
				END
			) AS ROWCK,
			TH.WAREKY AS WAREKY,
			S.TASKKY AS TASKKY,
			S.TASKIT AS TASKIT,
			S.TASKTY AS TASKTY,
			S.RSNCOD AS RSNCOD,
			D.TASRSN AS TASRSN,
			S.STATIT AS STATIT,
			(SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = S.STATIT) AS STATITNM,
			S.QTTAOR AS QTTAOR,
			(
				CASE
					WHEN D.QTCOMP IS NULL AND S.ACTCDT = '00000000' THEN S.QTTAOR
					WHEN D.QTCOMP IS NULL THEN S.QTCOMP
					WHEN S.QTCOMP = D.QTCOMP THEN D.QTCOMP
				ELSE D.QTCOMP END
			) AS QTCOMP,
			S.OWNRKY AS OWNRKY,
			S.SKUKEY AS SKUKEY,
			S.LOTNUM AS LOTNUM,
			S.ACTCDT AS ACTCDT,
			S.ACTCTI AS ACTCTI,
			S.QTYUOM AS QTYUOM,
			S.TKFLKY AS TKFLKY,
			S.STEPNO AS STEPNO,
			S.LSTTFL AS LSTTFL,
			S.LOCASR AS LOCASR,
			S.SECTSR AS SECTSR,
			S.PAIDSR AS PAIDSR,
			S.TRNUSR AS TRNUSR,
			S.STRUTY AS STRUTY,
			S.SMEAKY AS SMEAKY,
			S.SUOMKY AS SUOMKY,
			S.QTSPUM AS QTSPUM,
			S.SDUOKY AS SDUOKY,
			S.QTSDUM AS QTSDUM,
			S.LOCATG AS LOCATG,
			S.SECTTG AS SECTTG,
			S.PAIDTG AS PAIDTG,
			S.TRNUTG AS TRNUTG,
			S.TTRUTY AS TTRUTY,
			S.TMEAKY AS TMEAKY,
			S.TUOMKY AS TUOMKY,
			S.QTTPUM AS QTTPUM,
			S.TDUOKY AS TDUOKY,
			S.QTTDUM AS QTTDUM,
			(
				CASE
					WHEN D.LOCAAC IS NULL AND S.ACTCDT = '00000000' THEN S.LOCATG
					WHEN D.LOCAAC IS NULL THEN S.LOCAAC
					WHEN S.LOCAAC = D.LOCAAC  THEN D.LOCAAC
				ELSE D.LOCAAC END
			) AS LOCAAC,
			(
				CASE
					WHEN D.SECTAC IS NULL AND S.ACTCDT = '00000000' THEN S.SECTTG
					WHEN D.SECTAC IS NULL THEN S.SECTAC
					WHEN S.SECTAC = D.SECTAC THEN D.SECTAC
				ELSE D.SECTAC END
			) AS SECTAC,
			(
				CASE
					WHEN D.PAIDAC IS NULL AND S.ACTCDT = '00000000' THEN S.PAIDTG
					WHEN D.PAIDAC IS NULL THEN S.PAIDAC
					WHEN S.PAIDAC = D.PAIDAC THEN D.PAIDAC
				ELSE D.PAIDAC END
			) AS PAIDAC,
			(
				CASE
					WHEN D.TRNUAC IS NULL AND S.ACTCDT = '00000000' THEN S.TRNUTG
					WHEN D.TRNUAC IS NULL THEN S.TRNUAC
					WHEN S.TRNUAC = D.TRNUAC THEN D.TRNUAC
				ELSE D.TRNUAC END
			) AS TRNUAC,
			(
				CASE
					WHEN D.ATRUTY IS NULL AND S.ACTCDT = '00000000' THEN S.TTRUTY
					WHEN D.ATRUTY IS NULL THEN S.ATRUTY
					WHEN S.ATRUTY = D.ATRUTY THEN D.ATRUTY
				ELSE D.ATRUTY END
			) AS ATRUTY,
			DECODE(S.ACTCDT, '00000000', S.TMEAKY, S.AMEAKY) AS AMEAKY,
			DECODE(S.ACTCDT, '00000000', DECODE(S.TASKTY, 'PT', S.SUOMKY, S.TUOMKY), S.AUOMKY) AS AUOMKY,
			DECODE(S.ACTCDT, '00000000', S.QTTPUM, S.QTAPUM) AS QTAPUM,
			DECODE(S.ACTCDT, '00000000', S.TDUOKY, S.ADUOKY) AS ADUOKY,
			DECODE(S.ACTCDT, '00000000', S.QTTDUM, S.QTADUM) AS QTADUM,
			S.REFDKY AS REFDKY,
			S.REFDIT AS REFDIT,
			S.REFCAT AS REFCAT,
			S.REFDAT AS REFDAT,
			S.PURCKY AS PURCKY,
			S.PURCIT AS PURCIT,
			S.ASNDKY AS ASNDKY,
			S.ASNDIT AS ASNDIT,
			S.RECVKY AS RECVKY,
			S.RECVIT AS RECVIT,
			S.SHPOKY AS SHPOKY,
			S.SHPOIT AS SHPOIT,
			S.GRPOKY AS GRPOKY,
			S.GRPOIT AS GRPOIT,
			S.SADJKY AS SADJKY,
			S.SADJIT AS SADJIT,
			S.SDIFKY AS SDIFKY,
			S.SDIFIT AS SDIFIT,
			S.PHYIKY AS PHYIKY,
			S.PHYIIT AS PHYIIT,
			S.DROPID AS DROPID,
			S.DESC01 AS DESC01,
			S.DESC02 AS DESC02,
			S.ASKU01 AS ASKU01,
			S.ASKU02 AS ASKU02,
			S.ASKU03 AS ASKU03,
			S.ASKU04 AS ASKU04,
			S.ASKU05 AS ASKU05,
			S.EANCOD AS EANCOD,
			S.GTINCD AS GTINCD,
			S.SKUG01 AS SKUG01,
			S.SKUG02 AS SKUG02,
			S.SKUG03 AS SKUG03,
			S.SKUG04 AS SKUG04,
			S.SKUG05 AS SKUG05,
			S.WGTUNT AS WGTUNT,
			S.LENGTH AS LENGTH,
			S.WIDTHW AS WIDTHW,
			S.HEIGHT AS HEIGHT,
			S.CUBICM AS CUBICM,
			S.CAPACT AS CAPACT,
			S.WORKID AS WORKID,
			S.WORKNM AS WORKNM,
			S.HHTTID AS HHTTID,
			S.AREAKY AS AREAKY,
			S.LOTA01 AS LOTA01,
			S.LOTA02 AS LOTA02,
			S.LOTA03 AS LOTA03,
			S.LOTA04 AS LOTA04,
			S.LOTA05 AS LOTA05,
			S.LOTA06 AS LOTA06,
			S.LOTA07 AS LOTA07,
			S.LOTA08 AS LOTA08,
			S.LOTA09 AS LOTA09,
			S.LOTA10 AS LOTA10,
			S.LOTA11 AS LOTA11,
			S.LOTA12 AS LOTA12,
			S.LOTA13 AS LOTA13,
			S.LOTA14 AS LOTA14,
			S.LOTA15 AS LOTA15,
			S.LOTA16 AS LOTA16,
			S.LOTA17 AS LOTA17,
			S.LOTA18 AS LOTA18,
			S.LOTA19 AS LOTA19,
			S.LOTA20 AS LOTA20,
			S.AWMSNO AS AWMSNO,
			S.AWMSTS AS AWMSTS,
			S.SMANDT AS SMANDT,
			S.SEBELN AS SEBELN,
			S.SEBELP AS SEBELP,
			S.SZMBLNO AS SZMBLNO,
			S.SZMIPNO AS SZMIPNO,
			S.STRAID AS STRAID,
			S.SVBELN AS SVBELN,
			S.SPOSNR AS SPOSNR,
			S.STKNUM AS STKNUM,
			S.STPNUM AS STPNUM,
			S.SWERKS AS SWERKS,
			S.SLGORT AS SLGORT,
			S.SDATBG AS SDATBG,
			S.STDLNR AS STDLNR,
			S.SSORNU AS SSORNU,
			S.SSORIT AS SSORIT,
			S.SMBLNR AS SMBLNR,
			S.SZEILE AS SZEILE,
			S.SMJAHR AS SMJAHR,
			S.SXBLNR AS SXBLNR,
			S.SAPSTS AS SAPSTS,
			S.DOORKY AS DOORKY,
			S.PTLT01 AS PTLT01,
			S.PTLT02 AS PTLT02,
			S.PTLT03 AS PTLT03,
			S.PTLT04 AS PTLT04,
			S.PTLT05 AS PTLT05,
			S.PTLT06 AS PTLT06,
			S.PTLT07 AS PTLT07,
			S.PTLT08 AS PTLT08,
			S.PTLT09 AS PTLT09,
			S.PTLT10 AS PTLT10,
			S.PTLT11 AS PTLT11,
			S.PTLT12 AS PTLT12,
			S.PTLT13 AS PTLT13,
			S.PTLT14 AS PTLT14,
			S.PTLT15 AS PTLT15,
			S.PTLT16 AS PTLT16,
			S.PTLT17 AS PTLT17,
			S.PTLT18 AS PTLT18,
			S.PTLT19 AS PTLT19,
			S.PTLT20 AS PTLT20,
			C.AUTLOC AS AUTLOC,
			S.CREDAT AS CREDAT,
			S.CRETIM AS CRETIM,
			S.CREUSR AS CREUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = S.CREUSR) AS CUSRNM,
			S.LMODAT AS LMODAT,
			S.LMOTIM AS LMOTIM,
			S.LMOUSR AS LMOUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = S.LMOUSR) AS LUSRNM,
			S.INDBZL AS INDBZL,
			S.INDARC AS INDARC,
			S.UPDCHK AS UPDCHK,
			
			SM.QTDUOM AS BXIQTY,
			SM.QTYSTD AS PLIQTY,
			TRUNC(S.QTTAOR/SM.QTDUOM) AS BOXQTY,
			NVL(  TRUNC(S.QTTAOR / DECODE(SM.QTYSTD,0, NULL,SM.QTYSTD))  ,0) AS PLTQTY,
			MOD(S.QTTAOR,SM.QTDUOM) AS REMQTY,
			NVL(SM.GRSWGT,0) * NVL(S.QTTAOR,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(S.QTTAOR,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT   
		
		FROM
			TASDH TH
			INNER JOIN TASDI S
				ON		TH.TASKKY = S.TASKKY
			INNER JOIN LOCMA C
				ON		C.WAREKY = TH.WAREKY 
					AND C.LOCAKY = S.LOCASR
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = S.OWNRKY
					AND SM.SKUKEY = S.SKUKEY
			LEFT OUTER JOIN (
				${SUBSAVEKEY}
			) D
				ON		S.TASKKY = D.TASKKY
					AND S.TASKIT = D.TASKIT 
		WHERE
				TH.WAREKY = #{WAREKY}
			AND TH.TASOTY = #{TASOTY}
			AND TH.TASKKY = #{TASKKY}
		<if test="SAVEKEY == null or SAVEKEY == ''">
			AND S.ACTCDT = '00000000'
		</if>
		ORDER BY S.TASKKY, S.TASKIT
	</select>
	
	<select id="PT01_SAVE_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT TASKKY
		     , (SELECT NAME01 FROM WAHMA WHERE WAREKY = TASDH.WAREKY) AS WAREKYNM
		     , (SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS TASOTYNM
		     , WAREKY
		     , TASOTY
		     , DOCDAT
		     , DOCCAT
		     , WARETG
		     , DOCTXT
		     , CREDAT
		     , CRETIM
		     , CREUSR
		     , (SELECT NMLAST FROM USRMA WHERE USERID = TASDH.CREUSR) AS CUSRNM
		  FROM TASDH 
		 WHERE TASKKY = #{TASKKY}
	</select>
	
	<select id="PT01_SAVE_ITEM_LIST" parameterType="hashmap" resultType="DataMap">

		SELECT TI.SKUKEY
		     , TI.LOTA03
		     , TR.STOKKY
		     , TI.QTTAOR AS AVAILABLEQTY
		     , SM.DESC01 AS DESC01
		     , TI.TASKTY 
		     , TI.TRNUTG
		     , TI.SEBELN
		     , TI.LOTNUM
		     , CASE WHEN TI.QTCOMP = 0 THEN TI.QTTAOR
		            ELSE TI.QTCOMP 
		       END AS QTCOMP
		     , TI.STATIT
		     , TI.OWNRKY
		     , TI.LOTNUM
		     , TH.WAREKY
		     , TI.TASKKY
		     , TI.TASKIT
		     , TI.QTTAOR
		     , TI.LOCASR
		     , TI.SUOMKY
		     , TI.LOCATG
		     , TI.RECVKY
		     , TI.DESC02
		     , TI.ASKU01
		     , TI.ASKU02
		     , TI.ASKU03
		     , TI.ASKU04
		     , TI.ASKU05
		     , TI.SKUG01
		     , TI.SKUG02
		     , TI.SKUG03
		     , TI.SKUG04
		     , TI.SKUG05
		     , TI.GRSWGT
		     , TI.NETWGT
		     , TI.SEBELN
             , '00000000' AS ACTCDT
             , '000000' AS ACTCTI
             , S.LOCAKY AS LOCASR
             , S.SECTID AS SECTSR
             , S.PACKID AS PAIDSR
             , S.TRNUID AS TRNUSR
             , S.TRUNTY AS STRUTY
             , SW.MEASKY AS SMEAKY
             , S.UOMKEY AS SUOMKY
             , S.QTPUOM AS QTSPUM
             , S.DUOMKY AS SDUOKY
             , S.QTDUOM AS QTSDUM
             , S.SECTID AS SECTTG
             , S.PACKID AS PAIDTG
             , S.TRNUID AS TRNUTG
             , S.TRUNTY AS TTRUTY
             , SW.MEASKY AS TMEAKY
             , SW.UOMDTA AS TUOMKY
             , S.QTPUOM AS QTTPUM
             , S.DUOMKY AS TDUOKY
             , S.QTDUOM AS QTTDUM
             , S.OWNRKY AS OWNRKY
             , S.SKUKEY AS SKUKEY
             , S.LOTNUM AS LOTNUM
             , S.REFDKY AS REFDKY
             , S.REFDIT AS REFDIT
             , S.REFCAT AS REFCAT
             , S.REFDAT AS REFDAT
             , S.PURCKY AS PURCKY
             , S.PURCIT AS PURCIT
             , S.ASNDKY AS ASNDKY
             , S.ASNDIT AS ASNDIT
             , S.RECVKY AS RECVKY
             , S.RECVIT AS RECVIT
             , S.SHPOKY AS SHPOKY
             , S.SHPOIT AS SHPOIT
             , S.GRPOKY AS GRPOKY
             , S.GRPOIT AS GRPOIT
             , S.SADJKY AS SADJKY
             , S.SADJIT AS SADJIT
             , S.SDIFKY AS SDIFKY
             , S.SDIFIT AS SDIFIT
             , S.PHYIKY AS PHYIKY
             , S.PHYIIT AS PHYIIT
             , S.DESC01 AS DESC01
             , S.DESC02 AS DESC02
             , S.ASKU01 AS ASKU01
             , S.ASKU02 AS ASKU02
             , S.ASKU03 AS ASKU03
             , S.ASKU04 AS ASKU04
             , S.ASKU05 AS ASKU05
             , S.EANCOD AS EANCOD
             , S.GTINCD AS GTINCD
             , S.SKUG01 AS SKUG01
             , S.SKUG02 AS SKUG02
             , S.SKUG03 AS SKUG03
             , S.SKUG04 AS SKUG04
             , S.SKUG05 AS SKUG05
             , S.GRSWGT AS GRSWGT
             , S.NETWGT AS NETWGT
             , S.WGTUNT AS WGTUNT
             , S.LENGTH AS LENGTH
             , S.WIDTHW AS WIDTHW
             , S.HEIGHT AS HEIGHT
             , S.CUBICM AS CUBICM
             , S.CAPACT AS CAPACT
             , S.AREAKY AS AREAKY
             , S.LOTA01 AS LOTA01
             , S.LOTA02 AS LOTA02
             , S.LOTA03 AS LOTA03
             , S.LOTA04 AS LOTA04
             , S.LOTA05 AS LOTA05
             , S.LOTA06 AS LOTA06
             , S.LOTA07 AS LOTA07
             , S.LOTA08 AS LOTA08
             , S.LOTA09 AS LOTA09
             , S.LOTA10 AS LOTA10
             , S.LOTA11 AS LOTA11
             , S.LOTA12 AS LOTA12
             , S.LOTA13 AS LOTA13
             , S.LOTA14 AS LOTA14
             , S.LOTA15 AS LOTA15
             , S.LOTA16 AS LOTA16
             , S.LOTA17 AS LOTA17
             , S.LOTA18 AS LOTA18
             , S.LOTA19 AS LOTA19
             , S.LOTA20 AS LOTA20
             , S.AWMSNO AS AWMSNO
             , S.SMANDT AS SMANDT
             , S.SEBELN AS SEBELN
             , S.SEBELP AS SEBELP
             , S.SVBELN AS SVBELN
             , S.SMBLNR AS SMBLNR
             , S.SMJAHR AS SMJAHR
             , S.SZEILE AS SZEILE
             , S.SZMIPNO AS SZMIPNO
             , S.SPOSNR AS SPOSNR
             , S.STKNUM AS STKNUM
             , S.STPNUM AS STPNUM
             , S.SLGORT AS SLGORT
             , S.SWERKS AS SWERKS
             , S.STDLNR AS STDLNR
             , S.STRAID AS STRAID
             , S.SSORNU AS SSORNU
             , S.SSORIT AS SSORIT
             , S.SXBLNR AS SXBLNR
             , S.LOTA01 AS PTLT01
             , S.LOTA02 AS PTLT02
             , S.LOTA03 AS PTLT03
             , S.LOTA04 AS PTLT04
             , S.LOTA05 AS PTLT05
             , S.LOTA06 AS PTLT06
             , S.LOTA07 AS PTLT07
             , S.LOTA08 AS PTLT08
             , S.LOTA09 AS PTLT09
             , S.LOTA10 AS PTLT10
             , S.LOTA11 AS PTLT11
             , S.LOTA12 AS PTLT12
             , S.LOTA13 AS PTLT13
             , S.LOTA14 AS PTLT14
             , S.LOTA15 AS PTLT15
             , S.LOTA16 AS PTLT16
             , S.LOTA17 AS PTLT17
             , S.LOTA18 AS PTLT18
             , S.LOTA19 AS PTLT19
             , S.LOTA20 AS PTLT20
             , SW.PASTKY AS PASTKY
		     , (SELECT NAME01 FROM BZPTN WHERE OWNRKY = TI.OWNRKY AND PTNRKY = TI.LOTA03 AND PTNRTY = '0002') AS LOTA03NM
		     , (SELECT MAX(LM.LOCAKY) FROM LOCMA LM WHERE LM.WAREKY =  TH.WAREKY AND LM.LOCSKU = TI.SKUKEY  ) AS LOCSKU
		     , NVL(  TRUNC(TI.QTTAOR / DECODE(SM.QTYSTD, 0, NULL, SM.QTYSTD), 2 ) ,0) AS PLTQTY
		     , NVL(SM.QTYSTD,0) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) AS PLBQTY
		     , TI.AMEAKY
             , TI.AUOMKY
             , TI.QTAPUM
             , TI.ADUOKY
             , TI.QTADUM
			 , SM.QTDUOM AS BXIQTY
			 , SM.QTYSTD AS PLIQTY
		 FROM TASDH TH 
		       INNER JOIN TASDI TI ON TI.TASKKY = TH.TASKKY
		       INNER JOIN TASDR TR ON TR.TASKKY = TI.TASKKY AND TR.TASKIT = TI.TASKIT
		       INNER JOIN SKUMA SM ON SM.OWNRKY = TI.OWNRKY AND SM.SKUKEY = TI.SKUKEY
		       INNER JOIN SKUWC SW ON SW.OWNRKY = TI.OWNRKY AND SW.SKUKEY = TI.SKUKEY AND SW.WAREKY = TH.WAREKY
		       INNER JOIN STKKY S ON S.STOKKY = TR.STOKKY
		       
		 WHERE TH.TASKKY = #{TASKKY}
	</select>
	
	
	<select id="PT01_GET_STOKKY_LIST" parameterType="hashmap" resultType="DataMap">
	    
	     SELECT S.STOKKY 
	          , S.QTSIWH
		   FROM STKKY S
		  WHERE S.QTSIWH - GREATEST(S.QTSALO , S.QTSPMO) - S.QTSBLK > 0
            AND S.QTSALO = 0
		    AND S.AREAKY NOT IN ('SHP','SYS')
		    AND S.LOCAKY NOT IN ('SYSSHP')
		    AND QTSIWH >= 1
		    AND S.LOTNUM = #{LOTNUM}           
		    AND S.OWNRKY = #{OWNRKY}           
		    AND S.SKUKEY = #{SKUKEY}           
		    AND S.LOCAKY = #{LOCASR}           
		    AND S.SECTID = #{SECTSR}           
		    AND S.PACKID = #{PAIDSR}           
		    AND S.TRNUID = #{TRNUSR}           
		    AND S.TRUNTY = #{STRUTY}          
		    AND S.UOMKEY = #{SUOMKY}           
		    AND S.DUOMKY = #{SDUOKY}	       
		    AND S.STOKKY IN ( ${SSTOKKYS} )    
	</select>
	
	<select id="PT09_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT
			TASDH.TASKKY AS TASKKY,
			TASDH.WAREKY AS WAREKY,
			TASDH.TASOTY AS TASOTY,
			TASDH.DOCDAT AS DOCDAT,
			TASDH.DOCCAT AS DOCCAT,
			(SELECT SHORTX FROM DOCCM WHERE DOCCAT = TASDH.DOCCAT) AS DOCCATNM,
			TASDH.DRELIN AS DRELIN,
			TASDH.STATDO AS STATDO,
			(SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATDO' AND X.CMCDVL = TASDH.STATDO) AS STATDONM,
			(SELECT SHORTX FROM DOCTM WHERE DOCUTY = TASDH.TASOTY) AS ADJDSC,
			TASDH.QTTAOR AS QTTAOR,
			TASDH.QTCOMP AS QTCOMP,
			TASDH.TSPKEY AS TSPKEY,
			TASDH.DOORKY AS DOORKY,
			DECODE(TASDH.WARETG, ' ', TASDH.WAREKY, TASDH.WARETG) AS WARETG,
			TASDH.PTNRKY AS PTNRKY,
			TASDH.CREDAT AS CREDAT,
			TASDH.CRETIM AS CRETIM,
			TASDH.CREUSR AS CREUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.CREUSR) AS CUSRNM,
			TASDH.LMODAT AS LMODAT,
			TASDH.LMOTIM AS LMOTIM,
			TASDH.LMOUSR AS LMOUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = TASDH.LMOUSR) AS LUSRNM,
			TASDH.INDBZL AS INDBZL,
			TASDH.INDARC AS INDARC,
			TASDH.UPDCHK AS UPDCHK,
			TASDH.KEEPTS AS KEEPTS,
			MAX(S.RECVKY) AS RECVKY,
			MAX(S.SHPOKY) AS SHPOKY,
			MAX(SHPDH.SHPMTY) AS SHPMTY,
			MAX(DOCTM.SHORTX) AS SHPMTYNM,
			MAX(SHPDH.STATDO) AS SHSTATDO,
			MAX(CMCDV.CDESC1) AS SHSTATDONM,
			MAX(SHPDH.DPTNKY) AS DPTNKY,
			MAX(BZPTN.NAME01) AS DPTNKYNM,
			MAX(S.SEBELN) AS SEBELN,
			MAX(S.SZMBLNO) AS SZMBLNO,
			MAX(S.SZMIPNO) AS SZMIPNO,
			MAX(S.STRAID) AS STRAID,
			MAX(S.SVBELN) AS SVBELN,
			MAX(S.STKNUM) AS STKNUM,
			MAX(S.STDLNR) AS STDLNR,
			MAX(S.SSORNU) AS SSORNU,
			MAX(S.SMBLNR) AS SMBLNR,
			MAX(S.SXBLNR) AS SXBLNR,
			NVL(SUM(DECODE(S.ACTCDT, '00000000', 1, ' ', 1, 0)), 0) AS COMPLETECNT,
			MAX(S.AREAKY) AS AREAKY,
			MAX(TASDH.DOCTXT)   AS DOCTXT
		FROM
			TASDH
			INNER JOIN TASDI S
				ON		TASDH.TASKKY = S.TASKKY
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = S.OWNRKY
					AND SM.SKUKEY = S.SKUKEY            
			LEFT OUTER  JOIN SHPDI
				ON		SHPDI.SHPOKY = S.SHPOKY 
					AND SHPDI.SHPOIT = S.SHPOIT
			LEFT OUTER JOIN SHPDH 
				ON		SHPDH.SHPOKY = S.SHPOKY
			LEFT OUTER JOIN DOCTM
				ON SHPDH.SHPMTY = DOCTM.DOCUTY
			LEFT OUTER JOIN CMCDV
				ON		SHPDH.STATDO = CMCDV.CMCDVL 
					AND CMCDKY = 'STATDO'
			LEFT OUTER JOIN BZPTN
				ON		BZPTN.PTNRKY = SHPDH.DPTNKY
					AND BZPTN.PTNRTY = '0001'
					AND BZPTN.OWNRKY = S.OWNRKY
		WHERE
				TASDH.WAREKY = #{WAREKY}
		<if test="RANGE_SQL != null and RANGE_SQL != ''">  
			${RANGE_SQL}  
		</if>
		GROUP BY TASDH.TASKKY, TASDH.WAREKY, TASDH.TASOTY, TASDH.DOCDAT, TASDH.DOCCAT,
				TASDH.DRELIN, TASDH.STATDO, TASDH.QTTAOR, TASDH.QTCOMP, TASDH.TSPKEY,
				TASDH.DOORKY, TASDH.PTNRKY, TASDH.CREDAT, TASDH.CRETIM, TASDH.CREUSR, TASDH.LMODAT,
				TASDH.LMOTIM, TASDH.LMOUSR, TASDH.INDBZL, TASDH.INDARC, TASDH.UPDCHK,
				TASDH.KEEPTS, TASDH.WARETG
		ORDER BY TASDH.TASKKY
				
	</select>
	
	<select id="PT09_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT S.TASKIT AS ROWSEQUENCE,
			(
				CASE
					WHEN D.ROWCK IS NULL THEN ' '
					ELSE D.ROWCK
				END
			) AS ROWCK,
			TH.WAREKY AS WAREKY,
			S.TASKKY AS TASKKY,
			S.TASKIT AS TASKIT,
			S.TASKTY AS TASKTY,
			S.RSNCOD AS RSNCOD,
			D.TASRSN AS TASRSN,
			S.STATIT AS STATIT,
			(SELECT X.CDESC1 FROM CMCDV X WHERE X.CMCDKY = 'STATIT' AND X.CMCDVL = S.STATIT) AS STATITNM,
			S.QTTAOR AS QTTAOR,
			(
				CASE
					WHEN D.QTCOMP IS NULL AND S.ACTCDT = '00000000' THEN S.QTTAOR
					WHEN D.QTCOMP IS NULL THEN S.QTCOMP
					WHEN S.QTCOMP = D.QTCOMP THEN D.QTCOMP
				ELSE D.QTCOMP END
			) AS QTCOMP,
			S.OWNRKY AS OWNRKY,
			S.SKUKEY AS SKUKEY,
			S.LOTNUM AS LOTNUM,
			S.ACTCDT AS ACTCDT,
			S.ACTCTI AS ACTCTI,
			S.QTYUOM AS QTYUOM,
			S.TKFLKY AS TKFLKY,
			S.STEPNO AS STEPNO,
			S.LSTTFL AS LSTTFL,
			S.LOCASR AS LOCASR,
			S.SECTSR AS SECTSR,
			S.PAIDSR AS PAIDSR,
			S.TRNUSR AS TRNUSR,
			S.STRUTY AS STRUTY,
			S.SMEAKY AS SMEAKY,
			S.SUOMKY AS SUOMKY,
			S.QTSPUM AS QTSPUM,
			S.SDUOKY AS SDUOKY,
			S.QTSDUM AS QTSDUM,
			S.LOCATG AS LOCATG,
			S.SECTTG AS SECTTG,
			S.PAIDTG AS PAIDTG,
			S.TRNUTG AS TRNUTG,
			S.TTRUTY AS TTRUTY,
			S.TMEAKY AS TMEAKY,
			S.TUOMKY AS TUOMKY,
			S.QTTPUM AS QTTPUM,
			S.TDUOKY AS TDUOKY,
			S.QTTDUM AS QTTDUM,
			(
				CASE
					WHEN D.LOCAAC IS NULL AND S.ACTCDT = '00000000' THEN S.LOCATG
					WHEN D.LOCAAC IS NULL THEN S.LOCAAC
					WHEN S.LOCAAC = D.LOCAAC  THEN D.LOCAAC
				ELSE D.LOCAAC END
			) AS LOCAAC,
			(
				CASE
					WHEN D.SECTAC IS NULL AND S.ACTCDT = '00000000' THEN S.SECTTG
					WHEN D.SECTAC IS NULL THEN S.SECTAC
					WHEN S.SECTAC = D.SECTAC THEN D.SECTAC
				ELSE D.SECTAC END
			) AS SECTAC,
			(
				CASE
					WHEN D.PAIDAC IS NULL AND S.ACTCDT = '00000000' THEN S.PAIDTG
					WHEN D.PAIDAC IS NULL THEN S.PAIDAC
					WHEN S.PAIDAC = D.PAIDAC THEN D.PAIDAC
				ELSE D.PAIDAC END
			) AS PAIDAC,
			(
				CASE
					WHEN D.TRNUAC IS NULL AND S.ACTCDT = '00000000' THEN S.TRNUTG
					WHEN D.TRNUAC IS NULL THEN S.TRNUAC
					WHEN S.TRNUAC = D.TRNUAC THEN D.TRNUAC
				ELSE D.TRNUAC END
			) AS TRNUAC,
			(
				CASE
					WHEN D.ATRUTY IS NULL AND S.ACTCDT = '00000000' THEN S.TTRUTY
					WHEN D.ATRUTY IS NULL THEN S.ATRUTY
					WHEN S.ATRUTY = D.ATRUTY THEN D.ATRUTY
				ELSE D.ATRUTY END
			) AS ATRUTY,
			DECODE(S.ACTCDT, '00000000', S.TMEAKY, S.AMEAKY) AS AMEAKY,
			DECODE(S.ACTCDT, '00000000', DECODE(S.TASKTY, 'PT', S.SUOMKY, S.TUOMKY), S.AUOMKY) AS AUOMKY,
			DECODE(S.ACTCDT, '00000000', S.QTTPUM, S.QTAPUM) AS QTAPUM,
			DECODE(S.ACTCDT, '00000000', S.TDUOKY, S.ADUOKY) AS ADUOKY,
			DECODE(S.ACTCDT, '00000000', S.QTTDUM, S.QTADUM) AS QTADUM,
			S.REFDKY AS REFDKY,
			S.REFDIT AS REFDIT,
			S.REFCAT AS REFCAT,
			S.REFDAT AS REFDAT,
			S.PURCKY AS PURCKY,
			S.PURCIT AS PURCIT,
			S.ASNDKY AS ASNDKY,
			S.ASNDIT AS ASNDIT,
			S.RECVKY AS RECVKY,
			S.RECVIT AS RECVIT,
			S.SHPOKY AS SHPOKY,
			S.SHPOIT AS SHPOIT,
			S.GRPOKY AS GRPOKY,
			S.GRPOIT AS GRPOIT,
			S.SADJKY AS SADJKY,
			S.SADJIT AS SADJIT,
			S.SDIFKY AS SDIFKY,
			S.SDIFIT AS SDIFIT,
			S.PHYIKY AS PHYIKY,
			S.PHYIIT AS PHYIIT,
			S.DROPID AS DROPID,
			S.DESC01 AS DESC01,
			S.DESC02 AS DESC02,
			S.ASKU01 AS ASKU01,
			S.ASKU02 AS ASKU02,
			S.ASKU03 AS ASKU03,
			S.ASKU04 AS ASKU04,
			S.ASKU05 AS ASKU05,
			S.EANCOD AS EANCOD,
			S.GTINCD AS GTINCD,
			S.SKUG01 AS SKUG01,
			S.SKUG02 AS SKUG02,
			S.SKUG03 AS SKUG03,
			S.SKUG04 AS SKUG04,
			S.SKUG05 AS SKUG05,
			S.WGTUNT AS WGTUNT,
			S.LENGTH AS LENGTH,
			S.WIDTHW AS WIDTHW,
			S.HEIGHT AS HEIGHT,
			S.CUBICM AS CUBICM,
			S.CAPACT AS CAPACT,
			S.WORKID AS WORKID,
			S.WORKNM AS WORKNM,
			S.HHTTID AS HHTTID,
			S.AREAKY AS AREAKY,
			S.LOTA01 AS LOTA01,
			S.LOTA02 AS LOTA02,
			S.LOTA03 AS LOTA03,
			S.LOTA04 AS LOTA04,
			S.LOTA05 AS LOTA05,
			S.LOTA06 AS LOTA06,
			S.LOTA07 AS LOTA07,
			S.LOTA08 AS LOTA08,
			S.LOTA09 AS LOTA09,
			S.LOTA10 AS LOTA10,
			S.LOTA11 AS LOTA11,
			S.LOTA12 AS LOTA12,
			S.LOTA13 AS LOTA13,
			S.LOTA14 AS LOTA14,
			S.LOTA15 AS LOTA15,
			S.LOTA16 AS LOTA16,
			S.LOTA17 AS LOTA17,
			S.LOTA18 AS LOTA18,
			S.LOTA19 AS LOTA19,
			S.LOTA20 AS LOTA20,
			S.AWMSNO AS AWMSNO,
			S.AWMSTS AS AWMSTS,
			S.SMANDT AS SMANDT,
			S.SEBELN AS SEBELN,
			S.SEBELP AS SEBELP,
			S.SZMBLNO AS SZMBLNO,
			S.SZMIPNO AS SZMIPNO,
			S.STRAID AS STRAID,
			S.SVBELN AS SVBELN,
			S.SPOSNR AS SPOSNR,
			S.STKNUM AS STKNUM,
			S.STPNUM AS STPNUM,
			S.SWERKS AS SWERKS,
			S.SLGORT AS SLGORT,
			S.SDATBG AS SDATBG,
			S.STDLNR AS STDLNR,
			S.SSORNU AS SSORNU,
			S.SSORIT AS SSORIT,
			S.SMBLNR AS SMBLNR,
			S.SZEILE AS SZEILE,
			S.SMJAHR AS SMJAHR,
			S.SXBLNR AS SXBLNR,
			S.SAPSTS AS SAPSTS,
			S.DOORKY AS DOORKY,
			S.PTLT01 AS PTLT01,
			S.PTLT02 AS PTLT02,
			S.PTLT03 AS PTLT03,
			S.PTLT04 AS PTLT04,
			S.PTLT05 AS PTLT05,
			S.PTLT06 AS PTLT06,
			S.PTLT07 AS PTLT07,
			S.PTLT08 AS PTLT08,
			S.PTLT09 AS PTLT09,
			S.PTLT10 AS PTLT10,
			S.PTLT11 AS PTLT11,
			S.PTLT12 AS PTLT12,
			S.PTLT13 AS PTLT13,
			S.PTLT14 AS PTLT14,
			S.PTLT15 AS PTLT15,
			S.PTLT16 AS PTLT16,
			S.PTLT17 AS PTLT17,
			S.PTLT18 AS PTLT18,
			S.PTLT19 AS PTLT19,
			S.PTLT20 AS PTLT20,
			C.AUTLOC AS AUTLOC,
			S.CREDAT AS CREDAT,
			S.CRETIM AS CRETIM,
			S.CREUSR AS CREUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = S.CREUSR) AS CUSRNM,
			S.LMODAT AS LMODAT,
			S.LMOTIM AS LMOTIM,
			S.LMOUSR AS LMOUSR,
			(SELECT X.NMLAST FROM USRMA X WHERE X.USERID = S.LMOUSR) AS LUSRNM,
			S.INDBZL AS INDBZL,
			S.INDARC AS INDARC,
			S.UPDCHK AS UPDCHK,
			
			SM.QTDUOM AS BXIQTY,
			SM.QTYSTD AS PLIQTY,
			TRUNC(S.QTTAOR/SM.QTDUOM) AS BOXQTY,
			NVL(  TRUNC(S.QTTAOR / DECODE(SM.QTYSTD,0, NULL,SM.QTYSTD))  ,0) AS PLTQTY,
			MOD(S.QTTAOR,SM.QTDUOM) AS REMQTY,
			NVL(SM.GRSWGT,0) * NVL(S.QTTAOR,0)  AS GRSWGT,
			NVL(SM.GRSWGT,0)   AS GRSWGTCNT,
			NVL(SM.NETWGT,0) * NVL(S.QTTAOR,0)  AS NETWGT,
			NVL(SM.NETWGT,0)   AS NETWGTCNT   
		
		FROM
			TASDH TH
			INNER JOIN TASDI S
				ON		TH.TASKKY = S.TASKKY
			INNER JOIN LOCMA C
				ON		C.WAREKY = TH.WAREKY 
					AND C.LOCAKY = S.LOCASR
			INNER JOIN SKUMA SM
				ON		SM.OWNRKY = S.OWNRKY
					AND SM.SKUKEY = S.SKUKEY
			LEFT OUTER JOIN (
				${SUBSAVEKEY}
			) D
				ON		S.TASKKY = D.TASKKY
					AND S.TASKIT = D.TASKIT 
		WHERE
				TH.WAREKY = #{WAREKY}
			AND TH.TASOTY = #{TASOTY}
			AND TH.TASKKY = #{TASKKY}
		ORDER BY S.TASKKY, S.TASKIT
	</select>
</mapper>