<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OyangOutbound">

	<!-- **[OY03] 출고지시 update -->
	<update id="IFWMS113_ACCEPT_UPDATE"  parameterType="hashmap">
		UPDATE IFWMS113
		   SET C00101 = 'ACP'
		     , C00102 = 'Y'
		     , USRID2 = #{SES_USER_ID}
		     
		   <if test='ORDERSEQ != null and ORDERSEQ != ""'>
		     , N00105 = #{ORDERSEQ}
		   </if>
		 WHERE MANDT = 'SAP'
		   AND SVBELN = #{SVBELN}
		   AND C00102 = 'N'
		   AND XSTAT = 'R'
	</update>

	<!-- **[OY03] 출고지시해제 update -->
	<update id="IFWMS113_CANCEL_ACCEPT_UPDATE"  parameterType="hashmap">
		UPDATE IFWMS113
		   SET C00101 = 'ACP',
		       C00102 = 'N',
		       USRID2 = #{SES_USER_ID},
		       N00105 = 0
		 WHERE 1 = 1
		   AND SVBELN = #{SVBELN}
		   AND XSTAT = 'R'
	</update>
	
	
	<!-- **[OY16] 양산box수 조회  - 1 리스트 -->
	<select id="OY16_1_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT OWNRKY,
		       CARNUM CARNUM,
		       PTNRTO PTNRTO,
		       CASE GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01)
		       WHEN 0 THEN NAME01
		       WHEN 3 THEN '소계'
		       WHEN 7 THEN '총계'
		       END PTNRTONM,
		        DECODE(SUM(NUM01_BOX),0,'',SUM(NUM01_BOX)) AS NUM01_BOXS,
		        DECODE(SUM(NUM02_BOX),0,'',SUM(NUM02_BOX)) AS NUM02_BOXS,
		        DECODE(SUM(NUM03_BOX),0,'',SUM(NUM03_BOX)) AS NUM03_BOXS,
		        DECODE(SUM(NUM04_BOX),0,'',SUM(NUM04_BOX)) AS NUM04_BOXS,
		        DECODE(SUM(NUM05_BOX),0,'',SUM(NUM05_BOX)) AS NUM05_BOXS,
		        DECODE(SUM(NUM06_BOX),0,'',SUM(NUM06_BOX)) AS NUM06_BOXS,
		        DECODE(SUM(NUM07_BOX),0,'',SUM(NUM07_BOX)) AS NUM07_BOXS,
		        DECODE(SUM(NUM08_BOX),0,'',SUM(NUM08_BOX)) AS NUM08_BOXS,
		        DECODE(SUM(NUM09_BOX),0,'',SUM(NUM09_BOX)) AS NUM09_BOXS,
		        DECODE(SUM(NUM10_BOX),0,'',SUM(NUM10_BOX)) AS NUM10_BOXS,
		        DECODE(SUM(NUM11_BOX),0,'',SUM(NUM11_BOX)) AS NUM11_BOXS,
		        DECODE(SUM(NUM12_BOX),0,'',SUM(NUM12_BOX)) AS NUM12_BOXS,
		        DECODE(SUM(NUM13_BOX),0,'',SUM(NUM13_BOX)) AS NUM13_BOXS,
		        DECODE(SUM(NUM14_BOX),0,'',SUM(NUM14_BOX)) AS NUM14_BOXS,
		        DECODE(SUM(NUM15_BOX),0,'',SUM(NUM15_BOX)) AS NUM15_BOXS,
		        DECODE(SUM(NUM16_BOX),0,'',SUM(NUM16_BOX)) AS NUM16_BOXS,
		        DECODE(SUM(NUM17_BOX),0,'',SUM(NUM17_BOX)) AS NUM17_BOXS,
		        DECODE(SUM(NUM18_BOX),0,'',SUM(NUM18_BOX)) AS NUM18_BOXS,
		        DECODE(SUM(NUM19_BOX),0,'',SUM(NUM19_BOX)) AS NUM19_BOXS,
		        DECODE(SUM(NUM20_BOX),0,'',SUM(NUM20_BOX)) AS NUM20_BOXS,
		        DECODE(SUM(NUM21_BOX),0,'',SUM(NUM21_BOX)) AS NUM21_BOXS,
		        DECODE(SUM(NUM22_BOX),0,'',SUM(NUM22_BOX)) AS NUM22_BOXS,
		        DECODE(SUM(NUM23_BOX),0,'',SUM(NUM23_BOX)) AS NUM23_BOXS,
		        DECODE(SUM(NUM24_BOX),0,'',SUM(NUM24_BOX)) AS NUM24_BOXS,
		        DECODE(SUM(NUM25_BOX),0,'',SUM(NUM25_BOX)) AS NUM25_BOXS,
		        DECODE(SUM(NUM26_BOX),0,'',SUM(NUM26_BOX)) AS NUM26_BOXS,
		        DECODE(SUM(NUM27_BOX),0,'',SUM(NUM27_BOX)) AS NUM27_BOXS,
		        DECODE(SUM(NUM28_BOX),0,'',SUM(NUM28_BOX)) AS NUM28_BOXS,
		        DECODE(SUM(NUM29_BOX),0,'',SUM(NUM29_BOX)) AS NUM29_BOXS,
		        DECODE(SUM(NUM30_BOX),0,'',SUM(NUM30_BOX)) AS NUM30_BOXS,
		        DECODE(SUM(NUM31_BOX),0,'',SUM(NUM31_BOX)) AS NUM31_BOXS,
		        DECODE(SUM(NUM32_BOX),0,'',SUM(NUM32_BOX)) AS NUM32_BOXS,
		        DECODE(SUM(NUM33_BOX),0,'',SUM(NUM33_BOX)) AS NUM33_BOXS,
		        DECODE(SUM(NUM34_BOX),0,'',SUM(NUM34_BOX)) AS NUM34_BOXS,
		        DECODE(SUM(NUM35_BOX),0,'',SUM(NUM35_BOX)) AS NUM35_BOXS,
		        DECODE(SUM(NUM36_BOX),0,'',SUM(NUM36_BOX)) AS NUM36_BOXS,
		        DECODE(SUM(NUM37_BOX),0,'',SUM(NUM37_BOX)) AS NUM37_BOXS,
		        DECODE(SUM(NUM38_BOX),0,'',SUM(NUM38_BOX)) AS NUM38_BOXS,
		        DECODE(SUM(NUM39_BOX),0,'',SUM(NUM39_BOX)) AS NUM39_BOXS,
		        DECODE(SUM(NUM40_BOX),0,'',SUM(NUM40_BOX)) AS NUM40_BOXS,
		        DECODE(SUM(NUM41_BOX),0,'',SUM(NUM41_BOX)) AS NUM41_BOXS,
		        DECODE(SUM(NUM42_BOX),0,'',SUM(NUM42_BOX)) AS NUM42_BOXS,
		        DECODE(SUM(NUM43_BOX),0,'',SUM(NUM43_BOX)) AS NUM43_BOXS,
		        DECODE(SUM(NUM44_BOX),0,'',SUM(NUM44_BOX)) AS NUM44_BOXS,
		        DECODE(SUM(NUM45_BOX),0,'',SUM(NUM45_BOX)) AS NUM45_BOXS,
		        DECODE(SUM(NUM46_BOX),0,'',SUM(NUM46_BOX)) AS NUM46_BOXS,
		        DECODE(SUM(NUM47_BOX),0,'',SUM(NUM47_BOX)) AS NUM47_BOXS,
		        DECODE(SUM(NUM48_BOX),0,'',SUM(NUM48_BOX)) AS NUM48_BOXS,
		        DECODE(SUM(NUM49_BOX),0,'',SUM(NUM49_BOX)) AS NUM49_BOXS,
		        DECODE(SUM(NUM50_BOX),0,'',SUM(NUM50_BOX)) AS NUM50_BOXS,
		        DECODE(SUM(NUM51_BOX),0,'',SUM(NUM51_BOX)) AS NUM51_BOXS,
		        DECODE(SUM(NUM52_BOX),0,'',SUM(NUM52_BOX)) AS NUM52_BOXS,
		        DECODE(SUM(NUM53_BOX),0,'',SUM(NUM53_BOX)) AS NUM53_BOXS,
		        DECODE(SUM(NUM54_BOX),0,'',SUM(NUM54_BOX)) AS NUM54_BOXS,
		        DECODE(SUM(NUM55_BOX),0,'',SUM(NUM55_BOX)) AS NUM55_BOXS,
		        DECODE(SUM(NUM56_BOX),0,'',SUM(NUM56_BOX)) AS NUM56_BOXS,
		        DECODE(SUM(NUM57_BOX),0,'',SUM(NUM57_BOX)) AS NUM57_BOXS,
		        DECODE(SUM(NUM58_BOX),0,'',SUM(NUM58_BOX)) AS NUM58_BOXS,
		        DECODE(SUM(NUM59_BOX),0,'',SUM(NUM59_BOX)) AS NUM59_BOXS,
				DECODE(SUM(NUM60_BOX),0,'',SUM(NUM60_BOX)) AS NUM60_BOXS,
		        DECODE(SUM(NUM01_REM),0,'',SUM(NUM01_REM)) AS NUM01_REMS,
		        DECODE(SUM(NUM02_REM),0,'',SUM(NUM02_REM)) AS NUM02_REMS,
		        DECODE(SUM(NUM03_REM),0,'',SUM(NUM03_REM)) AS NUM03_REMS,
		        DECODE(SUM(NUM04_REM),0,'',SUM(NUM04_REM)) AS NUM04_REMS,
		        DECODE(SUM(NUM05_REM),0,'',SUM(NUM05_REM)) AS NUM05_REMS,
		        DECODE(SUM(NUM06_REM),0,'',SUM(NUM06_REM)) AS NUM06_REMS,
		        DECODE(SUM(NUM07_REM),0,'',SUM(NUM07_REM)) AS NUM07_REMS,
		        DECODE(SUM(NUM08_REM),0,'',SUM(NUM08_REM)) AS NUM08_REMS,
		        DECODE(SUM(NUM09_REM),0,'',SUM(NUM09_REM)) AS NUM09_REMS,
		        DECODE(SUM(NUM10_REM),0,'',SUM(NUM10_REM)) AS NUM10_REMS,
		        DECODE(SUM(NUM11_REM),0,'',SUM(NUM11_REM)) AS NUM11_REMS,
		        DECODE(SUM(NUM12_REM),0,'',SUM(NUM12_REM)) AS NUM12_REMS,
		        DECODE(SUM(NUM13_REM),0,'',SUM(NUM13_REM)) AS NUM13_REMS,
		        DECODE(SUM(NUM14_REM),0,'',SUM(NUM14_REM)) AS NUM14_REMS,
		        DECODE(SUM(NUM15_REM),0,'',SUM(NUM15_REM)) AS NUM15_REMS,
		        DECODE(SUM(NUM16_REM),0,'',SUM(NUM16_REM)) AS NUM16_REMS,
		        DECODE(SUM(NUM17_REM),0,'',SUM(NUM17_REM)) AS NUM17_REMS,
		        DECODE(SUM(NUM18_REM),0,'',SUM(NUM18_REM)) AS NUM18_REMS,
		        DECODE(SUM(NUM19_REM),0,'',SUM(NUM19_REM)) AS NUM19_REMS,
		        DECODE(SUM(NUM20_REM),0,'',SUM(NUM20_REM)) AS NUM20_REMS,
		        DECODE(SUM(NUM21_REM),0,'',SUM(NUM21_REM)) AS NUM21_REMS,
		        DECODE(SUM(NUM22_REM),0,'',SUM(NUM22_REM)) AS NUM22_REMS,
		        DECODE(SUM(NUM23_REM),0,'',SUM(NUM23_REM)) AS NUM23_REMS,
		        DECODE(SUM(NUM24_REM),0,'',SUM(NUM24_REM)) AS NUM24_REMS,
		        DECODE(SUM(NUM25_REM),0,'',SUM(NUM25_REM)) AS NUM25_REMS,
		        DECODE(SUM(NUM26_REM),0,'',SUM(NUM26_REM)) AS NUM26_REMS,
		        DECODE(SUM(NUM27_REM),0,'',SUM(NUM27_REM)) AS NUM27_REMS,
		        DECODE(SUM(NUM28_REM),0,'',SUM(NUM28_REM)) AS NUM28_REMS,
		        DECODE(SUM(NUM29_REM),0,'',SUM(NUM29_REM)) AS NUM29_REMS,
		        DECODE(SUM(NUM30_REM),0,'',SUM(NUM30_REM)) AS NUM30_REMS,
		        DECODE(SUM(NUM31_REM),0,'',SUM(NUM31_REM)) AS NUM31_REMS,
		        DECODE(SUM(NUM32_REM),0,'',SUM(NUM32_REM)) AS NUM32_REMS,
		        DECODE(SUM(NUM33_REM),0,'',SUM(NUM33_REM)) AS NUM33_REMS,
		        DECODE(SUM(NUM34_REM),0,'',SUM(NUM34_REM)) AS NUM34_REMS,
		        DECODE(SUM(NUM35_REM),0,'',SUM(NUM35_REM)) AS NUM35_REMS,
		        DECODE(SUM(NUM36_REM),0,'',SUM(NUM36_REM)) AS NUM36_REMS,
		        DECODE(SUM(NUM37_REM),0,'',SUM(NUM37_REM)) AS NUM37_REMS,
		        DECODE(SUM(NUM38_REM),0,'',SUM(NUM38_REM)) AS NUM38_REMS,
		        DECODE(SUM(NUM39_REM),0,'',SUM(NUM39_REM)) AS NUM39_REMS,
		        DECODE(SUM(NUM40_REM),0,'',SUM(NUM40_REM)) AS NUM40_REMS,
		        DECODE(SUM(NUM41_REM),0,'',SUM(NUM41_REM)) AS NUM41_REMS,
		        DECODE(SUM(NUM42_REM),0,'',SUM(NUM42_REM)) AS NUM42_REMS,
		        DECODE(SUM(NUM43_REM),0,'',SUM(NUM43_REM)) AS NUM43_REMS,
		        DECODE(SUM(NUM44_REM),0,'',SUM(NUM44_REM)) AS NUM44_REMS,
		        DECODE(SUM(NUM45_REM),0,'',SUM(NUM45_REM)) AS NUM45_REMS,
		        DECODE(SUM(NUM46_REM),0,'',SUM(NUM46_REM)) AS NUM46_REMS,
		        DECODE(SUM(NUM47_REM),0,'',SUM(NUM47_REM)) AS NUM47_REMS,
		        DECODE(SUM(NUM48_REM),0,'',SUM(NUM48_REM)) AS NUM48_REMS,
		        DECODE(SUM(NUM49_REM),0,'',SUM(NUM49_REM)) AS NUM49_REMS,
		        DECODE(SUM(NUM50_REM),0,'',SUM(NUM50_REM)) AS NUM50_REMS,
		        DECODE(SUM(NUM51_REM),0,'',SUM(NUM51_REM)) AS NUM51_REMS,
		        DECODE(SUM(NUM52_REM),0,'',SUM(NUM52_REM)) AS NUM52_REMS,
		        DECODE(SUM(NUM53_REM),0,'',SUM(NUM53_REM)) AS NUM53_REMS,
		        DECODE(SUM(NUM54_REM),0,'',SUM(NUM54_REM)) AS NUM54_REMS,
		        DECODE(SUM(NUM55_REM),0,'',SUM(NUM55_REM)) AS NUM55_REMS,
		        DECODE(SUM(NUM56_REM),0,'',SUM(NUM56_REM)) AS NUM56_REMS,
		        DECODE(SUM(NUM57_REM),0,'',SUM(NUM57_REM)) AS NUM57_REMS,
		        DECODE(SUM(NUM58_REM),0,'',SUM(NUM58_REM)) AS NUM58_REMS,
		        DECODE(SUM(NUM59_REM),0,'',SUM(NUM59_REM)) AS NUM59_REMS,
		        DECODE(SUM(NUM60_REM),0,'',SUM(NUM60_REM)) AS NUM60_REMS
		  FROM (
		        SELECT IT.OWNRKY,
		               NVL(CM.DESC01, '미배차') AS CARNUM,
		               IT.PTNRTO,
		               BZ.NAME01,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM01') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM01_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM01') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM01_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM02') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM02_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM02') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM02_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM03') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM03_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM03') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM03_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM04') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM04_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM04') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM04_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM05') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM05_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM05') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM05_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM06') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM06_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM06') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM06_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM07') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM07_REM,   
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM07') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM07_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM08') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM08_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM08') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM08_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM09') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM09_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM09') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM09_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM10') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM10_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM10') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM10_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM11') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM11_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM11') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM11_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM12') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM12_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM12') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM12_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM13') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM13_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM13') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM13_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM14') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM14_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM14') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM14_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM15') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM15_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM15') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM15_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM16') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM16_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM16') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM16_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM17') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM17_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM17') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM17_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM18') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM18_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM18') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM18_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM19') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM19_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM19') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM19_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM20') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM20_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM20') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM20_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM21') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM21_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM21') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM21_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM22') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM22_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM22') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM22_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM23') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM23_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM23') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM23_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM24') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM24_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM24') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM24_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM25') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM25_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM25') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM25_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM26') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM26_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM26') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM26_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM27') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM27_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM27') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM27_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM28') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM28_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM28') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM28_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM29') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM29_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM29') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM29_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM30') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM30_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM30') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM30_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM31') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM31_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM31') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM31_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM32') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM32_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM32') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM32_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM33') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM33_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM33') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM33_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM34') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM34_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM34') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM34_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM35') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM35_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM35') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM35_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM36') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM36_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM36') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM36_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM37') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM37_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM37') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM37_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM38') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM38_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM38') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM38_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM39') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM39_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM39') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM39_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM40') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM40_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM40') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM40_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM41') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM41_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM41') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM41_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM42') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM42_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM42') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM42_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM43') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM43_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM43') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM43_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM44') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM44_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM44') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM44_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM45') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM45_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM45') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM45_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM46') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM46_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM46') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM46_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM47') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM47_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM47') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM47_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM48') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM48_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM48') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM48_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM49') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM49_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM49') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM49_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM50') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM50_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM50') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM50_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM51') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM51_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM51') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM51_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM52') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM52_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM52') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM52_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM53') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM53_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM53') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM53_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM54') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM54_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM54') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM54_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM55') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM55_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM55') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM55_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM56') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM56_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM56') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM56_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM57') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM57_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM57') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM57_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM58') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM58_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM58') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM58_BOX,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM59') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM59_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM59') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM59_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM60') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM60_REM,
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G1_NUM60') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM60_BOX 
		               		
		          FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
		          				   INNER JOIN OYSKU OS ON IT.SKUKEY = OS.SKUKEY AND OS.DIRTYP = '180'
		                           INNER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNRTO = BZ.PTNRKY AND BZ.PTNRTY = '0007'
		                           LEFT OUTER JOIN CARFX CF ON IT.OWNRKY = CF.OWNRKY AND CF.WAREKY = '2317' AND IT.PTNRTO = CF.PTNRKY
		                           LEFT OUTER JOIN CARMA CM ON IT.OWNRKY = CM.OWNRKY AND CM.WAREKY = '2317' AND CF.CARNUM = CM.CARNUM
		         WHERE IT.OWNRKY = '2300'
		           AND IT.XSTAT IN ('R','D')
		           AND IT.C00102 = 'Y'
		           <if test="RANGE_SQL != null and RANGE_SQL != ''"> 
						${RANGE_SQL}
				   </if>
		          		
		         GROUP BY IT.OWNRKY, IT.WAREKY, CM.DESC01, IT.PTNRTO, BZ.NAME01, IT.SKUKEY, SM.QTDUOM
		        )
		 GROUP BY ROLLUP (OWNRKY, CARNUM, PTNRTO, NAME01)
		 HAVING GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01) In (0,3,7)
	</select>
	
	<!-- **[OY16] 양산box수 조회  - 2 리스트 -->
	<select id="OY16_2_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT OWNRKY, 
		       CARNUM CARNUM, 
		       PTNRTO PTNRTO, 
		       CASE GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01) 
		       WHEN 0 THEN NAME01 
		       WHEN 3 THEN '소계' 
		       WHEN 7 THEN '총계' 
		       END PTNRTONM, 
		       DECODE(SUM(NUM01_BOX),0,'',SUM(NUM01_BOX)) AS NUM01_BOXS, 
		       DECODE(SUM(NUM02_BOX),0,'',SUM(NUM02_BOX)) AS NUM02_BOXS, 
		       DECODE(SUM(NUM03_BOX),0,'',SUM(NUM03_BOX)) AS NUM03_BOXS, 
		       DECODE(SUM(NUM04_BOX),0,'',SUM(NUM04_BOX)) AS NUM04_BOXS, 
		       DECODE(SUM(NUM05_BOX),0,'',SUM(NUM05_BOX)) AS NUM05_BOXS, 
		       DECODE(SUM(NUM06_BOX),0,'',SUM(NUM06_BOX)) AS NUM06_BOXS, 
		       DECODE(SUM(NUM01_REM),0,'',SUM(NUM01_REM)) AS NUM01_REMS, 
		       DECODE(SUM(NUM02_REM),0,'',SUM(NUM02_REM)) AS NUM02_REMS, 
		       DECODE(SUM(NUM03_REM),0,'',SUM(NUM03_REM)) AS NUM03_REMS, 
		       DECODE(SUM(NUM04_REM),0,'',SUM(NUM04_REM)) AS NUM04_REMS, 
		       DECODE(SUM(NUM05_REM),0,'',SUM(NUM05_REM)) AS NUM05_REMS, 
		       DECODE(SUM(NUM06_REM),0,'',SUM(NUM06_REM)) AS NUM06_REMS 
		  FROM ( 
		        SELECT IT.OWNRKY, 
		               NVL(CM.DESC01, '미배차') AS CARNUM, 
		               IT.PTNRTO, 
		               BZ.NAME01, 
		               CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM01') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM01_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM01') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM01_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM02') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM02_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM02') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM02_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM03') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM03_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM03') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM03_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM04') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM04_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM04') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM04_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM05') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM05_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM05') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM05_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM06') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM06_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G2_NUM06') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM06_BOX
		 
		          FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY 
		          				   INNER JOIN OYSKU OS ON IT.SKUKEY = OS.SKUKEY AND OS.DIRTYP = '181'
		                           INNER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNRTO = BZ.PTNRKY AND BZ.PTNRTY = '0007' 
		                           LEFT OUTER JOIN CARFX CF ON IT.OWNRKY = CF.OWNRKY AND CF.WAREKY = '2317' AND IT.PTNRTO = CF.PTNRKY 
		                           LEFT OUTER JOIN CARMA CM ON IT.OWNRKY = CM.OWNRKY AND CM.WAREKY = '2317' AND CF.CARNUM = CM.CARNUM 
		         WHERE IT.OWNRKY = '2300' 
		           AND IT.XSTAT IN ('R','D') 
		           AND IT.C00102 = 'Y' 
		           <if test="RANGE_SQL != null and RANGE_SQL!= ''"> 
						${RANGE_SQL}
				   </if> 
		           GROUP BY IT.OWNRKY, IT.WAREKY, CM.DESC01, IT.PTNRTO, BZ.NAME01, IT.SKUKEY, SM.QTDUOM 
		        ) 
		 GROUP BY ROLLUP (OWNRKY, CARNUM, PTNRTO, NAME01) 
		 HAVING GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01) IN (0,3,7)
	</select>
	
	<!-- **[OY16] 양산box수 조회  - 3 리스트 -->
	<select id="OY16_3_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT OWNRKY,
		       CARNUM CARNUM,
		       PTNRTO PTNRTO,
		       CASE GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01)
		       WHEN 0 THEN NAME01
		       WHEN 3 THEN '소계'
		       WHEN 7 THEN '총계'
		       END PTNRTONM,
		       DECODE(SUM(NUM01_BOX),0,'',SUM(NUM01_BOX)) AS NUM01_BOXS,
		       DECODE(SUM(NUM01_REM),0,'',SUM(NUM01_REM)) AS NUM01_REMS,
		       DECODE(SUM(NUM02_BOX),0,'',SUM(NUM02_BOX)) AS NUM02_BOXS,
		       DECODE(SUM(NUM02_REM),0,'',SUM(NUM02_REM)) AS NUM02_REMS,
		       DECODE(SUM(NUM03_BOX),0,'',SUM(NUM03_BOX)) AS NUM03_BOXS,
		       DECODE(SUM(NUM03_REM),0,'',SUM(NUM03_REM)) AS NUM03_REMS,
		       DECODE(SUM(NUM04_BOX),0,'',SUM(NUM04_BOX)) AS NUM04_BOXS,
		       DECODE(SUM(NUM04_REM),0,'',SUM(NUM04_REM)) AS NUM04_REMS,
		       DECODE(SUM(NUM05_BOX),0,'',SUM(NUM05_BOX)) AS NUM05_BOXS,
		       DECODE(SUM(NUM05_REM),0,'',SUM(NUM05_REM)) AS NUM05_REMS,
		       DECODE(SUM(NUM06_BOX),0,'',SUM(NUM06_BOX)) AS NUM06_BOXS,
		       DECODE(SUM(NUM06_REM),0,'',SUM(NUM06_REM)) AS NUM06_REMS,
		       DECODE(SUM(NUM07_BOX),0,'',SUM(NUM07_BOX)) AS NUM07_BOXS,
		       DECODE(SUM(NUM07_REM),0,'',SUM(NUM07_REM)) AS NUM07_REMS,
		       DECODE(SUM(NUM08_BOX),0,'',SUM(NUM08_BOX)) AS NUM08_BOXS,
		       DECODE(SUM(NUM08_REM),0,'',SUM(NUM08_REM)) AS NUM08_REMS,
		       DECODE(SUM(NUM09_BOX),0,'',SUM(NUM09_BOX)) AS NUM09_BOXS,
		       DECODE(SUM(NUM09_REM),0,'',SUM(NUM09_REM)) AS NUM09_REMS,
		       DECODE(SUM(NUM10_BOX),0,'',SUM(NUM10_BOX)) AS NUM10_BOXS,
		       DECODE(SUM(NUM10_REM),0,'',SUM(NUM10_REM)) AS NUM10_REMS,
		       DECODE(SUM(NUM11_BOX),0,'',SUM(NUM11_BOX)) AS NUM11_BOXS,
		       DECODE(SUM(NUM11_REM),0,'',SUM(NUM11_REM)) AS NUM11_REMS,
		       DECODE(SUM(NUM12_BOX),0,'',SUM(NUM12_BOX)) AS NUM12_BOXS,
		       DECODE(SUM(NUM12_REM),0,'',SUM(NUM12_REM)) AS NUM12_REMS,
		       DECODE(SUM(NUM13_BOX),0,'',SUM(NUM13_BOX)) AS NUM13_BOXS,
		       DECODE(SUM(NUM13_REM),0,'',SUM(NUM13_REM)) AS NUM13_REMS,
		       DECODE(SUM(NUM14_BOX),0,'',SUM(NUM14_BOX)) AS NUM14_BOXS,
		       DECODE(SUM(NUM14_REM),0,'',SUM(NUM14_REM)) AS NUM14_REMS,
		       DECODE(SUM(NUM15_BOX),0,'',SUM(NUM15_BOX)) AS NUM15_BOXS,
		       DECODE(SUM(NUM15_REM),0,'',SUM(NUM15_REM)) AS NUM15_REMS,
		       DECODE(SUM(NUM16_BOX),0,'',SUM(NUM16_BOX)) AS NUM16_BOXS,
		       DECODE(SUM(NUM16_REM),0,'',SUM(NUM16_REM)) AS NUM16_REMS,
		       DECODE(SUM(NUM17_BOX),0,'',SUM(NUM17_BOX)) AS NUM17_BOXS,
		       DECODE(SUM(NUM17_REM),0,'',SUM(NUM17_REM)) AS NUM17_REMS,
		       DECODE(SUM(NUM18_BOX),0,'',SUM(NUM18_BOX)) AS NUM18_BOXS,
		       DECODE(SUM(NUM18_REM),0,'',SUM(NUM18_REM)) AS NUM18_REMS,
		       DECODE(SUM(NUM19_BOX),0,'',SUM(NUM19_BOX)) AS NUM19_BOXS,
		       DECODE(SUM(NUM19_REM),0,'',SUM(NUM19_REM)) AS NUM19_REMS,
		       DECODE(SUM(NUM20_BOX),0,'',SUM(NUM20_BOX)) AS NUM20_BOXS,
		       DECODE(SUM(NUM20_REM),0,'',SUM(NUM20_REM)) AS NUM20_REMS,
		       DECODE(SUM(NUM21_BOX),0,'',SUM(NUM21_BOX)) AS NUM21_BOXS,
		       DECODE(SUM(NUM21_REM),0,'',SUM(NUM21_REM)) AS NUM21_REMS,
		       DECODE(SUM(NUM22_BOX),0,'',SUM(NUM22_BOX)) AS NUM22_BOXS,
		       DECODE(SUM(NUM22_REM),0,'',SUM(NUM22_REM)) AS NUM22_REMS,
		       DECODE(SUM(NUM23_BOX),0,'',SUM(NUM23_BOX)) AS NUM23_BOXS,
		       DECODE(SUM(NUM23_REM),0,'',SUM(NUM23_REM)) AS NUM23_REMS,
		       DECODE(SUM(NUM24_BOX),0,'',SUM(NUM24_BOX)) AS NUM24_BOXS,
		       DECODE(SUM(NUM24_REM),0,'',SUM(NUM24_REM)) AS NUM24_REMS,
		       DECODE(SUM(NUM25_BOX),0,'',SUM(NUM25_BOX)) AS NUM25_BOXS,
		       DECODE(SUM(NUM25_REM),0,'',SUM(NUM25_REM)) AS NUM25_REMS,
		       DECODE(SUM(NUM26_BOX),0,'',SUM(NUM26_BOX)) AS NUM26_BOXS,
		       DECODE(SUM(NUM26_REM),0,'',SUM(NUM26_REM)) AS NUM26_REMS,
		       DECODE(SUM(NUM27_BOX),0,'',SUM(NUM27_BOX)) AS NUM27_BOXS,
		       DECODE(SUM(NUM27_REM),0,'',SUM(NUM27_REM)) AS NUM27_REMS,
		       DECODE(SUM(NUM28_BOX),0,'',SUM(NUM28_BOX)) AS NUM28_BOXS,
		       DECODE(SUM(NUM28_REM),0,'',SUM(NUM28_REM)) AS NUM28_REMS,
		       DECODE(SUM(NUM29_BOX),0,'',SUM(NUM29_BOX)) AS NUM29_BOXS,
		       DECODE(SUM(NUM29_REM),0,'',SUM(NUM29_REM)) AS NUM29_REMS,
		       DECODE(SUM(NUM30_BOX),0,'',SUM(NUM30_BOX)) AS NUM30_BOXS,
		       DECODE(SUM(NUM30_REM),0,'',SUM(NUM30_REM)) AS NUM30_REMS,
		       DECODE(SUM(NUM31_BOX),0,'',SUM(NUM31_BOX)) AS NUM31_BOXS,
		       DECODE(SUM(NUM31_REM),0,'',SUM(NUM31_REM)) AS NUM31_REMS,
		       DECODE(SUM(NUM32_BOX),0,'',SUM(NUM32_BOX)) AS NUM32_BOXS,
		       DECODE(SUM(NUM32_REM),0,'',SUM(NUM32_REM)) AS NUM32_REMS,
		       DECODE(SUM(NUM33_BOX),0,'',SUM(NUM33_BOX)) AS NUM33_BOXS,
		       DECODE(SUM(NUM33_REM),0,'',SUM(NUM33_REM)) AS NUM33_REMS,
		       DECODE(SUM(NUM34_BOX),0,'',SUM(NUM34_BOX)) AS NUM34_BOXS,
		       DECODE(SUM(NUM34_REM),0,'',SUM(NUM34_REM)) AS NUM34_REMS,
		       DECODE(SUM(NUM35_BOX),0,'',SUM(NUM35_BOX)) AS NUM35_BOXS,
		       DECODE(SUM(NUM35_REM),0,'',SUM(NUM35_REM)) AS NUM35_REMS,
		       DECODE(SUM(NUM36_BOX),0,'',SUM(NUM36_BOX)) AS NUM36_BOXS,
		       DECODE(SUM(NUM36_REM),0,'',SUM(NUM36_REM)) AS NUM36_REMS,
		       DECODE(SUM(NUM37_BOX),0,'',SUM(NUM37_BOX)) AS NUM37_BOXS,
		       DECODE(SUM(NUM37_REM),0,'',SUM(NUM37_REM)) AS NUM37_REMS,
		       DECODE(SUM(NUM38_BOX),0,'',SUM(NUM38_BOX)) AS NUM38_BOXS,
		       DECODE(SUM(NUM38_REM),0,'',SUM(NUM38_REM)) AS NUM38_REMS,
		       DECODE(SUM(NUM39_BOX),0,'',SUM(NUM39_BOX)) AS NUM39_BOXS,
		       DECODE(SUM(NUM39_REM),0,'',SUM(NUM39_REM)) AS NUM39_REMS,
		       DECODE(SUM(NUM40_BOX),0,'',SUM(NUM40_BOX)) AS NUM40_BOXS,
		       DECODE(SUM(NUM40_REM),0,'',SUM(NUM40_REM)) AS NUM40_REMS,
		       DECODE(SUM(NUM41_BOX),0,'',SUM(NUM41_BOX)) AS NUM41_BOXS,
		       DECODE(SUM(NUM41_REM),0,'',SUM(NUM41_REM)) AS NUM41_REMS,
		       DECODE(SUM(NUM42_BOX),0,'',SUM(NUM42_BOX)) AS NUM42_BOXS,
		       DECODE(SUM(NUM42_REM),0,'',SUM(NUM42_REM)) AS NUM42_REMS,
		       DECODE(SUM(NUM43_BOX),0,'',SUM(NUM43_BOX)) AS NUM43_BOXS,
		       DECODE(SUM(NUM43_REM),0,'',SUM(NUM43_REM)) AS NUM43_REMS,
		       DECODE(SUM(NUM44_BOX),0,'',SUM(NUM44_BOX)) AS NUM44_BOXS,
		       DECODE(SUM(NUM44_REM),0,'',SUM(NUM44_REM)) AS NUM44_REMS,
		       DECODE(SUM(NUM45_BOX),0,'',SUM(NUM45_BOX)) AS NUM45_BOXS,
		       DECODE(SUM(NUM45_REM),0,'',SUM(NUM45_REM)) AS NUM45_REMS,
		       DECODE(SUM(NUM46_BOX),0,'',SUM(NUM46_BOX)) AS NUM46_BOXS,
		       DECODE(SUM(NUM46_REM),0,'',SUM(NUM46_REM)) AS NUM46_REMS,
		       DECODE(SUM(NUM47_BOX),0,'',SUM(NUM47_BOX)) AS NUM47_BOXS,
		       DECODE(SUM(NUM47_REM),0,'',SUM(NUM47_REM)) AS NUM47_REMS,
		       DECODE(SUM(NUM48_BOX),0,'',SUM(NUM48_BOX)) AS NUM48_BOXS,
		       DECODE(SUM(NUM48_REM),0,'',SUM(NUM48_REM)) AS NUM48_REMS,
		       DECODE(SUM(NUM49_BOX),0,'',SUM(NUM49_BOX)) AS NUM49_BOXS,
		       DECODE(SUM(NUM49_REM),0,'',SUM(NUM49_REM)) AS NUM49_REMS,
		       DECODE(SUM(NUM50_BOX),0,'',SUM(NUM50_BOX)) AS NUM50_BOXS,
		       DECODE(SUM(NUM50_REM),0,'',SUM(NUM50_REM)) AS NUM50_REMS,
		       DECODE(SUM(NUM51_BOX),0,'',SUM(NUM51_BOX)) AS NUM51_BOXS,
		       DECODE(SUM(NUM51_REM),0,'',SUM(NUM51_REM)) AS NUM51_REMS,
		       DECODE(SUM(NUM52_BOX),0,'',SUM(NUM52_BOX)) AS NUM52_BOXS,
		       DECODE(SUM(NUM52_REM),0,'',SUM(NUM52_REM)) AS NUM52_REMS,
		       DECODE(SUM(NUM53_BOX),0,'',SUM(NUM53_BOX)) AS NUM53_BOXS,
		       DECODE(SUM(NUM53_REM),0,'',SUM(NUM53_REM)) AS NUM53_REMS
		  FROM (
		        SELECT IT.OWNRKY,
		               NVL(CM.DESC01, '미배차') AS CARNUM,
		               IT.PTNRTO,
		               BZ.NAME01,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM01') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM01_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM02') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM02_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM01') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM01_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM02') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM02_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM03') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM03_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM03') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM03_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM04') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM04_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM04') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM04_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM05') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM05_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM05') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM05_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM06') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM06_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM06') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM06_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM07') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM07_REM,   
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM07') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM07_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM08') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM08_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM08') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM08_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM09') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM09_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM09') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM09_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM10') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM10_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM10') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM10_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM11') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM11_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM11') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM11_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM12') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM12_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM12') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM12_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM13') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM13_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM13') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM13_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM14') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM14_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM14') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM14_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM15') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM15_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM15') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM15_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM16') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM16_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM16') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM16_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM17') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM17_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM17') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM17_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM18') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM18_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM18') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM18_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM19') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM19_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM19') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM19_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM20') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM20_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM20') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM20_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM21') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM21_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM21') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM21_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM22') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM22_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM22') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM22_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM23') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM23_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM23') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM23_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM24') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM24_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM24') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM24_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM25') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM25_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM25') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM25_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM26') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM26_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM26') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM26_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM27') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM27_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM27') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM27_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM28') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM28_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM28') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM28_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM29') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM29_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM29') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM29_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM30') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM30_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM30') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM30_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM31') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM31_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM31') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM31_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM32') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM32_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM32') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM32_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM33') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM33_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM33') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM33_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM34') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM34_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM34') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM34_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM35') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM35_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM35') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM35_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM36') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM36_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM36') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM36_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM37') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM37_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM37') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM37_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM38') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM38_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM38') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM38_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM39') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM39_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM39') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM39_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM40') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM40_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM40') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM40_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM41') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM41_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM41') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM41_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM42') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM42_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM42') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM42_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM43') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM43_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM43') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM43_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM44') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM44_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM44') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM44_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM45') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM45_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM45') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM45_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM46') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM46_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM46') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM46_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM47') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM47_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM47') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM47_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM48') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM48_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM48') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM48_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM49') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM49_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM49') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM49_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM50') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM50_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM50') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM50_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM51') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM51_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM51') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM51_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM52') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM52_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM52') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM52_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM53') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM53_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G3_NUM53') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM53_BOX
					   
		          FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
		          				   INNER JOIN OYSKU OS ON IT.SKUKEY = OS.SKUKEY AND OS.DIRTYP = '182'
		                           INNER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNRTO = BZ.PTNRKY AND BZ.PTNRTY = '0007'
		                           LEFT OUTER JOIN CARFX CF ON IT.OWNRKY = CF.OWNRKY AND CF.WAREKY = '2317' AND IT.PTNRTO = CF.PTNRKY
		                           LEFT OUTER JOIN CARMA CM ON IT.OWNRKY = CM.OWNRKY AND CM.WAREKY = '2317' AND CF.CARNUM = CM.CARNUM
		         WHERE IT.OWNRKY = '2300'
		           AND IT.XSTAT IN ('R','D')
		           AND IT.C00102 = 'Y'
		           <if test="RANGE_SQL != null and RANGE_SQL != ''"> 
					   ${RANGE_SQL}
				   </if>
		           
		           GROUP BY IT.OWNRKY, IT.WAREKY, CM.DESC01, IT.PTNRTO, BZ.NAME01, IT.SKUKEY, SM.QTDUOM
		        )
		 GROUP BY ROLLUP (OWNRKY, CARNUM, PTNRTO, NAME01)
		 HAVING GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01) IN (0,3,7)
	</select>
	
	<!-- **[OY16] 양산box수 조회  - 4 리스트 -->
	<select id="OY16_4_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT OWNRKY,
		       CARNUM CARNUM,
		       PTNRTO PTNRTO,
		       CASE GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01)
		       WHEN 0 THEN NAME01
		       WHEN 3 THEN '소계'
		       WHEN 7 THEN '총계'
		       END PTNRTONM,
		       DECODE(SUM(NUM01_BOX),0,'',SUM(NUM01_BOX)) AS NUM01_BOXS,
		       DECODE(SUM(NUM01_REM),0,'',SUM(NUM01_REM)) AS NUM01_REMS,
		       DECODE(SUM(NUM02_BOX),0,'',SUM(NUM02_BOX)) AS NUM02_BOXS,
		       DECODE(SUM(NUM02_REM),0,'',SUM(NUM02_REM)) AS NUM02_REMS,
		       DECODE(SUM(NUM03_BOX),0,'',SUM(NUM03_BOX)) AS NUM03_BOXS,
		       DECODE(SUM(NUM03_REM),0,'',SUM(NUM03_REM)) AS NUM03_REMS,
		       DECODE(SUM(NUM04_BOX),0,'',SUM(NUM04_BOX)) AS NUM04_BOXS,
		       DECODE(SUM(NUM04_REM),0,'',SUM(NUM04_REM)) AS NUM04_REMS,
		       DECODE(SUM(NUM05_BOX),0,'',SUM(NUM05_BOX)) AS NUM05_BOXS,
		       DECODE(SUM(NUM05_REM),0,'',SUM(NUM05_REM)) AS NUM05_REMS,
		       DECODE(SUM(NUM06_BOX),0,'',SUM(NUM06_BOX)) AS NUM06_BOXS,
		       DECODE(SUM(NUM06_REM),0,'',SUM(NUM06_REM)) AS NUM06_REMS,
		       DECODE(SUM(NUM07_BOX),0,'',SUM(NUM07_BOX)) AS NUM07_BOXS,
		       DECODE(SUM(NUM07_REM),0,'',SUM(NUM07_REM)) AS NUM07_REMS,
		       DECODE(SUM(NUM08_BOX),0,'',SUM(NUM08_BOX)) AS NUM08_BOXS,
		       DECODE(SUM(NUM08_REM),0,'',SUM(NUM08_REM)) AS NUM08_REMS,
		       DECODE(SUM(NUM09_BOX),0,'',SUM(NUM09_BOX)) AS NUM09_BOXS,
		       DECODE(SUM(NUM09_REM),0,'',SUM(NUM09_REM)) AS NUM09_REMS,
		       DECODE(SUM(NUM10_BOX),0,'',SUM(NUM10_BOX)) AS NUM10_BOXS,
		       DECODE(SUM(NUM10_REM),0,'',SUM(NUM10_REM)) AS NUM10_REMS,
		       DECODE(SUM(NUM11_BOX),0,'',SUM(NUM11_BOX)) AS NUM11_BOXS,
		       DECODE(SUM(NUM11_REM),0,'',SUM(NUM11_REM)) AS NUM11_REMS,
		       DECODE(SUM(NUM12_BOX),0,'',SUM(NUM12_BOX)) AS NUM12_BOXS,
		       DECODE(SUM(NUM12_REM),0,'',SUM(NUM12_REM)) AS NUM12_REMS,
		       DECODE(SUM(NUM13_BOX),0,'',SUM(NUM13_BOX)) AS NUM13_BOXS,
		       DECODE(SUM(NUM13_REM),0,'',SUM(NUM13_REM)) AS NUM13_REMS,
		       DECODE(SUM(NUM14_BOX),0,'',SUM(NUM14_BOX)) AS NUM14_BOXS,
		       DECODE(SUM(NUM14_REM),0,'',SUM(NUM14_REM)) AS NUM14_REMS,
		       DECODE(SUM(NUM15_BOX),0,'',SUM(NUM15_BOX)) AS NUM15_BOXS,
		       DECODE(SUM(NUM15_REM),0,'',SUM(NUM15_REM)) AS NUM15_REMS,
		       DECODE(SUM(NUM16_BOX),0,'',SUM(NUM16_BOX)) AS NUM16_BOXS,
		       DECODE(SUM(NUM16_REM),0,'',SUM(NUM16_REM)) AS NUM16_REMS,
		       DECODE(SUM(NUM17_BOX),0,'',SUM(NUM17_BOX)) AS NUM17_BOXS,
		       DECODE(SUM(NUM17_REM),0,'',SUM(NUM17_REM)) AS NUM17_REMS,
		       DECODE(SUM(NUM18_BOX),0,'',SUM(NUM18_BOX)) AS NUM18_BOXS,
		       DECODE(SUM(NUM18_REM),0,'',SUM(NUM18_REM)) AS NUM18_REMS,
		       DECODE(SUM(NUM19_BOX),0,'',SUM(NUM19_BOX)) AS NUM19_BOXS,
		       DECODE(SUM(NUM19_REM),0,'',SUM(NUM19_REM)) AS NUM19_REMS,
		       DECODE(SUM(NUM20_BOX),0,'',SUM(NUM20_BOX)) AS NUM20_BOXS,
		       DECODE(SUM(NUM20_REM),0,'',SUM(NUM20_REM)) AS NUM20_REMS
		  FROM (
		        SELECT IT.OWNRKY,
		               NVL(CM.DESC01, '미배차') AS CARNUM,
		               IT.PTNRTO,
		               BZ.NAME01,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM01') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM01_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM01') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM01_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM02') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM02_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM02') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM02_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM03') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM03_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM03') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM03_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM04') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM04_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM04') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM04_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM05') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM05_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM05') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM05_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM06') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM06_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM06') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM06_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM07') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM07_REM,   
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM07') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM07_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM08') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM08_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM08') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM08_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM09') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM09_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM09') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM09_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM10') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM10_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM10') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM10_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM11') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM11_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM11') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM11_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM12') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM12_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM12') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM12_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM13') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM13_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM13') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM13_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM14') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM14_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM14') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM14_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM15') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM15_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM15') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM15_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM16') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM16_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM16') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM16_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM17') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM17_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM17') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM17_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM18') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM18_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM18') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM18_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM19') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM19_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM19') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM19_BOX,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM20') THEN MOD(SUM(IT.QTYREQ), SM.QTDUOM) ELSE 0 END AS NUM20_REM,
					   CASE IT.SKUKEY WHEN (SELECT SKUKEY FROM OYSKU WHERE LABEL = 'G4_NUM20') THEN TRUNC(SUM(IT.QTYREQ) / SM.QTDUOM) ELSE 0 END AS NUM20_BOX
					   
		          FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
		          				   INNER JOIN OYSKU OS ON IT.SKUKEY = OS.SKUKEY AND OS.DIRTYP = '183'
		                           INNER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNRTO = BZ.PTNRKY AND BZ.PTNRTY = '0007'
		                           LEFT OUTER JOIN CARFX CF ON IT.OWNRKY = CF.OWNRKY AND CF.WAREKY = '2317' AND IT.PTNRTO = CF.PTNRKY
		                           LEFT OUTER JOIN CARMA CM ON IT.OWNRKY = CM.OWNRKY AND CM.WAREKY = '2317' AND CF.CARNUM = CM.CARNUM
		         WHERE IT.OWNRKY = '2300'
		           AND IT.XSTAT IN ('R','D')
		           AND IT.C00102 = 'Y'
		           <if test="RANGE_SQL != null and RANGE_SQL != ''"> 
						${RANGE_SQL}
				   </if>
		           GROUP BY IT.OWNRKY, IT.WAREKY, CM.DESC01, IT.PTNRTO, BZ.NAME01, IT.SKUKEY, SM.QTDUOM
		        )
		 GROUP BY ROLLUP (OWNRKY, CARNUM, PTNRTO, NAME01)
		 HAVING GROUPING_ID(OWNRKY, CARNUM, PTNRTO, NAME01) IN (0,3,7)
	</select>
	
	<!-- **[OY01] 이고등록 (오양)헤더 저장 후 조회 -->
	<select id="OY01_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT A.MANDT,
		       A.OWNRKY,
		       A.WAREKY,
		       A.WARESR,
		       A.WARETG,
		       A.DOCUTY,
		       B.SHORTX as DOCUTYNM,
		       A.ORDTYP,
		       A.ORDDAT,
		       A.SVBELN,
		       A.OTRQDT,
		       A.PTNRTO,
		       A.DIRDVY,
		       A.DIRSUP,
		       A.PTNROD,
		       A.CUSRID,
		       A.CUNAME,
		       A.CUPOST,
		       A.CUNATN,
		       A.CUTEL1,
		       A.CUTEL2,
		       A.CUMAIL,
		       A.CUADDR,
		       A.CTNAME,
		       A.CTTEL1,
		       A.SALENM,
		       A.SALTEL,
		       A.C00102
		  FROM IFWMS113 A INNER JOIN DOCTM B ON A.DOCUTY = B.DOCUTY
		 WHERE A.DOCUTY = #{DOCUTY}
		<if test='SVBELN != null and SVBELN != ""'>
		   AND A.SVBELN LIKE #{SVBELN}
		</if>
		   AND A.XSTAT = 'R' 
		<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
			${RANGE_SQL}
	   </if>
		 GROUP BY A.MANDT, A.OWNRKY, A.WAREKY, A.WARESR, A.WARETG, A.DOCUTY, B.SHORTX, A.ORDTYP, A.ORDDAT,
		          A.SVBELN, A.OTRQDT, A.PTNRTO, A.DIRDVY, A.DIRSUP, A.PTNROD, A.CUSRID, A.CUNAME, A.CUPOST,
		          A.CUNATN, A.CUTEL1, A.CUTEL2, A.CUMAIL, A.CUADDR, A.CTNAME, A.CTTEL1, A.SALENM, A.SALTEL, A.C00102
		 ORDER BY SVBELN 	
	</select>
	
	
	<!-- **[OY01] 이고등록 (오양)아이템  조회 -->
	<select id="OY01_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		<!-- 공장재고품목 -->
		<if test='SCCHECK !=null  and SCCHECK.equalsIgnoreCase("001")'>
		    SELECT SM.SKUKEY AS SKUKEY,
		           SM.DESC01 AS DESC01,
		           SM.DESC02 AS DESC02,
		           SM.NETWGT AS NETWGT,
		           SM.QTDUOM AS BXIQTY,
		           SM.QTDUOM AS QTDUOM,
		           SM.SKUG03 AS SKUG03,
		           SM.QTYSTD AS QTYSTD,
		           SM.DUOMKY AS DUOMKY,
		           TS.TRFTYP AS TRFTYP,
		           TRUNC(NVL(MAX(RQ.QTYREQ), 0) / SM.QTDUOM) AS QTYBOX,      
		           MOD(NVL(MAX(RQ.QTYREQ), 0), SM.QTDUOM) AS QTYREM,         
		           TRUNC(NVL(MAX(RQ.QTYREQ), 0) / SM.QTYSTD) AS QTYPLT,      
		           NVL(MAX(ST.OUTSTK), 0) AS OUTSTK,   
		           NVL(MAX(OT.OUTREQ), 0) AS OUTREQ,   
		           NVL(MAX(ST2.INNSTK), 0) AS INNSTK,   
		           NVL(MAX(RV.INNREQ), 0) AS INNREQ,   
		           NVL(MAX(W1.WHQTY1), 0) AS WHQTY1,   
		           NVL(MAX(W2.WHQTY2), 0) AS WHQTY2,   
		           NVL(MAX(W3.WHQTY3), 0) AS WHQTY3,   
		           NVL(MAX(W4.WHQTY4), 0) AS WHQTY4,   
		           NVL(MAX(W5.WHQTY5), 0) AS WHQTY5,
		           NVL(MAX(RQ.QTYREQ), 0) AS WHQTY6,
		           NVL(MAX(L1.LACKQTY), 0) AS NUM01,   
		           NVL(MAX(L2.LACKQTY), 0) AS NUM02,   
		           NVL(MAX(L3.LACKQTY), 0) AS NUM03,   
		           NVL(MAX(L4.LACKQTY), 0) AS NUM04,   
		           NVL(MAX(L5.LACKQTY), 0) AS NUM05,
		           NVL(MAX(L6.LACKQTY), 0) AS NUM06,
		           NVL(MAX(L7.LACKQTY), 0) AS NUM07,
		           ' ' AS TEXT01,
		           0 AS QTYORG,
		           0 AS BOXQTY,
			       SM.SKUG02 AS SKUG02,
			       SM.ASKU02 AS ASKU02,
			       SM.SKUG05 AS SKUG05,
			       SM.GRSWGT AS GRSWGT,
			       SM.SKUG04 AS SKUG04,
			       SM.ASKU03 AS ASKU03,
			       SM.LENGTH AS LENGTH,
			       SM.WIDTHW AS WIDTHW,
			       SM.HEIGHT AS HEIGHT,
			       SM.CUBICM AS CUBICM,
			       SM.CAPACT AS CAPACT,
			       SM.ASKU01 AS ASKU01,
			       SM.WGTUNT AS WGTUNT,
			       0 AS UOMKEY,
			       SM.ASKU04 AS ASKU04,
			       SM.ASKU05 AS ASKU05,
			       SM.EANCOD AS EANCOD,
			       SM.GTINCD AS GTINCD,
			       SM.SKUG01 AS SKUG01,
			       SM.QTYSTD AS PLIQTY,
			       0 AS REMQTY,
			       0 AS PLTQTY,
			       ' ' AS SVBELN,
		           ' ' AS STATUS,
		           ' ' AS TDATE,
		           ' ' AS XDATS,
		           ' ' AS XSTAT,
		           ' ' AS XTIMS,
		           ' ' AS ERTXT
		      FROM TRFSK TS INNER JOIN SKUMA SM ON SM.OWNRKY = '2300' AND SM.SKUKEY = TS.SKUKEY
		                    LEFT OUTER JOIN (SELECT SKUKEY, SUM(QTSIWH-QTSALO-QTSPMO-QTSPMI) AS OUTSTK
		                                       FROM STKKY 
		                                      WHERE LOTA06 = '00' AND WAREKY = #{WARESR}
		                                      GROUP BY SKUKEY) ST ON ST.SKUKEY = SM.SKUKEY
		                    LEFT OUTER JOIN (SELECT SKUKEY, SUM(QTSIWH-QTSALO-QTSPMO-QTSPMI) AS INNSTK
		                                       FROM STKKY 
		                                      WHERE LOTA06 = '00' AND WAREKY = #{WARETG}
		                                      GROUP BY SKUKEY) ST2 ON ST2.SKUKEY = SM.SKUKEY
		                    LEFT OUTER JOIN (
		                      SELECT SKUKEY, SUM(QTYREQ) QTYREQ FROM (
		                        SELECT V.SKUKEY, (NVL(SUM(STY.QTSIWH),0) + SUM(NVL(V.INNQTY,0)) - MAX(NVL(V.OUTQTY,0))) * -1 AS QTYREQ
		
		                                       FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.SKUKEY = V.SKUKEY AND STY.WAREKY = V.WAREKY AND STY.LOTA06 = '00'
		                                      WHERE 1 = 1
		                                        AND V.WAREKY  IN ('2319','2320','2321','2322','2323')
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
												   <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''"> 
														${RANGE_SQL2}
												   </if>
		                                     GROUP BY V.SKUKEY,V.WAREKY
		                                      HAVING((NVL(SUM(STY.QTSIWH),0) + SUM(NVL(V.INNQTY,0)) - MAX(NVL(V.OUTQTY,0)))) &lt; 1) GROUP BY SKUKEY) RQ ON SM.SKUKEY = RQ.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS OUTREQ
		                                        FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                      WHERE V.WAREKY = #{WARESR}
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                    ) OT ON SM.SKUKEY = OT.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS INNREQ
		                                        FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                      WHERE V.WAREKY = #{WARETG}
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                    ) RV ON SM.SKUKEY = RV.SKUKEY              
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY1
		                                        FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                      WHERE V.WAREKY = '2319'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                    ) W1 ON SM.SKUKEY = W1.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY2
		                                       FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                      WHERE V.WAREKY = '2320'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                    HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                    ) W2 ON SM.SKUKEY = W2.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY3
		                                        FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                      WHERE V.WAREKY = '2321'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                    ) W3 ON SM.SKUKEY = W3.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY4
		                                       FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                      WHERE V.WAREKY = '2322'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                     ) W4 ON SM.SKUKEY = W4.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY5
		                                       FROM V_WMS_OY_STOCK V 
		                                       LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
		                                       WHERE V.WAREKY = '2323'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                      HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
		                                     ) W5 ON SM.SKUKEY = W5.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY= #{WARESR}
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L1 ON SM.SKUKEY = L1.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY = #{WARETG}
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L2 ON SM.SKUKEY = L2.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY = '2319'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L3 ON SM.SKUKEY = L3.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY = '2320'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L4 ON SM.SKUKEY = L4.SKUKEY
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY = '2321'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L5 ON SM.SKUKEY = L5.SKUKEY 
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY = '2322'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L6 ON SM.SKUKEY = L6.SKUKEY        
		                    LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, MAX(NVL(V.QTYORD,0)) AS LACKQTY
		                                       FROM V_WMS_OY_STOCK V  
		                                      WHERE V.WAREKY = '2323'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
		                                      GROUP BY V.WAREKY, V.SKUKEY
		                                     ) L7 ON SM.SKUKEY = L7.SKUKEY      
		     WHERE TS.WAREKY = #{WARESR}
		     GROUP BY SM.SKUKEY, SM.DESC01, SM.DESC02, SM.NETWGT, SM.QTDUOM, SM.QTDUOM, SM.SKUG03, SM.QTYSTD, SM.DUOMKY, TS.TRFTYP, 
			          SM.SKUG02, SM.ASKU02, SM.SKUG05, SM.GRSWGT, SM.SKUG04, SM.ASKU03, SM.LENGTH, SM.WIDTHW, SM.HEIGHT, SM.CUBICM,
			          SM.CAPACT, SM.ASKU01, SM.WGTUNT, SM.ASKU04, SM.ASKU05, SM.EANCOD, SM.GTINCD, SM.SKUG01, SM.QTYSTD
		     ORDER BY NVL(MAX(RQ.QTYREQ), 0) DESC, TS.TRFTYP
		</if>
		
		<!-- 부족재고 -->
		<if test='SCCHECK !=null  and SCCHECK.equalsIgnoreCase("002")'>
			SELECT SM.SKUKEY AS SKUKEY,
			       SM.DESC01 AS DESC01,
			       SM.DESC02 AS DESC02,
			       SM.NETWGT AS NETWGT,
			       SM.QTDUOM AS BXIQTY,
			       SM.QTDUOM AS QTDUOM,
			       SM.SKUG03 AS SKUG03,
			       SM.QTYSTD AS QTYSTD,     
			       SM.DUOMKY AS DUOMKY,
			       TRUNC(NVL(RQ.QTYREQ, 0) / SM.QTDUOM) AS QTYBOX,     
			       MOD(NVL(RQ.QTYREQ, 0), SM.QTDUOM) AS QTYREM,        
			       TRUNC(NVL(RQ.QTYREQ, 0) / SM.QTYSTD) AS QTYPLT,     
			       NVL(ST.OUTSTK, 0) AS OUTSTK,   
			       NVL(OT.OUTREQ, 0) AS OUTREQ,   
			       NVL(ST2.INNSTK, 0) AS INNSTK,   
			       NVL(RV.INNREQ, 0) AS INNREQ,   
			       NVL(W1.WHQTY1, 0) AS WHQTY1,   
			       NVL(W2.WHQTY2, 0) AS WHQTY2,   
			       NVL(W3.WHQTY3, 0) AS WHQTY3,   
			       NVL(W4.WHQTY4, 0) AS WHQTY4,   
			       NVL(W5.WHQTY5, 0) AS WHQTY5,
			       NVL(RQ.QTYREQ, 0) AS WHQTY6,
		           ' ' AS TEXT01,
		           0 AS QTYORG,
		           0 AS BOXQTY,
			       SM.SKUG02 AS SKUG02,
			       SM.ASKU02 AS ASKU02,
			       SM.SKUG05 AS SKUG05,
			       SM.GRSWGT AS GRSWGT,
			       SM.SKUG04 AS SKUG04,
			       SM.ASKU03 AS ASKU03,
			       SM.LENGTH AS LENGTH,
			       SM.WIDTHW AS WIDTHW,
			       SM.HEIGHT AS HEIGHT,
			       SM.CUBICM AS CUBICM,
			       SM.CAPACT AS CAPACT,
			       SM.ASKU01 AS ASKU01,
			       SM.WGTUNT AS WGTUNT,
			       0 AS UOMKEY,
			       SM.ASKU04 AS ASKU04,
			       SM.ASKU05 AS ASKU05,
			       SM.EANCOD AS EANCOD,
			       SM.GTINCD AS GTINCD,
			       SM.SKUG01 AS SKUG01,
			       SM.QTYSTD AS PLIQTY,
		           0 AS NUM01,   
		           0 AS NUM02,   
		           0 AS NUM03,   
		           0 AS NUM04,   
		           0 AS NUM05,
		           0 AS NUM06,
		           0 AS NUM07,
			       0 AS REMQTY,
			       0 AS PLTQTY,
			       ' ' AS SVBELN,
		           ' ' AS STATUS,
		           ' ' AS TDATE,
		           ' ' AS XDATS,
		           ' ' AS XSTAT,
		           ' ' AS XTIMS,
		           ' ' AS ERTXT    
			  FROM SKUMA SM 
			                LEFT OUTER JOIN (SELECT SKUKEY, SUM(QTSIWH-QTSALO-QTSPMO-QTSPMI) AS OUTSTK
			                                       FROM STKKY 
			                                      WHERE LOTA06 = '00' AND WAREKY = #{WARESR}
			                                      GROUP BY SKUKEY) ST ON ST.SKUKEY = SM.SKUKEY
			                LEFT OUTER JOIN (SELECT SKUKEY, SUM(QTSIWH-QTSALO-QTSPMO-QTSPMI) AS INNSTK
			                                       FROM STKKY 
			                                      WHERE LOTA06 = '00' AND WAREKY = #{WARETG}
			                                      GROUP BY SKUKEY) ST2 ON ST2.SKUKEY = SM.SKUKEY
			                LEFT OUTER JOIN (SELECT SKUKEY, SUM(QTYREQ) QTYREQ FROM (
			                                     SELECT V.SKUKEY, (NVL(SUM(STY.QTSIWH),0) + SUM(NVL(V.INNQTY,0)) - MAX(NVL(V.OUTQTY,0))) * -1 AS QTYREQ
			                                       FROM V_WMS_OY_STOCK V 
			                                       LEFT OUTER JOIN STKKY STY ON STY.SKUKEY = V.SKUKEY AND STY.WAREKY = V.WAREKY AND STY.LOTA06 = '00'
			                                        WHERE 1 = 1
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
												   <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''"> 
														${RANGE_SQL2}
												   </if>
			                                          AND V.WAREKY NOT IN ('2315','2316','2317','2318')
			                                  GROUP BY V.SKUKEY,V.WAREKY
			                                 HAVING((NVL(SUM(STY.QTSIWH),0) + SUM(NVL(V.INNQTY,0)) - MAX(NVL(V.OUTQTY,0)))) &lt; 1) GROUP BY SKUKEY ) RQ ON SM.SKUKEY = RQ.SKUKEY
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS OUTREQ
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			
			                                  WHERE V.WAREKY = #{WARESR}
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                  HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                 ) OT ON SM.SKUKEY = OT.SKUKEY
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS INNREQ
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			                                  WHERE V.WAREKY = #{WARETG}
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                  HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                ) RV ON SM.SKUKEY = RV.SKUKEY              
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY1
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			                                  WHERE V.WAREKY = '2319'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                     HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                ) W1 ON SM.SKUKEY = W1.SKUKEY
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY2
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			                                  WHERE V.WAREKY = '2320'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                  HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                 ) W2 ON SM.SKUKEY = W2.SKUKEY
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY3
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			                                  WHERE V.WAREKY = '2321'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                  HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                 ) W3 ON SM.SKUKEY = W3.SKUKEY
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY4
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			                                  WHERE V.WAREKY = '2322'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                  HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                 ) W4 ON SM.SKUKEY = W4.SKUKEY
			                LEFT OUTER JOIN (SELECT V.WAREKY, V.SKUKEY, NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0)) AS WHQTY5
			                                   FROM V_WMS_OY_STOCK V 
			                                   LEFT OUTER JOIN STKKY STY ON STY.WAREKY = V.WAREKY AND STY.SKUKEY = V.SKUKEY AND STY.LOTA06 = '00'
			                                  WHERE V.WAREKY = '2323'
													<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
														${RANGE_SQL}
												   </if>
			                                  GROUP BY V.WAREKY, V.SKUKEY
			                                  HAVING(NVL(SUM(STY.QTSIWH),0) + MAX(NVL(V.INNQTY,0) - NVL(V.OUTQTY,0))) &lt; 1
			                                ) W5 ON SM.SKUKEY = W5.SKUKEY
			                
			 WHERE SM.OWNRKY = '2300'
			   AND (NVL(RQ.QTYREQ, 0) != 0 OR NVL(OT.OUTREQ, 0) != 0 OR NVL(RV.INNREQ, 0) != 0 OR  NVL(W1.WHQTY1, 0) != 0 OR NVL(W2.WHQTY2, 0) != 0 OR NVL(W3.WHQTY3, 0) != 0 OR NVL(W4.WHQTY4, 0) != 0 OR NVL(W5.WHQTY5, 0) != 0)
			 ORDER BY NVL(RQ.QTYREQ, 0) DESC		
		</if>
	</select>
	
	
	<!-- **[OY01] 이고등록 (오양)아이템  저장 후 조회 -->
	<select id="OY01_ITEM2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT A.SVBELN
			 , S.SKUKEY
			 , S.DESC02
			 , S.DESC01
			 , A.TEXT01
			 , A.STATUS
			 , A.TDATE
			 , A.XDATS
			 , A.XTIMS
			 , A.XSTAT
			 , A.ERTXT
			 , A.QTYORG
		     , S.QTDUOM AS BXIQTY
		     , S.QTYSTD AS PLIQTY
		     , NVL(  TRUNC((A.QTYREQ) / DECODE(S.QTYSTD, 0, NULL, S.QTYSTD )) ,0) PLTQTY
		     , NVL(  TRUNC((A.QTYREQ) / DECODE(S.QTDUOM, 0, NULL, S.QTDUOM )) ,0) BOXQTY
		     , NVL(MOD(A.QTYREQ, S.QTDUOM),0) AS REMQTY
		     , NVL((SELECT SUM(SU.QTSIWH) FROM STKKY SU 
			         WHERE SU.OWNRKY = A.OWNRKY 
			           AND SU.WAREKY = A.WAREKY 
			           AND SU.SKUKEY = A.SKUKEY
			           AND SU.AREAKY NOT IN ('SHP','SYS')
			           AND (SU.QTSIWH > 0 OR SU.QTSPMI >0) 
			           AND ( CASE WHEN A.DOCUTY = '266' THEN '00' 
			                      WHEN A.DOCUTY = '267' THEN '20' END ) = SU.LOTA06
		     
		    	  ),0) TOQTSIWH
			 , S.SKUG02
			 , S.SKUG05
			 , S.GRSWGT
			 , S.NETWGT
			 , S.SKUG04
			 , S.ASKU03
			 , S.LENGTH
			 , S.WIDTHW
			 , S.HEIGHT
			 , S.CUBICM
			 , S.CAPACT
			 , S.DUOMKY
			 , S.ASKU01
			 , S.WGTUNT
			 , 0 AS UOMKEY
			 , S.ASKU04
			 , S.ASKU05
			 , S.EANCOD
			 , S.GTINCD
			 , S.SKUG01
	         , 0 AS WHQTY1   
	         , 0 AS WHQTY2   
	         , 0 AS WHQTY3   
	         , 0 AS WHQTY4   
	         , 0 AS WHQTY5
	         , 0 AS WHQTY6
	         , 0 AS NUM01  
	         , 0 AS NUM02   
	         , 0 AS NUM03   
	         , 0 AS NUM04   
	         , 0 AS NUM05
	         , 0 AS NUM06
	         , 0 AS NUM07
	         , 0 AS OUTSTK   
	         , 0 AS OUTREQ   
	         , 0 AS INNSTK   
	         , 0 AS INNREQ
		  FROM IFWMS113 A
		       INNER JOIN DOCTM B ON A.DOCUTY = B.DOCUTY
		       INNER JOIN SKUMA S ON S.OWNRKY = A.OWNRKY AND S.SKUKEY = A.SKUKEY
		 WHERE A.DOCUTY IN ( '266','267')
		   AND A.XSTAT = 'R'
		   AND A.SVBELN = #{SVBELN}
	</select>
	
	
	
	<!-- **[OY02] 출고지시(오양)헤더  조회 -->
	<select id="OY02_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT I.SVBELN AS KEY,
		       I.OWNRKY AS OWNRKY,
		       MAX(I.SKUG05) AS SKUG05,
		       I.WAREKY AS WAREKY,
		       I.WARESR AS WARESR,
		       I.DOCUTY AS DOCUTY,
		       I.ORDTYP AS ORDTYP,
		       I.ORDDAT AS ORDDAT,
		       I.ERPCDT AS ERPCDT,
		       I.SVBELN AS SVBELN,
		       I.OTRQDT AS OTRQDT,
		       I.PTNRTO AS PTNRTO,
		       B.NAME01 AS PTNRTONM,
		       I.PTNROD AS PTNROD,
		       B2.NAME01 AS PTNRODNM,
		       I.DIRDVY AS DIRDVY,
		       I.DIRSUP AS DIRSUP,
		       I.CUSRID AS CUSRID,
		       I.CUNAME AS CUNAME,
		       I.CUPOST AS CUPOST,
		       I.CUNATN AS CUNATN,
		       I.CUTEL1 AS CUTEL1,
		       I.CUTEL2 AS CUTEL2,
		       I.CUMAIL AS CUMAIL,
		       I.CUADDR AS CUADDR,
		       MAX(I.CTNAME) AS CTNAME,
		       I.CTTEL1 AS CTTEL1,
		       I.SALENM AS SALENM,
		       I.SALTEL AS SALTEL,
		       MAX(I.TEXT01) AS TEXT01,
		       SUM(OBOXQTY) AS BOXQTY,
		       SUM(RBOXQTY) AS BXIQTY,
		       SP.REGNKY AS REGNKY,
		       SP.REGNNM AS REGNNM,
		       B.NAME03 AS NAME03B,
		       I.C00102 AS C00102,
		       MAX(I.XTIMS) AS ERPCTM,
		       MAX(I.XDATS) AS CREDAT,
		       I.N00105 AS N00105
		 FROM (
		        SELECT SM.SKUG05, 
		               SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) ORDTOT,
		               NVL(CASE WHEN NVL(S.USEQTY, 0) >= SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) 
		                            THEN SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) END, 0) STKTOT,
		               I.MANDT, I.SEQNO, I.ORDTYP, I.ORDDAT, I.CHKSEQ, I.ORDSEQ, I.SVBELN, I.SPOSNR, I.DOCUTY, I.ERPCDT, I.ERPCTM, I.ERPMDT, I.OTRQDT,
		               I.PTNRTO, I.PTNROD, I.OWNRKY, I.WAREKY, I.WARESR, I.WARETG, I.SKUKEY, I.QTYORG, I.QTYREQ, I.WMSMGT, I.QTSHPD, I.DUOMKY, I.NETPR,
		               I.SALDPT, I.REFDKY, I.REDKIT, I.REDDAT, I.STKNUM, I.SDATBG, I.DIRDVY, I.DIRSUP, I.SALEPR, I.DISRAT, I.SELLPR, I.SELAMT, I.VATAMT,
		               I.CUSRID, I.CUNAME, I.CUPOST, I.CUNATN, I.CUTEL1, I.CUTEL2, I.CUMAIL, I.CUADDR, I.CTNAME, I.CTTEL1, I.SALENM, I.SALTEL, I.TEXT01,
		               I.TEXT02, I.TEXT03, I.C00101, I.C00102, I.C00103, I.C00104, I.C00105, I.C00106, I.C00107, I.C00108, I.C00109, I.C00110, I.N00101,
		               I.N00102, I.N00103, I.N00104, I.N00105, I.N00106, I.N00107, I.N00108, I.N00109, I.N00110, I.USRID1, I.DEPTID1, I.USRID2, I.DEPTID2,
		               I.USRID3, I.DEPTID3, I.USRID4, I.DEPTID4, I.CREDAT, I.CRETIM, I.LMODAT, I.LMOTIM, I.STATUS, I.TDATE, I.XDATS, I.XSTAT, I.XTIMS, I.ERTXT, SM.DESC01, 
		               TRUNC(I.QTYORG / DECODE(SM.QTDUOM, NULL, 0, SM.QTDUOM), 1) OBOXQTY,
		               TRUNC(I.QTYREQ / DECODE(SM.QTDUOM, NULL, 0, SM.QTDUOM), 1) RBOXQTY
		          FROM IFWMS113 I INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
								  <if test='CHKMAK != null and CHKMAK == "V"'>
		                          INNER JOIN TRFSK TR ON TR.WAREKY = '2317' AND TR.SKUKEY = I.SKUKEY    
		                          </if> 
		                          LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO,QTSPMO)) AS USEQTY
		                                             FROM STKKY 
		                                            WHERE OWNRKY = #{OWNRKY} AND LOTA06 = '00' AND QTSIWH > 0 
		                                            GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY AND I.SKUKEY = S.SKUKEY
		         WHERE I.DOCUTY IN ('211','212','213','214','215','216')
		           AND I.XSTAT = 'R'
		           AND I.MANDT = 'SAP'
		           AND I.CHKSEQ != ' '
		           AND I.QTYREQ - I.WMSMGT - I.QTSHPD > 0
		           AND I.OWNRKY = #{OWNRKY}
					<if test="SVBELNS == null or SVBELNS == ''"> 
		           AND I.C00102 = 'N'
		           </if>
					<if test="SVBELNS != null and SVBELNS != ''"> 
						AND SVBELN IN (${SVBELNS})
						AND I.C00102 = 'Y'
				   </if>
		           
					<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
						${RANGE_SQL}
				   </if>
		               ) I LEFT OUTER JOIN (SELECT DISTINCT OWNRKY, REGNKY, POSTCD, REGNNM 
		                                      FROM SHPMA) SP ON I.CUPOST = SP.POSTCD AND I.OWNRKY = SP.OWNRKY
		           INNER JOIN SKUMA SM2 ON SM2.OWNRKY = I.OWNRKY AND SM2.SKUKEY = I.SKUKEY
		           LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNRTO AND B.PTNRTY = '0007'
		           LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNROD AND B2.PTNRTY = '0001' WHERE 1 = 1
		   AND I.OWNRKY = #{OWNRKY}
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		   </if>
		 GROUP BY I.MANDT, I.OWNRKY, I.WAREKY, I.WARESR, I.DOCUTY, I.ORDTYP, I.ORDDAT, I.ERPCDT, I.SVBELN, I.OTRQDT, 
		          I.PTNRTO, I.PTNROD, B2.NAME01, B.NAME01, DIRDVY, DIRSUP, CUSRID, CUNAME, CUPOST, CUNATN, CUTEL1, 
		          CUTEL2, CUMAIL, CUADDR, CTTEL1, SALENM, SALTEL, REGNKY, REGNNM, B.NAME03, I.C00102, I.N00105
		 ORDER BY SVBELN
	</select>
	
	
	
	<!-- **[OY02] 출고지시 (오양)아이템 조회 -->
	<select id="OY02_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT I.SVBELN KEY,
		       TO_NUMBER(I.ORDTOT) ORDTOT,
		       TO_NUMBER(NVL(I.USEQTY, 0)) USEQTY,
		       I.MANDT MANDT,
		       I.SEQNO SEQNO,
		       I.ORDTYP ORDTYP,
		       I.ORDDAT ORDDAT,
		       I.CHKSEQ CHKSEQ,
		       I.ORDSEQ ORDSEQ,
		       I.SVBELN SVBELN,
		       I.SPOSNR SPOSNR,
		       I.DOCUTY DOCUTY,
		       I.ERPCDT ERPCDT,
		       I.ERPCTM ERPCTM,
		       I.ERPMDT ERPMDT,
		       I.OTRQDT OTRQDT,
		       I.PTNRTO PTNRTO,
		       I.PTNROD PTNROD,
		       I.OWNRKY OWNRKY,
		       I.WAREKY WAREKY,
		       I.WARESR WARESR,
		       I.WARETG WARETG,
		       I.SKUKEY SKUKEY,
		       I.QTYORG QTYORG,
		       I.QTYREQ QTYREQ,
		       I.WMSMGT WMSMGT,
		       I.QTSHPD QTSHPD,
		       I.DUOMKY DUOMKY,
		       I.NETPR NETPR,
		       I.SALDPT SALDPT,
		       I.REFDKY REFDKY,
		       I.REDKIT REDKIT,
		       I.REDDAT REDDAT,
		       I.STKNUM STKNUM,
		       I.SDATBG SDATBG,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SALEPR SALEPR,
		       I.DISRAT DISRAT,
		       I.SELLPR SELLPR,
		       I.SELAMT SELAMT,
		       I.VATAMT VATAMT,
		       I.CUSRID CUSRID,
		       I.CUNAME CUNAME,
		       I.CUPOST CUPOST,
		       I.CUNATN CUNATN,
		       I.CUTEL1 CUTEL1,
		       I.CUTEL2 CUTEL2,
		       I.CUMAIL CUMAIL,
		       I.CUADDR CUADDR,
		       I.CTNAME CTNAME,
		       I.CTTEL1 CTTEL1,
		       I.SALENM SALENM,
		       I.SALTEL SALTEL,
		       I.TEXT01 TEXT01,
		       I.TEXT02 TEXT02,
		       I.TEXT03 TEXT03,
		       I.C00101 C00101,
		       I.C00102 C00102,
		       I.C00103 C00103,
		       I.C00104 C00104,
		       I.C00105 C00105,
		       I.C00106 C00106,
		       I.C00107 C00107,
		       I.C00108 C00108,
		       I.C00109 C00109,
		       I.C00110 C00110,
		       I.N00101 N00101,
		       I.N00102 N00102,
		       I.N00103 N00103,
		       I.N00104 N00104,
		       I.N00105 N00105,
		       I.N00106 N00106,
		       I.N00107 N00107,
		       I.N00108 N00108,
		       I.N00109 N00109,
		       I.N00110 N00110,
		       I.USRID1 USRID1,
		       I.DEPTID1 DEPTID1,
		       I.USRID2 USRID2,
		       I.DEPTID2 DEPTID2,
		       I.USRID3 USRID3,
		       I.DEPTID3 DEPTID3,
		       I.USRID4 USRID4,
		       I.DEPTID4 DEPTID4,
		       I.CREDAT CREDAT,
		       I.CRETIM CRETIM,
		       I.LMODAT LMODAT,
		       I.LMOTIM LMOTIM,
		       I.STATUS STATUS,
		       I.TDATE TDATE ,
		       I.XSTAT XSTAT ,
		       I.ERTXT ERTXT ,
		       I.DESC01 DESC01,
		       I.PLIQTY PLIQTY,
		       I.BXIQTY BXIQTY,
		       I.BOXQTY BOXQTY,
		       I.PLTQTY PLTQTY,
		       I.REMQTY REMQTY,
		       I.PLBQTY PLBQTY,
		       ' ' AS CDATE
		  FROM
		       (SELECT SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) AS ORDTOT,
		               S.USEQTY USEQTY,
		               I.MANDT MANDT ,
		               I.SEQNO SEQNO ,
		               I.ORDTYP ORDTYP ,
		               I.ORDDAT ORDDAT ,
		               I.CHKSEQ CHKSEQ ,
		               I.ORDSEQ ORDSEQ ,
		               I.SVBELN SVBELN ,
		               I.SPOSNR SPOSNR ,
		               I.DOCUTY DOCUTY ,
		               I.ERPCDT ERPCDT ,
		               I.ERPCTM ERPCTM ,
		               I.ERPMDT ERPMDT ,
		               I.OTRQDT OTRQDT ,
		               I.PTNRTO PTNRTO ,
		               I.PTNROD PTNROD ,
		               I.OWNRKY OWNRKY ,
		               I.WAREKY WAREKY ,
		               I.WARESR WARESR ,
		               I.WARETG WARETG ,
		               I.SKUKEY SKUKEY ,
		               I.QTYORG QTYORG ,
		               I.QTYREQ QTYREQ ,
		               I.WMSMGT WMSMGT ,
		               I.QTSHPD QTSHPD ,
		               I.DUOMKY DUOMKY ,
		               I.NETPR NETPR ,
		               I.SALDPT SALDPT ,
		               I.REFDKY REFDKY ,
		               I.REDKIT REDKIT ,
		               I.REDDAT REDDAT ,
		               I.STKNUM STKNUM ,
		               I.SDATBG SDATBG ,
		               I.DIRDVY DIRDVY ,
		               I.DIRSUP DIRSUP ,
		               I.SALEPR SALEPR ,
		               I.DISRAT DISRAT ,
		               I.SELLPR SELLPR ,
		               I.SELAMT SELAMT ,
		               I.VATAMT VATAMT ,
		               I.CUSRID CUSRID ,
		               I.CUNAME CUNAME ,
		               I.CUPOST CUPOST ,
		               I.CUNATN CUNATN ,
		               I.CUTEL1 CUTEL1 ,
		               I.CUTEL2 CUTEL2 ,
		               I.CUMAIL CUMAIL ,
		               I.CUADDR CUADDR ,
		               I.CTNAME CTNAME ,
		               I.CTTEL1 CTTEL1 ,
		               I.SALENM SALENM ,
		               I.SALTEL SALTEL ,
		               I.TEXT01 TEXT01 ,
		               I.TEXT02 TEXT02 ,
		               I.TEXT03 TEXT03 ,
		               I.C00101 C00101 ,
		               I.C00102 C00102 ,
		               I.C00103 C00103 ,
		               I.C00104 C00104 ,
		               I.C00105 C00105 ,
		               I.C00106 C00106 ,
		               I.C00107 C00107 ,
		               I.C00108 C00108 ,
		               I.C00109 C00109 ,
		               I.C00110 C00110 ,
		               I.N00101 N00101 ,
		               I.N00102 N00102 ,
		               I.N00103 N00103 ,
		               I.N00104 N00104 ,
		               I.N00105 N00105 ,
		               I.N00106 N00106 ,
		               I.N00107 N00107 ,
		               I.N00108 N00108 ,
		               I.N00109 N00109 ,
		               I.N00110 N00110 ,
		               I.USRID1 USRID1 ,
		               I.DEPTID1 DEPTID1 ,
		               I.USRID2 USRID2 ,
		               I.DEPTID2 DEPTID2 ,
		               I.USRID3 USRID3 ,
		               I.DEPTID3 DEPTID3 ,
		               I.USRID4 USRID4 ,
		               I.DEPTID4 DEPTID4 ,
		               I.CREDAT CREDAT ,
		               I.CRETIM CRETIM ,
		               I.LMODAT LMODAT ,
		               I.LMOTIM LMOTIM ,
		               I.STATUS STATUS ,
		               I.TDATE TDATE ,
		               I.XSTAT XSTAT ,
		               I.ERTXT ERTXT ,
		               SM.DESC01 DESC01 ,
		               NVL(SM.QTYSTD, 0) PLIQTY ,
		               NVL(SM.QTDUOM, 0) BXIQTY ,
		               NVL( TRUNC((I.QTYREQ) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) ) , 0) AS BOXQTY ,
		               NVL( TRUNC((I.QTYREQ) / DECODE(SM.QTYSTD, 0, NULL, SM.QTYSTD) ) , 0) AS PLTQTY ,
		               NVL(MOD(I.QTYREQ, DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM)), 0) AS REMQTY,
		               NVL(SM.QTYSTD,0) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) AS PLBQTY
		          FROM IFWMS113 I LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO,QTSPMO)) AS USEQTY
		                                             FROM STKKY 
		                                            WHERE OWNRKY = #{OWNRKY} AND LOTA06 = '00' AND QTSIWH > 0 
		                                            GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY AND I.SKUKEY = S.SKUKEY
		                          INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		         WHERE I.XSTAT = 'R'
		           AND I.OWNRKY = #{OWNRKY}
		   		   AND I.SVBELN = #{SVBELN}
				   AND I.C00102 = #{C00102}
					<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
						${RANGE_SQL}
				   </if>
		        ) I
		 WHERE 1=1
		   AND I.DOCUTY IN ('211','212','213','214','215','216')
		   AND I.XSTAT = 'R'
		ORDER BY I.SVBELN, I.ORDSEQ, I.SKUKEY
	</select>
	
	
	
	<!-- **[OY03] 출고지시해제(오양)헤더  조회 -->
	<select id="OY03_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT I.SVBELN AS KEY,
		       I.OWNRKY AS OWNRKY,
		       MAX(I.SKUG05) AS SKUG05,
		       MAX(I.WAREKY) AS WAREKY,
		       I.WARESR AS WARESR,
		       BZ.NAME01 AS WARESRNM,
		       I.DOCUTY AS DOCUTY,
		       D.SHORTX AS DOCUTYNM,
		       I.ORDTYP AS ORDTYP,
		       I.ORDDAT AS ORDDAT,
		       I.ERPCDT AS ERPCDT,
		       I.SVBELN AS SVBELN,
		       MAX(I.REFDKY) AS REFDKY,
		       I.OTRQDT AS OTRQDT,
		       I.PTNRTO AS PTNRTO,
		       DECODE(I.DOCUTY, '266', W.NAME01, B2.NAME01) AS PTNRTONM,
		       I.PTNROD AS PTNROD,
		       B2.NAME01 AS PTNRODNM,
		       I.DIRDVY AS DIRDVY,
		       I.DIRSUP AS DIRSUP,
		       MAX(I.CUSRID) AS CUSRID,
		       MAX(I.CUNAME) AS CUNAME,
		       MAX(I.CUPOST) AS CUPOST,
		       MAX(I.CUNATN) AS CUNATN,
		       MAX(I.CUTEL1) AS CUTEL1,
		       MAX(I.CUTEL2) AS CUTEL2,
		       MAX(I.CUMAIL) AS CUMAIL,
		       MAX(I.CUADDR) AS CUADDR,
		       MAX(I.CTNAME) AS CTNAME,
		       MAX(I.CTTEL1) AS CTTEL1,
		       MAX(I.SALENM) AS SALENM,
		       MAX(I.SALTEL) AS SALTEL,
		       MAX(I.TEXT01) AS TEXT01,
		       SUM(OBOXQTY) AS BOXQTY,
		       SUM(RBOXQTY) AS BXIQTY,
		       SP.REGNKY AS REGNKY,
		       SP.REGNNM AS REGNNM,
		       SF_GET_WAHNM(B2.NAME03) AS NAME03B,
		       MAX(C.CARNUM) AS CARNUM,
		       I.C00102 AS C00102,
		       MAX(I.XTIMS) AS ERPCTM,
		       I.N00105 AS N00105,
		       MAX(I.XDATS) AS CREDAT
		  FROM (
		        SELECT /*+ ORDERED */ SM.SKUG05,
		               SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) ORDTOT,
		               NVL(CASE WHEN NVL(S.USEQTY, 0) >= SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN)
		                        THEN SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) END, 0) STKTOT,
		               I.MANDT, I.SEQNO, I.ORDTYP, I.ORDDAT, I.CHKSEQ, I.ORDSEQ, I.SVBELN, I.SPOSNR, I.DOCUTY, I.ERPCDT, I.ERPCTM, I.ERPMDT, I.OTRQDT,
		               I.PTNRTO, I.PTNROD, I.OWNRKY, I.WAREKY, I.WARESR, I.WARETG, I.SKUKEY, I.QTYORG, I.QTYREQ, I.WMSMGT, I.QTSHPD, I.DUOMKY, I.NETPR,
		               I.SALDPT, I.REFDKY, I.REDKIT, I.REDDAT, I.STKNUM, I.SDATBG, I.DIRDVY, I.DIRSUP, I.SALEPR, I.DISRAT, I.SELLPR, I.SELAMT, I.VATAMT,
		               I.CUSRID, I.CUNAME, I.CUPOST, I.CUNATN, I.CUTEL1, I.CUTEL2, I.CUMAIL, I.CUADDR, I.CTNAME, I.CTTEL1, I.SALENM, I.SALTEL, I.TEXT01,
		               I.TEXT02, I.TEXT03, I.C00101, I.C00102, I.C00103, I.C00104, I.C00105, I.C00106, I.C00107, I.C00108, I.C00109, I.C00110, I.N00101,
		               I.N00102, I.N00103, I.N00104, I.N00105, I.N00106, I.N00107, I.N00108, I.N00109, I.N00110, I.USRID1, I.DEPTID1, I.USRID2, I.DEPTID2,
		               I.USRID3, I.DEPTID3, I.USRID4, I.DEPTID4, I.CREDAT, I.CRETIM, I.LMODAT, I.LMOTIM, I.STATUS, I.TDATE, I.XSTAT, I.XDATS, I.XTIMS, I.ERTXT, SM.DESC01,
		               TRUNC(I.QTYORG / DECODE(SM.QTDUOM, NULL, 0, SM.QTDUOM), 1) OBOXQTY,
		               TRUNC(I.QTYREQ / DECODE(SM.QTDUOM, NULL, 0, SM.QTDUOM), 1) RBOXQTY
		          FROM IFWMS113 I INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		                        LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO,QTSPMO)) AS USEQTY
		                                           FROM STKKY
		                                          WHERE OWNRKY = #{OWNRKY} AND LOTA06 = '00' AND QTSIWH > 0
		                                          GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY AND I.SKUKEY = S.SKUKEY
		         WHERE I.DOCUTY IN ('211','212','213','214','215','216')
		           AND I.XSTAT = 'R'
		           AND I.CHKSEQ != ' '
		           AND I.QTYREQ - I.WMSMGT - I.QTSHPD > 0
		           AND I.WMSMGT + I.QTSHPD = 0
		           AND I.OWNRKY = #{OWNRKY}
		           
					<if test="SVBELNS == null or SVBELNS == ''"> 
		           AND I.C00102 = 'Y'
		           </if>
					<if test="SVBELNS != null and SVBELNS != ''"> 
						AND SVBELN IN (${SVBELNS})
						AND I.C00102 = 'N'
				   </if>
					<if test="WAREKY != null and WAREKY != ''"> 
		           AND I.WAREKY = #{WAREKY}
				   </if>
					<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
						${RANGE_SQL}
				   </if>
		       ) I LEFT OUTER JOIN (SELECT DISTINCT OWNRKY, REGNKY, POSTCD, REGNNM
		                              FROM SHPMA) SP ON I.CUPOST = SP.POSTCD AND I.OWNRKY = SP.OWNRKY
		           INNER JOIN SKUMA SM2 ON SM2.OWNRKY = I.OWNRKY AND SM2.SKUKEY = I.SKUKEY
		           INNER JOIN DOCTM D ON D.DOCUTY = I.DOCUTY
		           LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNROD AND B.PTNRTY = '0001'
		           LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNRTO AND B2.PTNRTY = '0007'
		           LEFT OUTER JOIN WAHMA W ON W.WAREKY = I.PTNRTO
		           LEFT OUTER JOIN BZPTN BZ ON BZ.OWNRKY = I.OWNRKY AND BZ.PTNRKY = I.WARESR AND BZ.PTNRTY IN ('0003', '0004')
		           LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, PTNRKY, MAX(CARNUM) AS CARNUM
		                              FROM CARFX
		                             GROUP BY OWNRKY, WAREKY, PTNRKY) C ON I.OWNRKY = C.OWNRKY AND I.WAREKY = C.WAREKY AND I.PTNRTO = C.PTNRKY
		 WHERE 1 = 1
			<if test="RANGE_SQL2 != null and RANGE_SQL2 != ''"> 
				${RANGE_SQL2}
		   </if>
		 GROUP BY I.MANDT, I.OWNRKY, I.WARESR, I.DOCUTY, D.SHORTX, I.ORDTYP, I.ORDDAT, I.ERPCDT, I.SVBELN, I.OTRQDT, I.PTNRTO, W.NAME01,
		         I.PTNROD, B.NAME01, B2.NAME01, BZ.NAME01, DIRDVY, DIRSUP, REGNKY, REGNNM, B2.NAME03, I.C00102, I.N00105
		 ORDER BY SVBELN
	</select>
	
	
	
	<!-- **[OY03] 출고지시해제 (오양)아이템 조회 -->
	<select id="OY03_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT I.SVBELN KEY,
		       TO_NUMBER(I.ORDTOT) ORDTOT,
		       TO_NUMBER(NVL(I.USEQTY, 0)) USEQTY,
		       I.MANDT MANDT,
		       I.SEQNO SEQNO,
		       I.ORDTYP ORDTYP,
		       I.ORDDAT ORDDAT,
		       I.CHKSEQ CHKSEQ,
		       I.ORDSEQ ORDSEQ,
		       I.SVBELN SVBELN,
		       I.SPOSNR SPOSNR,
		       I.DOCUTY DOCUTY,
		       I.ERPCDT ERPCDT,
		       I.ERPCTM ERPCTM,
		       I.ERPMDT ERPMDT,
		       I.OTRQDT OTRQDT,
		       I.PTNRTO PTNRTO,
		       I.PTNROD PTNROD,
		       I.OWNRKY OWNRKY,
		       I.WAREKY WAREKY,
		       I.WARESR WARESR,
		       I.WARETG WARETG,
		       I.SKUKEY SKUKEY,
		       I.QTYORG QTYORG,
		       I.QTYREQ QTYREQ,
		       I.WMSMGT WMSMGT,
		       I.QTSHPD QTSHPD,
		       I.DUOMKY DUOMKY,
		       I.NETPR NETPR,
		       I.SALDPT SALDPT,
		       I.REFDKY REFDKY,
		       I.REDKIT REDKIT,
		       I.REDDAT REDDAT,
		       I.STKNUM STKNUM,
		       I.SDATBG SDATBG,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SALEPR SALEPR,
		       I.DISRAT DISRAT,
		       I.SELLPR SELLPR,
		       I.SELAMT SELAMT,
		       I.VATAMT VATAMT,
		       I.CUSRID CUSRID,
		       I.CUNAME CUNAME,
		       I.CUPOST CUPOST,
		       I.CUNATN CUNATN,
		       I.CUTEL1 CUTEL1,
		       I.CUTEL2 CUTEL2,
		       I.CUMAIL CUMAIL,
		       I.CUADDR CUADDR,
		       I.CTNAME CTNAME,
		       I.CTTEL1 CTTEL1,
		       I.SALENM SALENM,
		       I.SALTEL SALTEL,
		       I.TEXT01 TEXT01,
		       I.TEXT02 TEXT02,
		       I.TEXT03 TEXT03,
		       I.C00101 C00101,
		       I.C00102 C00102,
		       I.C00103 C00103,
		       I.C00104 C00104,
		       I.C00105 C00105,
		       I.C00106 C00106,
		       I.C00107 C00107,
		       I.C00108 C00108,
		       I.C00109 C00109,
		       I.C00110 C00110,
		       I.N00101 N00101,
		       I.N00102 N00102,
		       I.N00103 N00103,
		       I.N00104 N00104,
		       I.N00105 N00105,
		       I.N00106 N00106,
		       I.N00107 N00107,
		       I.N00108 N00108,
		       I.N00109 N00109,
		       I.N00110 N00110,
		       I.USRID1 USRID1,
		       I.DEPTID1 DEPTID1,
		       I.USRID2 USRID2,
		       I.DEPTID2 DEPTID2,
		       I.USRID3 USRID3,
		       I.DEPTID3 DEPTID3,
		       I.USRID4 USRID4,
		       I.DEPTID4 DEPTID4,
		       I.CREDAT CREDAT,
		       I.CRETIM CRETIM,
		       I.LMODAT LMODAT,
		       I.LMOTIM LMOTIM,
		       I.STATUS STATUS,
		       I.TDATE TDATE ,
		       I.XSTAT XSTAT ,
		       I.ERTXT ERTXT ,
		       I.DESC01 DESC01,
		       I.PLIQTY PLIQTY,
		       I.BXIQTY BXIQTY,
		       I.BOXQTY BOXQTY,
		       I.PLTQTY PLTQTY,
		       I.REMQTY REMQTY
		  FROM (SELECT SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) AS ORDTOT,
		               S.USEQTY USEQTY,
		               I.MANDT MANDT ,
		               I.SEQNO SEQNO ,
		               I.ORDTYP ORDTYP ,
		               I.ORDDAT ORDDAT ,
		               I.CHKSEQ CHKSEQ ,
		               I.ORDSEQ ORDSEQ ,
		               I.SVBELN SVBELN ,
		               I.SPOSNR SPOSNR ,
		               I.DOCUTY DOCUTY ,
		               I.ERPCDT ERPCDT ,
		               I.ERPCTM ERPCTM ,
		               I.ERPMDT ERPMDT ,
		               I.OTRQDT OTRQDT ,
		               I.PTNRTO PTNRTO ,
		               I.PTNROD PTNROD ,
		               I.OWNRKY OWNRKY ,
		               I.WAREKY WAREKY ,
		               I.WARESR WARESR ,
		               I.WARETG WARETG ,
		               I.SKUKEY SKUKEY ,
		               I.QTYORG QTYORG ,
		               I.QTYREQ QTYREQ ,
		               I.WMSMGT WMSMGT ,
		               I.QTSHPD QTSHPD ,
		               I.DUOMKY DUOMKY ,
		               I.NETPR NETPR ,
		               I.SALDPT SALDPT ,
		               I.REFDKY REFDKY ,
		               I.REDKIT REDKIT ,
		               I.REDDAT REDDAT ,
		               I.STKNUM STKNUM ,
		               I.SDATBG SDATBG ,
		               I.DIRDVY DIRDVY ,
		               I.DIRSUP DIRSUP ,
		               I.SALEPR SALEPR ,
		               I.DISRAT DISRAT ,
		               I.SELLPR SELLPR ,
		               I.SELAMT SELAMT ,
		               I.VATAMT VATAMT ,
		               I.CUSRID CUSRID ,
		               I.CUNAME CUNAME ,
		               I.CUPOST CUPOST ,
		               I.CUNATN CUNATN ,
		               I.CUTEL1 CUTEL1 ,
		               I.CUTEL2 CUTEL2 ,
		               I.CUMAIL CUMAIL ,
		               I.CUADDR CUADDR ,
		               I.CTNAME CTNAME ,
		               I.CTTEL1 CTTEL1 ,
		               I.SALENM SALENM ,
		               I.SALTEL SALTEL ,
		               I.TEXT01 TEXT01 ,
		               I.TEXT02 TEXT02 ,
		               I.TEXT03 TEXT03 ,
		               I.C00101 C00101 ,
		               I.C00102 C00102 ,
		               I.C00103 C00103 ,
		               I.C00104 C00104 ,
		               I.C00105 C00105 ,
		               I.C00106 C00106 ,
		               I.C00107 C00107 ,
		               I.C00108 C00108 ,
		               I.C00109 C00109 ,
		               I.C00110 C00110 ,
		               I.N00101 N00101 ,
		               I.N00102 N00102 ,
		               I.N00103 N00103 ,
		               I.N00104 N00104 ,
		               I.N00105 N00105 ,
		               I.N00106 N00106 ,
		               I.N00107 N00107 ,
		               I.N00108 N00108 ,
		               I.N00109 N00109 ,
		               I.N00110 N00110 ,
		               I.USRID1 USRID1 ,
		               I.DEPTID1 DEPTID1 ,
		               I.USRID2 USRID2 ,
		               I.DEPTID2 DEPTID2 ,
		               I.USRID3 USRID3 ,
		               I.DEPTID3 DEPTID3 ,
		               I.USRID4 USRID4 ,
		               I.DEPTID4 DEPTID4 ,
		               I.CREDAT CREDAT ,
		               I.CRETIM CRETIM ,
		               I.LMODAT LMODAT ,
		               I.LMOTIM LMOTIM ,
		               I.STATUS STATUS ,
		               I.TDATE TDATE ,
		               I.XSTAT XSTAT ,
		               I.ERTXT ERTXT ,
		               SM.DESC01 DESC01 ,
		               NVL(SM.QTYSTD, 0) PLIQTY ,
		               NVL(SM.QTDUOM, 0) BXIQTY ,
		               NVL( TRUNC((I.QTYREQ) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) ) , 0) AS BOXQTY ,
		               NVL( TRUNC((I.QTYREQ) / DECODE(SM.QTYSTD, 0, NULL, SM.QTYSTD) ) , 0) AS PLTQTY ,
		               NVL(MOD(I.QTYREQ, DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM)), 0) AS REMQTY
		          FROM IFWMS113 I LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO,QTSPMO)) AS USEQTY
		                                             FROM STKKY 
		                                            WHERE OWNRKY = #{OWNRKY}
		                            				  AND WAREKY = #{SES_WAREKY} 
		                                            AND LOTA06 = '00' AND QTSIWH > 0 
		                                            GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY AND I.SKUKEY = S.SKUKEY
		                          INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		                          WHERE I.XSTAT = 'R'
		                            AND I.OWNRKY = #{OWNRKY} 
		                            AND SVBELN = #{SVBELN} 
				  				    AND I.C00102 = #{C00102}
				  				    AND I.WAREKY = #{WAREKY}
		        ) I
		 WHERE 1=1
		   AND I.DOCUTY IN ('211','212','213','214','215','216')
		   AND I.XSTAT = 'R'
		 ORDER BY I.SVBELN
	</select>
	
	
	<!-- **[OY03] 출고지시해제 (오양)유효성체크 기존 validateIfwms113ModifyCheckingDO2 , validateIfwms113ModifyChecking 를 합친 버전 -->
	<select id="OY03_VALID_MAP" parameterType="hashmap" resultType="DataMap">
		 SELECT CASE WHEN (SELECT COUNT(1) FROM IFWMS113 WHERE SVBELN = #{SVBELN} AND WMSMGT + QTSHPD > 0 AND XSTAT IN ('R','D')) > 0 THEN 'VALID_M0010'
		             WHEN (SELECT COUNT(1) FROM IFWMS113 WHERE SVBELN = #{SVBELN} AND C00102 = 'N' AND XSTAT IN ('R', 'D') AND QTYORG > 0) > 0 THEN 'VALID_M1000' 
		         	 ELSE ''
		         END AS VALIDMSG
		   FROM DUAL 
	</select>
	
	
	
	<!-- **[OY04] 주문집계표 (주문서별)헤더 조회 -->
	<select id="OY04_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED FIRST_ROWS */ I.SVBELN AS KEY,
		       I.OWNRKY AS OWNRKY,
		       I.CARNUM AS CARNUM,
		       I.PTNRTO AS PTNRTO,
		       I.PTNRTONM AS PTNRTONM,
		       I.PTNROD AS PTNROD,
		       I.PTNRODNM AS PTNRODNM,
		       I.STATUS AS STATUS,
		       I.DOCUTY AS DOCUTY,
		       MAX(I.C00103) AS C00103,
		       I.ORDDAT AS ORDDAT,
		       I.OTRQDT AS OTRQDT,
		       I.DIRDVY AS DIRDVY,
		       I.DIRSUP AS DIRSUP,
		       MAX(I.CUSRID) AS CUSRID,
		       MAX(I.CUNAME) AS CUNAME,
		       MAX(I.CUPOST) AS CUPOST,
		       MAX(I.CUADDR) AS CUADDR,
		       MAX(I.CTNAME) AS CTNAME,
		       MAX(I.CTTEL1) AS CTTEL1,
		       MAX(I.SALENM) AS SALENM,
		       MAX(I.SALTEL) AS SALTEL,
		       MAX(I.TEXT01) AS TEXT01,
		       I.SVBELN AS SVBELN,
		       SUM(I.OBOXQTY) AS BOXQTY,
		       SUM(I.RBOXQTY) AS BXIQTY,
		       SF_GET_WAHNM(I.NAME03) AS NAME03B,
		       MAX(I.SKUG05) AS SKUG05,
		       MAX(I.XDATS) AS XDATS,
		       MAX(I.XTIMS) AS XTIMS,
		       I.CDESC1 AS PTNG08NM, 
		       I.C00102 AS C00102,
		       I.WARESR AS WARESR,
		       I.N00105 AS N00105,
		       MAX(I.WAREKY) AS WAREKY
		  FROM (
		        SELECT /*+ ORDERED FIRST_ROWS */ I.OWNRKY OWNRKY,
		               I.WAREKY WAREKY,
		               C.CARNUM CARNUM,
		               I.PTNRTO PTNRTO,
		               I.DOCUTY DOCUTY,
		               I.PTNROD PTNROD,
		               B2.NAME01 PTNRTONM,
		               B.NAME01 PTNRODNM,
		               CASE WHEN OC.STATUS IS NULL THEN 'N'
		                    WHEN I.DIRSUP = '007' THEN OC.STATUS2
		                    ELSE OC.STATUS END STATUS,
		               CASE I.DOCUTY WHEN '214' THEN C00103 ELSE ' ' END AS C00103,
		               I.ORDDAT ORDDAT,
		               I.OTRQDT OTRQDT,
		               I.DIRDVY DIRDVY,
		               I.DIRSUP DIRSUP,
		               I.CUSRID CUSRID,
		               I.CUNAME CUNAME,
		               I.CUPOST CUPOST,
		               I.CUADDR CUADDR,
		               I.CTNAME CTNAME,
		               I.CTTEL1 CTTEL1,
		               I.SALENM SALENM,
		               I.SALTEL SALTEL,
		               I.TEXT01 TEXT01,
		               I.SVBELN SVBELN,
		               TRUNC(I.QTYORG / DECODE(SM.QTDUOM, NULL,0,SM.QTDUOM) ,1) OBOXQTY,
		               TRUNC(I.QTYREQ / DECODE(SM.QTDUOM, NULL,0,SM.QTDUOM) ,1) RBOXQTY,
		               B2.NAME03 NAME03,
		               SM.SKUG05 SKUG05,
		               I.XDATS XDATS,
		               I.XTIMS XTIMS,
		               CD.CDESC1 CDESC1,
		               I.WMSMGT WMSMGT,
		               I.C00102 AS C00102,
		               I.QTSHPD QTSHPD,
		               I.WARESR WARESR,
			           I.N00105 AS N00105
		          FROM IFWMS113 I 
		                LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNROD AND B.PTNRTY IN ('0001','0004')
		                LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNRTO AND B2.PTNRTY IN ('0007','0004')
					    LEFT OUTER JOIN CMCDV CD ON B2.PTNG08 = CD.CMCDVL AND CD.CMCDKY = 'PTNG08'
		                LEFT OUTER JOIN ORDCL_NOTICE OC ON B2.PTNG08 = OC.CLSTYP AND OC.CLSDAT = I.ORDDAT
		                INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		                LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                        FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                                       WHERE 1 = 1
		                                         AND F.OWNRKY = #{OWNRKY}
		                                         AND F.WAREKY = #{SES_WAREKY} 
		                                 ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
		        WHERE I.OWNRKY = #{OWNRKY}
		          AND I.MANDT = 'SAP'
		          AND I.DOCUTY IN ('211','212','213','214','215','216','266','267')
		          AND I.XSTAT IN ('R','D')
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("ALL")'>
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("B")'>
		          AND I.C00102 = 'X'
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("C")'>
		          AND I.C00102 = 'N'
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("D")'>
		          AND I.C00102 = 'Y' AND I.QTSHPD = 0
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("E")'>
		          AND I.C00102 = 'Y' AND I.QTSHPD > 0
				</if>
				<if test="SVBELN != null and SVBELN != ''">
		          AND I.SVBELN IN (${SVBELN})
				</if>
		          AND I.CHKSEQ != ' '
		          AND I.QTYREQ != 0
				<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
					${RANGE_SQL}
			    </if>
		       ) I 
		 WHERE 1 = 1
		   AND I.OWNRKY = #{OWNRKY}
		 GROUP BY I.OWNRKY, I.SVBELN, I.CARNUM, I.PTNRTO, I.DOCUTY, I.PTNROD, I.PTNRTONM, I.PTNRODNM, I.STATUS, I.C00102, I.WARESR,
		          I.ORDDAT, I.OTRQDT, I.DIRDVY, I.DIRSUP, I.SVBELN, I.NAME03, I.CDESC1, I.N00105

	</select>
	
	<!-- **[OY04] 주문집계표 (주문서별)아이템 조회 -->
	<select id="OY04_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT I.SVBELN KEY,
		       NVL(I.ORDTOT,0) ORDTOT, <!-- 센터별 제품사용량 집계  -->
		       NVL(I.USEQTY,0) USEQTY,
		       ' ' AS ORDDAT,
		       I.MANDT MANDT,
		       I.ORDTYP ORDTYP,
		       I.SPOSNR SPOSNR,
		       I.CHKSEQ CHKSEQ,
		       I.ORDSEQ ORDSEQ,
		       I.SVBELN SVBELN,
		       I.DOCUTY DOCUTY,
		       I.OTRQDT OTRQDT,
		       I.PTNRTO PTNRTO,
		       I.PTNROD PTNROD,
		       I.OWNRKY OWNRKY,
		       I.WAREKY WAREKY,
		       I.WARESR WARESR,
		       I.WARETG WARETG,
		       I.SKUKEY SKUKEY,
		       I.QTYORG QTYORG,
		       I.QTYREQ QTYREQ,
		       I.WMSMGT WMSMGT,
		       I.QTSHPD QTSHPD,
		       I.DUOMKY DUOMKY,
		       I.NETPR NETPR,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SALEPR SALEPR,
		       I.DISRAT DISRAT,
		       I.SELLPR SELLPR,
		       I.SELAMT SELAMT,
		       I.VATAMT VATAMT,
		       I.CUSRID CUSRID,
		       I.CUNAME CUNAME,
		       I.CUPOST CUPOST,
		       I.CUNATN CUNATN,
		       I.CUTEL1 CUTEL1,
		       I.CUTEL2 CUTEL2,
		       I.CUMAIL CUMAIL,
		       I.CUADDR CUADDR,
		       I.CTNAME CTNAME,
		       I.CTTEL1 CTTEL1,
		       I.SALENM SALENM,
		       I.SALTEL SALTEL,
		       I.TEXT01 TEXT01,
		       I.C00101 C00101,
		       I.C00102 C00102,
		       NVL(I.C00103,' ') C00103,
		       I.LMODAT LMODAT,
		       I.LMOTIM LMOTIM,
		       I.STATUS STATUS,
		       I.TDATE TDATE ,
		       I.XDATS XDATS ,
		       I.DESC01 DESC01,
		       I.SKUG03 SKUG03,
		       I.NETWGT NETWGT,
		       I.BXIQTY BXIQTY,
		       I.BOXQTY BOXQTY,
		       I.REMQTY REMQTY,
		       CASE WHEN I.WMSMGT > 0 OR I.QTSHPD > 0 THEN 'Y' ELSE 'N' END QTSCHK   
		  FROM (
		  <!-- 원본쿼리   -->
		        SELECT /*+ ORDERED FIRST_ROWS */ I.MANDT MANDT ,
		               ST.ORDTOT AS ORDTOT,
		               S.USEQTY USEQTY,
		               I.ORDTYP ORDTYP ,
		               I.CHKSEQ CHKSEQ ,
		               I.ORDSEQ ORDSEQ ,
		               I.SVBELN SVBELN ,
		               I.SPOSNR SPOSNR ,
		               I.DOCUTY DOCUTY ,
		               I.OTRQDT OTRQDT ,
		               I.PTNRTO PTNRTO ,
		               I.PTNROD PTNROD ,
		               I.OWNRKY OWNRKY ,
		               I.WAREKY WAREKY ,
		               I.WARESR WARESR ,
		               I.WARETG WARETG ,
		               I.SKUKEY SKUKEY ,
		               I.QTYORG QTYORG ,
		               I.QTYREQ QTYREQ ,
		               I.WMSMGT WMSMGT ,
		               I.QTSHPD QTSHPD ,
		               I.DUOMKY DUOMKY ,
		               I.NETPR NETPR ,
		               I.DIRDVY DIRDVY ,
		               I.DIRSUP DIRSUP ,
		               I.SALEPR SALEPR ,
		               I.DISRAT DISRAT ,
		               I.SELLPR SELLPR ,
		               I.SELAMT SELAMT ,
		               I.VATAMT VATAMT ,
		               I.CUSRID CUSRID ,
		               I.CUNAME CUNAME ,
		               I.CUPOST CUPOST ,
		               I.CUNATN CUNATN ,
		               I.CUTEL1 CUTEL1 ,
		               I.CUTEL2 CUTEL2 ,
		               I.CUMAIL CUMAIL ,
		               I.CUADDR CUADDR ,
		               I.CTNAME CTNAME ,
		               I.CTTEL1 CTTEL1 ,
		               I.SALENM SALENM ,
		               I.SALTEL SALTEL ,
		               I.TEXT01 TEXT01 ,
		               I.C00101 C00101 ,
		               I.C00102 C00102 ,
		               CASE WHEN I.C00103 = RN.RSNCOD THEN NVL(I.C00103,' ') ELSE ' ' END C00103 ,
		               I.LMODAT LMODAT ,
		               I.LMOTIM LMOTIM ,
		               I.STATUS STATUS ,
		               I.TDATE TDATE ,
		               I.XDATS XDATS ,
		               SM.DESC01 DESC01 ,
		               SM.SKUG03 SKUG03 ,
		               SM.NETWGT NETWGT ,
		               NVL(SM.QTDUOM, 0) BXIQTY ,
		               NVL( TRUNC((I.QTYREQ) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) ) , 0) AS BOXQTY ,
		               NVL(MOD(I.QTYREQ, DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM)), 0) AS REMQTY
		          FROM IFWMS113 I 
		                          LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO,QTSPMO)) AS USEQTY
		                                             FROM STKKY 
		                                            WHERE OWNRKY = #{OWNRKY} AND WAREKY = #{SES_WAREKY}  AND LOTA06 = '00' AND QTSIWH > 0
		                                            GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY AND I.SKUKEY = S.SKUKEY
		                          
		                          INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNROD AND B.PTNRTY IN ('0001','0004')
		                          LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNRTO AND B2.PTNRTY IN ('0007','0004')
		                          LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                             FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                                            WHERE 1 = 1
		                                              AND F.OWNRKY = #{OWNRKY}
		                                              AND F.WAREKY = #{SES_WAREKY} 
		                                          ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
		                          LEFT OUTER JOIN RSNCD RN ON RN.OWNRKY =  #{OWNRKY} AND RN.DOCCAT='300' AND RN.DOCUTY='399' AND I.C00103 = RN.RSNCOD
		                          LEFT OUTER JOIN (
                                                   SELECT I.OWNRKY,I.WAREKY,I.SKUKEY,I.SVBELN, I.OTRQDT, SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) AS ORDTOT
                                                     FROM IFWMS113 I 
                                                          INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
                                                          LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
								                                             FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
								                                            WHERE 1 = 1
								                                              AND F.OWNRKY = #{OWNRKY}
								                                              AND F.WAREKY = #{SES_WAREKY} 
								                                          ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
                                                    WHERE 1=1
											          AND I.MANDT = 'SAP'
											          AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267')
												<if test='C00102 !=null  and C00102.equalsIgnoreCase("ALL")'>
												</if>
												<if test='C00102 !=null  and C00102.equalsIgnoreCase("B")'>
											         AND I.C00102 = 'X'
												</if>
												<if test='C00102 !=null  and C00102.equalsIgnoreCase("C")'>
											         AND I.C00102 = 'N'
												</if>
												<if test='C00102 !=null  and C00102.equalsIgnoreCase("D")'>
											         AND I.C00102 = 'Y' AND I.QTSHPD = 0
												</if>
												<if test='C00102 !=null  and C00102.equalsIgnoreCase("E")'>
											         AND I.C00102 = 'Y' AND I.QTSHPD > 0
												</if>
											          AND I.XSTAT IN ('D', 'R')
											          AND I.QTYORG > 0
											          AND I.OWNRKY = #{OWNRKY}
		       									      AND I.SVBELN = #{SVBELN}
												<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
													${RANGE_SQL}
												   </if>
                                                  ) ST ON ST.OWNRKY = I.OWNRKY AND ST.WAREKY = I.WAREKY AND ST.SKUKEY = I.SKUKEY AND ST.SVBELN = I.SVBELN
		         WHERE 1=1
		           AND I.MANDT = 'SAP'
		           AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267')
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("ALL")'>
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("B")'>
		          AND I.C00102 = 'X'
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("C")'>
		          AND I.C00102 = 'N'
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("D")'>
		          AND I.C00102 = 'Y' AND I.QTSHPD = 0
				</if>
				<if test='C00102 !=null  and C00102.equalsIgnoreCase("E")'>
		          AND I.C00102 = 'Y' AND I.QTSHPD > 0
				</if>
		           AND I.XSTAT IN ('D', 'R')
		           AND I.QTYORG > 0
		           AND I.OWNRKY = #{OWNRKY}
		           AND I.SVBELN = #{SVBELN}
				<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
					${RANGE_SQL}
			    </if>
			    
		        ) I
		 WHERE 1=1
		 ORDER BY SKUG03, REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]'), REPLACE(NETWGT * 1000, '.', '')	
	</select>
	
	
	<!-- [OY04] ITEM UPDATE -->
	<update id="OY04_ITEM_UPDATE" parameterType="hashmap">
		UPDATE IFWMS113
		  SET  QTYREQ = #{QTYREQ},
		       WAREKY = #{WAREKY},
		       OTRQDT = #{OTRQDT},
		       C00103 = #{C00103},
		       DIRSUP = #{DIRSUP},
		       DIRDVY = #{DIRDVY},
		       N00101 = NVL(#{N00101}, 0),
		       C00101 = 'IF',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       USRID2 = NVL(#{SES_USER_ID}, ' ')
		WHERE SVBELN = #{SVBELN}
		  AND SPOSNR = #{SPOSNR}	
		  AND XSTAT = 'R'
		  AND C00102 = 'Y' 	
	</update>
	
	
	<!-- [OY04] HEAD UPDATE -->
	<update id="OY04_HEAD_UPDATE" parameterType="hashmap">
		UPDATE IFWMS113
		   SET OTRQDT = #{OTRQDT},
		       DIRSUP = #{DIRSUP},
		       DIRDVY = #{DIRDVY},
		       C00101 = 'IF',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       USRID2 = NVL(#{SES_USER_ID}, ' ')
		WHERE MANDT = 'SAP'
		  AND SVBELN = #{SVBELN}	
		  AND C00102 = 'Y'
		  AND XSTAT = 'R'
	</update>
	
	
	
	<!-- **[OY05] 주문집계표 (품목별)헤더 조회 -->
	<select id="OY05_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
	    SELECT /*+ ORDERED */I.WAREKY WAREKY,
	           I.SKUKEY SKUKEY,
	           SM.DESC01 DESC01,
	           SM.DESC02 DESC02,
	           SM.DUOMKY DUOMKY,
	           SM.QTDUOM BXIQTY,
	           SM.NETWGT NETWGT,
	           SM.SKUG03 SKUG03,
	           SUM(I.QTYREQ) / SM.QTDUOM AS BOXQTY1,
	           SUM(I.QTYREQ) AS QTSIWH1,
	           (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) - NVL(EX1.OUTQTY, 0)) / SM.QTDUOM AS BOXQTY2,
	           (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) - NVL(EX1.OUTQTY, 0)) AS QTSIWH2,
	           CASE WHEN (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - NVL(EX1.OUTQTY, 0)) &lt; 0 
	                    THEN (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - NVL(EX1.OUTQTY, 0)) / SM.QTDUOM ELSE 0 END AS BOXQTY3,
	           CASE WHEN (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - NVL(EX1.OUTQTY, 0)) &lt; 0 
	                    THEN (NVL(ST1.STKQTY, 0) + NVL(EX1.INNQTY, 0) + NVL(EX1.TRFQTY, 0) - NVL(EX1.OUTQTY, 0)) ELSE 0 END AS QTSIWH3,
	           NVL(EX1.INNQTY, 0) / SM.QTDUOM AS BOXQTY4,
	           NVL(EX1.INNQTY, 0) AS QTSIWH4,
	           NVL(EX1.TRFQTY, 0) / SM.QTDUOM AS BOXQTY5,
	           NVL(EX1.TRFQTY, 0) AS QTSIWH5,
	           SUM(DECODE(I.XSTAT, 'R', 0, I.QTYREQ)) / SM.QTDUOM AS BOXQTY6,
	           SUM(DECODE(I.XSTAT, 'R', 0, I.QTYREQ)) AS QTSIWH6
	      FROM IFWMS113 I INNER JOIN SKUMA SM ON I.OWNRKY = SM.OWNRKY AND I.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
	                      LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNRTO AND B.PTNRTY='0007'
	                      LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNROD AND B2.PTNRTY = '0001'
	                      LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY =  I.WAREKY AND PK.SKUKEY = I.SKUKEY
	                      LEFT OUTER JOIN SKUWC W ON W.OWNRKY = I.OWNRKY AND W.WAREKY = I.WAREKY AND W.SKUKEY = I.SKUKEY
	                      LEFT OUTER JOIN V_WMS_OY_STOCK EX1 ON I.OWNRKY = EX1.OWNRKY AND I.WAREKY = EX1.WAREKY AND I.SKUKEY = EX1.SKUKEY AND I.OTRQDT = EX1.EXPDAT
	                      LEFT OUTER JOIN V_WMS_STOCK_TOSS ST1 ON I.OWNRKY = ST1.OWNRKY AND I.WAREKY = ST1.WAREKY AND I.SKUKEY = ST1.SKUKEY
	                      LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
	                                 FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
	                                WHERE 1 = 1
	                                  AND F.OWNRKY = #{OWNRKY}
	                                  AND F.WAREKY = #{WAREKY}
	                          ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
	     WHERE I.MANDT = 'SAP'
	       AND I.OWNRKY = #{OWNRKY}
	       AND I.WAREKY = #{WAREKY}
	       AND I.QTYREQ &gt; 0
	       AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267') 
	       AND I.XSTAT IN ('R', 'D')
		<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
			${RANGE_SQL}
	    </if>
	     GROUP BY I.WAREKY, I.SKUKEY, I.SKUKEY, SM.DESC01, SM.DESC02, SM.DUOMKY, SM.QTDUOM, SM.NETWGT, SM.SKUG01, SM.SKUG02, SM.SKUG03, ST1.STKQTY,
	              EX1.INNQTY, EX1.TRFQTY, EX1.OUTQTY
	    ORDER BY SM.SKUG03, Regexp_replace(REPLACE(UPPER(SM.DESC01), 'G', ''), '[0-9,+,*,-]', ''), SM.NETWGT	
	</select>
	
	
	
	<!-- **[OY05] 주문집계표 (품목별)아이템 조회 -->
	<select id="OY05_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT TO_NUMBER(I.ORDTOT) ORDTOT,
		       TO_NUMBER(NVL(I.USEQTY, 0)) USEQTY,
		       I.MANDT MANDT,
		       I.SEQNO SEQNO,
		       I.ORDTYP ORDTYP,
		       I.SVBELN SVBELN,
		       I.SPOSNR SPOSNR,
		       I.DOCUTY DOCUTY,
		       I.OTRQDT OTRQDT,
		       I.PTNG08 PTNG08,
		       I.PTNRTO PTNRTO,
		       I.PTNRTONM PTNRTONM,
		       I.PTNROD PTNROD,
		       I.PTNRODNM PTNRODNM,
		       I.OWNRKY OWNRKY,
		       I.WAREKY WAREKY,
		       I.WARESR WARESR,
		       I.WARETG WARETG,
		       I.SKUKEY SKUKEY,
		       I.QTYORG QTYORG,
		       I.QTYREQ QTYREQ,
		       I.QTYREQ - I.QTSHPD QTYREQ2,
		       I.WMSMGT WMSMGT,
		       I.QTSHPD QTSHPD,
		       I.QTYREQ - I.QTSHPD SHPQTY,
		       I.QTYREQ TOTSHP,
		       I.DUOMKY DUOMKY,
		       I.NETPR NETPR,
		       I.SALDPT SALDPT,
		       I.REFDKY REFDKY,
		       I.DIRDVY DIRDVY,
		       I.DIRSUP DIRSUP,
		       I.SALEPR SALEPR,
		       I.DISRAT DISRAT,
		       I.SELLPR SELLPR,
		       I.SELAMT SELAMT,
		       I.VATAMT VATAMT,
		       I.CUSRID CUSRID,
		       I.CUNAME CUNAME,
		       I.CUPOST CUPOST,
		       I.CUNATN CUNATN,
		       I.CUTEL1 CUTEL1,
		       I.CUTEL2 CUTEL2,
		       I.CUMAIL CUMAIL,
		       I.CUADDR CUADDR,
		       I.CTNAME CTNAME,
		       I.CTTEL1 CTTEL1,
		       I.SALENM SALENM,
		       I.SALTEL SALTEL,
		       I.TEXT01 TEXT01,
		       I.TEXT02 TEXT02,
		       I.TEXT03 TEXT03,
		       I.C00101 C00101,
		       I.C00102 C00102,
		       I.C00103 C00103,
		       I.USRID1 USRID1,
		       I.DEPTID1 DEPTID1,
		       SF_GET_USERNM(I.USRID2) USRID2,
		       I.CREDAT CREDAT,
		       I.CRETIM CRETIM,
		       I.LMODAT LMODAT,
		       I.LMOTIM LMOTIM,
		       I.XDATS CDATE,
		       I.XSTAT IFFLG,
		       I.DESC01 DESC01,
		       I.BXIQTY BXIQTY,
		       I.BOXQTY BOXQTY,
		       I.REMQTY REMQTY,
		       I.N00105 N00105
		  FROM (SELECT /*+ ORDERED */
		               ST.ORDTOT AS ORDTOT,
		               I.N00105 N00105,
		               S.USEQTY USEQTY,
		               I.MANDT MANDT,
		               I.SEQNO SEQNO,
		               I.ORDTYP ORDTYP,
		               I.SVBELN SVBELN,
		               I.SPOSNR SPOSNR,
		               I.DOCUTY DOCUTY,
		               I.OTRQDT OTRQDT,
		               CC.CDESC1 PTNG08,
		               I.PTNRTO PTNRTO,
		               B.NAME01 PTNRTONM,
		               I.PTNROD PTNROD,
		               B2.NAME01 PTNRODNM,
		               I.OWNRKY OWNRKY,
		               I.WAREKY WAREKY,
		               I.WARESR WARESR,
		               I.WARETG WARETG,
		               I.SKUKEY SKUKEY,
		               I.QTYORG QTYORG,
		               I.QTYREQ QTYREQ,
		               I.WMSMGT WMSMGT,
		               I.QTSHPD QTSHPD,
		               I.DUOMKY DUOMKY,
		               I.NETPR NETPR,
		               I.SALDPT SALDPT,
		               I.REFDKY REFDKY,
		               I.DIRDVY DIRDVY,
		               I.DIRSUP DIRSUP,
		               I.SALEPR SALEPR,
		               I.DISRAT DISRAT,
		               I.SELLPR SELLPR,
		               I.SELAMT SELAMT,
		               I.VATAMT VATAMT,
		               I.CUSRID CUSRID,
		               I.CUNAME CUNAME,
		               I.CUPOST CUPOST,
		               I.CUNATN CUNATN,
		               I.CUTEL1 CUTEL1,
		               I.CUTEL2 CUTEL2,
		               I.CUMAIL CUMAIL,
		               I.CUADDR CUADDR,
		               I.CTNAME CTNAME,
		               I.CTTEL1 CTTEL1,
		               I.SALENM SALENM,
		               I.SALTEL SALTEL,
		               I.TEXT01 TEXT01,
		               I.TEXT02 TEXT02,
		               I.TEXT03 TEXT03,
		               I.C00101 C00101,
		               I.C00102 C00102,
		               I.C00103 C00103,
		               I.USRID1 USRID1,
		               I.DEPTID1 DEPTID1,
		               I.USRID2 USRID2,
		               I.CREDAT CREDAT,
		               I.CRETIM CRETIM,
		               I.LMODAT LMODAT,
		               I.LMOTIM LMOTIM,
		               I.XDATS XDATS,
		               I.XSTAT XSTAT,
		               SM.DESC01 DESC01,
		               NVL(SM.QTDUOM, 0) BXIQTY,
		               NVL( TRUNC((I.QTYREQ - I.QTSHPD) / DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM) ), 0) AS BOXQTY,
		               NVL(MOD(I.QTYREQ, DECODE(SM.QTDUOM, 0, NULL, SM.QTDUOM)), 0) AS REMQTY
		          FROM IFWMS113 I LEFT OUTER JOIN (SELECT OWNRKY, WAREKY, SKUKEY, SUM(QTSIWH-QTSBLK-GREATEST(QTSALO, QTSPMO)) AS USEQTY
		                                             FROM STKKY 
		                                            WHERE OWNRKY = #{OWNRKY}
		                                              AND WAREKY = #{WAREKY}
		                                              AND AREAKY NOT IN ('SHP', 'SYS')
		                                              AND LOCAKY != 'SETLOC'
		                                              AND LOTA06 = '00'
		                                              AND QTSIWH > 0
		                                            GROUP BY OWNRKY, WAREKY, SKUKEY) S ON I.OWNRKY = S.OWNRKY AND I.WAREKY = S.WAREKY 
		                                                                              AND I.SKUKEY = S.SKUKEY 
		                          INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN SKUWC W ON W.OWNRKY = I.OWNRKY AND W.WAREKY = I.WAREKY AND W.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN BZPTN B ON B.OWNRKY = I.OWNRKY AND B.PTNRKY = I.PTNRTO AND B.PTNRTY IN ('0007', '0004')
		                          LEFT OUTER JOIN BZPTN B2 ON B2.OWNRKY = I.OWNRKY AND B2.PTNRKY = I.PTNROD AND B2.PTNRTY IN ('0007', '0004')
		                          LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
		                                                FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
		                                               WHERE 1 = 1
		                                                 AND F.OWNRKY = #{OWNRKY}
		                                                 AND F.WAREKY = #{WAREKY}
		                                           ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
		                          LEFT OUTER JOIN PICSK PK ON PK.OWNRKY = I.OWNRKY AND PK.WAREKY = I.WAREKY AND PK.SKUKEY = I.SKUKEY
		                          LEFT OUTER JOIN CMCDV CC ON B2.PTNG08 = CC.CMCDVL AND CC.CMCDKY = 'PTNG08'
		                          LEFT OUTER JOIN (
                                                   SELECT I.OWNRKY,I.WAREKY,I.SKUKEY,I.SVBELN, I.OTRQDT, SUM(I.QTYREQ) OVER (PARTITION BY I.OWNRKY, I.WAREKY, I.SKUKEY ORDER BY I.OTRQDT, I.SVBELN) AS ORDTOT
                                                     FROM IFWMS113 I 
                                                          INNER JOIN SKUMA SM ON SM.OWNRKY = I.OWNRKY AND SM.SKUKEY = I.SKUKEY
                                                          LEFT OUTER JOIN (SELECT F.OWNRKY, F.WAREKY, F.PTNRKY, C.CARNUM, C.DESC01
							                                                FROM CARFX F INNER JOIN CARMA C ON F.OWNRKY = C.OWNRKY AND F.WAREKY = C.WAREKY AND F.CARNUM = C.CARNUM
							                                               WHERE 1 = 1
							                                                 AND F.OWNRKY = #{OWNRKY}
							                                                 AND F.WAREKY = #{WAREKY}
							                                           ) C ON I.OWNRKY = C.OWNRKY AND I.PTNRTO = C.PTNRKY
                                                    WHERE 1=1
											          AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267') 
											          AND I.XSTAT IN ('R','D')
		           									  AND I.SKUKEY = #{SKUKEY}
		                                              AND I.OWNRKY = #{OWNRKY}
		                                              AND I.WAREKY = #{WAREKY}
												<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
													${RANGE_SQL}
												   </if>
                                                  ) ST ON ST.OWNRKY = I.OWNRKY AND ST.WAREKY = I.WAREKY AND ST.SKUKEY = I.SKUKEY AND ST.SVBELN = I.SVBELN
		
		         WHERE 1=1
		           AND I.DOCUTY IN ('211', '212', '213', '214', '215', '216', '266', '267') 
		           AND I.XSTAT IN ('R','D')
		           AND I.OWNRKY = #{OWNRKY}
		           AND I.WAREKY = #{WAREKY}
		           AND I.SKUKEY = #{SKUKEY}
				<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
					${RANGE_SQL}
			    </if>
		
		) I
		 ORDER BY I.N00105 , I.SPOSNR 	
	</select>
	

	<!-- **[OY05]  update -->
	<update id="OY05_IFWMS113_UPDATE"  parameterType="hashmap">
		UPDATE IFWMS113
		   SET QTYREQ = #{QTYREQ},
		       WAREKY = #{WAREKY},
		       OTRQDT = #{OTRQDT},
		       
		       C00103 = (CASE WHEN QTYORG = QTYREQ THEN #{C00103}
		                     ELSE ' ' END),
		       
		       DIRSUP= #{DIRSUP},
		       C00101 = 'IF',
		       LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD'),
		       LMOTIM = TO_CHAR(SYSDATE,'HH24MISS'),
		       USRID2 = NVL(#{SES_USER_ID}, ' ')
		 WHERE SVBELN = #{SVBELN}
		   AND SPOSNR = #{SPOSNR}
		   AND OWNRKY = #{OWNRKY} 	
		   AND XSTAT = 'R'
		   AND C00102 = 'Y'
	</update>
	
	
	
	<!-- **[OY14] 일괄출고(영업)헤더 조회 -->
	<select id="OY14_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT NVL(IFT.WAREKY,' ')||NVL(IFT.OTRQDT,' ') ||CM.CMCDVL AS KEY,
		       CM.CMCDVL AS N00105,
		       NVL(IFT.OWNRKY,' ') AS OWNRKY,
		       NVL(IFT.WAREKY,' ') AS WAREKY,
		       NVL(IFT.OTRQDT,' ') AS OTRQDT,
		       NVL(SUM(PTNROD), 0) AS SUMQTY,
		       NVL(SUM(IFT.ALLOCCNT), 0) AS ALLOCCNT,
		       NVL(SUM(IFT.UNALLOCCNT), 0) AS UNALLOCCNT
		  FROM CMCDV CM LEFT OUTER JOIN (
		                                 SELECT /*+ ORDERED */ IT.OWNRKY AS OWNRKY, IT.WAREKY WAREKY, IT.OTRQDT OTRQDT, IT.N00105 AS N00105, COUNT(DISTINCT IT.PTNROD) AS PTNROD, COUNT(DISTINCT IT.SVBELN) AS UNALLOCCNT, 0 AS ALLOCCNT 
		                                  FROM IFWMS113 IT 
		                                 WHERE IT.OWNRKY = #{OWNRKY}
		                                   AND IT.WAREKY = #{WAREKY}
		                                   AND IT.OTRQDT = #{OTRQDT}
		                                   AND IT.DOCUTY IN ('211', '212', '213', '214', '215', '216')
		                                   AND IT.C00102 = 'Y'
		                                   AND IT.XSTAT = 'R'
		                                   AND IT.QTYREQ &gt; IT.WMSMGT + IT.QTSHPD
		                                   AND NOT EXISTS (SELECT 1 FROM IFWMS623 WHERE SEBELN = IT.REFDKY)
											<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
												${RANGE_SQL}
										    </if>
		                                 GROUP BY IT.OWNRKY, IT.WAREKY, IT.OTRQDT, IT.N00105
		
		                                 UNION ALL
		                              
		                                SELECT /*+ ordered */ IT.OWNRKY AS OWNRKY, IT.WAREKY "WAREKY", IT.OTRQDT "OTRQDT", IT.N00105 AS N00105, COUNT(DISTINCT IT.PTNROD) AS PTNROD, 0 AS UNALLOCCNT, COUNT(DISTINCT IT.SVBELN) AS ALLOCCNT 
		                                  FROM IFWMS113 IT 
		                                 WHERE IT.OWNRKY = #{OWNRKY}
		                                   AND IT.WAREKY = #{WAREKY}
		                                   AND IT.OTRQDT = #{OTRQDT}
		                                   AND IT.DOCUTY IN ('211', '212', '213', '214', '215', '216')
		                                   AND IT.C00102 = 'Y'
		                                   AND IT.XSTAT = 'D'
		                                   AND (IT.WMSMGT != 0 OR IT.QTSHPD !=0 )
		                                   AND NOT EXISTS (SELECT 1 FROM IFWMS623 WHERE SEBELN = IT.REFDKY)
										<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
											${RANGE_SQL}
									    </if>
		                                 GROUP BY IT.OWNRKY, IT.WAREKY, IT.OTRQDT, IT.N00105
		
		                                 ) IFT ON CM.CMCDVL = IFT.N00105
		 WHERE CM.CMCDKY = 'N00105'
		   AND CM.CMCDVL != 0
		 GROUP BY CM.CMCDVL, CM.CMCDVL, NVL(IFT.OWNRKY,' '), NVL(IFT.WAREKY,' '), NVL(IFT.OTRQDT,' ') 
		 ORDER BY CM.CMCDVL
	</select>
	
	
	
	<!-- **[OY14] 일괄출고(영업)헤더(부족재고) 조회 -->
	<select id="OY14_HEAD2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED */ IT.WAREKY||IT.OTRQDT||IT.N00105 KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.OTRQDT AS DOCDAT,
		       IT.SKUKEY AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SUM(IT.QTYREQ) AS QTYREQ,
		       NVL(ST.STKQTY,0) AS TOTQTY
		  FROM IFWMS113 IT LEFT OUTER JOIN V_WMS_STOCK_TOSS ST ON IT.OWNRKY = ST.OWNRKY AND IT.WAREKY = ST.WAREKY AND IT.SKUKEY = ST.SKUKEY
		                   INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
		 WHERE IT.MANDT = 'SAP'
		   AND IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.OTRQDT = #{OTRQDT}
		   AND IT.DOCUTY IN ('211','212','213','214','215','216')
		   AND IT.C00102 = 'Y'
		   AND IT.XSTAT = 'R'
		   AND (IT.QTSHPD = 0 AND IT.WMSMGT = 0)
		   AND IT.QTYREQ &gt; 0
		   AND NOT EXISTS (SELECT 1 FROM IFWMS623 WHERE SEBELN = IT.REFDKY)
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
		  GROUP BY IT.OWNRKY, IT.WAREKY, SM.DESC01, SM.DESC02, ST.STKQTY, IT.OTRQDT, IT.N00105, IT.SKUKEY
		  HAVING SUM(IT.QTYREQ) > NVL(ST.STKQTY,0)
		 ORDER BY IT.SKUKEY
	</select>
	
	
	
	<!-- **[OY14] 일괄출고(영업)아이템 조회 -->
	<select id="OY14_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED */ IT.N00105 AS KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.OTRQDT AS DOCDAT,
		       IT.DOCUTY AS SHPMTY,
		       IT.SVBELN AS SVBELN, 
		       IT.OTRQDT AS RQSHPD,
		       IT.PTNROD AS DPTNKY,
		       BZ1.NAME01 AS DPTNKYNM,
		       IT.PTNRTO AS PTRCVR,
		       BZ2.NAME01 AS PTRCVRNM,
		       IT.N00105 AS N00105,
		       IT.DIRDVY AS PGRC02,
		       IT.DIRSUP AS PGRC03,
		       MAX(IT.TEXT01) AS TEXT01
		  FROM IFWMS113 IT INNER JOIN BZPTN BZ1 ON IT.OWNRKY = BZ1.OWNRKY AND IT.PTNROD = BZ1.PTNRKY AND BZ1.PTNRTY = '0001'
		                   INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		                   INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		 WHERE IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.OTRQDT = #{OTRQDT}
		   AND IT.DOCUTY IN ('211','212','213','214','215','216')
		   AND IT.C00102 = 'Y'
		   AND IT.XSTAT = 'R'
		   AND (IT.QTSHPD = 0 or IT.WMSMGT = 0)
		   AND IT.QTYREQ &gt; 0
		   AND IT.N00105 = #{N00105}
		   AND NOT EXISTS (SELECT 1 FROM IFWMS623 WHERE SEBELN = IT.REFDKY)
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
		 GROUP BY IT.OWNRKY, IT.WAREKY, IT.SVBELN, IT.DOCUTY, IT.OTRQDT, IT.PTNROD, BZ1.NAME01, IT.PTNRTO, BZ2.NAME01, IT.DIRDVY, IT.DIRSUP, IT.N00105	
 	</select>
	
	
	
	<!-- **[OY14] 일괄출고(영업)아이템(부족재고) 조회 -->
	<select id="OY14_ITEM2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED */IT.WAREKY||IT.OTRQDT||IT.SKUKEY KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.SVBELN AS SVBELN,
		       IT.PTNROD AS PTNROD,
		       BZ.NAME01 AS PTNRODNM,
		       IT.PTNRTO AS PTNRTO,
		       BZ2.NAME01 AS PTNRTONM,
		       IT.N00105 AS N00105,
		       IT.SKUKEY AS SKUKEY,
		       IT.OTRQDT AS DOCDAT,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SUM(IT.QTYREQ) AS QTYREQ
		  FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY 
		                   INNER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNROD = BZ.PTNRKY AND BZ.PTNRTY = '0001' 
		                   INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0007'
		 WHERE IT.MANDT = 'SAP'
		   AND IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.OTRQDT = #{OTRQDT}
		   AND IT.DOCUTY IN ('211','212','213','214','215','216')
		   AND IT.C00102 = 'Y'
		   AND IT.SKUKEY = #{SKUKEY}
		   AND IT.XSTAT = 'R'
		   AND (IT.QTSHPD = 0 AND IT.WMSMGT = 0)
		   AND IT.QTYREQ &gt; 0
		   AND NOT EXISTS ( SELECT 1 FROM IFWMS623 WHERE SEBELN = IT.REFDKY)
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
		 GROUP BY IT.OWNRKY, IT.WAREKY, IT.SVBELN, IT.SKUKEY, SM.DESC01, SM.DESC02, IT.OTRQDT, IT.PTNROD, BZ.NAME01, IT.PTNRTO, BZ2.NAME01, IT.N00105
		 ORDER BY IT.SKUKEY	
	</select>
	
	
	<!-- [OY14] 일괄출고(영업) 프로시저   --> 
	<select id="P_BATCH_GI_COMPLET_N00105_UPDATE" statementType="CALLABLE"  parameterType="hashmap">
		{ call P_BATCH_GI_COMPLET_N00105(#{OWNRKY}, #{WAREKY}, #{N00105}, #{OTRQDT}, #{SES_USER_ID}) }
 	</select>
	
	
	
	<!-- **[OY15] 일괄출고(이고)헤더 조회 -->
	<select id="OY15_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT  /*+ ORDERED */IT.SVBELN AS KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY WAREKY,
		       IT.WARETG WARETG,
		       IT.OTRQDT OTRQDT,
		       IT.SVBELN SVBELN
		  FROM IFWMS113 IT 
		 WHERE IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.DOCUTY = '266'
		   AND IT.C00102 = 'Y'
		   AND IT.XSTAT = 'R'
		   AND IT.QTYREQ &gt; IT.WMSMGT + IT.QTSHPD
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
		 GROUP BY IT.OWNRKY, IT.WAREKY, IT.WARETG, IT.OTRQDT, IT.SVBELN
		 ORDER BY IT.SVBELN
	</select>
	
	
	
	<!-- **[OY15] 일괄출고(이고)헤더(부족재고) 조회 -->
	<select id="OY15_HEAD2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED */ IT.WAREKY||IT.OTRQDT||IT.SKUKEY KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.SKUKEY AS SKUKEY,
		       IT.OTRQDT AS DOCDAT,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SUM(IT.QTYREQ) AS QTYREQ,
		       NVL(ST.STKQTY,0) AS TOTQTY
		  FROM IFWMS113 IT LEFT OUTER JOIN V_WMS_STOCK_TOSS ST ON IT.OWNRKY = ST.OWNRKY AND IT.WAREKY = ST.WAREKY AND IT.SKUKEY = ST.SKUKEY
		                   INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY
		 WHERE IT.MANDT = 'SAP'
		   AND IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.DOCUTY = '266'
		   AND IT.C00102 = 'Y'
		   AND IT.XSTAT = 'R'
		   AND (IT.QTSHPD = 0 AND IT.WMSMGT = 0)
		   AND IT.QTYREQ &gt; 0
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
		 GROUP BY IT.OWNRKY, IT.WAREKY, IT.SKUKEY, SM.DESC01, SM.DESC02, ST.STKQTY, IT.OTRQDT
		 HAVING SUM(IT.QTYREQ) > NVL(ST.STKQTY,0)
		 ORDER BY IT.SKUKEY	
	</select>
	
	
	
	<!-- **[OY15] 일괄출고(이고)아이템 조회 -->
	<select id="OY15_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED */ IT.N00105 AS KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.OTRQDT AS DOCDAT,
		       IT.DOCUTY AS SHPMTY,
		       IT.SVBELN AS SVBELN, 
		       IT.OTRQDT AS RQSHPD,
		       IT.PTNROD AS DPTNKY,
		       BZ1.NAME01 AS DPTNKYNM,
		       IT.PTNRTO AS PTRCVR,
		       BZ2.NAME01 AS PTRCVRNM,
		       IT.N00105 AS N00105,
		       IT.DIRDVY AS PGRC02,
		       IT.DIRSUP AS PGRC03,
		       IT.TEXT01 AS TEXT01,
		       IT.SKUKEY AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       IT.QTYREQ AS QTYREQ
		  FROM IFWMS113 IT INNER JOIN BZPTN BZ1 ON IT.OWNRKY = BZ1.OWNRKY AND IT.PTNROD = BZ1.PTNRKY AND BZ1.PTNRTY = '0004'
		                   INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0004'
		                   INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY AND SM.DELMAK = ' '
		 WHERE IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.DOCUTY = '266'
		   AND IT.C00102 = 'Y'
		   AND IT.XSTAT = 'R'
		   AND (IT.QTSHPD = 0 or IT.WMSMGT = 0)
		   AND IT.QTYREQ &gt; 0
		   AND IT.SVBELN = #{SVBELN}
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
	</select>
	
	<!-- **[OY15] 일괄출고(이고)아이템(부족재고) 조회 -->
	<select id="OY15_ITEM2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT /*+ ORDERED */IT.WAREKY||IT.OTRQDT||IT.SKUKEY KEY,
		       IT.OWNRKY AS OWNRKY,
		       IT.WAREKY AS WAREKY,
		       IT.SVBELN AS SVBELN,
		       IT.PTNROD AS PTNROD,
		       BZ.NAME01 AS PTNRODNM,
		       IT.PTNRTO AS PTNRTO,
		       BZ2.NAME01 AS PTNRTONM,
		       IT.N00105 AS N00105,
		       IT.SKUKEY AS SKUKEY,
		       IT.OTRQDT AS DOCDAT,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SUM(IT.QTYREQ) AS QTYREQ
		  FROM IFWMS113 IT INNER JOIN SKUMA SM ON IT.OWNRKY = SM.OWNRKY AND IT.SKUKEY = SM.SKUKEY 
		                   INNER JOIN BZPTN BZ ON IT.OWNRKY = BZ.OWNRKY AND IT.PTNROD = BZ.PTNRKY AND BZ.PTNRTY = '0004' 
		                   INNER JOIN BZPTN BZ2 ON IT.OWNRKY = BZ2.OWNRKY AND IT.PTNRTO = BZ2.PTNRKY AND BZ2.PTNRTY = '0004'
		 WHERE IT.MANDT = 'SAP'
		   AND IT.OWNRKY = #{OWNRKY}
		   AND IT.WAREKY = #{WAREKY}
		   AND IT.OTRQDT = #{DOCDAT}
		   AND IT.DOCUTY = '266'
		   AND IT.C00102 = 'Y'
		   AND IT.SKUKEY = #{SKUKEY}
		   AND IT.XSTAT = 'R'
		   AND (IT.QTSHPD = 0 AND IT.WMSMGT = 0)
		   AND IT.QTYREQ &gt; 0
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
		 GROUP BY IT.OWNRKY, IT.WAREKY, IT.SVBELN, IT.SKUKEY, SM.DESC01, SM.DESC02, IT.OTRQDT, IT.PTNROD, BZ.NAME01, IT.PTNRTO, BZ2.NAME01, IT.N00105
	</select>
	
	
	<!-- [OY14] 일괄출고(이고출고) 프로시저   --> 
	<select id="P_BATCH_GI_COMPLET_TRFIT_UPDATE" statementType="CALLABLE"  parameterType="hashmap">
		{ call P_BATCH_GI_COMPLET_TRFIT(#{OWNRKY}, #{WAREKY}, #{SVBELN}, #{OTRQDT}, #{SES_USER_ID}) }
 	</select>
	
	
	
	<!-- **[OY22] 양산 박스바코드 관리  조회 -->
	<select id="OY22_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT WAREKY AS WAREKY       
			 , SKUTYP AS SKUTYP      
			 , SKUKEY AS SKUKEY      
			 , TEXT01 AS TEXT01      
			 , CREDAT AS CREDAT      
			 , CRETIM AS CRETIM      
			 , CREUSR AS CREUSR      
			 , LMODAT AS LMODAT       
			 , LMOTIM AS LMOTIM      
			 , LMOUSR AS LMOUSR      
		  FROM SKBCD
		 WHERE WAREKY = #{WAREKY}
			<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
				${RANGE_SQL}
		    </if>
			<if test="SKUTYP != null and SKUTYP != ''"> 
		   AND SKUTYP = #{SKUTYP}
			</if>
			<if test="SKUKEY != null and SKUKEY != ''"> 
		   AND SKUKEY = #{SKUKEY}
			</if>
     </select>
	
	
	<!-- **[OY22] 양산바코드 Insert -->
	<insert id="OY22_INSERT"  parameterType="hashmap">
		INSERT INTO SKBCD
		(
			  WAREKY       
			, SKUTYP       
			, SKUKEY       
			, TEXT01       
			, CREDAT       
			, CRETIM       
			, CREUSR       
			, LMODAT       
			, LMOTIM       
			, LMOUSR       
		)
		VALUES
		(
		     #{WAREKY}
		    ,#{SKUTYP}
		    ,#{SKUKEY}
		    ,NVL(#{TEXT01},' ')
		    ,TO_CHAR(SYSDATE,'YYYYMMDD')
		    , TO_CHAR(SYSDATE,'HH24MISS')
		    , #{SES_USER_ID}
		    ,TO_CHAR(SYSDATE,'YYYYMMDD')
		    , TO_CHAR(SYSDATE,'HH24MISS')
		    , #{SES_USER_ID}
		)
	</insert>
	
	<!-- **[OY22] 양산바코드 Update -->
	<update id="OY22_UPDATE"  parameterType="hashmap">
		UPDATE SKBCD
		   SET TEXT01 = NVL(#{TEXT01}, ' ')
		   	 , LMODAT = TO_CHAR(SYSDATE,'YYYYMMDD')      
			 , LMOTIM = TO_CHAR(SYSDATE,'HH24MISS')      
			 , LMOUSR = #{SES_USER_ID}
		 WHERE WAREKY = #{WAREKY}
		   AND SKUTYP = #{SKUTYP}
		   AND SKUKEY = #{SKUKEY}
	</update>
	
	<!-- **[OY22] 양산바코드 Delete -->
	<delete id="OY22_DELETE"  parameterType="hashmap">
		DELETE SKBCD 
		 WHERE WAREKY = #{WAREKY}
		   AND SKUTYP = #{SKUTYP}
		   AND SKUKEY = #{SKUKEY}
	</delete>
	
	
	<!-- **[OY22] 양산바코드  중복체크 -->
	<select id="OY22_MAP" parameterType="hashmap" resultType="DataMap">
		SELECT COUNT(*) AS CHK
		  FROM SKBCD
		 WHERE WAREKY = #{WAREKY}
		   AND SKUTYP = #{SKUTYP}
		   AND SKUKEY = #{SKUKEY}
	</select>
	
	
	<!-- **[OY22] 양산바코드  중복체크 -->
	<select id="OY22_SKU_MAP" parameterType="hashmap" resultType="DataMap">
		SELECT COUNT(*) AS CHK
		  FROM SKUWC
		 WHERE WAREKY = #{WAREKY}
		   AND SKUKEY = #{SKUKEY}
	</select>
	
	
	
	<!-- **[OY30] 이고수정 헤더  조회 -->
	<select id="OY30_HEAD_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT DISTINCT 'SAP' AS MANDT
		     , RH.OWNRKY AS OWNRKY
		     , RH.WAREKY AS WAREKY
		     , RH.WAREKY AS WARESR
		     , RH.RECVKY AS RECVKY
		     , RH.DPTNKY AS WARETG
		     , '266' AS DOCUTY
		     , TO_CHAR(SYSDATE,'YYYYMMDD') AS OTRQDT
		     , RH.DOCDAT AS DOCDAT
		     , IFW.SEBELN AS SVBELN
		  FROM RECDH RH
		       INNER JOIN RECDI RI ON RI.RECVKY = RH.RECVKY
		       INNER JOIN SKUMA SM ON SM.OWNRKY = RH.OWNRKY AND SM.SKUKEY = RI.SKUKEY
		       INNER JOIN IFWMS103 IFW ON IFW.SEBELN = RI.REFDKY AND IFW.SEBELP = RI.REFDIT
		 WHERE RH.OWNRKY = #{OWNRKY}
		   AND RH.WAREKY = #{WARESR}
		   AND RH.RCPTTY = #{RCPTTY}
		   AND RH.STATDO = 'FRV'
		   AND (SELECT COUNT(1) FROM IFWMS113 WHERE REFDKY = RI.RECVKY AND WAREKY = RH.WAREKY AND OWNRKY = #{OWNRKY} AND XSTAT IN ('D','R')) &lt; 1
		<if test="ORDDAT != null and ORDDAT != ''"> 
		   AND RH.ARCPTD = #{ORDDAT}
		</if>
		   AND RH.DPTNKY = #{WARETG}
	</select>
	
	
	
	<!-- **[OY30] 이고수정 아이템  조회 -->
	<select id="OY30_ITEM_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT RH.OWNRKY AS OWNRKY
		     , RH.WAREKY AS WAREKY
		     , RH.RECVKY AS RECVKY
		     , RI.RECVIT AS RECVIT
		     , RH.DPTNKY AS WARETG
		     , RH.ARCPTD AS ARCPTD
		     , RH.DOCDAT AS DOCDAT
		     , RI.SKUKEY AS SKUKEY
		     , RI.DESC01 AS DESC01
		     , RI.DESC02 AS DESC02
		     , RI.AREAKY AS AREAKY
		     , RI.LOTNUM AS LOTNUM
		     , RI.LOCAKY AS LOCAKY
		     , RI.QTYRCV AS QTYORG
		     , RI.QTYRCV AS QTYREQ
		     , RI.QTYUOM AS QTYUOM
		     , SM.QTYSTD AS QTYSTD
		     , SM.DUOMKY AS DUOMKY
		     , SM.SKUG03 AS SKUG03
		     , NVL((SELECT SUM(QTSIWH) FROM STKKY WHERE OWNRKY = RH.OWNRKY AND WAREKY = RH.WAREKY AND LOCAKY = RI.LOCAKY AND SKUKEY = RI.SKUKEY AND LOTA06 = '00' AND QTSIWH > 0 AND QTSALO = 0 AND QTSPMO = 0 AND QTSPMI = 0 AND QTSBLK = 0),0) AS QTSIWH
		  FROM RECDH RH
		       INNER JOIN RECDI RI ON RI.RECVKY = RH.RECVKY
		       INNER JOIN SKUMA SM ON SM.OWNRKY = RH.OWNRKY AND SM.SKUKEY = RI.SKUKEY
		 WHERE RH.OWNRKY = #{OWNRKY}
		   AND RH.WAREKY = #{WARESR}
		   AND RH.RCPTTY = #{RCPTTY}
		   AND RH.STATDO = 'FRV'
		<if test="ORDDAT != null and ORDDAT != ''"> 
		   AND RH.ARCPTD = #{ORDDAT}
		</if>
		   AND RH.DPTNKY = #{WARETG}
		   AND RH.RECVKY = #{RECVKY}
	</select>
   
   
    
	<!-- [OY30] 이고 수정 저장 후  헤더 조회  -->
	<select id="OY30_HEAD2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT A.MANDT,
		       A.OWNRKY,
		       A.WAREKY,
		       A.WARESR,
		       A.WARETG,
		       A.DOCUTY,
		       B.SHORTX AS "DOCUTYNM",
		       A.ORDTYP,
		       A.ORDDAT,
		       A.SVBELN,
		       A.OTRQDT,
		       A.PTNRTO,
		       A.DIRDVY,
		       A.DIRSUP,
		       A.PTNROD,
		       A.CUSRID,
		       A.CUNAME,
		       A.CUPOST,
		       A.CUNATN,
		       A.CUTEL1,
		       A.CUTEL2,
		       A.CUMAIL,
		       A.CUADDR,
		       A.CTNAME,
		       A.CTTEL1,
		       A.SALENM,
		       A.SALTEL,
		       A.C00102,
		       ' ' AS RECVKY 
		  FROM IFWMS113 A INNER JOIN DOCTM B ON A.DOCUTY = B.DOCUTY
		 WHERE A.SVBELN = #{SVBELN}
		   AND A.XSTAT = 'R' 
		 GROUP BY A.MANDT, A.OWNRKY, A.WAREKY, A.WARESR, A.WARETG, A.DOCUTY, B.SHORTX, A.ORDTYP, A.ORDDAT,
		          A.SVBELN, A.OTRQDT, A.PTNRTO, A.DIRDVY, A.DIRSUP, A.PTNROD, A.CUSRID, A.CUNAME, A.CUPOST,
		          A.CUNATN, A.CUTEL1, A.CUTEL2, A.CUMAIL, A.CUADDR, A.CTNAME, A.CTTEL1, A.SALENM, A.SALTEL, A.C00102
		 ORDER BY SVBELN 
	</select>
   
   
    
	<!-- [OY30] 이고 수정 저장 후 아이템 조회  -->
	<select id="OY30_ITEM2_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT A.*
			, S.DESC01 
			, S.DESC02 
			, S.SKUG02 
			, S.SKUG03 
			, S.ASKU02 
			, S.SKUG05 
			, S.GRSWGT 
			, S.NETWGT 
			, S.SKUG04 
			, S.ASKU03 
			, S.LENGTH 
			, S.WIDTHW 
			, S.HEIGHT 
			, S.CUBICM 
			, S.CAPACT 
			, S.DUOMKY 
			, S.QTDUOM 
			, S.ASKU01 
			, S.WGTUNT 
			, S.DUOMKY 
			, S.ASKU04 
			, S.ASKU05 
			, S.EANCOD 
			, S.GTINCD 
			, S.SKUG01 
			, S.QTDUOM AS BXIQTY
			, S.QTYSTD AS PLIQTY
		    , ' ' AS RECVKY 
		    , ' ' AS RECVIT 
		    , ' ' AS AREAKY
		    , ' ' AS LOTNUM
		    , ' ' AS LOCAKY
		    , ' ' AS DOCDAT
		    , 0 AS QTYUOM
		    , 0 AS QTYSTD
			, NVL(  TRUNC((A.QTYREQ) / DECODE(S.QTYSTD, 0, NULL, S.QTYSTD )) ,0) PLTQTY
			, NVL(  TRUNC((A.QTYREQ) / DECODE(S.QTDUOM, 0, NULL, S.QTDUOM )) ,0) BOXQTY
			, NVL(MOD(A.QTYREQ, S.QTDUOM),0) AS REMQTY
			, NVL((SELECT SUM(SU.QTSIWH) FROM STKKY SU 
				    WHERE SU.OWNRKY = A.OWNRKY 
				      AND SU.WAREKY = A.WAREKY 
				      AND SU.SKUKEY = A.SKUKEY
				      AND SU.AREAKY NOT IN ('SHP','SYS')
				      AND (SU.QTSIWH > 0 OR SU.QTSPMI >0) 
				      AND ( CASE WHEN A.DOCUTY = '266' THEN '00' 
				                 WHEN A.DOCUTY = '267' THEN '20' END ) = SU.LOTA06
			
				 ),0) TOQTSIWH
		FROM IFWMS113 A
			 INNER JOIN DOCTM B ON A.DOCUTY = B.DOCUTY
		     INNER JOIN SKUMA S ON S.OWNRKY = A.OWNRKY AND S.SKUKEY = A.SKUKEY
	   WHERE A.DOCUTY IN ( '266','267')
	     AND A.XSTAT = 'R'
		 AND A.SVBELN = #{SVBELN}	
	   ORDER BY A.SVBELN, A.SPOSNR
	</select>
	
	<!-- [OY06] 수불조회(전체) 전체 -->
	<select id="OY06_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT CASE GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '0000011' THEN ' ' 
	            ELSE CASE WH.WAREKY WHEN '2315' THEN SM.SKUKEY ELSE ' ' END END AS SKUKEY,
	       SM.SKUKEY AS SKUKEY2,
	       SM.SKUG03,
	       SM.NETWGT,
	       GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01)||REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]')||SM.NETWGT AS ORDSEQ,
	       CASE WH.WAREKY WHEN '2315' THEN SM.DESC01 ELSE ' ' END AS DESC01,
	       CASE WH.WAREKY WHEN '2315' THEN SM.DESC02 ELSE ' ' END AS DESC02,
	       CASE GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '0000011' THEN ' ' 
	            ELSE WH.WAREKY END AS WAREKY,
	       CASE GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '0000011' THEN '합계' 
	            ELSE WH.NAME01 END AS NAME01,
	       NVL(SUM(BAS.PREQTY), 0) AS STDQTY,
	       NVL(SUM(STD.QTSHPD), 0) AS QTSHPD,
	       NVL(SUM(STD.QTYRCV), 0) AS QTYRCV,
	       NVL(SUM(STD.ADJQTY), 0) + NVL(SUM(STD.PHYQTY), 0) AS ADJQTY,
	       NVL(SUM(BAS.PREQTY), 0) + NVL(SUM(STD.QTYRCV), 0) - NVL(SUM(STD.QTSHPD), 0) + NVL(SUM(STD.ADJQTY), 0) + NVL(SUM(STD.PHYQTY), 0) AS STKQTY,
	       GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) AS GID
	  FROM WAHMA WH INNER JOIN SKUWC SW ON SW.OWNRKY = '2300' AND SW.WAREKY = '2315'
	                INNER JOIN SKUMA SM ON SM.OWNRKY = '2300' AND SM.DELMAK = ' ' AND SW.SKUKEY = SM.SKUKEY
	                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, PREQTY  
	                                   FROM WMSSTK_OY
	                                  WHERE STDDAT = #{STDDAT}) BAS ON WH.WAREKY = BAS.WAREKY AND SM.SKUKEY = BAS.SKUKEY
	                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, SUM(QTYRCV) AS QTYRCV, SUM(QTSHPD) AS QTSHPD, SUM(ADJQTY) AS ADJQTY, SUM(PHYQTY) AS PHYQTY 
	                                   FROM WMSSTK_OY
	                                  WHERE 1=1
	                                   <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
											${RANGE_SQL2}
										</if>
	                                  GROUP BY WAREKY, SKUKEY 
	                                ) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY
	  WHERE WH.WAREKY IN ('2315', '2316', '2317', '2318', '2319', '2320', '2321', '2322', '2323')
	        <if test="RANGE_SQL != null and RANGE_SQL != ''">
				${RANGE_SQL}
			</if>
	  GROUP BY ROLLUP(SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01), SM.SKUG03, SM.NETWGT
	  HAVING GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) IN ('0000000','0000011')
	  ORDER BY SM.SKUG03, REGEXP_REPLACE(REPLACE(UPPER(SM.DESC01), 'G', ''), '[0-9]')||SM.NETWGT||SM.SKUKEY||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(SM.SKUG03)||GROUPING(SM.NETWGT)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01), WH.WAREKY
	  
	</select>
	<!-- [OY06] 수불조회(전체) 월별 -->
	<select id="OY06_02_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT CASE GROUPING(VM.VMONTH)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
		            WHEN '001111' THEN ' ' 
		            ELSE CASE WH.WAREKY WHEN '2315' THEN VM.VMONTH ELSE ' ' END END AS VMONTH,
		       VM.VMONTH AS VMONTH2,
		       CASE GROUPING(VM.VMONTH)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
		            WHEN '001111' THEN ' ' 
		            ELSE CASE WH.WAREKY WHEN '2315' THEN SM.SKUKEY ELSE ' ' END END AS SKUKEY,
		       SM.SKUKEY AS SKUKEY2,
		       CASE WH.WAREKY WHEN '2315' THEN SM.DESC01 ELSE ' ' END AS DESC01,
		       CASE WH.WAREKY WHEN '2315' THEN SM.DESC02 ELSE ' ' END AS DESC02,
		       CASE GROUPING(VM.VMONTH)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
		            WHEN '001111' THEN ' ' 
		            ELSE WH.WAREKY END AS WAREKY,
		       CASE GROUPING(VM.VMONTH)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
		            WHEN '001111' THEN '합계' 
		            ELSE WH.NAME01 END AS NAME01,
		       NVL(SUM(STD.PREQTY), 0) AS STDQTY,
		       NVL(SUM(STD.QTSHPD), 0) AS QTSHPD,
		       NVL(SUM(STD.QTYRCV), 0)  AS QTYRCV,
		       NVL(SUM(STD.ADJQTY), 0) + NVL(SUM(STD.PHYQTY), 0) AS ADJQTY,
		       NVL(SUM(STD.STKQTY), 0) AS STKQTY,
		       GROUPING(VM.VMONTH)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) AS GID
		  FROM WAHMA WH LEFT OUTER JOIN (SELECT '2300' AS OWNRKY, TO_CHAR(TO_DATE(#{STDDAT}),'YYYY')||LPAD(LEVEL, 2, '0') AS VMONTH
		                                   FROM DUAL
		                                 CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = '2300'
		                INNER JOIN SKUWC SW ON SW.OWNRKY = '2300' AND SW.WAREKY = '2315' AND SW.SKUKEY = #{SKUKEY}
		                INNER JOIN SKUMA SM ON SM.OWNRKY = '2300' AND SM.SKUKEY = #{SKUKEY} AND SM.DELMAK = ' '
		                LEFT OUTER JOIN (SELECT WAREKY, SUBSTR(STDDAT, 1, 6) AS STDMON, SKUKEY, SUM(PREQTY) AS PREQTY, SUM(QTYRCV) QTYRCV, 
		                                        SUM(QTSHPD) QTSHPD, SUM(ADJQTY) ADJQTY, SUM(PHYQTY) PHYQTY, SUM(STKQTY) STKQTY
		                                   FROM WMSSTK_OY
		                                  WHERE STDDAT BETWEEN TO_CHAR(TO_DATE(#{STDDAT}),'YYYY')||'0101' AND TO_CHAR(TO_DATE(#{STDDAT}),'YYYY')||'1231'
		                                    AND SKUKEY = #{SKUKEY}
		                                  GROUP BY WAREKY, SUBSTR(STDDAT, 1, 6), SKUKEY) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY AND VM.VMONTH = STD.STDMON
		  WHERE WH.WAREKY IN ('2315', '2316', '2317', '2318', '2319', '2320', '2321', '2322', '2323')
		    AND SM.SKUKEY = #{SKUKEY}
		  GROUP BY ROLLUP(VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01)
		 HAVING GROUPING(VM.VMONTH)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) IN ('000000','001111')
		  ORDER BY VM.VMONTH, SM.SKUKEY, WH.WAREKY
  
	</select>
	
	<!-- [OY06] 수불조회(전체) 일별 -->
	<select id="OY06_03_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT CASE GROUPING(VM.VDAY)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '001111' THEN ' ' 
	            ELSE CASE WH.WAREKY WHEN '2315' THEN VM.VDAY ELSE ' ' END END AS VDAY,
	       CASE GROUPING(VM.VDAY)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '001111' THEN ' ' 
	            ELSE CASE WH.WAREKY WHEN '2315' THEN SM.SKUKEY ELSE ' ' END END AS SKUKEY,
	       CASE WH.WAREKY WHEN '2315' THEN SM.DESC01 ELSE ' ' END AS DESC01,
	       CASE WH.WAREKY WHEN '2315' THEN SM.DESC02 ELSE ' ' END AS DESC02,
	       CASE GROUPING(VM.VDAY)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '001111' THEN ' ' 
	            ELSE WH.WAREKY END AS WAREKY,
	       CASE GROUPING(VM.VDAY)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) 
	            WHEN '001111' THEN '합계' 
	            ELSE WH.NAME01 END AS NAME01,
	       NVL(SUM(STD.PREQTY), 0) AS STDQTY,
	       NVL(SUM(STD.QTSHPD), 0) AS QTSHPD,
	       NVL(SUM(STD.QTYRCV), 0) AS QTYRCV,
	       NVL(SUM(STD.ADJQTY), 0) + NVL(SUM(STD.PHYQTY), 0) AS ADJQTY,
	       NVL(SUM(STD.STKQTY), 0) AS STKQTY,
	       GROUPING(VM.VDAY)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) AS GID
	  FROM WAHMA WH LEFT OUTER JOIN (SELECT '2300' AS OWNRKY, #{STDDAT}||LPAD(LEVEL, 2, '0') AS VDAY
	                                   FROM DUAL
	                                CONNECT BY TO_DATE(#{STDDAT}||'01') + LEVEL - 1 &lt;= LAST_DAY(TO_DATE(#{STDDAT}||'01'))) VM ON VM.OWNRKY = '2300'
	                INNER JOIN SKUWC SW ON SW.OWNRKY = '2300' AND SW.WAREKY = '2315' AND SW.SKUKEY = #{SKUKEY}
	                INNER JOIN SKUMA SM ON SM.OWNRKY = '2300' AND SM.DELMAK = ' ' AND SM.SKUKEY = #{SKUKEY}
	                LEFT OUTER JOIN (SELECT WAREKY, STDDAT, SKUKEY, PREQTY, QTYRCV, QTSHPD, ADJQTY, PHYQTY, STKQTY 
	                                   FROM WMSSTK_OY
	                                  WHERE STDDAT BETWEEN #{STDDAT}||'01' AND TO_CHAR(LAST_DAY(TO_DATE(#{STDDAT}||'01')), 'YYYYMMDD')
	                                    AND SKUKEY = #{SKUKEY}) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY AND VM.VDAY = STD.STDDAT
	  WHERE WH.WAREKY IN ('2315', '2316', '2317', '2318', '2319', '2320', '2321', '2322', '2323')
	    AND SM.SKUKEY = #{SKUKEY}
	  GROUP BY ROLLUP(VM.VDAY, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01)
	 HAVING GROUPING(VM.VDAY)||GROUPING(SM.SKUKEY)||GROUPING(SM.DESC01)||GROUPING(SM.DESC02)||GROUPING(WH.WAREKY)||GROUPING(WH.NAME01) IN ('000000','001111')
	  ORDER BY VM.VDAY, SM.SKUKEY, WH.WAREKY
	  
	</select>
	
	<!-- OY06 그룹핑 프로시저  -->
	<update id="P_DAILY_WMSSTK_OY_DATE_UPDATE" parameterType="hashmap">
   		{ call P_DAILY_WMSSTK_OY_DATE(#{STDDAT})}
 	</update>
 	
	<!-- [OY07] 수불조회(전체) 전체 -->
	<select id="OY07_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT SM.SKUKEY AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SM.SKUG03 AS SKUG03,
		       SM.NETWGT AS NETWGT,
		       SM.QTDUOM AS QTDUOM,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS NAME01,
		       NVL(MAX(BAS.PREQTY), 0) AS STDQTY,
		       NVL(MAX(STD.QTSHPD), 0) AS QTSHPD,
		       NVL(MAX(STD.QTYRCV), 0) AS QTYRCV,
		       NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) AS ADJQTY,
		       NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTYRCV), 0) - NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) AS STKQTY,
		       TRUNC((NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTYRCV), 0) - NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0)) / SM.QTDUOM , 0) AS STKBOX,
		       TRUNC(MOD((NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTYRCV), 0) - NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0)),SM.QTDUOM), 0) AS STKREM,
		       NVL(MAX(STD3.QTSIWH), 0) AS QTSIWH
		  FROM WAHMA WH INNER JOIN SKUWC SW ON SW.OWNRKY = #{OWNRKY} AND SW.WAREKY = #{WAREKY}
		                INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.DELMAK = ' ' AND SW.SKUKEY = SM.SKUKEY
		                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, PREQTY  
		                                   FROM WMSSTK_OY
		                                  WHERE WAREKY = #{WAREKY}
		                                    AND STDDAT = #{STDDAT}) BAS ON WH.WAREKY = BAS.WAREKY AND SM.SKUKEY = BAS.SKUKEY
		                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, SUM(QTYRCV) AS QTYRCV, SUM(QTSHPD) AS QTSHPD , SUM(ADJQTY) AS ADJQTY , SUM(PHYQTY) AS PHYQTY  
		                                   FROM WMSSTK_OY
		                                  WHERE WAREKY = #{WAREKY}
		                                    AND 1=1 
		                                        <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
													${RANGE_SQL2}
												</if>
		                                        GROUP BY WAREKY, SKUKEY ) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY
		                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, SUM(QTSIWH) AS QTSIWH  
		                                   FROM STKKY
		                                  WHERE WAREKY = #{WAREKY}
		                                  GROUP BY WAREKY, SKUKEY) STD3 ON WH.WAREKY = STD3.WAREKY AND SM.SKUKEY = STD3.SKUKEY
		  WHERE WH.WAREKY = #{WAREKY}
		        <if test="RANGE_SQL != null and RANGE_SQL != ''">
					${RANGE_SQL}
				</if>
		  GROUP BY SM.SKUKEY, SM.DESC01, SM.DESC02, SM.SKUG03, SM.NETWGT, WH.WAREKY, WH.NAME01, SM.QTDUOM
		  <if test="CHKMAK != null and CHKMAK != ''">
		   HAVING NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.QTYRCV), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) != 0
		  </if>
		  ORDER BY SM.SKUG03, REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]'), SM.NETWGT
 	</select>
 	
	<!-- [OY07] 수불조회(전체) 월별 -->
	<select id="OY07_02_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT VM.VMONTH AS VMONTH,
		       SM.SKUKEY AS SKUKEY,
		       SM.SKUG03 AS SKUG03,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS NAME01,
		       NVL(MAX(STD.PREQTY), 0) AS STDQTY,
		       NVL(MAX(STD.QTSHPD), 0) AS QTSHPD,
		       NVL(MAX(STD.QTYRCV), 0) AS QTYRCV,
		       NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) AS ADJQTY,
		       NVL(MAX(STD.STKQTY), 0) AS STKQTY,
		       ROUND(NVL(MAX(STD.STKQTY), 0) / SM.QTDUOM,0) AS STKBOX,
		       ROUND(MOD(NVL(MAX(STD.STKQTY), 0), SM.QTDUOM),0) AS STKREM
		  FROM WAHMA WH LEFT OUTER JOIN (SELECT '2300' AS OWNRKY, TO_CHAR(TO_DATE(#{STDDAT}),'YYYY')||LPAD(LEVEL, 2, '0') AS VMONTH
		                                   FROM DUAL
		                                 CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = #{OWNRKY}
		                INNER JOIN SKUWC SW ON SW.OWNRKY = #{OWNRKY} AND SW.WAREKY = #{WAREKY}
		                INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.DELMAK = ' '
		                LEFT OUTER JOIN (SELECT WAREKY, SUBSTR(STDDAT, 1, 6) AS STDMON, SKUKEY, SUM(PREQTY) AS PREQTY, SUM(QTYRCV) QTYRCV, 
		                                        SUM(QTSHPD) QTSHPD, SUM(ADJQTY) ADJQTY, SUM(PHYQTY) PHYQTY, SUM(STKQTY) STKQTY
		                                   FROM WMSSTK_OY
		                                  WHERE WAREKY = #{WAREKY}
		                                    AND STDDAT BETWEEN TO_CHAR(TO_DATE(#{STDDAT}),'YYYY')||'0101' AND TO_CHAR(TO_DATE(#{STDDAT}),'YYYY')||'1231'
		                                    AND SKUKEY = #{SKUKEY}
		                                  GROUP BY WAREKY, SUBSTR(STDDAT, 1, 6), SKUKEY) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY AND VM.VMONTH = STD.STDMON
		  WHERE WH.WAREKY = #{WAREKY}
		    AND SM.SKUKEY = #{SKUKEY}
		  GROUP BY VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01, SM.QTDUOM, SM.SKUG03
		  ORDER BY VM.VMONTH, SM.SKUKEY, WH.WAREKY
	
 	</select>
 	
	<!-- [OY07] 수불조회(전체) 일별 -->
	<select id="OY07_03_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT VM.VDAY AS VDAY,
		       SM.SKUKEY AS SKUKEY,
		       SM.SKUG03 AS SKUG03,
		       SM.QTDUOM AS QTDUOM,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS NAME01,
		       NVL(MAX(STD.PREQTY), 0) AS STDQTY,
		       NVL(MAX(STD.QTSHPD), 0) AS QTSHPD,
		       NVL(MAX(STD.QTYRCV), 0)  AS QTYRCV,
		       NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) AS ADJQTY,
		       NVL(MAX(STD.STKQTY), 0) AS STKQTY,
		       TRUNC(NVL(MAX(STD.STKQTY), 0) / SM.QTDUOM,0) AS STKBOX,
		       TRUNC(MOD(NVL(MAX(STD.STKQTY), 0), SM.QTDUOM),0) AS STKREM
		  FROM WAHMA WH LEFT OUTER JOIN (SELECT '2300' AS OWNRKY, #{STDDAT}||LPAD(LEVEL, 2, '0') AS VDAY
		                                   FROM DUAL
		                                CONNECT BY TO_DATE(#{STDDAT}||'01') + LEVEL - 1 &lt;= LAST_DAY(TO_DATE(#{STDDAT}||'01'))) VM ON VM.OWNRKY = '2300'
		                INNER JOIN SKUWC SW ON SW.OWNRKY = #{OWNRKY} AND SW.WAREKY = #{WAREKY} AND SW.SKUKEY = #{SKUKEY}
		                INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.DELMAK = ' ' AND SM.SKUKEY = #{SKUKEY}
		                LEFT OUTER JOIN (SELECT WAREKY, STDDAT, SKUKEY, PREQTY, QTYRCV, QTSHPD, QTSHPD2, ADJQTY, PHYQTY, STKQTY 
		                                   FROM WMSSTK_OY
		                                  WHERE WAREKY = #{WAREKY}
		                                    AND STDDAT BETWEEN #{STDDAT}||'01' AND TO_CHAR(LAST_DAY(TO_DATE(#{STDDAT}||'01')), 'YYYYMMDD')
		                                    AND SKUKEY = #{SKUKEY}) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY AND VM.VDAY = STD.STDDAT
		  WHERE WH.WAREKY = #{WAREKY}
		    AND SM.SKUKEY = #{SKUKEY}
		  GROUP BY VM.VDAY, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01, SM.QTDUOM, SM.SKUG03
		  ORDER BY VM.VDAY, SM.SKUKEY, WH.WAREKY
 	</select>
 	
	<!-- [OY27] 수불조회(전체) 전체 -->
	<select id="OY27_LIST" parameterType="hashmap" resultType="DataMap">

		SELECT SM.SKUKEY AS SKUKEY,
		       SM.DESC01 AS DESC01,
		       SM.DESC02 AS DESC02,
		       SM.SKUG03 AS SKUG03,
		       SM.NETWGT AS NETWGT,
		       SM.QTDUOM AS QTDUOM,
		       WH.WAREKY AS WAREKY,
		       WH.NAME01 AS NAME01,
		       NVL(MAX(BAS.PREQTY), 0) AS STDQTY,
		       NVL(MAX(STD.QTSHPD), 0) AS QTSHPD,
		       NVL(MAX(STD.QTYRCV), 0) AS QTYRCV,
		       NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) AS ADJQTY,
		       NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTYRCV), 0) - NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) AS STKQTY,
		       TRUNC((NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTYRCV), 0) - NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0)) / SM.QTDUOM , 0) AS STKBOX,
		       TRUNC(MOD((NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTYRCV), 0) - NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0)),SM.QTDUOM), 0) AS STKREM,
		       NVL(MAX(STD3.QTSIWH), 0) AS QTSIWH
		  FROM WAHMA WH INNER JOIN SKUWC SW ON SW.OWNRKY = #{OWNRKY} AND SW.WAREKY = #{WAREKY}
		                INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.DELMAK = ' ' AND SW.SKUKEY = SM.SKUKEY
		                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, PREQTY  
		                                   FROM WMSSTK_OY
		                                  WHERE WAREKY = #{WAREKY}
		                                    AND STDDAT = #{STDDAT}) BAS ON WH.WAREKY = BAS.WAREKY AND SM.SKUKEY = BAS.SKUKEY
		                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, SUM(QTYRCV) AS QTYRCV, SUM(QTSHPD) AS QTSHPD , SUM(ADJQTY) AS ADJQTY , SUM(PHYQTY) AS PHYQTY  
		                                   FROM WMSSTK_OY
		                                  WHERE WAREKY = #{WAREKY}
		                                    AND 1=1 
		                                        <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
													${RANGE_SQL2}
												</if>
		                                        GROUP BY WAREKY, SKUKEY ) STD ON WH.WAREKY = STD.WAREKY AND SM.SKUKEY = STD.SKUKEY
		                LEFT OUTER JOIN (SELECT WAREKY, SKUKEY, SUM(QTSIWH) AS QTSIWH  
		                                   FROM STKKY
		                                  WHERE WAREKY = #{WAREKY}
		                                  GROUP BY WAREKY, SKUKEY) STD3 ON WH.WAREKY = STD3.WAREKY AND SM.SKUKEY = STD3.SKUKEY
		  WHERE WH.WAREKY = #{WAREKY}
		        <if test="RANGE_SQL != null and RANGE_SQL != ''">
					${RANGE_SQL}
				</if>
		  GROUP BY SM.SKUKEY, SM.DESC01, SM.DESC02, SM.SKUG03, SM.NETWGT, WH.WAREKY, WH.NAME01, SM.QTDUOM
		  <if test="CHKMAK != null and CHKMAK != ''">
		   HAVING NVL(MAX(BAS.PREQTY), 0) + NVL(MAX(STD.QTSHPD), 0) + NVL(MAX(STD.QTYRCV), 0) + NVL(MAX(STD.ADJQTY), 0) + NVL(MAX(STD.PHYQTY), 0) != 0
		  </if>
		  ORDER BY SM.SKUG03, REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]'), SM.NETWGT

 	</select>
 	
	<!-- [OY27] 수불조회(전체) 월별 -->
	<select id="OY27_02_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT   VMONTH AS VMONTH                                        
		, SKUKEY AS SKUKEY                                        
		, SKUG03 AS SKUG03                                        
		, DESC01 AS DESC01                                        
		, DESC02 AS DESC02                                        
		, WAREKY AS WAREKY                                        
		, NAME01 AS NAME01                          
		, SUM(PREQTY) AS STDQTY                                   
		, SUM(QTSHPD) AS QTSHPD                                  
		, SUM(QTYRCV) AS QTYRCV                                
		, SUM(ADJQTY) + SUM(PHYQTY) AS ADJQTY                     
		, SUM(STKQTY) AS STKQTY                                 
		, ROUND(NVL(SUM(STKQTY), 0) / MAX(QTDUOM),0) AS STKBOX    
		, ROUND(MOD(NVL(SUM(STKQTY), 0), MAX(QTDUOM)),0) AS STKREM                                                                                                                                                                                               
		  FROM (                                                                                                                                                                                                                                                                                                                                                                                                                                                                 
		        SELECT VM.VMONTH                                                                                                                                                                                                                       
		             , SM.SKUKEY                                                                                                                                                                                                                       
		             , SM.SKUG03                                                                                                                                                                                                                       
		             , SM.DESC01                                                                                                                                                                                                                       
		             , SM.DESC02                                                                                                                                                                                                                       
		             , WH.WAREKY                                                                                                                                                                                                                       
		             , WH.NAME01                                                                                                                                                                                                                       
		             , NVL(WO.PREQTY, 0) AS PREQTY                                                                                                                                                                                                     
		             , 0 AS QTSHPD                                                                                                                                                                                                                    
		             , 0 AS QTYRCV                                                                                                                                                                                                                     
		             , 0 AS ADJQTY                                                                                                                                                                                                                     
		             , 0 AS PHYQTY                                                                                                                                                                                                                     
		             , QTDUOM AS QTDUOM                                                                                                                                                                                                                
		             , 0 AS STKQTY                                                                                                                                                                                                                     
		          FROM SKUWC SW                                                                                                                                                                                                                        
		               INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY                                                                                                                                                                                    
		               INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, TO_CHAR(TO_DATE(''),'YYYY')||LPAD(LEVEL, 2, '0') AS VMONTH FROM DUAL CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = SW.OWNRKY                                                                                                
		               INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = SW.SKUKEY  AND SM.DELMAK = ' '                                                                                                                                        
		               LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT = TO_CHAR(TO_DATE(VM.VMONTH,'MM'),'YYYYMMDD')                                                           
		         WHERE SW.OWNRKY = #{OWNRKY}                                                                                                                                                                                                              
		           AND SW.WAREKY = #{WAREKY}                                                                                                                                                                                                              
		           AND SW.SKUKEY = #{SKUKEY}                                                                                                                                                                                                            
		         GROUP BY VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01, SM.QTDUOM, SM.SKUG03, WO.PREQTY                                                                                                                                                                                                                                                                                                                                                    
		        UNION ALL                                                                                                                                                                                                                              
		        SELECT VM.VMONTH                                                                                                                                                                                                                       
		             , SM.SKUKEY                                                                                                                                                                                                                       
		             , SM.SKUG03                                                                                                                                                                                                                       
		             , SM.DESC01                                                                                                                                                                                                                       
		             , SM.DESC02                                                                                                                                                                                                                       
		             , WH.WAREKY                                                                                                                                                                                                                       
		             , WH.NAME01                                                                                                                                                                                                                       
		             , 0 AS PREQTY                                                                                                                                                                                                                     
		             , SUM(NVL(WO.QTSHPD,0)) AS QTSHPD                                                                                                                                                                                               
		             , SUM(NVL(WO.QTYRCV,0)) AS QTYRCV                                                                                                                                                                                                 
		             , SUM(NVL(WO.ADJQTY,0)) AS ADJQTY                                                                                                                                                                                                 
		             , SUM(NVL(WO.PHYQTY,0)) AS PHYQTY                                                                                                                                                                                                 
		             , 0 AS QTDUOM                                                                                                                                                                                                                     
		             , NVL((SELECT STKQTY FROM WMSSTK_OY WHERE OWNRKY =#{OWNRKY} AND WAREKY = #{WAREKY} AND SKUKEY = #{SKUKEY} AND STDDAT = (SELECT MAX(STDDAT) FROM WMSSTK_OY WHERE STDDAT LIKE TO_CHAR(TO_DATE(VM.VMONTH,'MM'),'YYYYMM')||'%')),0) AS STKQTY
		          FROM SKUWC SW                                                                                                                                                                                                                        
		               INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY                                                                                                                                                                                    
		               INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, LPAD(LEVEL, 2, '0') AS VMONTH FROM DUAL CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = SW.OWNRKY                                                                                                
		               INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = SW.SKUKEY  AND SM.DELMAK = ' '                                                                                                                                        
		               LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT LIKE TO_CHAR(TO_DATE(VM.VMONTH,'MM'),'YYYYMM')||'%'                                                     
		         WHERE SW.OWNRKY = #{OWNRKY}                                                                                                                                                                                                              
		           AND SW.WAREKY = #{WAREKY}                                                                                                                                                                                                              
		           AND SW.SKUKEY = #{SKUKEY}                                                                                                                                                                                                            
		         GROUP BY VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01, SM.QTDUOM, SM.SKUG03                                                                                                                                       
		                                                                                                                                                                                                                                               
		       )                                                                                                                                                                                                                                       
		   GROUP BY VMONTH                                                                                                                                                                                                                             
		          , SKUKEY                                                                                                                                                                                                                             
		          , SKUG03                                                                                                                                                                                                                             
		          , DESC01                                                                                                                                                                                                                             
		          , DESC02                                                                                                                                                                                                                             
		          , WAREKY                                                                                                                                                                                                                             
		          , NAME01                                                                                                                                                                                                                             
		   ORDER BY VMONTH, SKUKEY
 	</select>
 	
	<!-- [OY27] 수불조회(전체) 일별 -->
	<select id="OY27_03_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT VM.VDAY AS VDAY                                                                                                                                                                                      
		     , SM.SKUKEY AS SKUKEY                                                                                                                                                                                  
		     , SM.SKUG03 AS SKUG03                                                                                                                                                                                  
		     , SM.QTDUOM AS QTDUOM                                                                                                                                                                                  
		     , SM.DESC01 AS DESC01                                                                                                                                                                                  
		     , SM.DESC02 AS DESC02                                                                                                                                                                                  
		     , WH.WAREKY AS WAREKY                                                                                                                                                                                  
		     , WH.NAME01 AS NAME01                                                                                                                                                                                  
		     , NVL(MAX(WO.PREQTY), 0) AS STDQTY                                                                                                                                                                     
		     , NVL(MAX(WO.QTSHPD), 0) AS QTSHPD                                                                                                                                                                    
		     , NVL(MAX(WO.QTYRCV), 0)  AS QTYRCV                                                                                                                                                                    
		     , NVL(MAX(WO.ADJQTY), 0) + NVL(MAX(WO.PHYQTY), 0) AS ADJQTY                                                                                                                                            
		     , NVL(MAX(WO.STKQTY), 0) AS STKQTY                                                                                                                                                                     
		     , ROUND(NVL(MAX(WO.STKQTY), 0) / SM.QTDUOM,0) AS STKBOX                                                                                                                                                
		     , ROUND(MOD(NVL(MAX(WO.STKQTY), 0), SM.QTDUOM),0) AS STKREM                                                                                                                                            
		  FROM SKUWC SW                                                                                                                                                                                               
		       INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY                                                                                                                                 
		       INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY                                                                                                                                                           
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, #{STDDAT}||LPAD(LEVEL, 2, '0') AS VDAY FROM DUAL CONNECT BY TO_DATE(#{STDDAT}||'01','MMDD') + LEVEL - 1 &lt;= LAST_DAY(TO_DATE(#{STDDAT}||'01','MMDD'))) VM ON VM.OWNRKY = SW.OWNRKY
		       LEFT OUTER JOIN WMSSTK_OY WO ON  WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT = TO_CHAR(TO_DATE(VM.VDAY,'MMDD'),'YYYYMMDD')                                 
		 WHERE SW.OWNRKY = #{OWNRKY}                                                                                                                                                                                     
		   AND SW.WAREKY = #{WAREKY}                                                                                                                                                                                     
		   AND SW.SKUKEY = #{SKUKEY}                                                                                                                                                                                   
		 GROUP BY VM.VDAY, SM.SKUKEY, SM.DESC01, SM.DESC02, WH.WAREKY, WH.NAME01, SM.QTDUOM, SM.SKUG03                                                                                                                
		 ORDER BY VM.VDAY, SM.SKUKEY, WH.WAREKY     
 	</select>
 	
	<!-- [OY28] 수불조회(전체) 전체 -->
	<select id="OY28_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT SKUKEY AS SKUKEY 
		     , DESC01 AS DESC01 
		     , DESC02 AS DESC02 
		     , SKUG03 AS SKUG03 
		     , NETWGT AS NETWGT 
		     , QTDUOM AS QTDUOM 
		     , ' ' AS WAREKY 
		     , ' ' AS NAME01 
		     , PREQTY AS STDQTY
		     , QTSHPD AS QTSHPD
		     , QTYRCV AS QTYRCV
		     , PHYQTY AS ADJQTY
		     <!-- , ADJQTY AS STKQTY -->
		     , STKQTY AS STKQTY
		     , STKBOX AS STKBOX
		     , STKREM AS STKREM
		     , QTSIWH AS QTSIWH
		     , QTSHPD2 AS QTSHPD2
		     , SHPBOX2 AS SHPBOX2
		     , STKQTY2 AS STKQTY2
		     , STKBOX2 AS STKBOX2
		  FROM (     
		         SELECT SKUKEY 
		              , DESC01 
		              , DESC02 
		              , SKUG03 
		              , NETWGT 
		              , QTDUOM  
		              , SUM(PREQTY) AS PREQTY
		              , SUM(QTSHPD) AS QTSHPD
		              , SUM(QTYRCV) AS QTYRCV
		              , SUM(PHYQTY) AS PHYQTY
		              , SUM(ADJQTY) + SUM(PHYQTY) AS ADJQTY
		              , SUM(PREQTY) + SUM(QTYRCV) - SUM(QTSHPD) + SUM(ADJQTY) + SUM(PHYQTY) AS STKQTY
		              , TRUNC((SUM(PREQTY) + SUM(QTYRCV) - SUM(QTSHPD) + SUM(ADJQTY) + SUM(PHYQTY)) / MAX(QTDUOM) ,0) AS STKBOX
		              , TRUNC(MOD(SUM(PREQTY) + SUM(QTYRCV) - SUM(QTSHPD) + SUM(ADJQTY) + SUM(PHYQTY) , MAX(QTDUOM)) ,0) AS STKREM
		              , SUM(QTSIWH) AS QTSIWH
		              , SUM(QTYTRF) AS QTSHPD2
		              , TRUNC((SUM(QTYTRF)) / MAX(QTDUOM) ,0) AS SHPBOX2
		              , SUM(STKQTY2) AS STKQTY2
		              , TRUNC((SUM(STKQTY2)) / MAX(QTDUOM) ,0) AS STKBOX2
		           FROM (
		                 SELECT SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      , WO.PREQTY AS PREQTY
		                      , 0 AS QTSHPD
		                      , 0 AS QTYRCV
		                      , 0 AS PHYQTY
		                      , 0 AS ADJQTY
		                      , 0 AS QTSIWH
		                      , 0 AS QTYTRF
		                      , 0 AS STKQTY2
		                   FROM SKUWC SW 
		                        INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY
		                        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		                        LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SM.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SM.SKUKEY
		                  WHERE SW.OWNRKY = #{OWNRKY} 
		                    AND WO.STDDAT = (SELECT MIN(STDDAT) FROM WMSSTK_OY WHERE 1=1 
		                    <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
							    ${RANGE_SQL2}
						    </if>
						    )
		                    <if test="RANGE_SQL != null and RANGE_SQL != ''">
							    ${RANGE_SQL}
						    </if>
		                  GROUP BY SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      , WO.PREQTY
		                 UNION ALL      
		                 SELECT SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      , 0 AS PREQTY
		                      , SUM(NVL(WO.QTSHPD,0)) AS QTSHPD 
		                      , SUM(NVL(WO.QTYRCV,0)) AS QTYRCV 
		                      , SUM(NVL(WO.PHYQTY,0)) AS PHYQTY 
		                      , SUM(NVL(WO.ADJQTY,0)) AS ADJQTY 
		                      , 0 AS QTSIWH
		                      , 0 AS QTYTRF
		                      , 0 AS STKQTY2                   FROM SKUWC SW 
		                        INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY
		                        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		                        LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SM.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SM.SKUKEY
		                  WHERE SW.OWNRKY = #{OWNRKY} 
		                    <if test="RANGE_SQL != null and RANGE_SQL != ''">
							    ${RANGE_SQL}
						    </if>
		                    <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
							    ${RANGE_SQL2}
						    </if>
		                  GROUP BY SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                 UNION ALL      
		                 SELECT SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      , 0 AS PREQTY
		                      , 0 AS QTSHPD
		                      , 0 AS QTYRCV 
		                      , 0 AS PHYQTY
		                      , 0 AS ADJQTY 
		                      , SUM(ST.QTSIWH) AS QTSIWH
		                      , 0 AS QTYTRF
		                      , 0 AS STKQTY2
		                   FROM SKUWC SW 
		                        INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY
		                        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		                        LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SM.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SM.SKUKEY
		                        LEFT OUTER JOIN STKKY ST ON ST.OWNRKY = WO.OWNRKY AND ST.WAREKY = WO.WAREKY AND ST.SKUKEY = SM.SKUKEY
		                  WHERE SW.OWNRKY = #{OWNRKY}
		                    AND WO.STDDAT = (SELECT MAX(STDDAT) FROM WMSSTK_OY WHERE 1=1 
		                    <if test="RANGE_SQL2 != null and RANGE_SQL2 != ''">
							    ${RANGE_SQL2}
						    </if>
						    )
		                    <if test="RANGE_SQL != null and RANGE_SQL != ''">
							    ${RANGE_SQL}
						    </if>
		                  GROUP BY SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      
		                 UNION ALL      
		                    SELECT SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , (SELECT SKUG03 FROM SKUMA WHERE SKUKEY = SM.SKUKEY AND OWNRKY ='2300') AS SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      , 0 AS PREQTY
		                      , 0 AS QTSHPD 
		                      , 0 AS QTYRCV 
		                      , 0 AS PHYQTY 
		                      , 0 AS ADJQTY 
		                      , 0 AS QTSIWH
		                      , SUM(NVL(TF.QTYTRF,0)) AS QTYTRF
		                      , 0 AS STKQTY2
		                   FROM SKUWC SW 
		                        INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY
		                        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		                        LEFT OUTER JOIN TRFIT TF ON TF.OWNRKY = SM.OWNRKY AND TF.WARETG = SW.WAREKY AND TF.SKUKEY = SM.SKUKEY
		                        LEFT OUTER JOIN SHPDI SI ON SI.SHPOKY = TF.SHPOKY AND SI.SHPOIT = TF.SHPOIT
		                  WHERE SW.OWNRKY = '2500'
		                    <if test="RANGE_SQL4 != null and RANGE_SQL4 != ''">
							    ${RANGE_SQL4}
						    </if>
		
		                    AND SI.SVBELN LIKE '61%'
		                    AND WARETG = '2261'
		                    AND WARESR ='2316'
		                  GROUP BY SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM
		                  UNION ALL 
		                  
		                      SELECT SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , (SELECT SKUG03 FROM SKUMA WHERE SKUKEY = SM.SKUKEY AND OWNRKY ='2300') AS SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM 
		                      , 0 AS PREQTY
		                      , 0 AS QTSHPD 
		                      , 0 AS QTYRCV 
		                      , 0 AS PHYQTY 
		                      , 0 AS ADJQTY 
		                      , 0 AS QTSIWH
		                      , 0 AS QTYTRF
		                      , SUM(CASE WHEN 1=1  
		                      <if test="WAREKY != null and WAREKY != ''">
							    AND '2316' = #{WAREKY}
							  </if>
		                    THEN NVL(ST.QTSIWH,0) ELSE 0 END) AS STKQTY2  
		                   FROM SKUWC SW 
		                        INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY
		                        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		                        LEFT OUTER JOIN STKKY ST ON ST.OWNRKY = SM.OWNRKY AND ST.WAREKY = SW.WAREKY AND ST.SKUKEY = SM.SKUKEY
		                  WHERE SW.OWNRKY = '2500'
		                    AND ST.LOTA07 ='21SV'
		                    AND ST.LOTA08 = 'OD'
		
		                    AND ST.WAREKY = '2261'
		                  GROUP BY SM.SKUKEY 
		                      , SM.DESC01 
		                      , SM.DESC02 
		                      , SM.SKUG03 
		                      , SM.NETWGT 
		                      , SM.QTDUOM
		                )
		         GROUP BY SKUKEY 
		              , DESC01 
		              , DESC02 
		              , SKUG03 
		              , NETWGT 
		              , QTDUOM 
		           <if test="CHKMAK != null and CHKMAK != ''">     
		         HAVING SUM(PREQTY) + SUM(QTSHPD) + SUM(QTYRCV) + SUM(ADJQTY) + SUM(PHYQTY) + SUM(QTYTRF) + SUM(STKQTY2)  != 0  
		           </if>
		       )
		ORDER BY SKUKEY,  SKUG03, REGEXP_REPLACE(REPLACE(UPPER(DESC01), 'G', ''), '[0-9]'), NETWGT    
 	</select>
 	
	<!-- [OY28] 수불조회(기간 센터별) 월-->
	<select id="OY28_02_LIST" parameterType="hashmap" resultType="DataMap">
		SELECT VMONTH AS VMONTH
		     , SKUKEY AS SKUKEY
		     , SKUG03 AS SKUG03
		     , DESC01 AS DESC01
		     , DESC02 AS DESC02
		     , SUM(STDQTY) AS STDQTY
		     , SUM(QTSHPD) AS QTSHPD
		     , SUM(QTYRCV) AS QTYRCV
		     , SUM(ADJQTY) AS ADJQTY
		     , SUM(STKQTY) AS STKQTY
		     , SUM(STKBOX) AS STKBOX
		     , SUM(STKREM) AS STKREM
		     , SUM(QTSHPD2)  AS QTSHPD2
		  FROM (   
		        SELECT TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH AS VMONTH,
		               SM.SKUKEY AS SKUKEY,
		               SM.SKUG03 AS SKUG03,
		               SM.DESC01 AS DESC01,
		               SM.DESC02 AS DESC02,
		               NVL(WO.PREQTY, 0) AS STDQTY,
		               0 AS QTSHPD,
		               0 AS QTYRCV,
		               0 AS ADJQTY,
		               0 AS STKQTY,
		               0 AS STKBOX,
		               0 AS STKREM,
		               0  AS QTSHPD2
		          FROM SKUWC SW 
		       INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, LPAD(LEVEL, 2, '0') AS VMONTH FROM DUAL CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = SW.OWNRKY
		       INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = SW.SKUKEY  AND SM.DELMAK = ' '
		       LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT LIKE TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH||'%'  
		  WHERE SW.OWNRKY = #{OWNRKY}
		               <if test="RANGE_SQL3 != null and RANGE_SQL3 != ''">
						   ${RANGE_SQL3}
						</if>
		            AND SW.SKUKEY = #{SKUKEY}
		            AND WO.STDDAT LIKE '%01'
		          GROUP BY TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH, VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, SM.QTDUOM, SM.SKUG03, WO.PREQTY
		         UNION ALL  
		        SELECT TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH AS VMONTH,
		               SM.SKUKEY AS SKUKEY,
		               SM.SKUG03 AS SKUG03,
		               SM.DESC01 AS DESC01,
		               SM.DESC02 AS DESC02,
		               0 AS STDQTY,
		               SUM(NVL(WO.QTSHPD, 0)) AS QTSHPD,
		               SUM(NVL(WO.QTYRCV, 0)) AS QTYRCV,
		               SUM(NVL(WO.ADJQTY, 0)) + SUM(NVL(WO.PHYQTY, 0)) AS ADJQTY,
		               0 AS STKQTY,
		               ROUND(SUM(NVL(WO.STKQTY, 0)) / SM.QTDUOM,0) AS STKBOX,
		               ROUND(MOD(SUM(NVL(WO.STKQTY, 0)), SM.QTDUOM),0) AS STKREM,
		               0  AS QTSHPD2
		          FROM SKUWC SW 
		       INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, LPAD(LEVEL, 2, '0') AS VMONTH FROM DUAL CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = SW.OWNRKY
		       INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = SW.SKUKEY  AND SM.DELMAK = ' '
		       LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT LIKE TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH||'%'  
		  WHERE SW.OWNRKY = #{OWNRKY}
		                    <if test="RANGE_SQL3 != null and RANGE_SQL3 != ''">
						        ${RANGE_SQL3}
						    </if>
		            AND SW.SKUKEY = #{SKUKEY}
		          GROUP BY TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH, VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, SM.QTDUOM, SM.SKUG03
		   UNION ALL
		SELECT TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH AS VMONTH,
		               SM.SKUKEY AS SKUKEY,
		               SM.SKUG03 AS SKUG03,
		               SM.DESC01 AS DESC01,
		               SM.DESC02 AS DESC02,
		               0 AS STDQTY,
		               0 AS QTSHPD,
		               0 AS QTYRCV,
		               0 AS ADJQTY,
		               CASE WHEN VMONTH = TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'MM') 
		                    THEN SUM(NVL(WO2.STKQTY,0))
		                    ELSE SUM(NVL(WO.STKQTY,0))
		                END AS STKQTY,
		               0 AS STKBOX,
		               0 AS STKREM,
		               0  AS QTSHPD2
		          FROM SKUWC SW 
		        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, LPAD(LEVEL, 2, '0') AS VMONTH FROM DUAL CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = SW.OWNRKY
		       INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = SW.SKUKEY  AND SM.DELMAK = ' '
		       LEFT OUTER JOIN WMSSTK_OY WO ON WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT = TO_CHAR(LAST_DAY(TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH||'01'),'YYYYMMDD') 
		       LEFT OUTER JOIN WMSSTK_OY WO2 ON WO2.OWNRKY = SW.OWNRKY AND WO2.WAREKY = SW.WAREKY AND WO2.SKUKEY = SW.SKUKEY AND WO2.STDDAT = NVL(#{STDDAT},SYSDATE)
		  WHERE SW.OWNRKY = #{OWNRKY}
		                    <if test="RANGE_SQL3 != null and RANGE_SQL3 != ''">
		                        ${RANGE_SQL3}
		                    </if>
		            AND SW.SKUKEY = #{SKUKEY}
		
		          GROUP BY TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH, VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, SM.QTDUOM, SM.SKUG03           
		          UNION ALL
		SELECT TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH AS VMONTH,
		               SM.SKUKEY AS SKUKEY,
		               SM.SKUG03 AS SKUG03,
		               SM.DESC01 AS DESC01,
		               SM.DESC02 AS DESC02,
		               0 AS STDQTY,
		               0 AS QTSHPD,
		               0 AS QTYRCV,
		               0 AS ADJQTY,
		               0 AS STKQTY,
		               0 AS STKBOX,
		               0 AS STKREM,
		               SUM(TF.QTYTRF)  AS QTSHPD2
		          FROM SKUWC SW 
		        INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, LPAD(LEVEL, 2, '0') AS VMONTH FROM DUAL CONNECT BY LEVEL &lt;= 12) VM ON VM.OWNRKY = SW.OWNRKY
		       INNER JOIN SKUMA SM ON SM.OWNRKY = #{OWNRKY} AND SM.SKUKEY = SW.SKUKEY  AND SM.DELMAK = ' '
		       LEFT OUTER JOIN TRFIT TF ON TF.OWNRKY = '2500' AND TF.WARESR = SW.WAREKY AND TF.SKUKEY = SW.SKUKEY AND TF.DOCDAT LIKE TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH||'%'  
		
		  WHERE SW.OWNRKY = #{OWNRKY}
		                    <if test="RANGE_SQL3 != null and RANGE_SQL3 != ''">
						         ${RANGE_SQL3}
						    </if>
		            AND SW.SKUKEY = #{SKUKEY}
		
		          GROUP BY TO_CHAR(TO_DATE(NVL(#{STDDAT},SYSDATE)),'YYYY')||VM.VMONTH, VM.VMONTH, SM.SKUKEY, SM.DESC01, SM.DESC02, SM.QTDUOM, SM.SKUG03           
		           
		        )
		 GROUP BY VMONTH
		     , SKUKEY
		     , SKUG03
		     , DESC01
		     , DESC02
		 ORDER BY VMONTH, SKUKEY
 	</select>
 	
	<!-- [OY28] 수불조회(전체) 전체 -->
	<select id="OY28_03_LIST" parameterType="hashmap" resultType="DataMap">
	
		SELECT VDAY   AS VDAY
		     , SKUKEY AS SKUKEY
		     , SKUG03 AS SKUG03
		     , QTDUOM AS QTDUOM
		     , DESC01 AS DESC01
		     , DESC02 AS DESC02
		     , SUM(STDQTY) AS STDQTY
		     , SUM(QTSHPD) AS QTSHPD
		     , SUM(QTYRCV) AS QTYRCV
		     , SUM(ADJQTY) AS ADJQTY
		     , SUM(STKQTY) AS STKQTY
		     , SUM(STKBOX) AS STKBOX
		     , SUM(STKREM) AS STKREM
		     , SUM(QTSHPD2) AS QTSHPD2
		     , SUM(SHPBOX2) AS SHPBOX2
		  FROM (
		SELECT VM.VDAY AS VDAY                                                                                                                                                                                      
		     , SM.SKUKEY AS SKUKEY                                                                                                                                                                                  
		     , SM.SKUG03 AS SKUG03                                                                                                                                                                                  
		     , SM.QTDUOM AS QTDUOM                                                                                                                                                                                  
		     , SM.DESC01 AS DESC01                                                                                                                                                                                  
		     , SM.DESC02 AS DESC02                                                                                                                                                                                 
		     , SUM(NVL(WO.PREQTY, 0)) AS STDQTY                                                                                                                                                                     
		     , SUM(NVL(WO.QTSHPD, 0)) AS QTSHPD                                                                                                                                                                    
		     , SUM(NVL(WO.QTYRCV, 0))  AS QTYRCV                                                                                                                                                                    
		     , SUM(NVL(WO.ADJQTY, 0)) + SUM(NVL(WO.PHYQTY, 0)) AS ADJQTY                                                                                                                                            
		     , SUM(NVL(WO.STKQTY, 0)) AS STKQTY                                                                                                                                                                     
		     , TRUNC(SUM(NVL(WO.STKQTY, 0)) / SM.QTDUOM,0) AS STKBOX                                                                                                                                                
		     , TRUNC(MOD(SUM(NVL(WO.STKQTY, 0)), SM.QTDUOM),0) AS STKREM
		     , 0 AS QTSHPD2
		     , 0 AS SHPBOX2                                                                                                                                                               
		  FROM SKUWC SW                                                                                                                                                                                                                                                                                                                                                  
		       INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY                                                                                                                                 
		       INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY                                                                                                                                                           
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, #{STDDAT}||LPAD(LEVEL, 2, '0') AS VDAY FROM DUAL CONNECT BY TO_DATE(#{STDDAT}||'01','YYYYMMDD') + LEVEL - 1 &lt;= LAST_DAY(TO_DATE(NVL(#{STDDAT},SYSDATE)||'01','YYYYMMDD'))) VM ON VM.OWNRKY = SW.OWNRKY
		       LEFT OUTER JOIN WMSSTK_OY WO ON  WO.OWNRKY = SW.OWNRKY AND WO.WAREKY = SW.WAREKY AND WO.SKUKEY = SW.SKUKEY AND WO.STDDAT = TO_CHAR(TO_DATE(VM.VDAY,'YYYYMMDD'),'YYYYMMDD')                                 
		 WHERE SW.OWNRKY = #{OWNRKY}   
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">	${RANGE_SQL} </if>                                                                                                                                                                              
		   AND SW.SKUKEY = #{SKUKEY}                                                                                                                                                                                   
		 GROUP BY VM.VDAY, SM.SKUKEY, SM.DESC01, SM.DESC02, SM.QTDUOM, SM.SKUG03                                                                                                                
		
		 UNION ALL
		SELECT VM.VDAY AS VDAY                                                                                                                                                                                      
		     , SM.SKUKEY AS SKUKEY                                                                                                                                                                                  
		     , SM.SKUG03 AS SKUG03                                                                                                                                                                                  
		     , SM.QTDUOM AS QTDUOM                                                                                                                                                                                  
		     , SM.DESC01 AS DESC01                                                                                                                                                                                  
		     , SM.DESC02 AS DESC02                                                                                                                                                                                 
		     , 0 AS STDQTY                                                                                                                                                                     
		     , 0 AS QTSHPD                                                                                                                                                                    
		     , 0  AS QTYRCV                                                                                                                                                                    
		     , 0  AS ADJQTY                                                                                                                                            
		     , 0 AS STKQTY                                                                                                                                                                     
		     , 0 AS STKBOX                                                                                                                                                
		     , 0 AS STKREM 
		     , SUM(TF.QTYTRF) AS QTSHPD2
		     , TRUNC(SUM(NVL(TF.QTYTRF, 0)) / SM.QTDUOM,0) AS SHPBOX2                                                                                                                                           
		  FROM SKUWC SW                                                                                                                                                                                               
		       INNER JOIN SKUMA SM ON SM.OWNRKY = SW.OWNRKY AND SM.SKUKEY = SW.SKUKEY                                                                                                                                 
		       INNER JOIN WAHMA WH ON WH.WAREKY = SW.WAREKY                                                                                                                                                           
		       INNER JOIN (SELECT #{OWNRKY} AS OWNRKY, #{STDDAT}||LPAD(LEVEL, 2, '0') AS VDAY FROM DUAL CONNECT BY TO_DATE(#{STDDAT}||'01','YYYYMMDD') + LEVEL - 1 &lt;= LAST_DAY(TO_DATE(NVL(#{STDDAT},SYSDATE)||'01','YYYYMMDD'))) VM ON VM.OWNRKY = SW.OWNRKY
		       LEFT OUTER JOIN TRFIT TF ON  TF.OWNRKY = '2500' AND TF.WARESR = SW.WAREKY AND TF.SKUKEY = SW.SKUKEY AND TF.DOCDAT = TO_CHAR(TO_DATE(VM.VDAY,'YYYYMMDD'),'YYYYMMDD')                                 
		 WHERE  SW.OWNRKY = #{OWNRKY}   
		   <if test="RANGE_SQL != null and RANGE_SQL != ''">	${RANGE_SQL} </if>                                                                                                                                                                               
		   AND SW.SKUKEY = #{SKUKEY}                                                                                                                                                                                    
		 GROUP BY VM.VDAY, SM.SKUKEY, SM.DESC01, SM.DESC02, SM.QTDUOM, SM.SKUG03    
		)
		GROUP BY VDAY
		     , SKUKEY
		     , SKUG03
		     , QTDUOM
		     , DESC01
		     , DESC02
		
		 ORDER BY 1,2 
 	</select>
 	
 	<!-- OY18 제품관리 조회  -->
 	<select id="OY18_1_LIST"  parameterType="hashmap" resultType="DataMap">
 		SELECT 
		    OS.DIRTYP AS DIRTYP,
		    OS.LABEL AS LABEL,
		    OS.TYPSN AS TYPSN,
		    OS.SKUKEY AS SKUKEY,
		    SK.DESC01 AS DESC01,
		    OS.DOCTXT AS DOCTXT,
		    OS.CREDAT AS CREDAT,
		    OS.CRETIM AS CRETIM,
		    OS.CREUSR AS CREUSR,
		    OS.LMODAT AS LMODAT,
		    OS.LMOTIM AS LMOTIM,
		    OS.LMOUSR AS LMOUSR
		FROM OYSKU OS 
				LEFT JOIN SKUMA SK 
				ON	SK.SKUKEY = OS.SKUKEY
				AND SK.OWNRKY = '2300'
		WHERE 1=1
		
		<if test="RANGE_SQL != null and RANGE_SQL != ''"> 
			${RANGE_SQL}
		</if> 
		
<!-- 			 AND OS.DIRTYP IN (${DIRTYP}) -->
		ORDER BY OS.DIRTYP, OS.LABEL, OS.TYPSN
 	</select>
 	
<!--  	<select id="OY18_1_MAP" parameterType="hashmap" resultType="DataMap"> -->
<!-- 		SELECT COUNT(*) AS CHK -->
<!-- 		FROM OYSKU -->
<!-- 		WHERE -->
<!-- 			SKUKEY = #{SKUKEY} -->
<!-- 		AND DIRTYP = #{DIRTYP} -->
<!-- 		AND TYPSN = #{TYPSN} -->
<!-- 	</select> -->
 	
 	<!-- OY18 양산box수 생성  추가-->
<!--  	<insert id="OY18_1_INSERT"  parameterType="hashmap"> -->
<!-- 		INSERT INTO OYSKU -->
<!-- 		( -->
<!-- 			DIRTYP, -->
<!-- 			LABEL, -->
<!-- 			TYPSN, -->
<!-- 			DOCTXT, -->
<!-- 			SKUKEY, -->
<!-- 			CREDAT, -->
<!-- 			CRETIM, -->
<!-- 			CREUSR, -->
<!-- 			LMODAT, -->
<!-- 			LMOTIM, -->
<!-- 			LMOUSR -->
<!-- 		)VALUES( -->
<!-- 			#{DIRTYP}, -->
<!-- 			#{LABEL}, -->
<!-- 			#{TYPSN}, -->
<!-- 			NVL(#{DOCTXT},' '), -->
<!-- 			#{SKUKEY}, -->
<!-- 			TO_CHAR(SYSDATE,'YYYYMMDD'), -->
<!-- 			TO_CHAR(SYSDATE, 'HH24MISS'), -->
<!-- 			#{SES_USER_ID}, -->
<!-- 			TO_CHAR(SYSDATE, 'YYYYMMDD'), -->
<!-- 			TO_CHAR(SYSDATE, 'HH24MISS'), -->
<!-- 			#{SES_USER_ID} -->
<!-- 		) -->
<!--  	</insert> -->
 	
 	<update id="OY18_1_UPDATE"  parameterType="hashmap">
<!--  		UPDATE OYSKU -->
<!-- 		SET DIRTYP = NVL(#{DIRTYP}, ' '), -->
<!-- 			SKUKEY = NVL(#{SKUKEY}, ' '), -->
<!-- 			DOCTXT = NVL(#{DOCTXT}, ' '), -->
<!-- 			LABEL = #{LABEL}, -->
<!-- 			TYPSN = #{TYPSN}, -->
<!-- 			LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'), -->
<!-- 			LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'), -->
<!-- 			LMOUSR = #{SES_USER_ID} -->
<!-- 			DELYN = NVL(#{DELYN}, ' ') -->
<!-- 		WHERE DIRTYP = #{DIRTYP} -->
<!-- 		AND SKUKEY = #{SKUKEY} -->
		
		MERGE INTO OYSKU
	    USING DUAL
	    ON (DIRTYP = #{DIRTYP} AND TYPSN = #{TYPSN})
	    WHEN MATCHED THEN
	        UPDATE SET
	        SKUKEY = NVL(#{SKUKEY}, ' '),
	        DOCTXT = NVL(#{DOCTXT}, ' '),
	        LMODAT = TO_CHAR(SYSDATE, 'YYYYMMDD'),
	        LMOTIM = TO_CHAR(SYSDATE, 'HH24MISS'),
	        LMOUSR = #{SES_USER_ID} 
	     WHEN NOT MATCHED THEN
	     INSERT(
				DIRTYP,
				LABEL,
				TYPSN,
				DOCTXT,
				SKUKEY,
				CREDAT,
				CRETIM,
				CREUSR,
				LMODAT,
				LMOTIM,
				LMOUSR
				)
		VALUES(
				#{DIRTYP},
				#{LABEL},
				#{TYPSN},
				NVL(#{DOCTXT},' '),
				#{SKUKEY},
				TO_CHAR(SYSDATE,'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				#{SES_USER_ID},
				TO_CHAR(SYSDATE, 'YYYYMMDD'),
				TO_CHAR(SYSDATE, 'HH24MISS'),
				#{SES_USER_ID}
				)
 	</update>
 	
 	<!-- **[OY18]  양산box수 생성 삭제 -->
	<delete id="OY18_1_DELETE"  parameterType="hashmap">
		DELETE FROM OYSKU
		 WHERE DIRTYP = #{DIRTYP}
		   AND SKUKEY = #{SKUKEY}
		   AND TYPSN = #{TYPSN}
	</delete>
	
	<!-- [DIRTYP] OY18 배송유형 콤보 -->
	<select id="COMBO_DIRTYP_LIST" parameterType="hashmap" resultType="DataMap">
		 SELECT CMCDVL AS VALUE_COL
			 , CDESC1 AS TEXT_COL
		  FROM CMCDV
		  WHERE CMCDKY = 'DIRTYP'
			AND CMCDVL IN ('180','181','182','183')			
		ORDER BY CMCDVL
	</select>
	
	<!-- [DIRTYP] OY18 사용여부  콤보 -->
	<select id="COMBO_USEYN_LIST" parameterType="hashmap" resultType="DataMap">
		 SELECT CMCDVL AS VALUE_COL
			 , CDESC1 AS TEXT_COL
		  FROM CMCDV
		  WHERE CMCDKY = 'USEYN'
		ORDER BY CMCDVL
	</select>
	
	
	<!-- OY18_2 라벨관리  조회  -->
 	<select id="OY18_2_LIST"  parameterType="hashmap" resultType="DataMap">
<!--  		SELECT SB.LANGCODE AS LANGCODE -->
<!--             , SB.LABELTYPE AS LABELTYPE -->
<!--             , SB.LABELGID AS LABELGID  -->
<!--             , SB.LABELID AS DIRTYP  -->
<!--             , OS.SKUKEY AS SKUKEY  -->
<!--             , SB.LABEL AS LABEL -->
<!--             , SK.DESC01 AS DESC01 -->
<!--        FROM SYSLABEL SB LEFT JOIN OYSKU OS ON SB.LABELID = OS.DIRTYP -->
<!--                         LEFT JOIN SKUMA SK ON SK.SKUKEY = OS.SKUKEY -->
<!--        WHERE SB.LANGCODE = 'KO'  -->
<!--         AND SB.LABELTYPE = 'WMS' -->
<!--         AND OS.DIRTYP IN(${DIRTYP}) -->
<!--         AND SK.OWNRKY = '2300' -->
		SELECT A.*
		FROM(
			SELECT
				  SB.LANGCODE AS LANGCODE
				, SB.LABELTYPE AS LABELTYPE
				, SB.LABELGID AS LABELGID 
				, OS.DIRTYP AS DIRTYP  
				, SB.LABEL
				, OS.TYPSN
				, SB.LABELID
			FROM OYSKU OS 
     			LEFT OUTER JOIN SYSLABEL SB
     				ON SB.LABELID = OS.LABEL||'_BOXS'
		UNION ALL
			SELECT
				  SB.LANGCODE AS LANGCODE
				, SB.LABELTYPE AS LABELTYPE
				, SB.LABELGID AS LABELGID 
				, OS.DIRTYP AS DIRTYP  
				, SB.LABEL
				, OS.TYPSN
				, SB.LABELID
			FROM OYSKU OS 
     			LEFT OUTER JOIN SYSLABEL SB
     				ON SB.LABELID = OS.LABEL||'_REMS'
		 ) A
		WHERE 1=1
		<!-- 		<if test="RANGE_SQL != null and RANGE_SQL != ''">  -->
<!-- 			${RANGE_SQL} -->
<!-- 		</if>  -->
		<if test="DIRTYP != null and DIRTYP != ''">
			AND DIRTYP IN(${DIRTYP})
		</if>
		<if test="SKUKEY != null and SKUKEY != ''">
			AND SKUKEY = #{SKUKEY}
		</if>
		ORDER BY A.DIRTYP, A.TYPSN , A.LABEL
	</select>
 	
	<update id="OY18_2_UPDATE"  parameterType="hashmap">
		UPDATE SYSLABEL
		SET LABEL = #{LABEL},
		    UPDATEUSER = #{SES_USER_ID},
		    UPDATEDATE = SYSDATE
		WHERE
				LABELGID = 'STD'
			AND LABELID = #{LABELID}
			AND LANGCODE = 'KO'
	</update>
	
	<!-- 배송유형 서치헬프  -->
	<select id="COMBO_DIRTYP_MAP" parameterType="hashmap" resultType="DataMap">
		SELECT 
			CMCDKY,CMCDVL,CDESC1,USARG5,USARG1
			FROM CMCDV
			WHERE
			        CMCDKY = 'PRODBOX'
			    AND CMCDVL = #{LABEL}
	</select>
	
	
</mapper>
